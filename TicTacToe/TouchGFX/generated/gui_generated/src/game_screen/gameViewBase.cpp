/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/game_screen/gameViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

gameViewBase::gameViewBase() :
    flexButtonCallback(this, &gameViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &gameViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Image2.setXY(0, 0);
    Image2.setBitmap(touchgfx::Bitmap(BITMAP_GAME_ID));
    add(Image2);

    topLeft.setBoxWithBorderPosition(0, 0, 84, 84);
    topLeft.setBorderSize(5);
    topLeft.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    topLeft.setAlpha(0);
    topLeft.setAction(flexButtonCallback);
    topLeft.setPosition(109, 7, 84, 84);
    add(topLeft);

    topMiddle.setBoxWithBorderPosition(0, 0, 81, 84);
    topMiddle.setBorderSize(5);
    topMiddle.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    topMiddle.setAlpha(0);
    topMiddle.setAction(flexButtonCallback);
    topMiddle.setPosition(199, 7, 81, 84);
    add(topMiddle);

    topRight.setBoxWithBorderPosition(0, 0, 83, 84);
    topRight.setBorderSize(5);
    topRight.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    topRight.setAlpha(0);
    topRight.setAction(flexButtonCallback);
    topRight.setPosition(286, 7, 83, 84);
    add(topRight);

    middleLeft.setBoxWithBorderPosition(0, 0, 84, 78);
    middleLeft.setBorderSize(5);
    middleLeft.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    middleLeft.setAlpha(0);
    middleLeft.setAction(flexButtonCallback);
    middleLeft.setPosition(109, 98, 84, 78);
    add(middleLeft);

    middleMiddle.setBoxWithBorderPosition(0, 0, 81, 78);
    middleMiddle.setBorderSize(5);
    middleMiddle.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    middleMiddle.setAlpha(0);
    middleMiddle.setAction(flexButtonCallback);
    middleMiddle.setPosition(199, 98, 81, 78);
    add(middleMiddle);

    middleRight.setBoxWithBorderPosition(0, 0, 83, 78);
    middleRight.setBorderSize(5);
    middleRight.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    middleRight.setAlpha(0);
    middleRight.setAction(flexButtonCallback);
    middleRight.setPosition(286, 98, 83, 78);
    add(middleRight);

    bottomLeft.setBoxWithBorderPosition(0, 0, 84, 83);
    bottomLeft.setBorderSize(5);
    bottomLeft.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    bottomLeft.setAlpha(0);
    bottomLeft.setAction(flexButtonCallback);
    bottomLeft.setPosition(109, 182, 84, 83);
    add(bottomLeft);

    bottomMiddle.setBoxWithBorderPosition(0, 0, 81, 83);
    bottomMiddle.setBorderSize(5);
    bottomMiddle.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    bottomMiddle.setAlpha(0);
    bottomMiddle.setAction(flexButtonCallback);
    bottomMiddle.setPosition(199, 182, 81, 83);
    add(bottomMiddle);

    bottomRight.setBoxWithBorderPosition(0, 0, 83, 83);
    bottomRight.setBorderSize(5);
    bottomRight.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    bottomRight.setAlpha(0);
    bottomRight.setAction(flexButtonCallback);
    bottomRight.setPosition(286, 182, 83, 83);
    add(bottomRight);

    topLeftKrizec.setXY(117, 15);
    topLeftKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    topLeftKrizec.setVisible(false);
    add(topLeftKrizec);

    topLeftKrozec.setXY(117, 15);
    topLeftKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    topLeftKrozec.setVisible(false);
    add(topLeftKrozec);

    topMiddleKrozec.setXY(206, 15);
    topMiddleKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    topMiddleKrozec.setVisible(false);
    add(topMiddleKrozec);

    topMiddleKrizec.setXY(206, 15);
    topMiddleKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    topMiddleKrizec.setVisible(false);
    add(topMiddleKrizec);

    topRightKrozec.setXY(293, 15);
    topRightKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    topRightKrozec.setVisible(false);
    add(topRightKrozec);

    topRightKrizec.setXY(293, 15);
    topRightKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    topRightKrizec.setVisible(false);
    add(topRightKrizec);

    middleLeftKrizec.setXY(117, 102);
    middleLeftKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    middleLeftKrizec.setVisible(false);
    add(middleLeftKrizec);

    middleLeftKrozec.setXY(117, 98);
    middleLeftKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    middleLeftKrozec.setVisible(false);
    add(middleLeftKrozec);

    middleMiddleKrizec.setXY(206, 102);
    middleMiddleKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    middleMiddleKrizec.setVisible(false);
    add(middleMiddleKrizec);

    middleMiddleKrozec.setXY(206, 102);
    middleMiddleKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    middleMiddleKrozec.setVisible(false);
    add(middleMiddleKrozec);

    middleRightKrizec.setXY(293, 103);
    middleRightKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    middleRightKrizec.setVisible(false);
    add(middleRightKrizec);

    middleRightKrozec.setXY(293, 103);
    middleRightKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    middleRightKrozec.setVisible(false);
    add(middleRightKrozec);

    bottomMiddleKrozec.setXY(206, 189);
    bottomMiddleKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    bottomMiddleKrozec.setVisible(false);
    add(bottomMiddleKrozec);

    bottomLeftKrozec.setXY(117, 189);
    bottomLeftKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    bottomLeftKrozec.setVisible(false);
    add(bottomLeftKrozec);

    bottomMiddleKrizec.setXY(206, 189);
    bottomMiddleKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    bottomMiddleKrizec.setVisible(false);
    add(bottomMiddleKrizec);

    bottomLeftKrizec.setXY(117, 189);
    bottomLeftKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    bottomLeftKrizec.setVisible(false);
    add(bottomLeftKrizec);

    bottomRightKrizec.setXY(293, 189);
    bottomRightKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
    bottomRightKrizec.setVisible(false);
    add(bottomRightKrizec);

    bottomRightKrozec.setXY(293, 189);
    bottomRightKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
    bottomRightKrozec.setVisible(false);
    add(bottomRightKrozec);

    back.setXY(6, 232);
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    back.setLabelText(touchgfx::TypedText(T___SINGLEUSE_CSFH));
    back.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    back.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    back.setAction(buttonCallback);
    add(back);

    restart.setXY(6, 187);
    restart.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    restart.setLabelText(touchgfx::TypedText(T___SINGLEUSE_9RFO));
    restart.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    restart.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    restart.setAction(buttonCallback);
    add(restart);
}

gameViewBase::~gameViewBase()
{

}

void gameViewBase::setupScreen()
{

}

int player = 0;

void gameViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &topLeft)
    {
        //Interaction1
        //When topLeft clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	topLeftKrizec.setVisible(true);
        	player = 1;
        } else {
        	topLeftKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &topMiddle)
    {
        //Interaction2
        //When topMiddle clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	topMiddleKrizec.setVisible(true);
        	player = 1;
        } else {
        	topMiddleKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &topRight)
    {
        //Interaction3
        //When topRight clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	topRightKrizec.setVisible(true);
        	player = 1;
        } else {
        	topRightKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &middleLeft)
    {
        //Interaction4
        //When middleLeft clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	middleLeftKrizec.setVisible(true);
        	player = 1;
        } else {
        	middleLeftKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &middleMiddle)
    {
        //Interaction5
        //When middleMiddle clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	middleMiddleKrizec.setVisible(true);
        	player = 1;
        } else {
        	middleMiddleKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &middleRight)
    {
        //Interaction6
        //When middleRight clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	middleRightKrizec.setVisible(true);
        	player = 1;
        } else {
        	middleRightKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &bottomLeft)
    {
        //Interaction7
        //When bottomLeft clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	bottomLeftKrizec.setVisible(true);
        	player = 1;
        } else {
        	bottomLeftKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &bottomMiddle)
    {
        //Interaction8
        //When bottomMiddle clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	bottomMiddleKrizec.setVisible(true);
        	player = 1;
        } else {
        	bottomMiddleKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &bottomRight)
    {
        //Interaction9
        //When bottomRight clicked execute C++ code
        //Execute C++ code
        if (player == 0) {
        	bottomRightKrizec.setVisible(true);
        	player = 1;
        } else {
        	bottomRightKrozec.setVisible(true);
        	player = 0;
        }
    }
}

void gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back)
    {
        //Interaction10
        //When back clicked change screen to play
        //Go to play with no screen transition
        application().gotoplayScreenNoTransition();
    }
    if (&src == &restart)
    {
        //Interaction11
        //When restart clicked change screen to game
        //Go to game with no screen transition
        application().gotogameScreenNoTransition();
    }
}
