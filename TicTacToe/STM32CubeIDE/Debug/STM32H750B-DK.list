
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00027bd4  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00002fb4  90027e78  90027e78  0002be78  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  9002ae2c  9002ae2c  0002ee2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002ae4c  9002ae4c  000d785c  2**0
                  CONTENTS
  6 .ARM          00000008  9002ae4c  9002ae4c  0002ee4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002ae54  9002ae54  000d785c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002ae54  9002ae54  0002ee54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002ae6c  9002ae6c  0002ee6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002ae74  0002f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          0002272c  24000168  9002afdc  0002f168  2**3
                  ALLOC
 12 ._user_heap_stack 00002004  24022894  9002afdc  0002f894  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  000d785c  2**0
                  CONTENTS, READONLY
 14 FontFlashSection 00000600  90200000  90200000  00030000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 0000003c  90200600  90200600  00030600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 ExtFlashSection 000a7220  9020063c  9020063c  0003063c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000d8000  2**2
                  ALLOC
 18 .debug_line   00072a95  00000000  00000000  000d788a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000060  00000000  00000000  0014a31f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000e1092  00000000  00000000  0014a37f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00017d29  00000000  00000000  0022b411  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000034a0  00000000  00000000  00243140  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0019de83  00000000  00000000  002465e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007694  00000000  00000000  003e4463  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_macro  000495ff  00000000  00000000  003ebaf7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  004350f6  2**0
                  CONTENTS, READONLY
 27 .debug_frame  0000a1f0  00000000  00000000  004351b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loclists 00034352  00000000  00000000  0043f3a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000168 	.word	0x24000168
900002bc:	00000000 	.word	0x00000000
900002c0:	90027e5c 	.word	0x90027e5c

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	2400016c 	.word	0x2400016c
900002dc:	90027e5c 	.word	0x90027e5c

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b99d 	b.w	90000a54 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f835 	bl	90000798 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f828 	bl	90000798 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f817 	bl	90000798 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f809 	bl	90000798 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__udivmoddi4>:
90000798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000079c:	9d08      	ldr	r5, [sp, #32]
9000079e:	460c      	mov	r4, r1
900007a0:	2b00      	cmp	r3, #0
900007a2:	d14e      	bne.n	90000842 <__udivmoddi4+0xaa>
900007a4:	4694      	mov	ip, r2
900007a6:	458c      	cmp	ip, r1
900007a8:	4686      	mov	lr, r0
900007aa:	fab2 f282 	clz	r2, r2
900007ae:	d962      	bls.n	90000876 <__udivmoddi4+0xde>
900007b0:	b14a      	cbz	r2, 900007c6 <__udivmoddi4+0x2e>
900007b2:	f1c2 0320 	rsb	r3, r2, #32
900007b6:	4091      	lsls	r1, r2
900007b8:	fa20 f303 	lsr.w	r3, r0, r3
900007bc:	fa0c fc02 	lsl.w	ip, ip, r2
900007c0:	4319      	orrs	r1, r3
900007c2:	fa00 fe02 	lsl.w	lr, r0, r2
900007c6:	ea4f 471c 	mov.w	r7, ip, lsr #16
900007ca:	fa1f f68c 	uxth.w	r6, ip
900007ce:	fbb1 f4f7 	udiv	r4, r1, r7
900007d2:	ea4f 431e 	mov.w	r3, lr, lsr #16
900007d6:	fb07 1114 	mls	r1, r7, r4, r1
900007da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900007de:	fb04 f106 	mul.w	r1, r4, r6
900007e2:	4299      	cmp	r1, r3
900007e4:	d90a      	bls.n	900007fc <__udivmoddi4+0x64>
900007e6:	eb1c 0303 	adds.w	r3, ip, r3
900007ea:	f104 30ff 	add.w	r0, r4, #4294967295
900007ee:	f080 8112 	bcs.w	90000a16 <__udivmoddi4+0x27e>
900007f2:	4299      	cmp	r1, r3
900007f4:	f240 810f 	bls.w	90000a16 <__udivmoddi4+0x27e>
900007f8:	3c02      	subs	r4, #2
900007fa:	4463      	add	r3, ip
900007fc:	1a59      	subs	r1, r3, r1
900007fe:	fa1f f38e 	uxth.w	r3, lr
90000802:	fbb1 f0f7 	udiv	r0, r1, r7
90000806:	fb07 1110 	mls	r1, r7, r0, r1
9000080a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000080e:	fb00 f606 	mul.w	r6, r0, r6
90000812:	429e      	cmp	r6, r3
90000814:	d90a      	bls.n	9000082c <__udivmoddi4+0x94>
90000816:	eb1c 0303 	adds.w	r3, ip, r3
9000081a:	f100 31ff 	add.w	r1, r0, #4294967295
9000081e:	f080 80fc 	bcs.w	90000a1a <__udivmoddi4+0x282>
90000822:	429e      	cmp	r6, r3
90000824:	f240 80f9 	bls.w	90000a1a <__udivmoddi4+0x282>
90000828:	4463      	add	r3, ip
9000082a:	3802      	subs	r0, #2
9000082c:	1b9b      	subs	r3, r3, r6
9000082e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90000832:	2100      	movs	r1, #0
90000834:	b11d      	cbz	r5, 9000083e <__udivmoddi4+0xa6>
90000836:	40d3      	lsrs	r3, r2
90000838:	2200      	movs	r2, #0
9000083a:	e9c5 3200 	strd	r3, r2, [r5]
9000083e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000842:	428b      	cmp	r3, r1
90000844:	d905      	bls.n	90000852 <__udivmoddi4+0xba>
90000846:	b10d      	cbz	r5, 9000084c <__udivmoddi4+0xb4>
90000848:	e9c5 0100 	strd	r0, r1, [r5]
9000084c:	2100      	movs	r1, #0
9000084e:	4608      	mov	r0, r1
90000850:	e7f5      	b.n	9000083e <__udivmoddi4+0xa6>
90000852:	fab3 f183 	clz	r1, r3
90000856:	2900      	cmp	r1, #0
90000858:	d146      	bne.n	900008e8 <__udivmoddi4+0x150>
9000085a:	42a3      	cmp	r3, r4
9000085c:	d302      	bcc.n	90000864 <__udivmoddi4+0xcc>
9000085e:	4290      	cmp	r0, r2
90000860:	f0c0 80f0 	bcc.w	90000a44 <__udivmoddi4+0x2ac>
90000864:	1a86      	subs	r6, r0, r2
90000866:	eb64 0303 	sbc.w	r3, r4, r3
9000086a:	2001      	movs	r0, #1
9000086c:	2d00      	cmp	r5, #0
9000086e:	d0e6      	beq.n	9000083e <__udivmoddi4+0xa6>
90000870:	e9c5 6300 	strd	r6, r3, [r5]
90000874:	e7e3      	b.n	9000083e <__udivmoddi4+0xa6>
90000876:	2a00      	cmp	r2, #0
90000878:	f040 8090 	bne.w	9000099c <__udivmoddi4+0x204>
9000087c:	eba1 040c 	sub.w	r4, r1, ip
90000880:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000884:	fa1f f78c 	uxth.w	r7, ip
90000888:	2101      	movs	r1, #1
9000088a:	fbb4 f6f8 	udiv	r6, r4, r8
9000088e:	ea4f 431e 	mov.w	r3, lr, lsr #16
90000892:	fb08 4416 	mls	r4, r8, r6, r4
90000896:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
9000089a:	fb07 f006 	mul.w	r0, r7, r6
9000089e:	4298      	cmp	r0, r3
900008a0:	d908      	bls.n	900008b4 <__udivmoddi4+0x11c>
900008a2:	eb1c 0303 	adds.w	r3, ip, r3
900008a6:	f106 34ff 	add.w	r4, r6, #4294967295
900008aa:	d202      	bcs.n	900008b2 <__udivmoddi4+0x11a>
900008ac:	4298      	cmp	r0, r3
900008ae:	f200 80cd 	bhi.w	90000a4c <__udivmoddi4+0x2b4>
900008b2:	4626      	mov	r6, r4
900008b4:	1a1c      	subs	r4, r3, r0
900008b6:	fa1f f38e 	uxth.w	r3, lr
900008ba:	fbb4 f0f8 	udiv	r0, r4, r8
900008be:	fb08 4410 	mls	r4, r8, r0, r4
900008c2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008c6:	fb00 f707 	mul.w	r7, r0, r7
900008ca:	429f      	cmp	r7, r3
900008cc:	d908      	bls.n	900008e0 <__udivmoddi4+0x148>
900008ce:	eb1c 0303 	adds.w	r3, ip, r3
900008d2:	f100 34ff 	add.w	r4, r0, #4294967295
900008d6:	d202      	bcs.n	900008de <__udivmoddi4+0x146>
900008d8:	429f      	cmp	r7, r3
900008da:	f200 80b0 	bhi.w	90000a3e <__udivmoddi4+0x2a6>
900008de:	4620      	mov	r0, r4
900008e0:	1bdb      	subs	r3, r3, r7
900008e2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
900008e6:	e7a5      	b.n	90000834 <__udivmoddi4+0x9c>
900008e8:	f1c1 0620 	rsb	r6, r1, #32
900008ec:	408b      	lsls	r3, r1
900008ee:	fa22 f706 	lsr.w	r7, r2, r6
900008f2:	431f      	orrs	r7, r3
900008f4:	fa20 fc06 	lsr.w	ip, r0, r6
900008f8:	fa04 f301 	lsl.w	r3, r4, r1
900008fc:	ea43 030c 	orr.w	r3, r3, ip
90000900:	40f4      	lsrs	r4, r6
90000902:	fa00 f801 	lsl.w	r8, r0, r1
90000906:	0c38      	lsrs	r0, r7, #16
90000908:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000090c:	fbb4 fef0 	udiv	lr, r4, r0
90000910:	fa1f fc87 	uxth.w	ip, r7
90000914:	fb00 441e 	mls	r4, r0, lr, r4
90000918:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
9000091c:	fb0e f90c 	mul.w	r9, lr, ip
90000920:	45a1      	cmp	r9, r4
90000922:	fa02 f201 	lsl.w	r2, r2, r1
90000926:	d90a      	bls.n	9000093e <__udivmoddi4+0x1a6>
90000928:	193c      	adds	r4, r7, r4
9000092a:	f10e 3aff 	add.w	sl, lr, #4294967295
9000092e:	f080 8084 	bcs.w	90000a3a <__udivmoddi4+0x2a2>
90000932:	45a1      	cmp	r9, r4
90000934:	f240 8081 	bls.w	90000a3a <__udivmoddi4+0x2a2>
90000938:	f1ae 0e02 	sub.w	lr, lr, #2
9000093c:	443c      	add	r4, r7
9000093e:	eba4 0409 	sub.w	r4, r4, r9
90000942:	fa1f f983 	uxth.w	r9, r3
90000946:	fbb4 f3f0 	udiv	r3, r4, r0
9000094a:	fb00 4413 	mls	r4, r0, r3, r4
9000094e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
90000952:	fb03 fc0c 	mul.w	ip, r3, ip
90000956:	45a4      	cmp	ip, r4
90000958:	d907      	bls.n	9000096a <__udivmoddi4+0x1d2>
9000095a:	193c      	adds	r4, r7, r4
9000095c:	f103 30ff 	add.w	r0, r3, #4294967295
90000960:	d267      	bcs.n	90000a32 <__udivmoddi4+0x29a>
90000962:	45a4      	cmp	ip, r4
90000964:	d965      	bls.n	90000a32 <__udivmoddi4+0x29a>
90000966:	3b02      	subs	r3, #2
90000968:	443c      	add	r4, r7
9000096a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
9000096e:	fba0 9302 	umull	r9, r3, r0, r2
90000972:	eba4 040c 	sub.w	r4, r4, ip
90000976:	429c      	cmp	r4, r3
90000978:	46ce      	mov	lr, r9
9000097a:	469c      	mov	ip, r3
9000097c:	d351      	bcc.n	90000a22 <__udivmoddi4+0x28a>
9000097e:	d04e      	beq.n	90000a1e <__udivmoddi4+0x286>
90000980:	b155      	cbz	r5, 90000998 <__udivmoddi4+0x200>
90000982:	ebb8 030e 	subs.w	r3, r8, lr
90000986:	eb64 040c 	sbc.w	r4, r4, ip
9000098a:	fa04 f606 	lsl.w	r6, r4, r6
9000098e:	40cb      	lsrs	r3, r1
90000990:	431e      	orrs	r6, r3
90000992:	40cc      	lsrs	r4, r1
90000994:	e9c5 6400 	strd	r6, r4, [r5]
90000998:	2100      	movs	r1, #0
9000099a:	e750      	b.n	9000083e <__udivmoddi4+0xa6>
9000099c:	f1c2 0320 	rsb	r3, r2, #32
900009a0:	fa20 f103 	lsr.w	r1, r0, r3
900009a4:	fa0c fc02 	lsl.w	ip, ip, r2
900009a8:	fa24 f303 	lsr.w	r3, r4, r3
900009ac:	4094      	lsls	r4, r2
900009ae:	430c      	orrs	r4, r1
900009b0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900009b4:	fa00 fe02 	lsl.w	lr, r0, r2
900009b8:	fa1f f78c 	uxth.w	r7, ip
900009bc:	fbb3 f0f8 	udiv	r0, r3, r8
900009c0:	fb08 3110 	mls	r1, r8, r0, r3
900009c4:	0c23      	lsrs	r3, r4, #16
900009c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900009ca:	fb00 f107 	mul.w	r1, r0, r7
900009ce:	4299      	cmp	r1, r3
900009d0:	d908      	bls.n	900009e4 <__udivmoddi4+0x24c>
900009d2:	eb1c 0303 	adds.w	r3, ip, r3
900009d6:	f100 36ff 	add.w	r6, r0, #4294967295
900009da:	d22c      	bcs.n	90000a36 <__udivmoddi4+0x29e>
900009dc:	4299      	cmp	r1, r3
900009de:	d92a      	bls.n	90000a36 <__udivmoddi4+0x29e>
900009e0:	3802      	subs	r0, #2
900009e2:	4463      	add	r3, ip
900009e4:	1a5b      	subs	r3, r3, r1
900009e6:	b2a4      	uxth	r4, r4
900009e8:	fbb3 f1f8 	udiv	r1, r3, r8
900009ec:	fb08 3311 	mls	r3, r8, r1, r3
900009f0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
900009f4:	fb01 f307 	mul.w	r3, r1, r7
900009f8:	42a3      	cmp	r3, r4
900009fa:	d908      	bls.n	90000a0e <__udivmoddi4+0x276>
900009fc:	eb1c 0404 	adds.w	r4, ip, r4
90000a00:	f101 36ff 	add.w	r6, r1, #4294967295
90000a04:	d213      	bcs.n	90000a2e <__udivmoddi4+0x296>
90000a06:	42a3      	cmp	r3, r4
90000a08:	d911      	bls.n	90000a2e <__udivmoddi4+0x296>
90000a0a:	3902      	subs	r1, #2
90000a0c:	4464      	add	r4, ip
90000a0e:	1ae4      	subs	r4, r4, r3
90000a10:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
90000a14:	e739      	b.n	9000088a <__udivmoddi4+0xf2>
90000a16:	4604      	mov	r4, r0
90000a18:	e6f0      	b.n	900007fc <__udivmoddi4+0x64>
90000a1a:	4608      	mov	r0, r1
90000a1c:	e706      	b.n	9000082c <__udivmoddi4+0x94>
90000a1e:	45c8      	cmp	r8, r9
90000a20:	d2ae      	bcs.n	90000980 <__udivmoddi4+0x1e8>
90000a22:	ebb9 0e02 	subs.w	lr, r9, r2
90000a26:	eb63 0c07 	sbc.w	ip, r3, r7
90000a2a:	3801      	subs	r0, #1
90000a2c:	e7a8      	b.n	90000980 <__udivmoddi4+0x1e8>
90000a2e:	4631      	mov	r1, r6
90000a30:	e7ed      	b.n	90000a0e <__udivmoddi4+0x276>
90000a32:	4603      	mov	r3, r0
90000a34:	e799      	b.n	9000096a <__udivmoddi4+0x1d2>
90000a36:	4630      	mov	r0, r6
90000a38:	e7d4      	b.n	900009e4 <__udivmoddi4+0x24c>
90000a3a:	46d6      	mov	lr, sl
90000a3c:	e77f      	b.n	9000093e <__udivmoddi4+0x1a6>
90000a3e:	4463      	add	r3, ip
90000a40:	3802      	subs	r0, #2
90000a42:	e74d      	b.n	900008e0 <__udivmoddi4+0x148>
90000a44:	4606      	mov	r6, r0
90000a46:	4623      	mov	r3, r4
90000a48:	4608      	mov	r0, r1
90000a4a:	e70f      	b.n	9000086c <__udivmoddi4+0xd4>
90000a4c:	3e02      	subs	r6, #2
90000a4e:	4463      	add	r3, ip
90000a50:	e730      	b.n	900008b4 <__udivmoddi4+0x11c>
90000a52:	bf00      	nop

90000a54 <__aeabi_idiv0>:
90000a54:	4770      	bx	lr
90000a56:	bf00      	nop

90000a58 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000a58:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000a90 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a5c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a5e:	e003      	b.n	90000a68 <LoopCopyDataInit>

90000a60 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a60:	4b0c      	ldr	r3, [pc, #48]	@ (90000a94 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a62:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a64:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a66:	3104      	adds	r1, #4

90000a68 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a68:	480b      	ldr	r0, [pc, #44]	@ (90000a98 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a6a:	4b0c      	ldr	r3, [pc, #48]	@ (90000a9c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a6c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a6e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a70:	d3f6      	bcc.n	90000a60 <CopyDataInit>
  ldr  r2, =_sbss
90000a72:	4a0b      	ldr	r2, [pc, #44]	@ (90000aa0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a74:	e002      	b.n	90000a7c <LoopFillZerobss>

90000a76 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a76:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a78:	f842 3b04 	str.w	r3, [r2], #4

90000a7c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a7c:	4b09      	ldr	r3, [pc, #36]	@ (90000aa4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a7e:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a80:	d3f9      	bcc.n	90000a76 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a82:	f006 ff93 	bl	900079ac <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a86:	f026 fd0d 	bl	900274a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a8a:	f002 fe2d 	bl	900036e8 <main>
  bx  lr    
90000a8e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000a90:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000a94:	9002ae74 	.word	0x9002ae74
  ldr  r0, =_sdata
90000a98:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000a9c:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000aa0:	24000168 	.word	0x24000168
  ldr  r3, = _ebss
90000aa4:	24022894 	.word	0x24022894

90000aa8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000aa8:	e7fe      	b.n	90000aa8 <ADC3_IRQHandler>
	...

90000aac <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000aac:	4770      	bx	lr
90000aae:	bf00      	nop

90000ab0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000ab0:	4770      	bx	lr
90000ab2:	bf00      	nop

90000ab4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000ab4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000ab6:	f002 f8bd 	bl	90002c34 <touchgfx_components_init>
    touchgfx_init();
}
90000aba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000abe:	f002 b83b 	b.w	90002b38 <touchgfx_init>
90000ac2:	bf00      	nop

90000ac4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000ac4:	f002 b8b8 	b.w	90002c38 <touchgfx_taskEntry>

90000ac8 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000ac8:	6840      	ldr	r0, [r0, #4]
    }
90000aca:	4770      	bx	lr

90000acc <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000acc:	6041      	str	r1, [r0, #4]
    }
90000ace:	4770      	bx	lr

90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad0:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ad4:	4b08      	ldr	r3, [pc, #32]	@ (90000af8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000ad6:	4a09      	ldr	r2, [pc, #36]	@ (90000afc <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ad8:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000adc:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000ae0:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ae4:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000ae8:	430a      	orrs	r2, r1
90000aea:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000aee:	681a      	ldr	r2, [r3, #0]
90000af0:	f042 0201 	orr.w	r2, r2, #1
90000af4:	601a      	str	r2, [r3, #0]
}
90000af6:	4770      	bx	lr
90000af8:	e0001000 	.word	0xe0001000
90000afc:	c5acce55 	.word	0xc5acce55

90000b00 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b00:	1a52      	subs	r2, r2, r1
90000b02:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b06:	fbb2 f0f3 	udiv	r0, r2, r3
90000b0a:	4770      	bx	lr

90000b0c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b0c:	4b01      	ldr	r3, [pc, #4]	@ (90000b14 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b0e:	6858      	ldr	r0, [r3, #4]
}
90000b10:	4770      	bx	lr
90000b12:	bf00      	nop
90000b14:	e0001000 	.word	0xe0001000

90000b18 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b1c:	b510      	push	{r4, lr}
90000b1e:	4604      	mov	r4, r0
90000b20:	210c      	movs	r1, #12
90000b22:	f025 fdf1 	bl	90026708 <_ZdlPvj>
90000b26:	4620      	mov	r0, r4
90000b28:	bd10      	pop	{r4, pc}
90000b2a:	bf00      	nop

90000b2c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b2c:	6803      	ldr	r3, [r0, #0]
90000b2e:	4a0c      	ldr	r2, [pc, #48]	@ (90000b60 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b30:	691b      	ldr	r3, [r3, #16]
{
90000b32:	b510      	push	{r4, lr}
90000b34:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000b36:	b149      	cbz	r1, 90000b4c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b38:	4293      	cmp	r3, r2
90000b3a:	d10d      	bne.n	90000b58 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000b3c:	4b09      	ldr	r3, [pc, #36]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b3e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b40:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000b42:	6863      	ldr	r3, [r4, #4]
90000b44:	1a9b      	subs	r3, r3, r2
90000b46:	4403      	add	r3, r0
90000b48:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000b4a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000b4c:	4293      	cmp	r3, r2
90000b4e:	d105      	bne.n	90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000b50:	4b04      	ldr	r3, [pc, #16]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b52:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000b54:	60a0      	str	r0, [r4, #8]
}
90000b56:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b58:	4798      	blx	r3
90000b5a:	e7f1      	b.n	90000b40 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b5c:	4798      	blx	r3
90000b5e:	e7f9      	b.n	90000b54 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b60:	90000b0d 	.word	0x90000b0d
90000b64:	e0001000 	.word	0xe0001000

90000b68 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b68:	4770      	bx	lr
90000b6a:	bf00      	nop
90000b6c:	0000      	movs	r0, r0
	...

90000b70 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000b70:	b500      	push	{lr}
90000b72:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000b74:	2208      	movs	r2, #8
90000b76:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000b78:	2000      	movs	r0, #0
90000b7a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000b7c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000b98 <_ZN20STM32TouchController4initEv+0x28>
90000b80:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000b84:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000b88:	f006 fe22 	bl	900077d0 <BSP_TS_Init>
}
90000b8c:	b005      	add	sp, #20
90000b8e:	f85d fb04 	ldr.w	pc, [sp], #4
90000b92:	bf00      	nop
90000b94:	f3af 8000 	nop.w
90000b98:	000001e0 	.word	0x000001e0
90000b9c:	00000110 	.word	0x00000110

90000ba0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000ba0:	b530      	push	{r4, r5, lr}
90000ba2:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000ba4:	2000      	movs	r0, #0
{
90000ba6:	460d      	mov	r5, r1
90000ba8:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000baa:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000bac:	9001      	str	r0, [sp, #4]
90000bae:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000bb2:	f006 fe9b 	bl	900078ec <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000bb6:	9801      	ldr	r0, [sp, #4]
90000bb8:	b120      	cbz	r0, 90000bc4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000bba:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000bbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000bc0:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000bc2:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000bc4:	b005      	add	sp, #20
90000bc6:	bd30      	pop	{r4, r5, pc}

90000bc8 <_ZN20STM32TouchControllerD0Ev>:
90000bc8:	b510      	push	{r4, lr}
90000bca:	4604      	mov	r4, r0
90000bcc:	2104      	movs	r1, #4
90000bce:	f025 fd9b 	bl	90026708 <_ZdlPvj>
90000bd2:	4620      	mov	r0, r4
90000bd4:	bd10      	pop	{r4, pc}
90000bd6:	bf00      	nop

90000bd8 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
90000bd8:	b508      	push	{r3, lr}
    for (int id = 0; id <= 4; id++)
90000bda:	2300      	movs	r3, #0
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000bdc:	2b03      	cmp	r3, #3
90000bde:	d82b      	bhi.n	90000c38 <_ZN8touchgfx4GPIO4initEv+0x60>
90000be0:	e8df f003 	tbb	[pc, r3]
90000be4:	020c1620 	.word	0x020c1620
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000be8:	2140      	movs	r1, #64	@ 0x40
90000bea:	4814      	ldr	r0, [pc, #80]	@ (90000c3c <_ZN8touchgfx4GPIO4initEv+0x64>)
90000bec:	f007 fbea 	bl	900083c4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000bf0:	2801      	cmp	r0, #1
90000bf2:	d101      	bne.n	90000bf8 <_ZN8touchgfx4GPIO4initEv+0x20>
            GPIO_InvertedLevels[id] = 1;
90000bf4:	4b12      	ldr	r3, [pc, #72]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000bf6:	60d8      	str	r0, [r3, #12]
    for (int id = 0; id <= 4; id++)
90000bf8:	2304      	movs	r3, #4
90000bfa:	e7ef      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000bfc:	2140      	movs	r1, #64	@ 0x40
90000bfe:	4811      	ldr	r0, [pc, #68]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c00:	f007 fbe0 	bl	900083c4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c04:	2801      	cmp	r0, #1
90000c06:	d101      	bne.n	90000c0c <_ZN8touchgfx4GPIO4initEv+0x34>
            GPIO_InvertedLevels[id] = 1;
90000c08:	4b0d      	ldr	r3, [pc, #52]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c0a:	6098      	str	r0, [r3, #8]
    for (int id = 0; id <= 4; id++)
90000c0c:	2303      	movs	r3, #3
90000c0e:	e7e5      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c10:	2180      	movs	r1, #128	@ 0x80
90000c12:	480c      	ldr	r0, [pc, #48]	@ (90000c44 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c14:	f007 fbd6 	bl	900083c4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c18:	2801      	cmp	r0, #1
90000c1a:	d101      	bne.n	90000c20 <_ZN8touchgfx4GPIO4initEv+0x48>
            GPIO_InvertedLevels[id] = 1;
90000c1c:	4b08      	ldr	r3, [pc, #32]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c1e:	6058      	str	r0, [r3, #4]
    for (int id = 0; id <= 4; id++)
90000c20:	2302      	movs	r3, #2
90000c22:	e7db      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c24:	2108      	movs	r1, #8
90000c26:	4808      	ldr	r0, [pc, #32]	@ (90000c48 <_ZN8touchgfx4GPIO4initEv+0x70>)
90000c28:	f007 fbcc 	bl	900083c4 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c2c:	2801      	cmp	r0, #1
90000c2e:	d101      	bne.n	90000c34 <_ZN8touchgfx4GPIO4initEv+0x5c>
            GPIO_InvertedLevels[id] = 1;
90000c30:	4b03      	ldr	r3, [pc, #12]	@ (90000c40 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c32:	6018      	str	r0, [r3, #0]
    for (int id = 0; id <= 4; id++)
90000c34:	2301      	movs	r3, #1
90000c36:	e7d1      	b.n	90000bdc <_ZN8touchgfx4GPIO4initEv+0x4>
}
90000c38:	bd08      	pop	{r3, pc}
90000c3a:	bf00      	nop
90000c3c:	58020000 	.word	0x58020000
90000c40:	24000184 	.word	0x24000184
90000c44:	58020400 	.word	0x58020400
90000c48:	58021800 	.word	0x58021800

90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c4c:	2803      	cmp	r0, #3
90000c4e:	d827      	bhi.n	90000ca0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c50:	e8df f000 	tbb	[pc, r0]
90000c54:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000c58:	4b12      	ldr	r3, [pc, #72]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c5a:	2140      	movs	r1, #64	@ 0x40
90000c5c:	4812      	ldr	r0, [pc, #72]	@ (90000ca8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000c5e:	68da      	ldr	r2, [r3, #12]
90000c60:	fab2 f282 	clz	r2, r2
90000c64:	0952      	lsrs	r2, r2, #5
90000c66:	f007 bbb3 	b.w	900083d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000c6a:	4b0e      	ldr	r3, [pc, #56]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c6c:	2140      	movs	r1, #64	@ 0x40
90000c6e:	480f      	ldr	r0, [pc, #60]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c70:	689a      	ldr	r2, [r3, #8]
90000c72:	fab2 f282 	clz	r2, r2
90000c76:	0952      	lsrs	r2, r2, #5
90000c78:	f007 bbaa 	b.w	900083d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000c7c:	4b09      	ldr	r3, [pc, #36]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c7e:	2180      	movs	r1, #128	@ 0x80
90000c80:	480a      	ldr	r0, [pc, #40]	@ (90000cac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c82:	685a      	ldr	r2, [r3, #4]
90000c84:	fab2 f282 	clz	r2, r2
90000c88:	0952      	lsrs	r2, r2, #5
90000c8a:	f007 bba1 	b.w	900083d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c8e:	4b05      	ldr	r3, [pc, #20]	@ (90000ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c90:	2108      	movs	r1, #8
90000c92:	4807      	ldr	r0, [pc, #28]	@ (90000cb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000c94:	681a      	ldr	r2, [r3, #0]
90000c96:	fab2 f282 	clz	r2, r2
90000c9a:	0952      	lsrs	r2, r2, #5
90000c9c:	f007 bb98 	b.w	900083d0 <HAL_GPIO_WritePin>
}
90000ca0:	4770      	bx	lr
90000ca2:	bf00      	nop
90000ca4:	24000184 	.word	0x24000184
90000ca8:	58020000 	.word	0x58020000
90000cac:	58020400 	.word	0x58020400
90000cb0:	58021800 	.word	0x58021800

90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cb4:	2803      	cmp	r0, #3
90000cb6:	d827      	bhi.n	90000d08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000cb8:	e8df f000 	tbb	[pc, r0]
90000cbc:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cc0:	4b12      	ldr	r3, [pc, #72]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cc2:	2140      	movs	r1, #64	@ 0x40
90000cc4:	4812      	ldr	r0, [pc, #72]	@ (90000d10 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000cc6:	68da      	ldr	r2, [r3, #12]
90000cc8:	3a00      	subs	r2, #0
90000cca:	bf18      	it	ne
90000ccc:	2201      	movne	r2, #1
90000cce:	f007 bb7f 	b.w	900083d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000cd2:	4b0e      	ldr	r3, [pc, #56]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cd4:	2140      	movs	r1, #64	@ 0x40
90000cd6:	480f      	ldr	r0, [pc, #60]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cd8:	689a      	ldr	r2, [r3, #8]
90000cda:	3a00      	subs	r2, #0
90000cdc:	bf18      	it	ne
90000cde:	2201      	movne	r2, #1
90000ce0:	f007 bb76 	b.w	900083d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000ce4:	4b09      	ldr	r3, [pc, #36]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000ce6:	2180      	movs	r1, #128	@ 0x80
90000ce8:	480a      	ldr	r0, [pc, #40]	@ (90000d14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cea:	685a      	ldr	r2, [r3, #4]
90000cec:	3a00      	subs	r2, #0
90000cee:	bf18      	it	ne
90000cf0:	2201      	movne	r2, #1
90000cf2:	f007 bb6d 	b.w	900083d0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000cf6:	4b05      	ldr	r3, [pc, #20]	@ (90000d0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cf8:	2108      	movs	r1, #8
90000cfa:	4807      	ldr	r0, [pc, #28]	@ (90000d18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000cfc:	681a      	ldr	r2, [r3, #0]
90000cfe:	3a00      	subs	r2, #0
90000d00:	bf18      	it	ne
90000d02:	2201      	movne	r2, #1
90000d04:	f007 bb64 	b.w	900083d0 <HAL_GPIO_WritePin>
}
90000d08:	4770      	bx	lr
90000d0a:	bf00      	nop
90000d0c:	24000184 	.word	0x24000184
90000d10:	58020000 	.word	0x58020000
90000d14:	58020400 	.word	0x58020400
90000d18:	58021800 	.word	0x58021800

90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d1c:	2803      	cmp	r0, #3
90000d1e:	d813      	bhi.n	90000d48 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d20:	e8df f000 	tbb	[pc, r0]
90000d24:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d28:	2140      	movs	r1, #64	@ 0x40
90000d2a:	4808      	ldr	r0, [pc, #32]	@ (90000d4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d2c:	f007 bb54 	b.w	900083d8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d30:	2140      	movs	r1, #64	@ 0x40
90000d32:	4807      	ldr	r0, [pc, #28]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d34:	f007 bb50 	b.w	900083d8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d38:	2180      	movs	r1, #128	@ 0x80
90000d3a:	4805      	ldr	r0, [pc, #20]	@ (90000d50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d3c:	f007 bb4c 	b.w	900083d8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d40:	2108      	movs	r1, #8
90000d42:	4804      	ldr	r0, [pc, #16]	@ (90000d54 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d44:	f007 bb48 	b.w	900083d8 <HAL_GPIO_TogglePin>
}
90000d48:	4770      	bx	lr
90000d4a:	bf00      	nop
90000d4c:	58020000 	.word	0x58020000
90000d50:	58020400 	.word	0x58020400
90000d54:	58021800 	.word	0x58021800

90000d58 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d58:	2000      	movs	r0, #0
90000d5a:	4770      	bx	lr

90000d5c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d5c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d5e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d62:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d66:	4770      	bx	lr

90000d68 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d68:	2000      	movs	r0, #0
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d6c:	1e0a      	subs	r2, r1, #0
90000d6e:	4b03      	ldr	r3, [pc, #12]	@ (90000d7c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d70:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d72:	bf18      	it	ne
90000d74:	2201      	movne	r2, #1
90000d76:	701a      	strb	r2, [r3, #0]
    }
90000d78:	4770      	bx	lr
90000d7a:	bf00      	nop
90000d7c:	24021c5b 	.word	0x24021c5b

90000d80 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d80:	2000      	movs	r0, #0
90000d82:	4770      	bx	lr

90000d84 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d84:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d86:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d88:	b103      	cbz	r3, 90000d8c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d8a:	4718      	bx	r3
        }
    }
90000d8c:	4770      	bx	lr
90000d8e:	bf00      	nop

90000d90 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000d90:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000d94:	4770      	bx	lr
90000d96:	bf00      	nop

90000d98 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000d98:	4770      	bx	lr
90000d9a:	bf00      	nop

90000d9c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000d9c:	b510      	push	{r4, lr}
90000d9e:	4604      	mov	r4, r0
        swapFrameBuffers();
90000da0:	f00f ff46 	bl	90010c30 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000da4:	6823      	ldr	r3, [r4, #0]
90000da6:	4620      	mov	r0, r4
90000da8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90000dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000db0:	4718      	bx	r3
90000db2:	bf00      	nop

90000db4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000db4:	f002 b856 	b.w	90002e64 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000db8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000db8:	f002 b85a 	b.w	90002e70 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dbc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dbc:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dbe:	f002 f8f5 	bl	90002fac <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000dc2:	4812      	ldr	r0, [pc, #72]	@ (90000e0c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000dc4:	2300      	movs	r3, #0
90000dc6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dca:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dce:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dd2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000dd6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dda:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dde:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000de6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000dec:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dee:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000df2:	1c5a      	adds	r2, r3, #1
90000df4:	d1f8      	bne.n	90000de8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000df6:	f1ac 0c20 	sub.w	ip, ip, #32
90000dfa:	f11c 0f20 	cmn.w	ip, #32
90000dfe:	d1f0      	bne.n	90000de2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e00:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e04:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e08:	bd10      	pop	{r4, pc}
90000e0a:	bf00      	nop
90000e0c:	e000ed00 	.word	0xe000ed00

90000e10 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e10:	f002 b804 	b.w	90002e1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e14 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e14:	f002 b94c 	b.w	900030b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e18 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e18:	f002 b936 	b.w	90003088 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e1c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e1c:	f002 b808 	b.w	90002e30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e20:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e22:	4b09      	ldr	r3, [pc, #36]	@ (90000e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e24:	881b      	ldrh	r3, [r3, #0]
90000e26:	428b      	cmp	r3, r1
90000e28:	d808      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e2a:	4b08      	ldr	r3, [pc, #32]	@ (90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e2c:	881b      	ldrh	r3, [r3, #0]
90000e2e:	4293      	cmp	r3, r2
90000e30:	d804      	bhi.n	90000e3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e32:	4807      	ldr	r0, [pc, #28]	@ (90000e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e34:	4b07      	ldr	r3, [pc, #28]	@ (90000e54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e36:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e38:	801a      	strh	r2, [r3, #0]
    }
90000e3a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e3c:	4b06      	ldr	r3, [pc, #24]	@ (90000e58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e3e:	219e      	movs	r1, #158	@ 0x9e
90000e40:	4a06      	ldr	r2, [pc, #24]	@ (90000e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e42:	4807      	ldr	r0, [pc, #28]	@ (90000e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e44:	f025 ffd8 	bl	90026df8 <__assert_func>
90000e48:	24021c50 	.word	0x24021c50
90000e4c:	24021c52 	.word	0x24021c52
90000e50:	24021c56 	.word	0x24021c56
90000e54:	24021c58 	.word	0x24021c58
90000e58:	90027ef8 	.word	0x90027ef8
90000e5c:	90027f5c 	.word	0x90027f5c
90000e60:	90027fa0 	.word	0x90027fa0

90000e64 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e64:	f00f ba60 	b.w	90010328 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e68 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e68:	f00f b934 	b.w	900100d4 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e6c <_ZN11TouchGFXHALD0Ev>:
90000e6c:	b510      	push	{r4, lr}
90000e6e:	4604      	mov	r4, r0
90000e70:	2188      	movs	r1, #136	@ 0x88
90000e72:	f025 fc49 	bl	90026708 <_ZdlPvj>
90000e76:	4620      	mov	r0, r4
90000e78:	bd10      	pop	{r4, pc}
90000e7a:	bf00      	nop

90000e7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000e7c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e80:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90000e84:	4b0b      	ldr	r3, [pc, #44]	@ (90000eb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e86:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e88:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e8a:	d00b      	beq.n	90000ea4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e8c:	b94a      	cbnz	r2, 90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e8e:	4a0a      	ldr	r2, [pc, #40]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000e90:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e94:	4909      	ldr	r1, [pc, #36]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000e96:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000e98:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000e9c:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000e9e:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ea0:	8013      	strh	r3, [r2, #0]
        }
    }
90000ea2:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000ea4:	2a00      	cmp	r2, #0
90000ea6:	d0fc      	beq.n	90000ea2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ea8:	4a03      	ldr	r2, [pc, #12]	@ (90000eb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000eaa:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eae:	4903      	ldr	r1, [pc, #12]	@ (90000ebc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000eb0:	e7f1      	b.n	90000e96 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000eb2:	bf00      	nop
90000eb4:	24021c54 	.word	0x24021c54
90000eb8:	24021c52 	.word	0x24021c52
90000ebc:	24021c50 	.word	0x24021c50

90000ec0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ec0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ec2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ec6:	b118      	cbz	r0, 90000ed0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ec8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eca:	6803      	ldr	r3, [r0, #0]
90000ecc:	681b      	ldr	r3, [r3, #0]
90000ece:	4718      	bx	r3
    }
90000ed0:	4770      	bx	lr
90000ed2:	bf00      	nop

90000ed4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ed4:	6840      	ldr	r0, [r0, #4]
90000ed6:	4a04      	ldr	r2, [pc, #16]	@ (90000ee8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000ed8:	6803      	ldr	r3, [r0, #0]
90000eda:	699b      	ldr	r3, [r3, #24]
90000edc:	4293      	cmp	r3, r2
90000ede:	d101      	bne.n	90000ee4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ee0:	2000      	movs	r0, #0
90000ee2:	4770      	bx	lr
        return dma.getDMAType();
90000ee4:	4718      	bx	r3
90000ee6:	bf00      	nop
90000ee8:	90000d59 	.word	0x90000d59

90000eec <_ZN11TouchGFXHAL10initializeEv>:
{
90000eec:	b538      	push	{r3, r4, r5, lr}
90000eee:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000ef0:	f002 fa60 	bl	900033b4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000ef4:	4a0b      	ldr	r2, [pc, #44]	@ (90000f24 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000ef6:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000ef8:	490b      	ldr	r1, [pc, #44]	@ (90000f28 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000efa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90000efe:	4293      	cmp	r3, r2
90000f00:	d10d      	bne.n	90000f1e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f02:	4b0a      	ldr	r3, [pc, #40]	@ (90000f2c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f04:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f06:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f08:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f0a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90000f0e:	4628      	mov	r0, r5
90000f10:	f7ff fdde 	bl	90000ad0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f14:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f16:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f18:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f1c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f1e:	4620      	mov	r0, r4
90000f20:	4798      	blx	r3
90000f22:	e7f2      	b.n	90000f0a <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f24:	90000d6d 	.word	0x90000d6d
90000f28:	d0000000 	.word	0xd0000000
90000f2c:	24021c5b 	.word	0x24021c5b

90000f30 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f30:	b1a9      	cbz	r1, 90000f5e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f32:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f34:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f36:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f38:	bf18      	it	ne
90000f3a:	2201      	movne	r2, #1
90000f3c:	490c      	ldr	r1, [pc, #48]	@ (90000f70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f3e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f40:	6802      	ldr	r2, [r0, #0]
90000f42:	490c      	ldr	r1, [pc, #48]	@ (90000f74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f44:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90000f48:	428a      	cmp	r2, r1
90000f4a:	d106      	bne.n	90000f5a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f4c:	1e19      	subs	r1, r3, #0
90000f4e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f78 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f50:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f52:	bf18      	it	ne
90000f54:	2101      	movne	r1, #1
90000f56:	7011      	strb	r1, [r2, #0]
90000f58:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f5a:	4619      	mov	r1, r3
90000f5c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f5e:	4b07      	ldr	r3, [pc, #28]	@ (90000f7c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f60:	f240 21d2 	movw	r1, #722	@ 0x2d2
90000f64:	4a06      	ldr	r2, [pc, #24]	@ (90000f80 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f66:	4807      	ldr	r0, [pc, #28]	@ (90000f84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f68:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f6a:	f025 ff45 	bl	90026df8 <__assert_func>
90000f6e:	bf00      	nop
90000f70:	24021c5a 	.word	0x24021c5a
90000f74:	90000d6d 	.word	0x90000d6d
90000f78:	24021c5b 	.word	0x24021c5b
90000f7c:	90027fe8 	.word	0x90027fe8
90000f80:	90028020 	.word	0x90028020
90000f84:	90027fa0 	.word	0x90027fa0

90000f88 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f88:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f8a:	6803      	ldr	r3, [r0, #0]
{
90000f8c:	4604      	mov	r4, r0
90000f8e:	4d17      	ldr	r5, [pc, #92]	@ (90000fec <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000f90:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90000f94:	4798      	blx	r3
    enableInterrupts();
90000f96:	6823      	ldr	r3, [r4, #0]
90000f98:	4620      	mov	r0, r4
90000f9a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90000f9c:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000f9e:	f001 f9f5 	bl	9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fa2:	6823      	ldr	r3, [r4, #0]
90000fa4:	4620      	mov	r0, r4
90000fa6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fa8:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
90000faa:	2201      	movs	r2, #1
90000fac:	2104      	movs	r1, #4
90000fae:	4810      	ldr	r0, [pc, #64]	@ (90000ff0 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000fb0:	f007 fa0e 	bl	900083d0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000fb4:	2201      	movs	r2, #1
90000fb6:	2180      	movs	r1, #128	@ 0x80
90000fb8:	480e      	ldr	r0, [pc, #56]	@ (90000ff4 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
90000fba:	f007 fa09 	bl	900083d0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fbe:	2201      	movs	r2, #1
90000fc0:	480d      	ldr	r0, [pc, #52]	@ (90000ff8 <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000fc2:	4611      	mov	r1, r2
90000fc4:	f007 fa04 	bl	900083d0 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fc8:	f001 f9e0 	bl	9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fcc:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fce:	4620      	mov	r0, r4
90000fd0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fd2:	42ab      	cmp	r3, r5
90000fd4:	d107      	bne.n	90000fe6 <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
90000fd6:	f00f fe2b 	bl	90010c30 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fda:	6823      	ldr	r3, [r4, #0]
90000fdc:	4620      	mov	r0, r4
90000fde:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90000fe2:	4798      	blx	r3
    }
90000fe4:	e7f0      	b.n	90000fc8 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
90000fe6:	4798      	blx	r3
90000fe8:	e7ee      	b.n	90000fc8 <_ZN11TouchGFXHAL9taskEntryEv+0x40>
90000fea:	bf00      	nop
90000fec:	90000d9d 	.word	0x90000d9d
90000ff0:	58020000 	.word	0x58020000
90000ff4:	58020c00 	.word	0x58020c00
90000ff8:	58022800 	.word	0x58022800

90000ffc <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000ffc:	4601      	mov	r1, r0
    {
90000ffe:	b508      	push	{r3, lr}
        return instance;
90001000:	4b05      	ldr	r3, [pc, #20]	@ (90001018 <IdleTaskHook+0x1c>)
90001002:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90001004:	b121      	cbz	r1, 90001010 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90001006:	2101      	movs	r1, #1
90001008:	f00f fe2c 	bl	90010c64 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
9000100c:	2001      	movs	r0, #1
9000100e:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001010:	f00f fe28 	bl	90010c64 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001014:	2001      	movs	r0, #1
90001016:	bd08      	pop	{r3, pc}
90001018:	24021c5c 	.word	0x24021c5c

9000101c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000101c:	6940      	ldr	r0, [r0, #20]
9000101e:	4770      	bx	lr

90001020 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001020:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001024:	4770      	bx	lr
90001026:	bf00      	nop

90001028 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001028:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000102a:	b10b      	cbz	r3, 90001030 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000102c:	2001      	movs	r0, #1
}
9000102e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001030:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001032:	3800      	subs	r0, #0
90001034:	bf18      	it	ne
90001036:	2001      	movne	r0, #1
90001038:	4770      	bx	lr
9000103a:	bf00      	nop

9000103c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000103c:	6880      	ldr	r0, [r0, #8]
9000103e:	4770      	bx	lr

90001040 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001040:	4770      	bx	lr
90001042:	bf00      	nop

90001044 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001044:	3004      	adds	r0, #4
{
90001046:	468c      	mov	ip, r1
    *data = videoInfo;
90001048:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000104a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000104e:	4770      	bx	lr

90001050 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001050:	4770      	bx	lr
90001052:	bf00      	nop

90001054 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001054:	b508      	push	{r3, lr}
    assert(0);
90001056:	4a03      	ldr	r2, [pc, #12]	@ (90001064 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001058:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
9000105c:	4b02      	ldr	r3, [pc, #8]	@ (90001068 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000105e:	4803      	ldr	r0, [pc, #12]	@ (9000106c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001060:	f025 feca 	bl	90026df8 <__assert_func>
90001064:	9002814c 	.word	0x9002814c
90001068:	90028148 	.word	0x90028148
9000106c:	900281a8 	.word	0x900281a8

90001070 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001070:	b510      	push	{r4, lr}
90001072:	4604      	mov	r4, r0
90001074:	2148      	movs	r1, #72	@ 0x48
90001076:	f025 fb47 	bl	90026708 <_ZdlPvj>
9000107a:	4620      	mov	r0, r4
9000107c:	bd10      	pop	{r4, pc}
9000107e:	bf00      	nop

90001080 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001082:	6803      	ldr	r3, [r0, #0]
90001084:	2901      	cmp	r1, #1
90001086:	4d30      	ldr	r5, [pc, #192]	@ (90001148 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001088:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000108a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000108c:	bf38      	it	cc
9000108e:	2101      	movcc	r1, #1
90001090:	42ab      	cmp	r3, r5
90001092:	460e      	mov	r6, r1
90001094:	d13f      	bne.n	90001116 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001096:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001098:	42a9      	cmp	r1, r5
9000109a:	d947      	bls.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000109c:	1e6b      	subs	r3, r5, #1
9000109e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010a0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a2:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010a6:	b338      	cbz	r0, 900010f8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010a8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010aa:	2b0f      	cmp	r3, #15
900010ac:	d940      	bls.n	90001130 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010ae:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010b0:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010b4:	68db      	ldr	r3, [r3, #12]
900010b6:	4631      	mov	r1, r6
900010b8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010ba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010bc:	2210      	movs	r2, #16
900010be:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010c0:	6803      	ldr	r3, [r0, #0]
900010c2:	691b      	ldr	r3, [r3, #16]
900010c4:	4798      	blx	r3
900010c6:	b198      	cbz	r0, 900010f0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010c8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ca:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010cc:	b1a3      	cbz	r3, 900010f8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010ce:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010d0:	7a93      	ldrb	r3, [r2, #10]
900010d2:	7a51      	ldrb	r1, [r2, #9]
900010d4:	041b      	lsls	r3, r3, #16
900010d6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010da:	7a11      	ldrb	r1, [r2, #8]
900010dc:	7ad2      	ldrb	r2, [r2, #11]
900010de:	430b      	orrs	r3, r1
900010e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010e6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e8:	3a04      	subs	r2, #4
900010ea:	441a      	add	r2, r3
900010ec:	61a2      	str	r2, [r4, #24]
}
900010ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010f0:	230d      	movs	r3, #13
900010f2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010f6:	e7e7      	b.n	900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010f8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010fc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010fe:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001100:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
90001102:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001104:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001106:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001108:	041b      	lsls	r3, r3, #16
9000110a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000110e:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001110:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001114:	e7e6      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90001116:	4798      	blx	r3
90001118:	4286      	cmp	r6, r0
9000111a:	d907      	bls.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
9000111c:	6823      	ldr	r3, [r4, #0]
9000111e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001120:	42ab      	cmp	r3, r5
90001122:	d00e      	beq.n	90001142 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001124:	4620      	mov	r0, r4
90001126:	4798      	blx	r3
90001128:	4605      	mov	r5, r0
9000112a:	e7b7      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000112c:	4635      	mov	r5, r6
9000112e:	e7b5      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001130:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001132:	4b06      	ldr	r3, [pc, #24]	@ (9000114c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001134:	4a06      	ldr	r2, [pc, #24]	@ (90001150 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001136:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001138:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000113c:	4805      	ldr	r0, [pc, #20]	@ (90001154 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000113e:	f025 fe5b 	bl	90026df8 <__assert_func>
    return videoInfo.number_of_frames;
90001142:	68a5      	ldr	r5, [r4, #8]
90001144:	e7aa      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001146:	bf00      	nop
90001148:	9000103d 	.word	0x9000103d
9000114c:	900281fc 	.word	0x900281fc
90001150:	90028210 	.word	0x90028210
90001154:	900281a8 	.word	0x900281a8

90001158 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001158:	6943      	ldr	r3, [r0, #20]
{
9000115a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000115e:	2b00      	cmp	r3, #0
90001160:	f000 80c1 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001164:	4605      	mov	r5, r0
    if (reader != 0)
90001166:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001168:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000116a:	2800      	cmp	r0, #0
9000116c:	f000 80a1 	beq.w	900012b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001170:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001172:	2b07      	cmp	r3, #7
90001174:	f240 80ac 	bls.w	900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001178:	6803      	ldr	r3, [r0, #0]
9000117a:	4621      	mov	r1, r4
9000117c:	68db      	ldr	r3, [r3, #12]
9000117e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001180:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001182:	2208      	movs	r2, #8
90001184:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001186:	6803      	ldr	r3, [r0, #0]
90001188:	691b      	ldr	r3, [r3, #16]
9000118a:	4798      	blx	r3
9000118c:	2800      	cmp	r0, #0
9000118e:	f000 808c 	beq.w	900012aa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001192:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001194:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001196:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001198:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000119a:	2800      	cmp	r0, #0
9000119c:	f000 808b 	beq.w	900012b6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011a0:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a2:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011a4:	18a1      	adds	r1, r4, r2
900011a6:	5ca2      	ldrb	r2, [r4, r2]
900011a8:	788c      	ldrb	r4, [r1, #2]
900011aa:	784e      	ldrb	r6, [r1, #1]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011b2:	4314      	orrs	r4, r2
900011b4:	78ca      	ldrb	r2, [r1, #3]
900011b6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011ba:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011bc:	f243 0630 	movw	r6, #12336	@ 0x3030
900011c0:	e03a      	b.n	90001238 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011c2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011c4:	2b07      	cmp	r3, #7
900011c6:	f240 8083 	bls.w	900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ca:	6803      	ldr	r3, [r0, #0]
900011cc:	4621      	mov	r1, r4
900011ce:	68db      	ldr	r3, [r3, #12]
900011d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011d4:	2208      	movs	r2, #8
900011d6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011d8:	6803      	ldr	r3, [r0, #0]
900011da:	691b      	ldr	r3, [r3, #16]
900011dc:	4798      	blx	r3
900011de:	b908      	cbnz	r0, 900011e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011e0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011e4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011e6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011e8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011ea:	2800      	cmp	r0, #0
900011ec:	d079      	beq.n	900012e2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011ee:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011f0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011f2:	18ca      	adds	r2, r1, r3
900011f4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f6:	7994      	ldrb	r4, [r2, #6]
900011f8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011fc:	0424      	lsls	r4, r4, #16
900011fe:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001202:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001206:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
9000120a:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000120c:	f892 8003 	ldrb.w	r8, [r2, #3]
90001210:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001214:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001218:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000121c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001220:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001224:	f246 3164 	movw	r1, #25444	@ 0x6364
90001228:	42b3      	cmp	r3, r6
9000122a:	bf08      	it	eq
9000122c:	428a      	cmpeq	r2, r1
9000122e:	bf0c      	ite	eq
90001230:	2301      	moveq	r3, #1
90001232:	2300      	movne	r3, #0
90001234:	d036      	beq.n	900012a4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001236:	69ab      	ldr	r3, [r5, #24]
90001238:	441c      	add	r4, r3
9000123a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000123c:	f104 0208 	add.w	r2, r4, #8
90001240:	429a      	cmp	r2, r3
90001242:	d22a      	bcs.n	9000129a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001244:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001246:	3409      	adds	r4, #9
        frameNumber++;
90001248:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000124a:	f024 0401 	bic.w	r4, r4, #1
9000124e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001252:	2800      	cmp	r0, #0
90001254:	d1b5      	bne.n	900011c2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001256:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001258:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000125a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000125e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001262:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001264:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001268:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000126c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001270:	188c      	adds	r4, r1, r2
        val |= d[0];
90001272:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001274:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001276:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000127a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000127e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001282:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001286:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000128a:	0424      	lsls	r4, r4, #16
9000128c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001290:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001294:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001298:	e7c4      	b.n	90001224 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000129a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000129c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000129e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012a0:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012a4:	4618      	mov	r0, r3
900012a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012aa:	230d      	movs	r3, #13
900012ac:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012b0:	e76f      	b.n	90001192 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012b2:	1d22      	adds	r2, r4, #4
900012b4:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012b6:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012b8:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012ba:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012bc:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012be:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012c0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012c2:	0424      	lsls	r4, r4, #16
900012c4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012c8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ca:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012ce:	e774      	b.n	900011ba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012d2:	4b08      	ldr	r3, [pc, #32]	@ (900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012d4:	4a08      	ldr	r2, [pc, #32]	@ (900012f8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012d6:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012dc:	4807      	ldr	r0, [pc, #28]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012de:	f025 fd8b 	bl	90026df8 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
900012e2:	461c      	mov	r4, r3
900012e4:	e7b7      	b.n	90001256 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012e6:	4b06      	ldr	r3, [pc, #24]	@ (90001300 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012e8:	21f6      	movs	r1, #246	@ 0xf6
900012ea:	4a06      	ldr	r2, [pc, #24]	@ (90001304 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012ec:	4803      	ldr	r0, [pc, #12]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ee:	f025 fd83 	bl	90026df8 <__assert_func>
900012f2:	bf00      	nop
900012f4:	900281fc 	.word	0x900281fc
900012f8:	90028210 	.word	0x90028210
900012fc:	900281a8 	.word	0x900281a8
90001300:	90028254 	.word	0x90028254
90001304:	900282a0 	.word	0x900282a0

90001308 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001308:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000130a:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000130c:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000130e:	4b0e      	ldr	r3, [pc, #56]	@ (90001348 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001310:	2001      	movs	r0, #1
90001312:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001314:	63e2      	str	r2, [r4, #60]	@ 0x3c
90001316:	6023      	str	r3, [r4, #0]
90001318:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000131c:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001320:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001324:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001328:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000132c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001330:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001334:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001338:	f00b fe56 	bl	9000cfe8 <osSemaphoreNew>
9000133c:	4b03      	ldr	r3, [pc, #12]	@ (9000134c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000133e:	4602      	mov	r2, r0
}
90001340:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001342:	601a      	str	r2, [r3, #0]
}
90001344:	bd10      	pop	{r4, pc}
90001346:	bf00      	nop
90001348:	900283f8 	.word	0x900283f8
9000134c:	240001dc 	.word	0x240001dc

90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001350:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001354:	2100      	movs	r1, #0
    if (reader != 0)
90001356:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001358:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000135a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000135c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001360:	2e00      	cmp	r6, #0
90001362:	f000 81b3 	beq.w	900016cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001366:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001368:	2b47      	cmp	r3, #71	@ 0x47
9000136a:	f240 8270 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000136e:	6833      	ldr	r3, [r6, #0]
90001370:	4630      	mov	r0, r6
90001372:	68db      	ldr	r3, [r3, #12]
90001374:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001376:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001378:	2248      	movs	r2, #72	@ 0x48
9000137a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000137c:	6803      	ldr	r3, [r0, #0]
9000137e:	691b      	ldr	r3, [r3, #16]
90001380:	4798      	blx	r3
90001382:	2800      	cmp	r0, #0
90001384:	f000 80b7 	beq.w	900014f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001388:	2300      	movs	r3, #0
    if (reader != 0)
9000138a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000138c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000138e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001390:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001392:	2e00      	cmp	r6, #0
90001394:	f000 819b 	beq.w	900016ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001398:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000139c:	2204      	movs	r2, #4
9000139e:	49c3      	ldr	r1, [pc, #780]	@ (900016ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013a0:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013a4:	4620      	mov	r0, r4
900013a6:	f025 ffcb 	bl	90027340 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013aa:	2800      	cmp	r0, #0
900013ac:	f040 825f 	bne.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013b0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013b4:	2204      	movs	r2, #4
900013b6:	49be      	ldr	r1, [pc, #760]	@ (900016b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013b8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013ba:	4448      	add	r0, r9
900013bc:	f025 ffc0 	bl	90027340 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013c0:	2800      	cmp	r0, #0
900013c2:	f040 8268 	bne.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013c6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ca:	2204      	movs	r2, #4
900013cc:	49b9      	ldr	r1, [pc, #740]	@ (900016b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013ce:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013d2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013d6:	f025 ffb3 	bl	90027340 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013da:	4680      	mov	r8, r0
900013dc:	2800      	cmp	r0, #0
900013de:	f040 8250 	bne.w	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e2:	7ca3      	ldrb	r3, [r4, #18]
900013e4:	7c62      	ldrb	r2, [r4, #17]
900013e6:	041b      	lsls	r3, r3, #16
900013e8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013ec:	7c22      	ldrb	r2, [r4, #16]
900013ee:	4313      	orrs	r3, r2
900013f0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013f2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013f6:	f000 8233 	beq.w	90001860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013fa:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013fe:	2204      	movs	r2, #4
90001400:	49ad      	ldr	r1, [pc, #692]	@ (900016b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
90001402:	4448      	add	r0, r9
90001404:	f025 ff9c 	bl	90027340 <strncmp>
    if (compare(offset, "hdrl", 4))
90001408:	2800      	cmp	r0, #0
9000140a:	d078      	beq.n	900014fe <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000140c:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000140e:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001412:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001416:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001418:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000141a:	2204      	movs	r2, #4
9000141c:	49a7      	ldr	r1, [pc, #668]	@ (900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000141e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001420:	f025 ff8e 	bl	90027340 <strncmp>
    if (compare(offset, "avih", 4))
90001424:	2800      	cmp	r0, #0
90001426:	f000 80e6 	beq.w	900015f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000142a:	2307      	movs	r3, #7
9000142c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001430:	f1ba 0f00 	cmp.w	sl, #0
90001434:	f000 8190 	beq.w	90001758 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001438:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000143a:	2b0b      	cmp	r3, #11
9000143c:	f240 8207 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001440:	f8da 3000 	ldr.w	r3, [sl]
90001444:	4621      	mov	r1, r4
90001446:	4650      	mov	r0, sl
90001448:	68db      	ldr	r3, [r3, #12]
9000144a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000144c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000144e:	220c      	movs	r2, #12
90001450:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001452:	6803      	ldr	r3, [r0, #0]
90001454:	691b      	ldr	r3, [r3, #16]
90001456:	4798      	blx	r3
90001458:	2800      	cmp	r0, #0
9000145a:	f000 8121 	beq.w	900016a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000145e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001462:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001464:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001466:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000146a:	f04f 090d 	mov.w	r9, #13
9000146e:	e003      	b.n	90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001470:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001474:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001476:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001478:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000147c:	2e00      	cmp	r6, #0
9000147e:	d052      	beq.n	90001526 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001480:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001484:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001486:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001488:	1afb      	subs	r3, r7, r3
9000148a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000148c:	f025 ff58 	bl	90027340 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001490:	2800      	cmp	r0, #0
90001492:	d051      	beq.n	90001538 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001494:	f1ba 0f00 	cmp.w	sl, #0
90001498:	f040 80a8 	bne.w	900015ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000149c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000149e:	42a3      	cmp	r3, r4
900014a0:	d94d      	bls.n	9000153e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014a2:	3404      	adds	r4, #4
    if (reader != 0)
900014a4:	b386      	cbz	r6, 90001508 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014a6:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014a8:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014ac:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014ae:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014b0:	eb01 0204 	add.w	r2, r1, r4
900014b4:	5d09      	ldrb	r1, [r1, r4]
900014b6:	7894      	ldrb	r4, [r2, #2]
900014b8:	7850      	ldrb	r0, [r2, #1]
900014ba:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014be:	78d2      	ldrb	r2, [r2, #3]
900014c0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014c4:	ea44 0401 	orr.w	r4, r4, r1
900014c8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014cc:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014ce:	f240 81be 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014d2:	6833      	ldr	r3, [r6, #0]
900014d4:	4621      	mov	r1, r4
900014d6:	4630      	mov	r0, r6
900014d8:	68db      	ldr	r3, [r3, #12]
900014da:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014de:	220c      	movs	r2, #12
900014e0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014e2:	6803      	ldr	r3, [r0, #0]
900014e4:	691b      	ldr	r3, [r3, #16]
900014e6:	4798      	blx	r3
900014e8:	2800      	cmp	r0, #0
900014ea:	d1c1      	bne.n	90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014ec:	f04f 0a0d 	mov.w	sl, #13
900014f0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014f4:	e7be      	b.n	90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014f6:	230d      	movs	r3, #13
900014f8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014fc:	e744      	b.n	90001388 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014fe:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001502:	f04f 0801 	mov.w	r8, #1
90001506:	e786      	b.n	90001416 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
90001508:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
9000150a:	1913      	adds	r3, r2, r4
        val |= d[0];
9000150c:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
9000150e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001510:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001512:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001514:	0424      	lsls	r4, r4, #16
90001516:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000151a:	4314      	orrs	r4, r2
        val |= d[3] << 24;
9000151c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001520:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001522:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001526:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001528:	2204      	movs	r2, #4
9000152a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000152c:	2600      	movs	r6, #0
9000152e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001530:	f025 ff06 	bl	90027340 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001534:	2800      	cmp	r0, #0
90001536:	d1ad      	bne.n	90001494 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001538:	f1ba 0f00 	cmp.w	sl, #0
9000153c:	d156      	bne.n	900015ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000153e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001542:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001544:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001546:	2e00      	cmp	r6, #0
90001548:	f000 8118 	beq.w	9000177c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000154c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000154e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001550:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001554:	f104 0e02 	add.w	lr, r4, #2
90001558:	f104 0c01 	add.w	ip, r4, #1
9000155c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001560:	1ce0      	adds	r0, r4, #3
90001562:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001566:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001568:	f811 900c 	ldrb.w	r9, [r1, ip]
9000156c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001570:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001574:	ea43 0308 	orr.w	r3, r3, r8
90001578:	f811 8000 	ldrb.w	r8, [r1, r0]
9000157c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001580:	443b      	add	r3, r7
90001582:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001584:	f811 300e 	ldrb.w	r3, [r1, lr]
90001588:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000158c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001590:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001594:	5c09      	ldrb	r1, [r1, r0]
90001596:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000159a:	ea44 040c 	orr.w	r4, r4, ip
9000159e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015a2:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015a4:	f240 8153 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015a8:	6833      	ldr	r3, [r6, #0]
900015aa:	4621      	mov	r1, r4
900015ac:	4630      	mov	r0, r6
900015ae:	68db      	ldr	r3, [r3, #12]
900015b0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015b2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015b4:	2204      	movs	r2, #4
900015b6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015b8:	6803      	ldr	r3, [r0, #0]
900015ba:	691b      	ldr	r3, [r3, #16]
900015bc:	4798      	blx	r3
900015be:	2800      	cmp	r0, #0
900015c0:	f000 80cd 	beq.w	9000175e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015c4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015c6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015c8:	2b00      	cmp	r3, #0
900015ca:	f000 816e 	beq.w	900018aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015ce:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015d0:	2204      	movs	r2, #4
900015d2:	493b      	ldr	r1, [pc, #236]	@ (900016c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015d4:	f025 feb4 	bl	90027340 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015d8:	2800      	cmp	r0, #0
900015da:	f040 80ca 	bne.w	90001772 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015de:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015e0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015e2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015e4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015e6:	622b      	str	r3, [r5, #32]
}
900015e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015ec:	230a      	movs	r3, #10
900015ee:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015f6:	f1b8 0f00 	cmp.w	r8, #0
900015fa:	f43f af19 	beq.w	90001430 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015fe:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
90001602:	f1ba 0f00 	cmp.w	sl, #0
90001606:	f000 80d4 	beq.w	900017b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
9000160a:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000160c:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001610:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001612:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001614:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001618:	f812 8001 	ldrb.w	r8, [r2, r1]
9000161c:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001620:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001624:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001628:	4438      	add	r0, r7
9000162a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000162c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001630:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001632:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001636:	041b      	lsls	r3, r3, #16
90001638:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000163c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001640:	ea43 0308 	orr.w	r3, r3, r8
90001644:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001648:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000164a:	fbac c303 	umull	ip, r3, ip, r3
9000164e:	099b      	lsrs	r3, r3, #6
90001650:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001652:	78bb      	ldrb	r3, [r7, #2]
90001654:	f897 e001 	ldrb.w	lr, [r7, #1]
90001658:	041b      	lsls	r3, r3, #16
9000165a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000165e:	78ff      	ldrb	r7, [r7, #3]
90001660:	1850      	adds	r0, r2, r1
90001662:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001666:	ea43 030c 	orr.w	r3, r3, ip
9000166a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000166e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001670:	7883      	ldrb	r3, [r0, #2]
90001672:	7847      	ldrb	r7, [r0, #1]
90001674:	041b      	lsls	r3, r3, #16
90001676:	5c51      	ldrb	r1, [r2, r1]
90001678:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000167c:	430b      	orrs	r3, r1
9000167e:	78c1      	ldrb	r1, [r0, #3]
90001680:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001684:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001686:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001688:	788b      	ldrb	r3, [r1, #2]
9000168a:	7848      	ldrb	r0, [r1, #1]
9000168c:	041b      	lsls	r3, r3, #16
9000168e:	5d92      	ldrb	r2, [r2, r6]
90001690:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001694:	4313      	orrs	r3, r2
90001696:	78ca      	ldrb	r2, [r1, #3]
90001698:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000169c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000169e:	e6cb      	b.n	90001438 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016a0:	230d      	movs	r3, #13
900016a2:	469a      	mov	sl, r3
900016a4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016a8:	e6db      	b.n	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016aa:	bf00      	nop
900016ac:	900282d4 	.word	0x900282d4
900016b0:	9002838c 	.word	0x9002838c
900016b4:	90028384 	.word	0x90028384
900016b8:	90028358 	.word	0x90028358
900016bc:	9002836c 	.word	0x9002836c
900016c0:	9002837c 	.word	0x9002837c
900016c4:	90028374 	.word	0x90028374
900016c8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016cc:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016ce:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016d2:	2204      	movs	r2, #4
900016d4:	4976      	ldr	r1, [pc, #472]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016d6:	eb09 0007 	add.w	r0, r9, r7
900016da:	f025 fe31 	bl	90027340 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016de:	2800      	cmp	r0, #0
900016e0:	f040 80c5 	bne.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016e4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016e8:	2204      	movs	r2, #4
900016ea:	4972      	ldr	r1, [pc, #456]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016ec:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016ee:	4448      	add	r0, r9
900016f0:	f025 fe26 	bl	90027340 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016f4:	2800      	cmp	r0, #0
900016f6:	f040 80ce 	bne.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016fa:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016fe:	2204      	movs	r2, #4
90001700:	496d      	ldr	r1, [pc, #436]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90001702:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
90001706:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000170a:	f025 fe19 	bl	90027340 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000170e:	4680      	mov	r8, r0
90001710:	2800      	cmp	r0, #0
90001712:	f040 80b6 	bne.w	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001716:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000171a:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
9000171e:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001722:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001724:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001726:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001728:	0424      	lsls	r4, r4, #16
9000172a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000172e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001730:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001734:	f000 8094 	beq.w	90001860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001738:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000173c:	2204      	movs	r2, #4
9000173e:	495f      	ldr	r1, [pc, #380]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001740:	4448      	add	r0, r9
90001742:	f025 fdfd 	bl	90027340 <strncmp>
    if (compare(offset, "hdrl", 4))
90001746:	b970      	cbnz	r0, 90001766 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001748:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000174c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001750:	4448      	add	r0, r9
90001752:	f04f 0a00 	mov.w	sl, #0
90001756:	e65f      	b.n	90001418 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001758:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000175c:	e683      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000175e:	230d      	movs	r3, #13
90001760:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001764:	e72e      	b.n	900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001766:	2306      	movs	r3, #6
    offset += 4;
90001768:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000176c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001770:	e7ee      	b.n	90001750 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001772:	230b      	movs	r3, #11
90001774:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001778:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000177c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000177e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001780:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001782:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001784:	7893      	ldrb	r3, [r2, #2]
90001786:	041b      	lsls	r3, r3, #16
90001788:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000178c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000178e:	78d1      	ldrb	r1, [r2, #3]
90001790:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001794:	443b      	add	r3, r7
90001796:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001798:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000179a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000179c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000179e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017a0:	0424      	lsls	r4, r4, #16
900017a2:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017a6:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017a8:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017ac:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017ae:	4420      	add	r0, r4
900017b0:	e70e      	b.n	900015d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017b2:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017b4:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017b8:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017bc:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017c0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017c4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017c8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017cc:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017ce:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017d2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017d6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017da:	041b      	lsls	r3, r3, #16
900017dc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017e0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017e4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017e8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017ec:	fbae e303 	umull	lr, r3, lr, r3
900017f0:	099b      	lsrs	r3, r3, #6
900017f2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017f4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017f8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017fc:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017fe:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001800:	041b      	lsls	r3, r3, #16
90001802:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001806:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
9000180a:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
9000180e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001812:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001814:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001816:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000181a:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
9000181e:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001822:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001826:	041b      	lsls	r3, r3, #16
90001828:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000182c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001830:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001834:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001836:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001838:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000183a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000183c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000183e:	041b      	lsls	r3, r3, #16
90001840:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001844:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001846:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000184a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000184c:	e60b      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000184e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001850:	4b1b      	ldr	r3, [pc, #108]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001852:	4a1c      	ldr	r2, [pc, #112]	@ (900018c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001854:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001856:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000185a:	481b      	ldr	r0, [pc, #108]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000185c:	f025 facc 	bl	90026df8 <__assert_func>
    assert(aviListSize);
90001860:	4b1a      	ldr	r3, [pc, #104]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001862:	f240 1153 	movw	r1, #339	@ 0x153
90001866:	4a1a      	ldr	r2, [pc, #104]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001868:	4817      	ldr	r0, [pc, #92]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000186a:	f025 fac5 	bl	90026df8 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000186e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001870:	4b18      	ldr	r3, [pc, #96]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001872:	4a17      	ldr	r2, [pc, #92]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001874:	f44f 719f 	mov.w	r1, #318	@ 0x13e
        lastError = AVI_ERROR_NOT_RIFF;
90001878:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000187c:	4812      	ldr	r0, [pc, #72]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000187e:	f025 fabb 	bl	90026df8 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001882:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001884:	4b14      	ldr	r3, [pc, #80]	@ (900018d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001886:	4a12      	ldr	r2, [pc, #72]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001888:	f240 114d 	movw	r1, #333	@ 0x14d
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000188c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001890:	480d      	ldr	r0, [pc, #52]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001892:	f025 fab1 	bl	90026df8 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001896:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001898:	4b10      	ldr	r3, [pc, #64]	@ (900018dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000189a:	4a0d      	ldr	r2, [pc, #52]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000189c:	f44f 71a3 	mov.w	r1, #326	@ 0x146
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018a0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018a4:	4808      	ldr	r0, [pc, #32]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018a6:	f025 faa7 	bl	90026df8 <__assert_func>
        src = (const char*)movieData + offset;
900018aa:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018ac:	4420      	add	r0, r4
900018ae:	e68f      	b.n	900015d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018b0:	900282d4 	.word	0x900282d4
900018b4:	9002838c 	.word	0x9002838c
900018b8:	90028384 	.word	0x90028384
900018bc:	90028358 	.word	0x90028358
900018c0:	900281fc 	.word	0x900281fc
900018c4:	90028210 	.word	0x90028210
900018c8:	900281a8 	.word	0x900281a8
900018cc:	90028360 	.word	0x90028360
900018d0:	900282f8 	.word	0x900282f8
900018d4:	900282dc 	.word	0x900282dc
900018d8:	90028340 	.word	0x90028340
900018dc:	90028328 	.word	0x90028328
900018e0:	10624dd3 	.word	0x10624dd3

900018e4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018e4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018e6:	2400      	movs	r4, #0
    movieLength = length;
900018e8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018ec:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018ee:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018f2:	f7ff bd2d 	b.w	90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018f6:	bf00      	nop

900018f8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018f8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018fa:	680b      	ldr	r3, [r1, #0]
{
900018fc:	4604      	mov	r4, r0
    movieData = 0;
900018fe:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001900:	4608      	mov	r0, r1
90001902:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90001904:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90001908:	4798      	blx	r3
9000190a:	4603      	mov	r3, r0
    readVideoHeader();
9000190c:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
9000190e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001914:	f7ff bd1c 	b.w	90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001918 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001918:	b5f0      	push	{r4, r5, r6, r7, lr}
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
9000191a:	2400      	movs	r4, #0
9000191c:	4d20      	ldr	r5, [pc, #128]	@ (900019a0 <JPEG_Decode_DMA+0x88>)
    {
9000191e:	461e      	mov	r6, r3
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
90001920:	4b20      	ldr	r3, [pc, #128]	@ (900019a4 <JPEG_Decode_DMA+0x8c>)
        JPEG_output_is_paused = 0;
90001922:	602c      	str	r4, [r5, #0]
    {
90001924:	b083      	sub	sp, #12
        JPEG_OUT_Read_BufferIndex = 0;
90001926:	4d20      	ldr	r5, [pc, #128]	@ (900019a8 <JPEG_Decode_DMA+0x90>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001928:	4f20      	ldr	r7, [pc, #128]	@ (900019ac <JPEG_Decode_DMA+0x94>)
        JPEG_OUT_Read_BufferIndex = 0;
9000192a:	602c      	str	r4, [r5, #0]
        MCU_BlockIndex = 0;
9000192c:	4d20      	ldr	r5, [pc, #128]	@ (900019b0 <JPEG_Decode_DMA+0x98>)
        JPEG_OUT_Write_BufferIndex = 0;
9000192e:	601c      	str	r4, [r3, #0]
        MCU_BlockIndex = 0;
90001930:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001932:	4d20      	ldr	r5, [pc, #128]	@ (900019b4 <JPEG_Decode_DMA+0x9c>)
90001934:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001936:	68fd      	ldr	r5, [r7, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001938:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000193a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000193e:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001940:	ebb7 0c04 	subs.w	ip, r7, r4
        FrameBufferAddress = output;
90001944:	4f1c      	ldr	r7, [pc, #112]	@ (900019b8 <JPEG_Decode_DMA+0xa0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001946:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000194a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000194e:	bf18      	it	ne
90001950:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001954:	9500      	str	r5, [sp, #0]
        FrameBufferAddress = output;
90001956:	603e      	str	r6, [r7, #0]
        JPEG_InputImageIndex = 0;
90001958:	4e18      	ldr	r6, [pc, #96]	@ (900019bc <JPEG_Decode_DMA+0xa4>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000195a:	4d19      	ldr	r5, [pc, #100]	@ (900019c0 <JPEG_Decode_DMA+0xa8>)
        JPEG_InputImageIndex = 0;
9000195c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000195e:	4e19      	ldr	r6, [pc, #100]	@ (900019c4 <JPEG_Decode_DMA+0xac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001960:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001964:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageAddress = (uint32_t)input;
90001968:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196a:	4e17      	ldr	r6, [pc, #92]	@ (900019c8 <JPEG_Decode_DMA+0xb0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000196c:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196e:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001970:	2201      	movs	r2, #1
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001972:	702c      	strb	r4, [r5, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001974:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001976:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000197a:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000197c:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000197e:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001980:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
90001982:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001984:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001988:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
9000198c:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001990:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001994:	f007 fe08 	bl	900095a8 <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001998:	4620      	mov	r0, r4
9000199a:	b003      	add	sp, #12
9000199c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000199e:	bf00      	nop
900019a0:	24005df8 	.word	0x24005df8
900019a4:	24005dec 	.word	0x24005dec
900019a8:	240001d8 	.word	0x240001d8
900019ac:	24000194 	.word	0x24000194
900019b0:	240001e0 	.word	0x240001e0
900019b4:	24005de8 	.word	0x24005de8
900019b8:	24005e0c 	.word	0x24005e0c
900019bc:	24005e08 	.word	0x24005e08
900019c0:	24000004 	.word	0x24000004
900019c4:	24005e00 	.word	0x24005e00
900019c8:	24005e04 	.word	0x24005e04

900019cc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019d0:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019d2:	2402      	movs	r4, #2
900019d4:	483d      	ldr	r0, [pc, #244]	@ (90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x100>)
900019d6:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019d8:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019da:	0725      	lsls	r5, r4, #28
900019dc:	d002      	beq.n	900019e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019de:	f024 040f 	bic.w	r4, r4, #15
900019e2:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019e4:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019e6:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019e8:	4d39      	ldr	r5, [pc, #228]	@ (90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019ea:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019ec:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019f0:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90001aec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>
900019f4:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019f6:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019f8:	4f36      	ldr	r7, [pc, #216]	@ (90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019fa:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019fe:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 90001af0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>
90001a02:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a06:	bf18      	it	ne
90001a08:	f1c4 0410 	rsbne	r4, r4, #16
90001a0c:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a0e:	4832      	ldr	r0, [pc, #200]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a10:	f7ff ff82 	bl	90001918 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a14:	4c31      	ldr	r4, [pc, #196]	@ (90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a16:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a18:	4e31      	ldr	r6, [pc, #196]	@ (90001ae0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a1a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a1c:	f8da 3000 	ldr.w	r3, [sl]
90001a20:	b10b      	cbz	r3, 90001a26 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5a>
90001a22:	6833      	ldr	r3, [r6, #0]
90001a24:	bb6b      	cbnz	r3, 90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a26:	6828      	ldr	r0, [r5, #0]
90001a28:	7a03      	ldrb	r3, [r0, #8]
90001a2a:	b93b      	cbnz	r3, 90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
90001a2c:	4b2d      	ldr	r3, [pc, #180]	@ (90001ae4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a2e:	681b      	ldr	r3, [r3, #0]
90001a30:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a34:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a38:	2b01      	cmp	r3, #1
90001a3a:	d03b      	beq.n	90001ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe8>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a3c:	683b      	ldr	r3, [r7, #0]
90001a3e:	2b01      	cmp	r3, #1
90001a40:	d00d      	beq.n	90001a5e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x92>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a42:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a44:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a46:	6823      	ldr	r3, [r4, #0]
90001a48:	2b02      	cmp	r3, #2
90001a4a:	d024      	beq.n	90001a96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xca>
        } while (JpegProcessing_End != 1);
90001a4c:	6823      	ldr	r3, [r4, #0]
90001a4e:	2b01      	cmp	r3, #1
90001a50:	d1e4      	bne.n	90001a1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a52:	2300      	movs	r3, #0
90001a54:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a58:	6033      	str	r3, [r6, #0]
}
90001a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a5e:	f8d9 3000 	ldr.w	r3, [r9]
90001a62:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a66:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a6a:	2b00      	cmp	r3, #0
90001a6c:	d1e9      	bne.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
90001a6e:	f8da 3000 	ldr.w	r3, [sl]
90001a72:	2b00      	cmp	r3, #0
90001a74:	d1e5      	bne.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a76:	2102      	movs	r1, #2
90001a78:	4817      	ldr	r0, [pc, #92]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_output_is_paused = 0;
90001a7a:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a7c:	f007 ff44 	bl	90009908 <HAL_JPEG_Resume>
90001a80:	e7df      	b.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a82:	4815      	ldr	r0, [pc, #84]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a84:	f008 fcfe 	bl	9000a484 <HAL_JPEG_GetState>
90001a88:	2804      	cmp	r0, #4
90001a8a:	d01a      	beq.n	90001ac2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf6>
        return 1;
90001a8c:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a8e:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a90:	6823      	ldr	r3, [r4, #0]
90001a92:	2b02      	cmp	r3, #2
90001a94:	d1da      	bne.n	90001a4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x80>
                SEM_WAIT(semDecodingDone);
90001a96:	4b14      	ldr	r3, [pc, #80]	@ (90001ae8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a98:	f04f 31ff 	mov.w	r1, #4294967295
90001a9c:	6818      	ldr	r0, [r3, #0]
90001a9e:	f00b faef 	bl	9000d080 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001aa2:	6823      	ldr	r3, [r4, #0]
90001aa4:	2b01      	cmp	r3, #1
90001aa6:	d1b9      	bne.n	90001a1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001aa8:	2300      	movs	r3, #0
90001aaa:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aae:	6033      	str	r3, [r6, #0]
}
90001ab0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ab4:	6833      	ldr	r3, [r6, #0]
90001ab6:	2b00      	cmp	r3, #0
90001ab8:	d1c0      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
        DMA2D_reference->start();
90001aba:	6803      	ldr	r3, [r0, #0]
90001abc:	691b      	ldr	r3, [r3, #16]
90001abe:	4798      	blx	r3
90001ac0:	e7bc      	b.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
            HAL_JPEG_Abort(hjpeg);
90001ac2:	4805      	ldr	r0, [pc, #20]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001ac4:	f007 fdee 	bl	900096a4 <HAL_JPEG_Abort>
90001ac8:	e7e0      	b.n	90001a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90001aca:	bf00      	nop
90001acc:	24000194 	.word	0x24000194
90001ad0:	24005df0 	.word	0x24005df0
90001ad4:	24005df8 	.word	0x24005df8
90001ad8:	24007a2c 	.word	0x24007a2c
90001adc:	24005df4 	.word	0x24005df4
90001ae0:	240001d4 	.word	0x240001d4
90001ae4:	240001d8 	.word	0x240001d8
90001ae8:	240001dc 	.word	0x240001dc
90001aec:	24005dfc 	.word	0x24005dfc
90001af0:	24005dec 	.word	0x24005dec
90001af4:	24000004 	.word	0x24000004

90001af8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001af8:	6943      	ldr	r3, [r0, #20]
{
90001afa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001afe:	2b00      	cmp	r3, #0
90001b00:	f000 80ad 	beq.w	90001c5e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b04:	4604      	mov	r4, r0
    if (reader != 0)
90001b06:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b08:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b0a:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b0c:	2800      	cmp	r0, #0
90001b0e:	d05f      	beq.n	90001bd0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b10:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b12:	2b07      	cmp	r3, #7
90001b14:	f240 80a9 	bls.w	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b18:	6803      	ldr	r3, [r0, #0]
90001b1a:	4629      	mov	r1, r5
90001b1c:	68db      	ldr	r3, [r3, #12]
90001b1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b20:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b22:	2208      	movs	r2, #8
90001b24:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b26:	6803      	ldr	r3, [r0, #0]
90001b28:	691b      	ldr	r3, [r3, #16]
90001b2a:	4798      	blx	r3
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d04a      	beq.n	90001bc6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b30:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b34:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b38:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b3a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b3c:	2800      	cmp	r0, #0
90001b3e:	d046      	beq.n	90001bce <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b40:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b42:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b46:	1b52      	subs	r2, r2, r5
90001b48:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b4a:	eb03 070c 	add.w	r7, r3, ip
90001b4e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b52:	eb03 0805 	add.w	r8, r3, r5
90001b56:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b5a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b5e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b62:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b66:	78bd      	ldrb	r5, [r7, #2]
90001b68:	78ff      	ldrb	r7, [r7, #3]
90001b6a:	042d      	lsls	r5, r5, #16
90001b6c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b70:	ea45 050e 	orr.w	r5, r5, lr
90001b74:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b78:	189f      	adds	r7, r3, r2
90001b7a:	5c9b      	ldrb	r3, [r3, r2]
90001b7c:	787a      	ldrb	r2, [r7, #1]
90001b7e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b82:	eb01 0e05 	add.w	lr, r1, r5
90001b86:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b88:	f10e 0208 	add.w	r2, lr, #8
90001b8c:	429a      	cmp	r2, r3
90001b8e:	d213      	bcs.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b90:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b94:	459c      	cmp	ip, r3
90001b96:	d138      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b98:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b9c:	429f      	cmp	r7, r3
90001b9e:	d134      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001ba0:	2d00      	cmp	r5, #0
90001ba2:	d136      	bne.n	90001c12 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba4:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001ba6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba8:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bac:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bae:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bb0:	d002      	beq.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bb2:	2001      	movs	r0, #1
}
90001bb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bb8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bba:	6a23      	ldr	r3, [r4, #32]
90001bbc:	2000      	movs	r0, #0
        frameNumber = 1;
90001bbe:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
90001bc0:	61a3      	str	r3, [r4, #24]
}
90001bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001bc6:	230d      	movs	r3, #13
90001bc8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bcc:	e7b0      	b.n	90001b30 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001bce:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bd0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bd2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bd4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bd6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bd8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bda:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bde:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001be0:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001be2:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001be4:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001be8:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bea:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bec:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bee:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001bf2:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001bf6:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001bf8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bfa:	042d      	lsls	r5, r5, #16
90001bfc:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c00:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c02:	2000      	movs	r0, #0
90001c04:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c08:	e7bb      	b.n	90001b82 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c0a:	2d00      	cmp	r5, #0
90001c0c:	bf18      	it	ne
90001c0e:	4672      	movne	r2, lr
90001c10:	e7c8      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c12:	f101 0708 	add.w	r7, r1, #8
90001c16:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c18:	b1f0      	cbz	r0, 90001c58 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c1c:	429d      	cmp	r5, r3
90001c1e:	d824      	bhi.n	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c20:	6803      	ldr	r3, [r0, #0]
90001c22:	4639      	mov	r1, r7
90001c24:	68db      	ldr	r3, [r3, #12]
90001c26:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c28:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c2a:	462a      	mov	r2, r5
90001c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c2e:	6803      	ldr	r3, [r0, #0]
90001c30:	691b      	ldr	r3, [r3, #16]
90001c32:	4798      	blx	r3
90001c34:	b910      	cbnz	r0, 90001c3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c36:	230d      	movs	r3, #13
90001c38:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c3c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c3e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c40:	b126      	cbz	r6, 90001c4c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c42:	4633      	mov	r3, r6
90001c44:	462a      	mov	r2, r5
90001c46:	4620      	mov	r0, r4
90001c48:	f7ff fec0 	bl	900019cc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c4c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c50:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c52:	442a      	add	r2, r5
            frameNumber++;
90001c54:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c56:	e7a5      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c58:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c5a:	4439      	add	r1, r7
90001c5c:	e7f0      	b.n	90001c40 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c5e:	4b07      	ldr	r3, [pc, #28]	@ (90001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c60:	21c2      	movs	r1, #194	@ 0xc2
90001c62:	4a07      	ldr	r2, [pc, #28]	@ (90001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c64:	4807      	ldr	r0, [pc, #28]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c66:	f025 f8c7 	bl	90026df8 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c6a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c6c:	4b06      	ldr	r3, [pc, #24]	@ (90001c88 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c6e:	4a07      	ldr	r2, [pc, #28]	@ (90001c8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c70:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c72:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c76:	4803      	ldr	r0, [pc, #12]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c78:	f025 f8be 	bl	90026df8 <__assert_func>
90001c7c:	90028254 	.word	0x90028254
90001c80:	90028394 	.word	0x90028394
90001c84:	900281a8 	.word	0x900281a8
90001c88:	900281fc 	.word	0x900281fc
90001c8c:	90028210 	.word	0x90028210

90001c90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c94:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c96:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c9a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c9c:	460e      	mov	r6, r1
90001c9e:	4690      	mov	r8, r2
90001ca0:	461f      	mov	r7, r3
    if (reader != 0)
90001ca2:	2800      	cmp	r0, #0
90001ca4:	f000 80f5 	beq.w	90001e92 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        if (length > aviBufferLength)
90001ca8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001caa:	2b07      	cmp	r3, #7
90001cac:	f240 8106 	bls.w	90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001cb0:	6803      	ldr	r3, [r0, #0]
90001cb2:	4649      	mov	r1, r9
90001cb4:	68db      	ldr	r3, [r3, #12]
90001cb6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cb8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cba:	2208      	movs	r2, #8
90001cbc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cbe:	6803      	ldr	r3, [r0, #0]
90001cc0:	691b      	ldr	r3, [r3, #16]
90001cc2:	4798      	blx	r3
90001cc4:	2800      	cmp	r0, #0
90001cc6:	f000 80af 	beq.w	90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cca:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001ccc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cce:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cd0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cd4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cd8:	2800      	cmp	r0, #0
90001cda:	f000 80f8 	beq.w	90001ece <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23e>
        const uint32_t index = offset - aviBufferStartOffset;
90001cde:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001ce2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001ce4:	1899      	adds	r1, r3, r2
90001ce6:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001ce8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cea:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cee:	f891 c001 	ldrb.w	ip, [r1, #1]
90001cf2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001cf6:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cfa:	ea49 0902 	orr.w	r9, r9, r2
90001cfe:	78ca      	ldrb	r2, [r1, #3]
90001d00:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d04:	454b      	cmp	r3, r9
90001d06:	f0c0 80d9 	bcc.w	90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001d0a:	6803      	ldr	r3, [r0, #0]
90001d0c:	4629      	mov	r1, r5
90001d0e:	68db      	ldr	r3, [r3, #12]
90001d10:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d12:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d14:	464a      	mov	r2, r9
90001d16:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d18:	6803      	ldr	r3, [r0, #0]
90001d1a:	691b      	ldr	r3, [r3, #16]
90001d1c:	4798      	blx	r3
90001d1e:	2800      	cmp	r0, #0
90001d20:	d07e      	beq.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x190>
        return aviBuffer;
90001d22:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d24:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d26:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d2a:	2302      	movs	r3, #2
90001d2c:	4869      	ldr	r0, [pc, #420]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d2e:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d32:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d34:	d16f      	bne.n	90001e16 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x186>
90001d36:	4662      	mov	r2, ip
90001d38:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d3a:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d3c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d3e:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d40:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d44:	60c3      	str	r3, [r0, #12]
90001d46:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d48:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d4c:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d4e:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d50:	6143      	str	r3, [r0, #20]
90001d52:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d54:	f003 030f 	and.w	r3, r3, #15
90001d58:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d5a:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d5c:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d5e:	b236      	sxth	r6, r6
90001d60:	bf28      	it	cs
90001d62:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d64:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d68:	f002 020f 	and.w	r2, r2, #15
90001d6c:	f8df a194 	ldr.w	sl, [pc, #404]	@ 90001f04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d70:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d74:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d76:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d78:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d7a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d7c:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d80:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d84:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d86:	eba3 030c 	sub.w	r3, r3, ip
90001d8a:	62c3      	str	r3, [r0, #44]	@ 0x2c
90001d8c:	6923      	ldr	r3, [r4, #16]
90001d8e:	429e      	cmp	r6, r3
90001d90:	bf28      	it	cs
90001d92:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d94:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d98:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d9c:	bf18      	it	ne
90001d9e:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001da2:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001da4:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001da8:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001daa:	6385      	str	r5, [r0, #56]	@ 0x38
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dac:	4643      	mov	r3, r8
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dae:	bf18      	it	ne
90001db0:	f1c6 0610 	rsbne	r6, r6, #16
    DMA2D_reference = dma;
90001db4:	4d48      	ldr	r5, [pc, #288]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001db6:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 90001f0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dba:	63c6      	str	r6, [r0, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dbc:	4847      	ldr	r0, [pc, #284]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001dbe:	f7ff fdab 	bl	90001918 <JPEG_Decode_DMA>
    FrameBufferWidth = framebuffer_width;
90001dc2:	4b47      	ldr	r3, [pc, #284]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    DMA2D_reference = dma;
90001dc4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    FrameBufferWidth = framebuffer_width;
90001dc6:	601f      	str	r7, [r3, #0]
90001dc8:	4e46      	ldr	r6, [pc, #280]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
90001dca:	4c47      	ldr	r4, [pc, #284]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dcc:	4f47      	ldr	r7, [pc, #284]	@ (90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
    DMA2D_reference = dma;
90001dce:	602a      	str	r2, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001dd0:	f8da 3000 	ldr.w	r3, [sl]
90001dd4:	b113      	cbz	r3, 90001ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x14c>
90001dd6:	6833      	ldr	r3, [r6, #0]
90001dd8:	2b00      	cmp	r3, #0
90001dda:	d13b      	bne.n	90001e54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ddc:	6828      	ldr	r0, [r5, #0]
90001dde:	7a03      	ldrb	r3, [r0, #8]
90001de0:	b93b      	cbnz	r3, 90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
90001de2:	4b43      	ldr	r3, [pc, #268]	@ (90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001de4:	681b      	ldr	r3, [r3, #0]
90001de6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dea:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dee:	2b01      	cmp	r3, #1
90001df0:	d044      	beq.n	90001e7c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001df2:	683b      	ldr	r3, [r7, #0]
90001df4:	2b01      	cmp	r3, #1
90001df6:	d01b      	beq.n	90001e30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    return 2;
90001df8:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dfa:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001dfc:	6823      	ldr	r3, [r4, #0]
90001dfe:	2b02      	cmp	r3, #2
90001e00:	d032      	beq.n	90001e68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
    } while (JpegProcessing_End != 1);
90001e02:	6823      	ldr	r3, [r4, #0]
90001e04:	2b01      	cmp	r3, #1
90001e06:	d1e3      	bne.n	90001dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    Jpeg_HWDecodingEnd = 0;
90001e08:	2300      	movs	r3, #0
}
90001e0a:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e0c:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e10:	6033      	str	r3, [r6, #0]
}
90001e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e16:	f02c 030f 	bic.w	r3, ip, #15
90001e1a:	3310      	adds	r3, #16
90001e1c:	461a      	mov	r2, r3
90001e1e:	e78c      	b.n	90001d3a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xaa>
            lastError = AVI_ERROR_EOF_REACHED;
90001e20:	230d      	movs	r3, #13
90001e22:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e26:	e77c      	b.n	90001d22 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x92>
90001e28:	230d      	movs	r3, #13
90001e2a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e2e:	e74c      	b.n	90001cca <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e30:	f8d9 3000 	ldr.w	r3, [r9]
90001e34:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e38:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e3c:	2b00      	cmp	r3, #0
90001e3e:	d1db      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
90001e40:	f8da 3000 	ldr.w	r3, [sl]
90001e44:	2b00      	cmp	r3, #0
90001e46:	d1d7      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e48:	2102      	movs	r1, #2
90001e4a:	4824      	ldr	r0, [pc, #144]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
        JPEG_output_is_paused = 0;
90001e4c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e4e:	f007 fd5b 	bl	90009908 <HAL_JPEG_Resume>
90001e52:	e7d1      	b.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e54:	4821      	ldr	r0, [pc, #132]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e56:	f008 fb15 	bl	9000a484 <HAL_JPEG_GetState>
90001e5a:	2804      	cmp	r0, #4
90001e5c:	d015      	beq.n	90001e8a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        return 1;
90001e5e:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e60:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e62:	6823      	ldr	r3, [r4, #0]
90001e64:	2b02      	cmp	r3, #2
90001e66:	d1cc      	bne.n	90001e02 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x172>
            SEM_WAIT(semDecodingDone);
90001e68:	4b22      	ldr	r3, [pc, #136]	@ (90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
90001e6a:	f04f 31ff 	mov.w	r1, #4294967295
90001e6e:	6818      	ldr	r0, [r3, #0]
90001e70:	f00b f906 	bl	9000d080 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e74:	6823      	ldr	r3, [r4, #0]
90001e76:	2b01      	cmp	r3, #1
90001e78:	d1aa      	bne.n	90001dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
90001e7a:	e7c5      	b.n	90001e08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x178>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e7c:	6833      	ldr	r3, [r6, #0]
90001e7e:	2b00      	cmp	r3, #0
90001e80:	d1b7      	bne.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
        DMA2D_reference->start();
90001e82:	6803      	ldr	r3, [r0, #0]
90001e84:	691b      	ldr	r3, [r3, #16]
90001e86:	4798      	blx	r3
90001e88:	e7b3      	b.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
            HAL_JPEG_Abort(hjpeg);
90001e8a:	4814      	ldr	r0, [pc, #80]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e8c:	f007 fc0a 	bl	900096a4 <HAL_JPEG_Abort>
90001e90:	e7e5      	b.n	90001e5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e92:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e96:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e98:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e9c:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e9e:	4401      	add	r1, r0
        val |= d[0];
90001ea0:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001ea2:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ea4:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ea8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001eaa:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001eae:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001eb2:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001eb6:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001eba:	e734      	b.n	90001d26 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x96>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ebc:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001ebe:	4b0e      	ldr	r3, [pc, #56]	@ (90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001ec0:	4a0e      	ldr	r2, [pc, #56]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001ec2:	21b0      	movs	r1, #176	@ 0xb0
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ec4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001ec8:	480d      	ldr	r0, [pc, #52]	@ (90001f00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eca:	f024 ff95 	bl	90026df8 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ece:	4691      	mov	r9, r2
90001ed0:	e7e1      	b.n	90001e96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x206>
90001ed2:	bf00      	nop
90001ed4:	24000194 	.word	0x24000194
90001ed8:	24005df0 	.word	0x24005df0
90001edc:	24007a2c 	.word	0x24007a2c
90001ee0:	24005de4 	.word	0x24005de4
90001ee4:	240001d4 	.word	0x240001d4
90001ee8:	24005df4 	.word	0x24005df4
90001eec:	24005df8 	.word	0x24005df8
90001ef0:	240001d8 	.word	0x240001d8
90001ef4:	240001dc 	.word	0x240001dc
90001ef8:	900281fc 	.word	0x900281fc
90001efc:	90028210 	.word	0x90028210
90001f00:	900281a8 	.word	0x900281a8
90001f04:	24005dfc 	.word	0x24005dfc
90001f08:	24005dec 	.word	0x24005dec
90001f0c:	24000004 	.word	0x24000004

90001f10 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f10:	684b      	ldr	r3, [r1, #4]
90001f12:	2b01      	cmp	r3, #1
90001f14:	d015      	beq.n	90001f42 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f16:	2b02      	cmp	r3, #2
90001f18:	d00b      	beq.n	90001f32 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f1a:	b94b      	cbnz	r3, 90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f1c:	68cb      	ldr	r3, [r1, #12]
90001f1e:	0758      	lsls	r0, r3, #29
90001f20:	d11e      	bne.n	90001f60 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f22:	688b      	ldr	r3, [r1, #8]
90001f24:	075a      	lsls	r2, r3, #29
90001f26:	d003      	beq.n	90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f28:	f023 0307 	bic.w	r3, r3, #7
90001f2c:	3308      	adds	r3, #8
90001f2e:	608b      	str	r3, [r1, #8]
    }
90001f30:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f32:	68cb      	ldr	r3, [r1, #12]
90001f34:	071a      	lsls	r2, r3, #28
90001f36:	d0f4      	beq.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f38:	f023 030f 	bic.w	r3, r3, #15
90001f3c:	3310      	adds	r3, #16
90001f3e:	60cb      	str	r3, [r1, #12]
90001f40:	e7ef      	b.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f42:	68cb      	ldr	r3, [r1, #12]
90001f44:	071a      	lsls	r2, r3, #28
90001f46:	d003      	beq.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f48:	f023 030f 	bic.w	r3, r3, #15
90001f4c:	3310      	adds	r3, #16
90001f4e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f50:	688b      	ldr	r3, [r1, #8]
90001f52:	0718      	lsls	r0, r3, #28
90001f54:	d0ec      	beq.n	90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f56:	f023 030f 	bic.w	r3, r3, #15
90001f5a:	3310      	adds	r3, #16
90001f5c:	608b      	str	r3, [r1, #8]
90001f5e:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f60:	f023 0307 	bic.w	r3, r3, #7
90001f64:	3308      	adds	r3, #8
90001f66:	60cb      	str	r3, [r1, #12]
90001f68:	e7db      	b.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
90001f6a:	bf00      	nop

90001f6c <HAL_JPEG_GetDataCallback>:
    {
90001f6c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f6e:	4c0c      	ldr	r4, [pc, #48]	@ (90001fa0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f70:	4a0c      	ldr	r2, [pc, #48]	@ (90001fa4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f72:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f74:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f76:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f78:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f7a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f7c:	d302      	bcc.n	90001f84 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f82:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f84:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f86:	4b08      	ldr	r3, [pc, #32]	@ (90001fa8 <HAL_JPEG_GetDataCallback+0x3c>)
90001f88:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f8a:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f8e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f90:	bf28      	it	cs
90001f92:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f96:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f9a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f9c:	f007 bb7a 	b.w	90009694 <HAL_JPEG_ConfigInputBuffer>
90001fa0:	24005e08 	.word	0x24005e08
90001fa4:	24005e04 	.word	0x24005e04
90001fa8:	24005e00 	.word	0x24005e00

90001fac <HAL_JPEG_DataReadyCallback>:
    {
90001fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fb0:	4e4a      	ldr	r6, [pc, #296]	@ (900020dc <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fb2:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb4:	4f4a      	ldr	r7, [pc, #296]	@ (900020e0 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fb6:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb8:	4d4a      	ldr	r5, [pc, #296]	@ (900020e4 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001fba:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fbc:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fbe:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fc2:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc4:	4b48      	ldr	r3, [pc, #288]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc6:	4c49      	ldr	r4, [pc, #292]	@ (900020ec <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc8:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fca:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fcc:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fd0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fd4:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fd8:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fda:	4d45      	ldr	r5, [pc, #276]	@ (900020f0 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fdc:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fde:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fe2:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fe6:	697b      	ldr	r3, [r7, #20]
90001fe8:	428b      	cmp	r3, r1
90001fea:	d260      	bcs.n	900020ae <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fec:	6821      	ldr	r1, [r4, #0]
90001fee:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff0:	6823      	ldr	r3, [r4, #0]
90001ff2:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ff4:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ffc:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002000:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002002:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002006:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000200a:	6823      	ldr	r3, [r4, #0]
9000200c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002010:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002014:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002016:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002018:	b12b      	cbz	r3, 90002026 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000201a:	6823      	ldr	r3, [r4, #0]
9000201c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002020:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002024:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002026:	6832      	ldr	r2, [r6, #0]
90002028:	69bb      	ldr	r3, [r7, #24]
9000202a:	4293      	cmp	r3, r2
9000202c:	d922      	bls.n	90002074 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000202e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002030:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002032:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002036:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002038:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000203c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000203e:	2200      	movs	r2, #0
90002040:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002042:	6823      	ldr	r3, [r4, #0]
90002044:	2b01      	cmp	r3, #1
90002046:	d900      	bls.n	9000204a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002048:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000204a:	6823      	ldr	r3, [r4, #0]
9000204c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002050:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002054:	2b00      	cmp	r3, #0
90002056:	d138      	bne.n	900020ca <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002058:	6823      	ldr	r3, [r4, #0]
9000205a:	4640      	mov	r0, r8
9000205c:	68fa      	ldr	r2, [r7, #12]
9000205e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002062:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002066:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000206a:	01d2      	lsls	r2, r2, #7
9000206c:	6859      	ldr	r1, [r3, #4]
9000206e:	f007 fb15 	bl	9000969c <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
90002072:	69bb      	ldr	r3, [r7, #24]
90002074:	6832      	ldr	r2, [r6, #0]
90002076:	429a      	cmp	r2, r3
90002078:	d20b      	bcs.n	90002092 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
9000207a:	4b1e      	ldr	r3, [pc, #120]	@ (900020f4 <HAL_JPEG_DataReadyCallback+0x148>)
9000207c:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000207e:	7a1b      	ldrb	r3, [r3, #8]
90002080:	b10b      	cbz	r3, 90002086 <HAL_JPEG_DataReadyCallback+0xda>
    }
90002082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
90002086:	4b1c      	ldr	r3, [pc, #112]	@ (900020f8 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002088:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
9000208c:	6818      	ldr	r0, [r3, #0]
9000208e:	f00b b829 	b.w	9000d0e4 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002092:	6823      	ldr	r3, [r4, #0]
90002094:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
90002096:	4919      	ldr	r1, [pc, #100]	@ (900020fc <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002098:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000209a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
9000209e:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a0:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020a2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020a6:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a8:	f007 fabc 	bl	90009624 <HAL_JPEG_Pause>
900020ac:	e7e5      	b.n	9000207a <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020ae:	6823      	ldr	r3, [r4, #0]
900020b0:	68fa      	ldr	r2, [r7, #12]
900020b2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020ba:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020be:	01d2      	lsls	r2, r2, #7
900020c0:	6859      	ldr	r1, [r3, #4]
    }
900020c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020c6:	f007 bae9 	b.w	9000969c <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ca:	2102      	movs	r1, #2
900020cc:	4640      	mov	r0, r8
900020ce:	f007 faa9 	bl	90009624 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020d2:	4b0b      	ldr	r3, [pc, #44]	@ (90002100 <HAL_JPEG_DataReadyCallback+0x154>)
900020d4:	2201      	movs	r2, #1
900020d6:	601a      	str	r2, [r3, #0]
900020d8:	e7be      	b.n	90002058 <HAL_JPEG_DataReadyCallback+0xac>
900020da:	bf00      	nop
900020dc:	24005de8 	.word	0x24005de8
900020e0:	24000194 	.word	0x24000194
900020e4:	24005e0c 	.word	0x24005e0c
900020e8:	24005de4 	.word	0x24005de4
900020ec:	24005dec 	.word	0x24005dec
900020f0:	24000004 	.word	0x24000004
900020f4:	24005df0 	.word	0x24005df0
900020f8:	240001dc 	.word	0x240001dc
900020fc:	24005dfc 	.word	0x24005dfc
90002100:	24005df8 	.word	0x24005df8

90002104 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002104:	b672      	cpsid	i
        while (1)
90002106:	e7fe      	b.n	90002106 <HAL_JPEG_ErrorCallback+0x2>

90002108 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002108:	4b01      	ldr	r3, [pc, #4]	@ (90002110 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000210a:	2201      	movs	r2, #1
9000210c:	601a      	str	r2, [r3, #0]
    }
9000210e:	4770      	bx	lr
90002110:	24005dfc 	.word	0x24005dfc

90002114 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002114:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002116:	4f1e      	ldr	r7, [pc, #120]	@ (90002190 <DMA2D_CopyBuffer+0x7c>)
90002118:	6903      	ldr	r3, [r0, #16]
9000211a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000211c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000211e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002122:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002124:	4e1b      	ldr	r6, [pc, #108]	@ (90002194 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002126:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000212a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000212e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002132:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002136:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002138:	bf18      	it	ne
9000213a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000213e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002140:	6939      	ldr	r1, [r7, #16]
90002142:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002146:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000214a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000214e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002150:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002152:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002154:	7e81      	ldrb	r1, [r0, #26]
90002156:	b1b9      	cbz	r1, 90002188 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002158:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
9000215a:	f1c1 0110 	rsb	r1, r1, #16
9000215e:	4321      	orrs	r1, r4
90002160:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002162:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002164:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002168:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000216c:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000216e:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002172:	4809      	ldr	r0, [pc, #36]	@ (90002198 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002174:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002176:	4b07      	ldr	r3, [pc, #28]	@ (90002194 <DMA2D_CopyBuffer+0x80>)
90002178:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
9000217a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000217c:	4a07      	ldr	r2, [pc, #28]	@ (9000219c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000217e:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002180:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002182:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002184:	6018      	str	r0, [r3, #0]
}
90002186:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002188:	f044 0410 	orr.w	r4, r4, #16
9000218c:	6474      	str	r4, [r6, #68]	@ 0x44
9000218e:	e7e8      	b.n	90002162 <DMA2D_CopyBuffer+0x4e>
90002190:	24000194 	.word	0x24000194
90002194:	52001000 	.word	0x52001000
90002198:	00010201 	.word	0x00010201
9000219c:	ff09000b 	.word	0xff09000b

900021a0 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021a0:	6902      	ldr	r2, [r0, #16]
{
900021a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021a6:	4605      	mov	r5, r0
900021a8:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021aa:	2a00      	cmp	r2, #0
900021ac:	d165      	bne.n	9000227a <DMA2D_CropBuffer+0xda>
900021ae:	4b35      	ldr	r3, [pc, #212]	@ (90002284 <DMA2D_CropBuffer+0xe4>)
900021b0:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021b4:	f1cc 0010 	rsb	r0, ip, #16
900021b8:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021ba:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021bc:	3901      	subs	r1, #1
900021be:	428a      	cmp	r2, r1
900021c0:	d102      	bne.n	900021c8 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021c2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021c4:	1a41      	subs	r1, r0, r1
900021c6:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021c8:	7e6e      	ldrb	r6, [r5, #25]
900021ca:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021cc:	2e00      	cmp	r6, #0
900021ce:	d051      	beq.n	90002274 <DMA2D_CropBuffer+0xd4>
900021d0:	f1c7 0110 	rsb	r1, r7, #16
900021d4:	46b8      	mov	r8, r7
900021d6:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021d8:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021dc:	f1be 0f00 	cmp.w	lr, #0
900021e0:	d002      	beq.n	900021e8 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021e2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021e4:	1b09      	subs	r1, r1, r4
900021e6:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021e8:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021ee:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021f2:	4413      	add	r3, r2
    job.MCU_drawn++;
900021f4:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021f6:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021fa:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021fc:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
90002200:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002204:	0052      	lsls	r2, r2, #1
90002206:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000220a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000220e:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002212:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002214:	b107      	cbz	r7, 90002218 <DMA2D_CropBuffer+0x78>
90002216:	b90e      	cbnz	r6, 9000221c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002218:	2300      	movs	r3, #0
9000221a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000221c:	4b1a      	ldr	r3, [pc, #104]	@ (90002288 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000221e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002220:	4f1a      	ldr	r7, [pc, #104]	@ (9000228c <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002222:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002224:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002226:	4a1a      	ldr	r2, [pc, #104]	@ (90002290 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002228:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000222a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000222e:	6810      	ldr	r0, [r2, #0]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002230:	2201      	movs	r2, #1
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002232:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002234:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002238:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000223c:	9302      	str	r3, [sp, #8]
    DMA2D_reference->addToQueue(blitOp);
9000223e:	6803      	ldr	r3, [r0, #0]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002240:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002244:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002246:	9201      	str	r2, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002248:	685b      	ldr	r3, [r3, #4]
9000224a:	9604      	str	r6, [sp, #16]
9000224c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000224e:	4b11      	ldr	r3, [pc, #68]	@ (90002294 <DMA2D_CropBuffer+0xf4>)
90002250:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002252:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002254:	4810      	ldr	r0, [pc, #64]	@ (90002298 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002256:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002258:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000225c:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000225e:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002260:	490e      	ldr	r1, [pc, #56]	@ (9000229c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
90002262:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002264:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002266:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002268:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000226a:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
9000226c:	6019      	str	r1, [r3, #0]
}
9000226e:	b00a      	add	sp, #40	@ 0x28
90002270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002274:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002276:	46b0      	mov	r8, r6
90002278:	e7ae      	b.n	900021d8 <DMA2D_CropBuffer+0x38>
9000227a:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000227c:	f04f 0c00 	mov.w	ip, #0
90002280:	4b00      	ldr	r3, [pc, #0]	@ (90002284 <DMA2D_CropBuffer+0xe4>)
90002282:	e79a      	b.n	900021ba <DMA2D_CropBuffer+0x1a>
90002284:	24000194 	.word	0x24000194
90002288:	01e00010 	.word	0x01e00010
9000228c:	240001e4 	.word	0x240001e4
90002290:	24005df0 	.word	0x24005df0
90002294:	52001000 	.word	0x52001000
90002298:	ff09000b 	.word	0xff09000b
9000229c:	00010201 	.word	0x00010201

900022a0 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022a0:	4b0d      	ldr	r3, [pc, #52]	@ (900022d8 <DMA2D_ExternalJobCompleted+0x38>)
900022a2:	6902      	ldr	r2, [r0, #16]
900022a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022a6:	429a      	cmp	r2, r3
900022a8:	d000      	beq.n	900022ac <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022aa:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022ac:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022ae:	4b0b      	ldr	r3, [pc, #44]	@ (900022dc <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022b0:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022b2:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022b4:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022b6:	3101      	adds	r1, #1
        job.DoCropping = false;
900022b8:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022ba:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022bc:	6819      	ldr	r1, [r3, #0]
900022be:	2901      	cmp	r1, #1
900022c0:	d900      	bls.n	900022c4 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022c2:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022c4:	7e83      	ldrb	r3, [r0, #26]
900022c6:	b113      	cbz	r3, 900022ce <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022c8:	4b05      	ldr	r3, [pc, #20]	@ (900022e0 <DMA2D_ExternalJobCompleted+0x40>)
900022ca:	2201      	movs	r2, #1
900022cc:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022ce:	4b05      	ldr	r3, [pc, #20]	@ (900022e4 <DMA2D_ExternalJobCompleted+0x44>)
900022d0:	6818      	ldr	r0, [r3, #0]
900022d2:	f00a bf07 	b.w	9000d0e4 <osSemaphoreRelease>
900022d6:	bf00      	nop
900022d8:	24000194 	.word	0x24000194
900022dc:	240001d8 	.word	0x240001d8
900022e0:	240001d4 	.word	0x240001d4
900022e4:	240001dc 	.word	0x240001dc

900022e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022e8:	2101      	movs	r1, #1
900022ea:	2200      	movs	r2, #0
{
900022ec:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022ee:	4608      	mov	r0, r1
900022f0:	f00a fe7a 	bl	9000cfe8 <osSemaphoreNew>
900022f4:	4b0b      	ldr	r3, [pc, #44]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022f8:	b140      	cbz	r0, 9000230c <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022fa:	2200      	movs	r2, #0
900022fc:	2104      	movs	r1, #4
900022fe:	2001      	movs	r0, #1
90002300:	f00a ff1a 	bl	9000d138 <osMessageQueueNew>
90002304:	4b08      	ldr	r3, [pc, #32]	@ (90002328 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002306:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002308:	b130      	cbz	r0, 90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
9000230a:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
9000230c:	4b07      	ldr	r3, [pc, #28]	@ (9000232c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000230e:	2128      	movs	r1, #40	@ 0x28
90002310:	4a07      	ldr	r2, [pc, #28]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002312:	4808      	ldr	r0, [pc, #32]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002314:	f024 fd70 	bl	90026df8 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002318:	4b07      	ldr	r3, [pc, #28]	@ (90002338 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000231a:	212c      	movs	r1, #44	@ 0x2c
9000231c:	4a04      	ldr	r2, [pc, #16]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000231e:	4805      	ldr	r0, [pc, #20]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002320:	f024 fd6a 	bl	90026df8 <__assert_func>
90002324:	24005e14 	.word	0x24005e14
90002328:	24005e10 	.word	0x24005e10
9000232c:	90028434 	.word	0x90028434
90002330:	90028480 	.word	0x90028480
90002334:	900284b0 	.word	0x900284b0
90002338:	900284f8 	.word	0x900284f8

9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000233c:	4b02      	ldr	r3, [pc, #8]	@ (90002348 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000233e:	f04f 31ff 	mov.w	r1, #4294967295
90002342:	6818      	ldr	r0, [r3, #0]
90002344:	f00a be9c 	b.w	9000d080 <osSemaphoreAcquire>
90002348:	24005e14 	.word	0x24005e14

9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000234c:	4b01      	ldr	r3, [pc, #4]	@ (90002354 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000234e:	6818      	ldr	r0, [r3, #0]
90002350:	f00a bec8 	b.w	9000d0e4 <osSemaphoreRelease>
90002354:	24005e14 	.word	0x24005e14

90002358 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002358:	4b02      	ldr	r3, [pc, #8]	@ (90002364 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
9000235a:	2100      	movs	r1, #0
9000235c:	6818      	ldr	r0, [r3, #0]
9000235e:	f00a be8f 	b.w	9000d080 <osSemaphoreAcquire>
90002362:	bf00      	nop
90002364:	24005e14 	.word	0x24005e14

90002368 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002368:	4b01      	ldr	r3, [pc, #4]	@ (90002370 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
9000236a:	6818      	ldr	r0, [r3, #0]
9000236c:	f00a beba 	b.w	9000d0e4 <osSemaphoreRelease>
90002370:	24005e14 	.word	0x24005e14

90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002374:	4803      	ldr	r0, [pc, #12]	@ (90002384 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002376:	2300      	movs	r3, #0
90002378:	4903      	ldr	r1, [pc, #12]	@ (90002388 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
9000237a:	461a      	mov	r2, r3
9000237c:	6800      	ldr	r0, [r0, #0]
9000237e:	f00a bf17 	b.w	9000d1b0 <osMessageQueuePut>
90002382:	bf00      	nop
90002384:	24005e10 	.word	0x24005e10
90002388:	2400003c 	.word	0x2400003c

9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
9000238c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000238e:	2300      	movs	r3, #0
{
90002390:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002392:	4c07      	ldr	r4, [pc, #28]	@ (900023b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002394:	461a      	mov	r2, r3
90002396:	a901      	add	r1, sp, #4
90002398:	6820      	ldr	r0, [r4, #0]
9000239a:	f00a ff45 	bl	9000d228 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
9000239e:	f04f 33ff 	mov.w	r3, #4294967295
900023a2:	2200      	movs	r2, #0
900023a4:	a901      	add	r1, sp, #4
900023a6:	6820      	ldr	r0, [r4, #0]
900023a8:	f00a ff3e 	bl	9000d228 <osMessageQueueGet>
}
900023ac:	b002      	add	sp, #8
900023ae:	bd10      	pop	{r4, pc}
900023b0:	24005e10 	.word	0x24005e10

900023b4 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023b4:	6803      	ldr	r3, [r0, #0]
900023b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023b8:	4718      	bx	r3
900023ba:	bf00      	nop

900023bc <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023bc:	2001      	movs	r0, #1
900023be:	4770      	bx	lr

900023c0 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023c0:	4905      	ldr	r1, [pc, #20]	@ (900023d8 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023c2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023c6:	4b05      	ldr	r3, [pc, #20]	@ (900023dc <_ZN8STM32DMAD1Ev+0x1c>)
900023c8:	6001      	str	r1, [r0, #0]
900023ca:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023ce:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023d2:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023d6:	4770      	bx	lr
900023d8:	9002869c 	.word	0x9002869c
900023dc:	e000e100 	.word	0xe000e100

900023e0 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e0:	4b0f      	ldr	r3, [pc, #60]	@ (90002420 <_ZN8STM32DMA10initializeEv+0x40>)
{
900023e2:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023e4:	490f      	ldr	r1, [pc, #60]	@ (90002424 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023ea:	480f      	ldr	r0, [pc, #60]	@ (90002428 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023ec:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023f0:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023f2:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900023f6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900023fa:	f002 0210 	and.w	r2, r2, #16
900023fe:	9201      	str	r2, [sp, #4]
90002400:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90002402:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002404:	f042 0210 	orr.w	r2, r2, #16
90002408:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
9000240a:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000240c:	f022 0210 	bic.w	r2, r2, #16
90002410:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002412:	4b06      	ldr	r3, [pc, #24]	@ (9000242c <_ZN8STM32DMA10initializeEv+0x4c>)
90002414:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002418:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
9000241a:	b002      	add	sp, #8
9000241c:	4770      	bx	lr
9000241e:	bf00      	nop
90002420:	58024400 	.word	0x58024400
90002424:	24007a84 	.word	0x24007a84
90002428:	900027fd 	.word	0x900027fd
9000242c:	e000e100 	.word	0xe000e100

90002430 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002430:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002434:	4770      	bx	lr
90002436:	bf00      	nop

90002438 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002438:	4909      	ldr	r1, [pc, #36]	@ (90002460 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000243a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000243e:	4b09      	ldr	r3, [pc, #36]	@ (90002464 <_ZN8STM32DMAD0Ev+0x2c>)
90002440:	b510      	push	{r4, lr}
90002442:	6001      	str	r1, [r0, #0]
90002444:	4604      	mov	r4, r0
90002446:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000244a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000244e:	f3bf 8f6f 	isb	sy
}
90002452:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002456:	f024 f957 	bl	90026708 <_ZdlPvj>
9000245a:	4620      	mov	r0, r4
9000245c:	bd10      	pop	{r4, pc}
9000245e:	bf00      	nop
90002460:	9002869c 	.word	0x9002869c
90002464:	e000e100 	.word	0xe000e100

90002468 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002468:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
9000246c:	b510      	push	{r4, lr}
9000246e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002470:	b963      	cbnz	r3, 9000248c <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
90002472:	6803      	ldr	r3, [r0, #0]
90002474:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002476:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002478:	4924      	ldr	r1, [pc, #144]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
9000247a:	4a25      	ldr	r2, [pc, #148]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000247c:	680b      	ldr	r3, [r1, #0]
9000247e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002482:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002486:	2b01      	cmp	r3, #1
90002488:	d015      	beq.n	900024b6 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
9000248a:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
9000248c:	7a03      	ldrb	r3, [r0, #8]
9000248e:	2b00      	cmp	r3, #0
90002490:	d12b      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
90002492:	6860      	ldr	r0, [r4, #4]
90002494:	6803      	ldr	r3, [r0, #0]
90002496:	681b      	ldr	r3, [r3, #0]
90002498:	4798      	blx	r3
9000249a:	4603      	mov	r3, r0
9000249c:	2800      	cmp	r0, #0
9000249e:	d1f4      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024a0:	7a62      	ldrb	r2, [r4, #9]
900024a2:	2a00      	cmp	r2, #0
900024a4:	d0f1      	beq.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024a6:	6822      	ldr	r2, [r4, #0]
900024a8:	4620      	mov	r0, r4
                started_by_external_job = false;
900024aa:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024ae:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024b4:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024b6:	4817      	ldr	r0, [pc, #92]	@ (90002514 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024b8:	6800      	ldr	r0, [r0, #0]
900024ba:	2800      	cmp	r0, #0
900024bc:	d1e5      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024be:	7a20      	ldrb	r0, [r4, #8]
900024c0:	2800      	cmp	r0, #0
900024c2:	d1e2      	bne.n	9000248a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024c4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024c6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024ca:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024ce:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024d0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024d4:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024d6:	6808      	ldr	r0, [r1, #0]
900024d8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024dc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e0:	b17b      	cbz	r3, 90002502 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e6:	f7ff be5b 	b.w	900021a0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ea:	4b08      	ldr	r3, [pc, #32]	@ (9000250c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024ec:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024ee:	4808      	ldr	r0, [pc, #32]	@ (90002510 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024f0:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900024f2:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024f4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024f8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900024fc:	f7ff fed0 	bl	900022a0 <DMA2D_ExternalJobCompleted>
90002500:	e7c7      	b.n	90002492 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002506:	f7ff be05 	b.w	90002114 <DMA2D_CopyBuffer>
9000250a:	bf00      	nop
9000250c:	240001d8 	.word	0x240001d8
90002510:	24000004 	.word	0x24000004
90002514:	240001d4 	.word	0x240001d4

90002518 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002518:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000251a:	7f8b      	ldrb	r3, [r1, #30]
9000251c:	2b0a      	cmp	r3, #10
9000251e:	d83d      	bhi.n	9000259c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002520:	e8df f003 	tbb	[pc, r3]
90002524:	3c2a063a 	.word	0x3c2a063a
90002528:	063c3c3c 	.word	0x063c3c3c
9000252c:	0606      	.short	0x0606
9000252e:	06          	.byte	0x06
9000252f:	00          	.byte	0x00
90002530:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002532:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002536:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002538:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000253a:	4b1b      	ldr	r3, [pc, #108]	@ (900025a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000253c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002540:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002542:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002546:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002548:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000254a:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000254c:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000254e:	680e      	ldr	r6, [r1, #0]
        return color;
90002550:	68c8      	ldr	r0, [r1, #12]
90002552:	2e08      	cmp	r6, #8
90002554:	d012      	beq.n	9000257c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002556:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002558:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000255a:	0941      	lsrs	r1, r0, #5
9000255c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002560:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002564:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002566:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000256a:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000256c:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
9000256e:	490f      	ldr	r1, [pc, #60]	@ (900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002570:	4302      	orrs	r2, r0
90002572:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90002574:	6019      	str	r1, [r3, #0]
    }
}
90002576:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002578:	2400      	movs	r4, #0
9000257a:	e7da      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000257e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002580:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002582:	4a0b      	ldr	r2, [pc, #44]	@ (900025b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
90002584:	7f09      	ldrb	r1, [r1, #28]
90002586:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
9000258a:	490a      	ldr	r1, [pc, #40]	@ (900025b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000258c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000258e:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002590:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002592:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90002594:	6019      	str	r1, [r3, #0]
}
90002596:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002598:	2402      	movs	r4, #2
9000259a:	e7ca      	b.n	90002532 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
9000259c:	4b06      	ldr	r3, [pc, #24]	@ (900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
9000259e:	2187      	movs	r1, #135	@ 0x87
900025a0:	4a06      	ldr	r2, [pc, #24]	@ (900025bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025a2:	4807      	ldr	r0, [pc, #28]	@ (900025c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025a4:	f024 fc28 	bl	90026df8 <__assert_func>
900025a8:	52001000 	.word	0x52001000
900025ac:	00030201 	.word	0x00030201
900025b0:	00010009 	.word	0x00010009
900025b4:	00020201 	.word	0x00020201
900025b8:	9002853c 	.word	0x9002853c
900025bc:	90028558 	.word	0x90028558
900025c0:	900285a4 	.word	0x900285a4

900025c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025c6:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025ca:	f1be 0f0b 	cmp.w	lr, #11
900025ce:	f200 80ac 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025d2:	e8df f00e 	tbb	[pc, lr]
900025d6:	605b      	.short	0x605b
900025d8:	aaaaaa46 	.word	0xaaaaaa46
900025dc:	060606aa 	.word	0x060606aa
900025e0:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025e2:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025e4:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025e8:	f1bc 0f0b 	cmp.w	ip, #11
900025ec:	f200 809d 	bhi.w	9000272a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025f0:	e8df f00c 	tbb	[pc, ip]
900025f4:	9b0d494e 	.word	0x9b0d494e
900025f8:	069b9b9b 	.word	0x069b9b9b
900025fc:	06060606 	.word	0x06060606
    switch (format)
90002600:	f1bc 0f0b 	cmp.w	ip, #11
90002604:	f000 8097 	beq.w	90002736 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
90002608:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000260a:	2701      	movs	r7, #1
9000260c:	e001      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000260e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002610:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002612:	8a8b      	ldrh	r3, [r1, #20]
90002614:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002616:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002618:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000261a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000261c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000261e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002622:	4b4b      	ldr	r3, [pc, #300]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002624:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002626:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002628:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000262a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000262c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000262e:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002630:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002632:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002634:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002636:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002638:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000263a:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000263c:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90002640:	d02e      	beq.n	900026a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90002642:	d810      	bhi.n	90002666 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002644:	2a20      	cmp	r2, #32
90002646:	d028      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90002648:	2a40      	cmp	r2, #64	@ 0x40
9000264a:	d026      	beq.n	9000269a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000264c:	2a04      	cmp	r2, #4
9000264e:	d15a      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002650:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002652:	4a40      	ldr	r2, [pc, #256]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002654:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90002658:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000265a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000265c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
9000265e:	601a      	str	r2, [r3, #0]
}
90002660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002662:	2600      	movs	r6, #0
90002664:	e7be      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002666:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000266a:	d059      	beq.n	90002720 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
9000266c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90002670:	d149      	bne.n	90002706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002672:	4a39      	ldr	r2, [pc, #228]	@ (90002758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002674:	4302      	orrs	r2, r0
90002676:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002678:	4a36      	ldr	r2, [pc, #216]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000267a:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000267c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000267e:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002680:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90002682:	601a      	str	r2, [r3, #0]
}
90002684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90002686:	2401      	movs	r4, #1
90002688:	4627      	mov	r7, r4
9000268a:	e7c2      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
9000268c:	2602      	movs	r6, #2
9000268e:	e7a9      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
90002690:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90002692:	4627      	mov	r7, r4
90002694:	e7bd      	b.n	90002612 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90002696:	2601      	movs	r6, #1
90002698:	e7a4      	b.n	900025e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269a:	4330      	orrs	r0, r6
9000269c:	4b2c      	ldr	r3, [pc, #176]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000269e:	e7d8      	b.n	90002652 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026a0:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a2:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026a4:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026a6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026aa:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900026ac:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026ae:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026b0:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026b2:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026b4:	b9b1      	cbnz	r1, 900026e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026b6:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900026b8:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ba:	69d8      	ldr	r0, [r3, #28]
900026bc:	4a27      	ldr	r2, [pc, #156]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026be:	3901      	subs	r1, #1
900026c0:	4002      	ands	r2, r0
900026c2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026c6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026c8:	4a21      	ldr	r2, [pc, #132]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026ca:	69d3      	ldr	r3, [r2, #28]
900026cc:	f043 0320 	orr.w	r3, r3, #32
900026d0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026d2:	69d3      	ldr	r3, [r2, #28]
900026d4:	069b      	lsls	r3, r3, #26
900026d6:	d4fc      	bmi.n	900026d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026d8:	2310      	movs	r3, #16
900026da:	6093      	str	r3, [r2, #8]
            if (blend)
900026dc:	b317      	cbz	r7, 90002724 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
900026de:	4b1d      	ldr	r3, [pc, #116]	@ (90002754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026e0:	6013      	str	r3, [r2, #0]
}
900026e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900026e4:	2901      	cmp	r1, #1
900026e6:	d12c      	bne.n	90002742 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026e8:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
900026ea:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ec:	69d8      	ldr	r0, [r3, #28]
900026ee:	4a1b      	ldr	r2, [pc, #108]	@ (9000275c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026f0:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
900026f4:	bf18      	it	ne
900026f6:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f8:	4002      	ands	r2, r0
900026fa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026fe:	f042 0210 	orr.w	r2, r2, #16
90002702:	61da      	str	r2, [r3, #28]
                break;
90002704:	e7e0      	b.n	900026c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
90002706:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002708:	ea46 0600 	orr.w	r6, r6, r0
9000270c:	4b10      	ldr	r3, [pc, #64]	@ (90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000270e:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002712:	bf14      	ite	ne
90002714:	4a12      	ldrne	r2, [pc, #72]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90002716:	f240 2201 	movweq	r2, #513	@ 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000271a:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
9000271c:	601a      	str	r2, [r3, #0]
}
9000271e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002720:	4a10      	ldr	r2, [pc, #64]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002722:	e7a7      	b.n	90002674 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90002724:	4b0e      	ldr	r3, [pc, #56]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002726:	6013      	str	r3, [r2, #0]
}
90002728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000272a:	4b0f      	ldr	r3, [pc, #60]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000272c:	2166      	movs	r1, #102	@ 0x66
9000272e:	4a0f      	ldr	r2, [pc, #60]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002730:	480f      	ldr	r0, [pc, #60]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002732:	f024 fb61 	bl	90026df8 <__assert_func>
        assert(0 && "Unsupported Format!");
90002736:	4b0c      	ldr	r3, [pc, #48]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002738:	2187      	movs	r1, #135	@ 0x87
9000273a:	4a0e      	ldr	r2, [pc, #56]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000273c:	480c      	ldr	r0, [pc, #48]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000273e:	f024 fb5b 	bl	90026df8 <__assert_func>
                assert(0 && "Unsupported format");
90002742:	4b0d      	ldr	r3, [pc, #52]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002744:	f240 1111 	movw	r1, #273	@ 0x111
90002748:	4a0c      	ldr	r2, [pc, #48]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000274a:	4809      	ldr	r0, [pc, #36]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000274c:	f024 fb54 	bl	90026df8 <__assert_func>
90002750:	52001000 	.word	0x52001000
90002754:	00020201 	.word	0x00020201
90002758:	00020009 	.word	0x00020009
9000275c:	ffff00ef 	.word	0xffff00ef
90002760:	00010201 	.word	0x00010201
90002764:	0002000a 	.word	0x0002000a
90002768:	9002853c 	.word	0x9002853c
9000276c:	900285ec 	.word	0x900285ec
90002770:	900285a4 	.word	0x900285a4
90002774:	90028558 	.word	0x90028558
90002778:	90028638 	.word	0x90028638
9000277c:	90028654 	.word	0x90028654

90002780 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002780:	b510      	push	{r4, lr}
90002782:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002784:	6840      	ldr	r0, [r0, #4]
90002786:	6803      	ldr	r3, [r0, #0]
90002788:	681b      	ldr	r3, [r3, #0]
9000278a:	4798      	blx	r3
9000278c:	b958      	cbnz	r0, 900027a6 <_ZN8STM32DMA5startEv+0x26>
9000278e:	7a63      	ldrb	r3, [r4, #9]
90002790:	b14b      	cbz	r3, 900027a6 <_ZN8STM32DMA5startEv+0x26>
90002792:	7a23      	ldrb	r3, [r4, #8]
90002794:	bb3b      	cbnz	r3, 900027e6 <_ZN8STM32DMA5startEv+0x66>
            execute();
90002796:	6822      	ldr	r2, [r4, #0]
90002798:	4620      	mov	r0, r4
            started_by_external_job = false;
9000279a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
9000279e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027a4:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027a6:	4913      	ldr	r1, [pc, #76]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027a8:	4a13      	ldr	r2, [pc, #76]	@ (900027f8 <_ZN8STM32DMA5startEv+0x78>)
900027aa:	680b      	ldr	r3, [r1, #0]
900027ac:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027b0:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027b4:	2b01      	cmp	r3, #1
900027b6:	d000      	beq.n	900027ba <_ZN8STM32DMA5startEv+0x3a>
    }
900027b8:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ba:	7a20      	ldrb	r0, [r4, #8]
900027bc:	2800      	cmp	r0, #0
900027be:	d1fb      	bne.n	900027b8 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c0:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027c2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027c6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027ca:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027cc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027d0:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027d2:	6808      	ldr	r0, [r1, #0]
900027d4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027d8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027dc:	b133      	cbz	r3, 900027ec <_ZN8STM32DMA5startEv+0x6c>
    }
900027de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027e2:	f7ff bcdd 	b.w	900021a0 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027e6:	4b03      	ldr	r3, [pc, #12]	@ (900027f4 <_ZN8STM32DMA5startEv+0x74>)
900027e8:	681b      	ldr	r3, [r3, #0]
    }
900027ea:	bd10      	pop	{r4, pc}
900027ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027f0:	f7ff bc90 	b.w	90002114 <DMA2D_CopyBuffer>
900027f4:	240001d8 	.word	0x240001d8
900027f8:	24000004 	.word	0x24000004

900027fc <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
900027fc:	4b2c      	ldr	r3, [pc, #176]	@ (900028b0 <DMA2D_XferCpltCallback+0xb4>)
900027fe:	492d      	ldr	r1, [pc, #180]	@ (900028b4 <DMA2D_XferCpltCallback+0xb8>)
90002800:	681b      	ldr	r3, [r3, #0]
    {
90002802:	b510      	push	{r4, lr}
90002804:	685c      	ldr	r4, [r3, #4]
90002806:	6823      	ldr	r3, [r4, #0]
90002808:	695a      	ldr	r2, [r3, #20]
9000280a:	428a      	cmp	r2, r1
9000280c:	d122      	bne.n	90002854 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000280e:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002812:	b192      	cbz	r2, 9000283a <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002814:	7a23      	ldrb	r3, [r4, #8]
90002816:	2b00      	cmp	r3, #0
90002818:	d13a      	bne.n	90002890 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000281a:	6860      	ldr	r0, [r4, #4]
9000281c:	6803      	ldr	r3, [r0, #0]
9000281e:	681b      	ldr	r3, [r3, #0]
90002820:	4798      	blx	r3
90002822:	4603      	mov	r3, r0
90002824:	b9a8      	cbnz	r0, 90002852 <DMA2D_XferCpltCallback+0x56>
90002826:	7a62      	ldrb	r2, [r4, #9]
90002828:	b19a      	cbz	r2, 90002852 <DMA2D_XferCpltCallback+0x56>
                execute();
9000282a:	6822      	ldr	r2, [r4, #0]
9000282c:	4620      	mov	r0, r4
                started_by_external_job = false;
9000282e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002832:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002838:	4718      	bx	r3
            executeCompleted();
9000283a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000283c:	4620      	mov	r0, r4
9000283e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002840:	491d      	ldr	r1, [pc, #116]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
90002842:	4a1e      	ldr	r2, [pc, #120]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002844:	680b      	ldr	r3, [r1, #0]
90002846:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000284a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000284e:	2b01      	cmp	r3, #1
90002850:	d004      	beq.n	9000285c <DMA2D_XferCpltCallback+0x60>
90002852:	bd10      	pop	{r4, pc}
90002854:	4620      	mov	r0, r4
90002856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000285a:	4710      	bx	r2
9000285c:	4818      	ldr	r0, [pc, #96]	@ (900028c0 <DMA2D_XferCpltCallback+0xc4>)
9000285e:	6800      	ldr	r0, [r0, #0]
90002860:	2800      	cmp	r0, #0
90002862:	d1f6      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
90002864:	7a20      	ldrb	r0, [r4, #8]
90002866:	2800      	cmp	r0, #0
90002868:	d1f3      	bne.n	90002852 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000286a:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000286c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002870:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002874:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002876:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000287a:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000287c:	6808      	ldr	r0, [r1, #0]
9000287e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002882:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002886:	b17b      	cbz	r3, 900028a8 <DMA2D_XferCpltCallback+0xac>
90002888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000288c:	f7ff bc88 	b.w	900021a0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002890:	4b09      	ldr	r3, [pc, #36]	@ (900028b8 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
90002892:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002894:	4809      	ldr	r0, [pc, #36]	@ (900028bc <DMA2D_XferCpltCallback+0xc0>)
90002896:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002898:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000289a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000289e:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028a2:	f7ff fcfd 	bl	900022a0 <DMA2D_ExternalJobCompleted>
900028a6:	e7b8      	b.n	9000281a <DMA2D_XferCpltCallback+0x1e>
900028a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ac:	f7ff bc32 	b.w	90002114 <DMA2D_CopyBuffer>
900028b0:	24021c5c 	.word	0x24021c5c
900028b4:	90002469 	.word	0x90002469
900028b8:	240001d8 	.word	0x240001d8
900028bc:	24000004 	.word	0x24000004
900028c0:	240001d4 	.word	0x240001d4

900028c4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028c4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028c6:	4b0c      	ldr	r3, [pc, #48]	@ (900028f8 <_ZN8STM32DMAC1Ev+0x34>)
STM32DMA::STM32DMA()
900028c8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028ca:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028cc:	2500      	movs	r5, #0
900028ce:	300c      	adds	r0, #12
900028d0:	2260      	movs	r2, #96	@ 0x60
900028d2:	7235      	strb	r5, [r6, #8]
900028d4:	7275      	strb	r5, [r6, #9]
900028d6:	6070      	str	r0, [r6, #4]
900028d8:	f844 3b20 	str.w	r3, [r4], #32
900028dc:	4621      	mov	r1, r4
900028de:	f00e fb05 	bl	90010eec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028e2:	4621      	mov	r1, r4
900028e4:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028e8:	60cd      	str	r5, [r1, #12]
900028ea:	3124      	adds	r1, #36	@ 0x24
900028ec:	4299      	cmp	r1, r3
900028ee:	d1fb      	bne.n	900028e8 <_ZN8STM32DMAC1Ev+0x24>
}
900028f0:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028f2:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
900028f6:	bd70      	pop	{r4, r5, r6, pc}
900028f8:	9002869c 	.word	0x9002869c

900028fc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900028fc:	4a03      	ldr	r2, [pc, #12]	@ (9000290c <_ZN8touchgfx5paint8tearDownEv+0x10>)
900028fe:	6813      	ldr	r3, [r2, #0]
90002900:	07db      	lsls	r3, r3, #31
90002902:	d4fc      	bmi.n	900028fe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002904:	2323      	movs	r3, #35	@ 0x23
90002906:	6093      	str	r3, [r2, #8]
}
90002908:	4770      	bx	lr
9000290a:	bf00      	nop
9000290c:	52001000 	.word	0x52001000

90002910 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002910:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002912:	4c11      	ldr	r4, [pc, #68]	@ (90002958 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002914:	6825      	ldr	r5, [r4, #0]
90002916:	07ed      	lsls	r5, r5, #31
90002918:	d4fc      	bmi.n	90002914 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000291a:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000291c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
9000291e:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002920:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002922:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002926:	f04f 0502 	mov.w	r5, #2
9000292a:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
9000292c:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
9000292e:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002930:	d00b      	beq.n	9000294a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002932:	490a      	ldr	r1, [pc, #40]	@ (9000295c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002934:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002936:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000293a:	4909      	ldr	r1, [pc, #36]	@ (90002960 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000293c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
9000293e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002940:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90002942:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002944:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90002946:	bc30      	pop	{r4, r5}
90002948:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000294a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
9000294c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000294e:	4b05      	ldr	r3, [pc, #20]	@ (90002964 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002950:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002952:	6023      	str	r3, [r4, #0]
}
90002954:	bc30      	pop	{r4, r5}
90002956:	4770      	bx	lr
90002958:	52001000 	.word	0x52001000
9000295c:	00010009 	.word	0x00010009
90002960:	00020001 	.word	0x00020001
90002964:	00030001 	.word	0x00030001

90002968 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002968:	2001      	movs	r0, #1
9000296a:	4770      	bx	lr

9000296c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
9000296c:	200c      	movs	r0, #12
9000296e:	4770      	bx	lr

90002970 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002970:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002974:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002978:	3008      	adds	r0, #8
9000297a:	4770      	bx	lr

9000297c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
9000297c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002980:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002984:	3008      	adds	r0, #8
90002986:	4770      	bx	lr

90002988 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8gameViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002988:	2001      	movs	r0, #1
9000298a:	4770      	bx	lr

9000298c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8gameViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
9000298c:	f640 0098 	movw	r0, #2200	@ 0x898
90002990:	4770      	bx	lr
90002992:	bf00      	nop

90002994 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002994:	f640 0398 	movw	r3, #2200	@ 0x898
90002998:	fb03 0001 	mla	r0, r3, r1, r0
    }
9000299c:	3008      	adds	r0, #8
9000299e:	4770      	bx	lr

900029a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900029a0:	f640 0398 	movw	r3, #2200	@ 0x898
900029a4:	fb03 0001 	mla	r0, r3, r1, r0
    }
900029a8:	3008      	adds	r0, #8
900029aa:	4770      	bx	lr

900029ac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13gamePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
900029ac:	2001      	movs	r0, #1
900029ae:	4770      	bx	lr

900029b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13gamePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
900029b0:	2010      	movs	r0, #16
900029b2:	4770      	bx	lr

900029b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900029b4:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
900029b8:	3008      	adds	r0, #8
900029ba:	4770      	bx	lr

900029bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
900029bc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
900029c0:	3008      	adds	r0, #8
900029c2:	4770      	bx	lr

900029c4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoplayScreenNoTransition();
900029c4:	4608      	mov	r0, r1
900029c6:	f001 beff 	b.w	900047c8 <_ZN23FrontendApplicationBase26gotoplayScreenNoTransitionEv>
900029ca:	bf00      	nop

900029cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
900029cc:	4b03      	ldr	r3, [pc, #12]	@ (900029dc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900029ce:	b510      	push	{r4, lr}
900029d0:	4604      	mov	r4, r0
900029d2:	6003      	str	r3, [r0, #0]
900029d4:	f00d f8d7 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
900029d8:	4620      	mov	r0, r4
900029da:	bd10      	pop	{r4, pc}
900029dc:	90028754 	.word	0x90028754

900029e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
900029e0:	4b05      	ldr	r3, [pc, #20]	@ (900029f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
900029e2:	b510      	push	{r4, lr}
900029e4:	4604      	mov	r4, r0
900029e6:	6003      	str	r3, [r0, #0]
900029e8:	f00d f8cd 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
900029ec:	2114      	movs	r1, #20
900029ee:	4620      	mov	r0, r4
900029f0:	f023 fe8a 	bl	90026708 <_ZdlPvj>
900029f4:	4620      	mov	r0, r4
900029f6:	bd10      	pop	{r4, pc}
900029f8:	90028754 	.word	0x90028754

900029fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI8gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900029fc:	4b03      	ldr	r3, [pc, #12]	@ (90002a0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900029fe:	b510      	push	{r4, lr}
90002a00:	4604      	mov	r4, r0
90002a02:	6003      	str	r3, [r0, #0]
90002a04:	f00d f8bf 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a08:	4620      	mov	r0, r4
90002a0a:	bd10      	pop	{r4, pc}
90002a0c:	90028720 	.word	0x90028720

90002a10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002a10:	4b06      	ldr	r3, [pc, #24]	@ (90002a2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002a12:	b510      	push	{r4, lr}
90002a14:	4604      	mov	r4, r0
90002a16:	6003      	str	r3, [r0, #0]
90002a18:	f00d f8b5 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a1c:	f44f 610a 	mov.w	r1, #2208	@ 0x8a0
90002a20:	4620      	mov	r0, r4
90002a22:	f023 fe71 	bl	90026708 <_ZdlPvj>
90002a26:	4620      	mov	r0, r4
90002a28:	bd10      	pop	{r4, pc}
90002a2a:	bf00      	nop
90002a2c:	90028720 	.word	0x90028720

90002a30 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002a30:	4b03      	ldr	r3, [pc, #12]	@ (90002a40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002a32:	b510      	push	{r4, lr}
90002a34:	4604      	mov	r4, r0
90002a36:	6003      	str	r3, [r0, #0]
90002a38:	f00d f8a5 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a3c:	4620      	mov	r0, r4
90002a3e:	bd10      	pop	{r4, pc}
90002a40:	900286ec 	.word	0x900286ec

90002a44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002a44:	4b05      	ldr	r3, [pc, #20]	@ (90002a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI13gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002a46:	b510      	push	{r4, lr}
90002a48:	4604      	mov	r4, r0
90002a4a:	6003      	str	r3, [r0, #0]
90002a4c:	f00d f89b 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a50:	2118      	movs	r1, #24
90002a52:	4620      	mov	r0, r4
90002a54:	f023 fe58 	bl	90026708 <_ZdlPvj>
90002a58:	4620      	mov	r0, r4
90002a5a:	bd10      	pop	{r4, pc}
90002a5c:	900286ec 	.word	0x900286ec

90002a60 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002a60:	b510      	push	{r4, lr}
90002a62:	4a0c      	ldr	r2, [pc, #48]	@ (90002a94 <_ZN12FrontendHeapD1Ev+0x34>)
90002a64:	4604      	mov	r4, r0
90002a66:	4b0c      	ldr	r3, [pc, #48]	@ (90002a98 <_ZN12FrontendHeapD1Ev+0x38>)
90002a68:	f600 00cc 	addw	r0, r0, #2252	@ 0x8cc
90002a6c:	6022      	str	r2, [r4, #0]
90002a6e:	f8c4 38cc 	str.w	r3, [r4, #2252]	@ 0x8cc
90002a72:	f00d f888 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a76:	4620      	mov	r0, r4
90002a78:	4b08      	ldr	r3, [pc, #32]	@ (90002a9c <_ZN12FrontendHeapD1Ev+0x3c>)
90002a7a:	f840 3f2c 	str.w	r3, [r0, #44]!
90002a7e:	f00d f882 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a82:	4620      	mov	r0, r4
90002a84:	4b06      	ldr	r3, [pc, #24]	@ (90002aa0 <_ZN12FrontendHeapD1Ev+0x40>)
90002a86:	f840 3f14 	str.w	r3, [r0, #20]!
90002a8a:	f00d f87c 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002a8e:	4620      	mov	r0, r4
90002a90:	bd10      	pop	{r4, pc}
90002a92:	bf00      	nop
90002a94:	90028788 	.word	0x90028788
90002a98:	90028754 	.word	0x90028754
90002a9c:	90028720 	.word	0x90028720
90002aa0:	900286ec 	.word	0x900286ec

90002aa4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002aa4:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002aa6:	4c0c      	ldr	r4, [pc, #48]	@ (90002ad8 <__tcf_0+0x34>)
90002aa8:	4a0c      	ldr	r2, [pc, #48]	@ (90002adc <__tcf_0+0x38>)
90002aaa:	4b0d      	ldr	r3, [pc, #52]	@ (90002ae0 <__tcf_0+0x3c>)
90002aac:	f604 00cc 	addw	r0, r4, #2252	@ 0x8cc
90002ab0:	6022      	str	r2, [r4, #0]
90002ab2:	f8c4 38cc 	str.w	r3, [r4, #2252]	@ 0x8cc
90002ab6:	f00d f866 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002aba:	4620      	mov	r0, r4
90002abc:	4b09      	ldr	r3, [pc, #36]	@ (90002ae4 <__tcf_0+0x40>)
90002abe:	f840 3f2c 	str.w	r3, [r0, #44]!
90002ac2:	f00d f860 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ac6:	4620      	mov	r0, r4
90002ac8:	4b07      	ldr	r3, [pc, #28]	@ (90002ae8 <__tcf_0+0x44>)
        static FrontendHeap instance;
90002aca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002ace:	f840 3f14 	str.w	r3, [r0, #20]!
90002ad2:	f00d b858 	b.w	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ad6:	bf00      	nop
90002ad8:	24006cf4 	.word	0x24006cf4
90002adc:	90028788 	.word	0x90028788
90002ae0:	90028754 	.word	0x90028754
90002ae4:	90028720 	.word	0x90028720
90002ae8:	900286ec 	.word	0x900286ec

90002aec <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002aec:	b510      	push	{r4, lr}
90002aee:	4a0e      	ldr	r2, [pc, #56]	@ (90002b28 <_ZN12FrontendHeapD0Ev+0x3c>)
90002af0:	4604      	mov	r4, r0
90002af2:	4b0e      	ldr	r3, [pc, #56]	@ (90002b2c <_ZN12FrontendHeapD0Ev+0x40>)
90002af4:	f600 00cc 	addw	r0, r0, #2252	@ 0x8cc
90002af8:	6022      	str	r2, [r4, #0]
90002afa:	f8c4 38cc 	str.w	r3, [r4, #2252]	@ 0x8cc
90002afe:	f00d f842 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b02:	4620      	mov	r0, r4
90002b04:	4b0a      	ldr	r3, [pc, #40]	@ (90002b30 <_ZN12FrontendHeapD0Ev+0x44>)
90002b06:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b0a:	f00d f83c 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b0e:	4b09      	ldr	r3, [pc, #36]	@ (90002b34 <_ZN12FrontendHeapD0Ev+0x48>)
90002b10:	4620      	mov	r0, r4
90002b12:	f840 3f14 	str.w	r3, [r0, #20]!
90002b16:	f00d f836 	bl	9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b1a:	4620      	mov	r0, r4
90002b1c:	f44f 6124 	mov.w	r1, #2624	@ 0xa40
90002b20:	f023 fdf2 	bl	90026708 <_ZdlPvj>
90002b24:	4620      	mov	r0, r4
90002b26:	bd10      	pop	{r4, pc}
90002b28:	90028788 	.word	0x90028788
90002b2c:	90028754 	.word	0x90028754
90002b30:	90028720 	.word	0x90028720
90002b34:	900286ec 	.word	0x900286ec

90002b38 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002b38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002b3c:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002b3e:	2400      	movs	r4, #0
90002b40:	f001 fb80 	bl	90004244 <_ZN14BitmapDatabase11getInstanceEv>
90002b44:	4605      	mov	r5, r0
90002b46:	f001 fb81 	bl	9000424c <_ZN14BitmapDatabase15getInstanceSizeEv>
90002b4a:	4623      	mov	r3, r4
90002b4c:	4601      	mov	r1, r0
90002b4e:	4622      	mov	r2, r4
90002b50:	4628      	mov	r0, r5
90002b52:	9400      	str	r4, [sp, #0]
90002b54:	f015 fc0e 	bl	90018374 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002b58:	4b29      	ldr	r3, [pc, #164]	@ (90002c00 <touchgfx_init+0xc8>)
90002b5a:	4a2a      	ldr	r2, [pc, #168]	@ (90002c04 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002b5c:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002b5e:	4c2a      	ldr	r4, [pc, #168]	@ (90002c08 <touchgfx_init+0xd0>)
90002b60:	601a      	str	r2, [r3, #0]
90002b62:	f002 f83f 	bl	90004be4 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002b66:	4b29      	ldr	r3, [pc, #164]	@ (90002c0c <touchgfx_init+0xd4>)
90002b68:	4a29      	ldr	r2, [pc, #164]	@ (90002c10 <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002b6a:	482a      	ldr	r0, [pc, #168]	@ (90002c14 <touchgfx_init+0xdc>)
90002b6c:	609a      	str	r2, [r3, #8]
90002b6e:	f015 fb69 	bl	90018244 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002b72:	6823      	ldr	r3, [r4, #0]
90002b74:	f3bf 8f5b 	dmb	ish
90002b78:	07db      	lsls	r3, r3, #31
90002b7a:	d505      	bpl.n	90002b88 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002b7c:	4826      	ldr	r0, [pc, #152]	@ (90002c18 <touchgfx_init+0xe0>)
}
90002b7e:	b002      	add	sp, #8
90002b80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002b84:	f7fe b9b2 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002b88:	4620      	mov	r0, r4
90002b8a:	f023 fdbf 	bl	9002670c <__cxa_guard_acquire>
90002b8e:	2800      	cmp	r0, #0
90002b90:	d0f4      	beq.n	90002b7c <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002b92:	4d22      	ldr	r5, [pc, #136]	@ (90002c1c <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002b94:	4b22      	ldr	r3, [pc, #136]	@ (90002c20 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002b96:	f605 06e4 	addw	r6, r5, #2276	@ 0x8e4
        : presenterStorage(pres),
90002b9a:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002b9e:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002ba2:	f605 07cc 	addw	r7, r5, #2252	@ 0x8cc
90002ba6:	602b      	str	r3, [r5, #0]
90002ba8:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002baa:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002bac:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002bb0:	f00c ffea 	bl	9000fb88 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002bb4:	4b1b      	ldr	r3, [pc, #108]	@ (90002c24 <touchgfx_init+0xec>)
90002bb6:	4640      	mov	r0, r8
90002bb8:	616b      	str	r3, [r5, #20]
90002bba:	f00c ffe5 	bl	9000fb88 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002bbe:	4b1a      	ldr	r3, [pc, #104]	@ (90002c28 <touchgfx_init+0xf0>)
90002bc0:	4638      	mov	r0, r7
90002bc2:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002bc4:	f00c ffe0 	bl	9000fb88 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002bc8:	4b18      	ldr	r3, [pc, #96]	@ (90002c2c <touchgfx_init+0xf4>)
90002bca:	f505 600e 	add.w	r0, r5, #2272	@ 0x8e0
90002bce:	f8c5 38cc 	str.w	r3, [r5, #2252]	@ 0x8cc
90002bd2:	f003 fd67 	bl	900066a4 <_ZN5ModelC1Ev>
90002bd6:	462a      	mov	r2, r5
90002bd8:	f505 610e 	add.w	r1, r5, #2272	@ 0x8e0
90002bdc:	4630      	mov	r0, r6
90002bde:	f003 fd57 	bl	90006690 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002be2:	4630      	mov	r0, r6
90002be4:	f001 fdf0 	bl	900047c8 <_ZN23FrontendApplicationBase26gotoplayScreenNoTransitionEv>
        static FrontendHeap instance;
90002be8:	4811      	ldr	r0, [pc, #68]	@ (90002c30 <touchgfx_init+0xf8>)
90002bea:	f024 f923 	bl	90026e34 <atexit>
90002bee:	4620      	mov	r0, r4
90002bf0:	f023 fd98 	bl	90026724 <__cxa_guard_release>
90002bf4:	4808      	ldr	r0, [pc, #32]	@ (90002c18 <touchgfx_init+0xe0>)
}
90002bf6:	b002      	add	sp, #8
90002bf8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002bfc:	f7fe b976 	b.w	90000eec <_ZN11TouchGFXHAL10initializeEv>
90002c00:	24021cc0 	.word	0x24021cc0
90002c04:	24005ea0 	.word	0x24005ea0
90002c08:	24006cf0 	.word	0x24006cf0
90002c0c:	24005ec0 	.word	0x24005ec0
90002c10:	24005ea4 	.word	0x24005ea4
90002c14:	24000040 	.word	0x24000040
90002c18:	24005e18 	.word	0x24005e18
90002c1c:	24006cf4 	.word	0x24006cf4
90002c20:	90028788 	.word	0x90028788
90002c24:	900286ec 	.word	0x900286ec
90002c28:	90028720 	.word	0x90028720
90002c2c:	90028754 	.word	0x90028754
90002c30:	90002aa5 	.word	0x90002aa5

90002c34 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002c34:	4770      	bx	lr
90002c36:	bf00      	nop

90002c38 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002c38:	4801      	ldr	r0, [pc, #4]	@ (90002c40 <touchgfx_taskEntry+0x8>)
90002c3a:	f7fe b9a5 	b.w	90000f88 <_ZN11TouchGFXHAL9taskEntryEv>
90002c3e:	bf00      	nop
90002c40:	24005e18 	.word	0x24005e18

90002c44 <_GLOBAL__sub_I_touchgfx_init>:
}
90002c44:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002c46:	4e27      	ldr	r6, [pc, #156]	@ (90002ce4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
{
public:

    STM32TouchController() {}
90002c48:	4b27      	ldr	r3, [pc, #156]	@ (90002ce8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002c4a:	4c28      	ldr	r4, [pc, #160]	@ (90002cec <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002c4c:	4630      	mov	r0, r6
static LCD16bpp display;
90002c4e:	4d28      	ldr	r5, [pc, #160]	@ (90002cf0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002c50:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002c52:	f7ff fe37 	bl	900028c4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002c56:	4628      	mov	r0, r5
90002c58:	f019 fe64 	bl	9001c924 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002c5c:	4825      	ldr	r0, [pc, #148]	@ (90002cf4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002c5e:	f013 fcd9 	bl	90016614 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002c62:	4b25      	ldr	r3, [pc, #148]	@ (90002cf8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          mcuInstrumentation(0),
90002c64:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002c66:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002c6a:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002c6e:	62da      	str	r2, [r3, #44]	@ 0x2c
90002c70:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002c72:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002c74:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002c78:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002c7a:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002c7c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002c80:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002c84:	4c1d      	ldr	r4, [pc, #116]	@ (90002cfc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002c86:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002c88:	4c1d      	ldr	r4, [pc, #116]	@ (90002d00 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002c8a:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002c8c:	4c1d      	ldr	r4, [pc, #116]	@ (90002d04 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002c8e:	8020      	strh	r0, [r4, #0]
90002c90:	4c1d      	ldr	r4, [pc, #116]	@ (90002d08 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002c92:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002c94:	4c1d      	ldr	r4, [pc, #116]	@ (90002d0c <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002c96:	481e      	ldr	r0, [pc, #120]	@ (90002d10 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002c98:	8021      	strh	r1, [r4, #0]
90002c9a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002c9c:	4c1d      	ldr	r4, [pc, #116]	@ (90002d14 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002c9e:	491e      	ldr	r1, [pc, #120]	@ (90002d18 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002ca0:	481e      	ldr	r0, [pc, #120]	@ (90002d1c <_GLOBAL__sub_I_touchgfx_init+0xd8>)
          lcdRef(display),
90002ca2:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002ca6:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002caa:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002cae:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002cb0:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002cb4:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002cb8:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002cbc:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002cc0:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002cc4:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002cc8:	7022      	strb	r2, [r4, #0]
90002cca:	6019      	str	r1, [r3, #0]
90002ccc:	4914      	ldr	r1, [pc, #80]	@ (90002d20 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
        : cc_consumed(0),
90002cce:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002cd2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          cc_in(0)
90002cd6:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90002cda:	67d9      	str	r1, [r3, #124]	@ 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002cdc:	e9c3 201d 	strd	r2, r0, [r3, #116]	@ 0x74
}
90002ce0:	bd70      	pop	{r4, r5, r6, pc}
90002ce2:	bf00      	nop
90002ce4:	24005f48 	.word	0x24005f48
90002ce8:	90027ee8 	.word	0x90027ee8
90002cec:	24006cec 	.word	0x24006cec
90002cf0:	24005ec0 	.word	0x24005ec0
90002cf4:	24005ea4 	.word	0x24005ea4
90002cf8:	24005e18 	.word	0x24005e18
90002cfc:	01000001 	.word	0x01000001
90002d00:	24021c5c 	.word	0x24021c5c
90002d04:	24021c50 	.word	0x24021c50
90002d08:	24021c56 	.word	0x24021c56
90002d0c:	24021c52 	.word	0x24021c52
90002d10:	24021c58 	.word	0x24021c58
90002d14:	24021c54 	.word	0x24021c54
90002d18:	90028078 	.word	0x90028078
90002d1c:	01010000 	.word	0x01010000
90002d20:	90027ec0 	.word	0x90027ec0

90002d24 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002d24:	4801      	ldr	r0, [pc, #4]	@ (90002d2c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002d26:	f7ff bb4b 	b.w	900023c0 <_ZN8STM32DMAD1Ev>
90002d2a:	bf00      	nop
90002d2c:	24005f48 	.word	0x24005f48

90002d30 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002d30:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002d34:	b112      	cbz	r2, 90002d3c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002d36:	6803      	ldr	r3, [r0, #0]
90002d38:	695b      	ldr	r3, [r3, #20]
90002d3a:	4718      	bx	r3
        }
    }
90002d3c:	4770      	bx	lr
90002d3e:	bf00      	nop

90002d40 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002d40:	2000      	movs	r0, #0
90002d42:	4770      	bx	lr

90002d44 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002d44:	8081      	strh	r1, [r0, #4]
    }
90002d46:	4770      	bx	lr

90002d48 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002d48:	80c1      	strh	r1, [r0, #6]
    }
90002d4a:	4770      	bx	lr

90002d4c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002d4c:	8101      	strh	r1, [r0, #8]
    }
90002d4e:	4770      	bx	lr

90002d50 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002d50:	8141      	strh	r1, [r0, #10]
    }
90002d52:	4770      	bx	lr

90002d54 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002d54:	4770      	bx	lr
90002d56:	bf00      	nop

90002d58 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002d58:	4770      	bx	lr
90002d5a:	bf00      	nop

90002d5c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002d5c:	4770      	bx	lr
90002d5e:	bf00      	nop

90002d60 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002d60:	4770      	bx	lr
90002d62:	bf00      	nop

90002d64 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002d64:	4770      	bx	lr
90002d66:	bf00      	nop

90002d68 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002d68:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002d6c:	6803      	ldr	r3, [r0, #0]
90002d6e:	eba2 020c 	sub.w	r2, r2, ip
90002d72:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002d76:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002d78:	eba1 010c 	sub.w	r1, r1, ip
90002d7c:	b212      	sxth	r2, r2
90002d7e:	b209      	sxth	r1, r1
90002d80:	4718      	bx	r3
90002d82:	bf00      	nop

90002d84 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002d84:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002d86:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002d8a:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002d8e:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002d92:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002d96:	6010      	str	r0, [r2, #0]
    }
90002d98:	4770      	bx	lr
90002d9a:	bf00      	nop

90002d9c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002d9c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002da0:	b11a      	cbz	r2, 90002daa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002da2:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002da6:	b102      	cbz	r2, 90002daa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002da8:	6018      	str	r0, [r3, #0]
        }
    }
90002daa:	4770      	bx	lr

90002dac <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002dac:	2000      	movs	r0, #0
90002dae:	4770      	bx	lr

90002db0 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002db0:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002db2:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002db4:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002db6:	809a      	strh	r2, [r3, #4]
    }
90002db8:	4770      	bx	lr
90002dba:	bf00      	nop

90002dbc <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002dbc:	4770      	bx	lr
90002dbe:	bf00      	nop

90002dc0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002dc0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002dc4:	4770      	bx	lr
90002dc6:	bf00      	nop

90002dc8 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002dc8:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002dcc:	4770      	bx	lr
90002dce:	bf00      	nop

90002dd0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002dd0:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002dd4:	688a      	ldr	r2, [r1, #8]
90002dd6:	f8c0 c000 	str.w	ip, [r0]
90002dda:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002ddc:	4770      	bx	lr
90002dde:	bf00      	nop

90002de0 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002de0:	2200      	movs	r2, #0
90002de2:	6002      	str	r2, [r0, #0]
90002de4:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002de6:	4770      	bx	lr

90002de8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002de8:	2000      	movs	r0, #0
90002dea:	4770      	bx	lr

90002dec <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002dec:	7701      	strb	r1, [r0, #28]
    }
90002dee:	4770      	bx	lr

90002df0 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002df0:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002df4:	4770      	bx	lr
90002df6:	bf00      	nop

90002df8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002df8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002dfc:	4770      	bx	lr
90002dfe:	bf00      	nop

90002e00 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002e00:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002e04:	4770      	bx	lr
90002e06:	bf00      	nop

90002e08 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002e08:	2001      	movs	r0, #1
90002e0a:	4770      	bx	lr

90002e0c <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002e0c:	3098      	adds	r0, #152	@ 0x98
90002e0e:	4770      	bx	lr

90002e10 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002e10:	308c      	adds	r0, #140	@ 0x8c
90002e12:	4770      	bx	lr

90002e14 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002e14:	3084      	adds	r0, #132	@ 0x84
90002e16:	4770      	bx	lr

90002e18 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002e18:	4770      	bx	lr
90002e1a:	bf00      	nop

90002e1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002e1c:	4b03      	ldr	r3, [pc, #12]	@ (90002e2c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002e1e:	2290      	movs	r2, #144	@ 0x90
90002e20:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002e24:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002e28:	4770      	bx	lr
90002e2a:	bf00      	nop
90002e2c:	e000e100 	.word	0xe000e100

90002e30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002e30:	4a09      	ldr	r2, [pc, #36]	@ (90002e58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002e32:	490a      	ldr	r1, [pc, #40]	@ (90002e5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002e34:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002e36:	480a      	ldr	r0, [pc, #40]	@ (90002e60 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002e38:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002e3c:	3b01      	subs	r3, #1
90002e3e:	b29b      	uxth	r3, r3
90002e40:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002e42:	6911      	ldr	r1, [r2, #16]
90002e44:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002e48:	3901      	subs	r1, #1
90002e4a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002e4c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002e4e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002e50:	f043 0301 	orr.w	r3, r3, #1
90002e54:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002e56:	4770      	bx	lr
90002e58:	50001000 	.word	0x50001000
90002e5c:	24007736 	.word	0x24007736
90002e60:	24007734 	.word	0x24007734

90002e64 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002e64:	4b01      	ldr	r3, [pc, #4]	@ (90002e6c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002e66:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002e6a:	4770      	bx	lr
90002e6c:	50001000 	.word	0x50001000

90002e70 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002e70:	4b02      	ldr	r3, [pc, #8]	@ (90002e7c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002e72:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002e74:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002e78:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002e7a:	4770      	bx	lr
90002e7c:	50001000 	.word	0x50001000

90002e80 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002e80:	4770      	bx	lr
90002e82:	bf00      	nop

90002e84 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002e84:	4770      	bx	lr
90002e86:	bf00      	nop

90002e88 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002e88:	4770      	bx	lr
90002e8a:	bf00      	nop

90002e8c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002e8c:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002e90:	2300      	movs	r3, #0
90002e92:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002e96:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002e9a:	4770      	bx	lr

90002e9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002e9c:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002ea0:	4770      	bx	lr
90002ea2:	bf00      	nop

90002ea4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002ea4:	b510      	push	{r4, lr}
90002ea6:	4604      	mov	r4, r0
90002ea8:	2130      	movs	r1, #48	@ 0x30
90002eaa:	f023 fc2d 	bl	90026708 <_ZdlPvj>
90002eae:	4620      	mov	r0, r4
90002eb0:	bd10      	pop	{r4, pc}
90002eb2:	bf00      	nop

90002eb4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
90002eb4:	b510      	push	{r4, lr}
90002eb6:	4604      	mov	r4, r0
90002eb8:	212c      	movs	r1, #44	@ 0x2c
90002eba:	f023 fc25 	bl	90026708 <_ZdlPvj>
90002ebe:	4620      	mov	r0, r4
90002ec0:	bd10      	pop	{r4, pc}
90002ec2:	bf00      	nop

90002ec4 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002ec4:	b510      	push	{r4, lr}
90002ec6:	4604      	mov	r4, r0
90002ec8:	21bc      	movs	r1, #188	@ 0xbc
90002eca:	f023 fc1d 	bl	90026708 <_ZdlPvj>
90002ece:	4620      	mov	r0, r4
90002ed0:	bd10      	pop	{r4, pc}
90002ed2:	bf00      	nop

90002ed4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002ed4:	b911      	cbnz	r1, 90002edc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002ed6:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002eda:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002edc:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002ede:	4a03      	ldr	r2, [pc, #12]	@ (90002eec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002ee0:	f44f 7191 	mov.w	r1, #290	@ 0x122
90002ee4:	4b02      	ldr	r3, [pc, #8]	@ (90002ef0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002ee6:	4803      	ldr	r0, [pc, #12]	@ (90002ef4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002ee8:	f023 ff86 	bl	90026df8 <__assert_func>
90002eec:	900287a8 	.word	0x900287a8
90002ef0:	90028794 	.word	0x90028794
90002ef4:	900288c4 	.word	0x900288c4

90002ef8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002ef8:	b921      	cbnz	r1, 90002f04 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002efa:	6840      	ldr	r0, [r0, #4]
90002efc:	4611      	mov	r1, r2
90002efe:	6803      	ldr	r3, [r0, #0]
90002f00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002f02:	4718      	bx	r3
        assert(handle < no_streams);
90002f04:	4b03      	ldr	r3, [pc, #12]	@ (90002f14 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90002f06:	f44f 718e 	mov.w	r1, #284	@ 0x11c
90002f0a:	4a03      	ldr	r2, [pc, #12]	@ (90002f18 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002f0c:	4803      	ldr	r0, [pc, #12]	@ (90002f1c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002f0e:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002f10:	f023 ff72 	bl	90026df8 <__assert_func>
90002f14:	90028794 	.word	0x90028794
90002f18:	9002890c 	.word	0x9002890c
90002f1c:	900288c4 	.word	0x900288c4

90002f20 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002f20:	b909      	cbnz	r1, 90002f26 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002f22:	68c0      	ldr	r0, [r0, #12]
90002f24:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002f26:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002f28:	4a03      	ldr	r2, [pc, #12]	@ (90002f38 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002f2a:	f44f 718a 	mov.w	r1, #276	@ 0x114
90002f2e:	4b03      	ldr	r3, [pc, #12]	@ (90002f3c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002f30:	4803      	ldr	r0, [pc, #12]	@ (90002f40 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90002f32:	f023 ff61 	bl	90026df8 <__assert_func>
90002f36:	bf00      	nop
90002f38:	90028a4c 	.word	0x90028a4c
90002f3c:	90028794 	.word	0x90028794
90002f40:	900288c4 	.word	0x900288c4

90002f44 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002f44:	b921      	cbnz	r1, 90002f50 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90002f46:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90002f48:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90002f4a:	e9c0 3205 	strd	r3, r2, [r0, #20]
90002f4e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002f50:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002f52:	4a03      	ldr	r2, [pc, #12]	@ (90002f60 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90002f54:	2140      	movs	r1, #64	@ 0x40
90002f56:	4b03      	ldr	r3, [pc, #12]	@ (90002f64 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002f58:	4803      	ldr	r0, [pc, #12]	@ (90002f68 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90002f5a:	f023 ff4d 	bl	90026df8 <__assert_func>
90002f5e:	bf00      	nop
90002f60:	90028b94 	.word	0x90028b94
90002f64:	90028794 	.word	0x90028794
90002f68:	900288c4 	.word	0x900288c4

90002f6c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90002f6c:	b508      	push	{r3, lr}
90002f6e:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90002f70:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
90002f74:	b940      	cbnz	r0, 90002f88 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
90002f76:	2201      	movs	r2, #1
90002f78:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90002f7c:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
90002f80:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90002f84:	6308      	str	r0, [r1, #48]	@ 0x30
    }
90002f86:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002f88:	4b03      	ldr	r3, [pc, #12]	@ (90002f98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90002f8a:	f240 116b 	movw	r1, #363	@ 0x16b
90002f8e:	4a03      	ldr	r2, [pc, #12]	@ (90002f9c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
90002f90:	4803      	ldr	r0, [pc, #12]	@ (90002fa0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
90002f92:	f023 ff31 	bl	90026df8 <__assert_func>
90002f96:	bf00      	nop
90002f98:	90028ce0 	.word	0x90028ce0
90002f9c:	90028d10 	.word	0x90028d10
90002fa0:	900288c4 	.word	0x900288c4

90002fa4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002fa4:	f00d b8d2 	b.w	9001014c <_ZN8touchgfx3HAL10beginFrameEv>

90002fa8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
90002fa8:	f00d b8dc 	b.w	90010164 <_ZN8touchgfx3HAL8endFrameEv>

90002fac <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002fac:	f00d b898 	b.w	900100e0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90002fb0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90002fb0:	f00d b9f9 	b.w	900103a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002fb4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002fb4:	4814      	ldr	r0, [pc, #80]	@ (90003008 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90002fb6:	6943      	ldr	r3, [r0, #20]
90002fb8:	03d9      	lsls	r1, r3, #15
90002fba:	d523      	bpl.n	90003004 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002fbc:	2300      	movs	r3, #0
{
90002fbe:	b510      	push	{r4, lr}
90002fc0:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002fc4:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002fc8:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002fcc:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002fd0:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002fd4:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90002fd8:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002fdc:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002fe0:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002fe2:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002fe6:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002fe8:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90002fec:	1c5a      	adds	r2, r3, #1
90002fee:	d1f8      	bne.n	90002fe2 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90002ff0:	f1ac 0c20 	sub.w	ip, ip, #32
90002ff4:	f11c 0f20 	cmn.w	ip, #32
90002ff8:	d1f0      	bne.n	90002fdc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
90002ffa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002ffe:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90003002:	bd10      	pop	{r4, pc}
90003004:	4770      	bx	lr
90003006:	bf00      	nop
90003008:	e000ed00 	.word	0xe000ed00

9000300c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
9000300c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000300e:	b083      	sub	sp, #12
        assert(handle < no_streams);
90003010:	bb49      	cbnz	r1, 90003066 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5a>
90003012:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003014:	6840      	ldr	r0, [r0, #4]
90003016:	461d      	mov	r5, r3
90003018:	4616      	mov	r6, r2
9000301a:	6803      	ldr	r3, [r0, #0]
9000301c:	691b      	ldr	r3, [r3, #16]
9000301e:	4798      	blx	r3
90003020:	b908      	cbnz	r0, 90003026 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
90003022:	b003      	add	sp, #12
90003024:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003026:	4f13      	ldr	r7, [pc, #76]	@ (90003074 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003028:	2101      	movs	r1, #1
9000302a:	6838      	ldr	r0, [r7, #0]
9000302c:	f00d fe62 	bl	90010cf4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003030:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003032:	4605      	mov	r5, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003034:	4668      	mov	r0, sp
90003036:	f013 fad3 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000303a:	4b0f      	ldr	r3, [pc, #60]	@ (90003078 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000303c:	6860      	ldr	r0, [r4, #4]
9000303e:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003040:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003044:	881b      	ldrh	r3, [r3, #0]
90003046:	f9bd 2000 	ldrsh.w	r2, [sp]
9000304a:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000304e:	6804      	ldr	r4, [r0, #0]
90003050:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003054:	69e4      	ldr	r4, [r4, #28]
90003056:	47a0      	blx	r4
90003058:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
9000305a:	6803      	ldr	r3, [r0, #0]
9000305c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
9000305e:	b003      	add	sp, #12
90003060:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003064:	4718      	bx	r3
        assert(handle < no_streams);
90003066:	4b05      	ldr	r3, [pc, #20]	@ (9000307c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
90003068:	21e9      	movs	r1, #233	@ 0xe9
9000306a:	4a05      	ldr	r2, [pc, #20]	@ (90003080 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
9000306c:	4805      	ldr	r0, [pc, #20]	@ (90003084 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
9000306e:	f023 fec3 	bl	90026df8 <__assert_func>
90003072:	bf00      	nop
90003074:	24021c5c 	.word	0x24021c5c
90003078:	24021c56 	.word	0x24021c56
9000307c:	90028794 	.word	0x90028794
90003080:	90028e28 	.word	0x90028e28
90003084:	900288c4 	.word	0x900288c4

90003088 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003088:	4b08      	ldr	r3, [pc, #32]	@ (900030ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000308a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000308e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90003092:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003096:	f3bf 8f6f 	isb	sy
9000309a:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000309e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900030a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030a6:	f3bf 8f6f 	isb	sy
}
900030aa:	4770      	bx	lr
900030ac:	e000e100 	.word	0xe000e100

900030b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900030b0:	4b03      	ldr	r3, [pc, #12]	@ (900030c0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900030b2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900030b6:	609a      	str	r2, [r3, #8]
900030b8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900030bc:	609a      	str	r2, [r3, #8]
}
900030be:	4770      	bx	lr
900030c0:	e000e100 	.word	0xe000e100

900030c4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900030c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900030c8:	2900      	cmp	r1, #0
900030ca:	f040 8096 	bne.w	900031fa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
900030ce:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900030d2:	4604      	mov	r4, r0
900030d4:	b933      	cbnz	r3, 900030e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900030d6:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900030da:	b91b      	cbnz	r3, 900030e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900030dc:	2501      	movs	r5, #1
    }
900030de:	4628      	mov	r0, r5
900030e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900030e4:	4b48      	ldr	r3, [pc, #288]	@ (90003208 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900030e6:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900030e8:	6921      	ldr	r1, [r4, #16]
900030ea:	681b      	ldr	r3, [r3, #0]
900030ec:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900030f0:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900030f4:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900030f6:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900030fa:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900030fc:	b979      	cbnz	r1, 9000311e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900030fe:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
90003100:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003102:	6961      	ldr	r1, [r4, #20]
90003104:	fb01 f303 	mul.w	r3, r1, r3
90003108:	69a1      	ldr	r1, [r4, #24]
9000310a:	fb01 f202 	mul.w	r2, r1, r2
9000310e:	4293      	cmp	r3, r2
90003110:	d824      	bhi.n	9000315c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
90003112:	2300      	movs	r3, #0
    }
90003114:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
90003116:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
9000311a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
9000311e:	6813      	ldr	r3, [r2, #0]
90003120:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
90003122:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003124:	695b      	ldr	r3, [r3, #20]
90003126:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
90003128:	69e1      	ldr	r1, [r4, #28]
9000312a:	bb21      	cbnz	r1, 90003176 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
9000312c:	6a23      	ldr	r3, [r4, #32]
9000312e:	2b00      	cmp	r3, #0
90003130:	d142      	bne.n	900031b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003132:	4f36      	ldr	r7, [pc, #216]	@ (9000320c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003134:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003138:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000313a:	2d00      	cmp	r5, #0
9000313c:	d02c      	beq.n	90003198 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000313e:	699b      	ldr	r3, [r3, #24]
90003140:	4630      	mov	r0, r6
90003142:	4798      	blx	r3
90003144:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003146:	6833      	ldr	r3, [r6, #0]
90003148:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000314a:	42bb      	cmp	r3, r7
9000314c:	d145      	bne.n	900031da <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000314e:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003150:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003152:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003154:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003156:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003158:	60a2      	str	r2, [r4, #8]
9000315a:	e7d2      	b.n	90003102 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
9000315c:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003160:	b138      	cbz	r0, 90003172 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003162:	1a9b      	subs	r3, r3, r2
90003164:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003168:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000316a:	bf98      	it	ls
9000316c:	f102 32ff 	addls.w	r2, r2, #4294967295
90003170:	6222      	str	r2, [r4, #32]
            return true;
90003172:	2301      	movs	r3, #1
90003174:	e7ce      	b.n	90003114 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003176:	6833      	ldr	r3, [r6, #0]
90003178:	4630      	mov	r0, r6
9000317a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000317c:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000317e:	6833      	ldr	r3, [r6, #0]
90003180:	69e5      	ldr	r5, [r4, #28]
90003182:	4630      	mov	r0, r6
90003184:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003186:	4798      	blx	r3
90003188:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
9000318a:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000318c:	bf28      	it	cs
9000318e:	2500      	movcs	r5, #0
90003190:	4f1e      	ldr	r7, [pc, #120]	@ (9000320c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
90003192:	bf38      	it	cc
90003194:	2501      	movcc	r5, #1
90003196:	e7d6      	b.n	90003146 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003198:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000319a:	42ba      	cmp	r2, r7
9000319c:	d124      	bne.n	900031e8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
9000319e:	f8d6 8014 	ldr.w	r8, [r6, #20]
900031a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900031a4:	4630      	mov	r0, r6
900031a6:	4798      	blx	r3
900031a8:	4580      	cmp	r8, r0
900031aa:	d219      	bcs.n	900031e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
900031ac:	6833      	ldr	r3, [r6, #0]
900031ae:	4630      	mov	r0, r6
900031b0:	699b      	ldr	r3, [r3, #24]
900031b2:	4798      	blx	r3
900031b4:	4605      	mov	r5, r0
900031b6:	e7c6      	b.n	90003146 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900031b8:	6832      	ldr	r2, [r6, #0]
900031ba:	4f14      	ldr	r7, [pc, #80]	@ (9000320c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900031bc:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900031c0:	42ba      	cmp	r2, r7
900031c2:	d116      	bne.n	900031f2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900031c4:	6970      	ldr	r0, [r6, #20]
900031c6:	18c1      	adds	r1, r0, r3
900031c8:	4630      	mov	r0, r6
900031ca:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
900031cc:	6a22      	ldr	r2, [r4, #32]
900031ce:	68a3      	ldr	r3, [r4, #8]
900031d0:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900031d2:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900031d4:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900031d6:	6222      	str	r2, [r4, #32]
900031d8:	e7ac      	b.n	90003134 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900031da:	4630      	mov	r0, r6
900031dc:	4798      	blx	r3
900031de:	e7b7      	b.n	90003150 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900031e0:	2300      	movs	r3, #0
900031e2:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900031e6:	e7ae      	b.n	90003146 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900031e8:	4630      	mov	r0, r6
900031ea:	4790      	blx	r2
900031ec:	6833      	ldr	r3, [r6, #0]
900031ee:	4680      	mov	r8, r0
900031f0:	e7d7      	b.n	900031a2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900031f2:	4630      	mov	r0, r6
900031f4:	4790      	blx	r2
900031f6:	6a23      	ldr	r3, [r4, #32]
900031f8:	e7e5      	b.n	900031c6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900031fa:	4b05      	ldr	r3, [pc, #20]	@ (90003210 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900031fc:	21a9      	movs	r1, #169	@ 0xa9
900031fe:	4a05      	ldr	r2, [pc, #20]	@ (90003214 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
90003200:	4805      	ldr	r0, [pc, #20]	@ (90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
90003202:	f023 fdf9 	bl	90026df8 <__assert_func>
90003206:	bf00      	nop
90003208:	24021c5c 	.word	0x24021c5c
9000320c:	9000101d 	.word	0x9000101d
90003210:	90028794 	.word	0x90028794
90003214:	90028f70 	.word	0x90028f70
90003218:	900288c4 	.word	0x900288c4

9000321c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
9000321c:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000321e:	bb11      	cbnz	r1, 90003266 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
90003220:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003222:	6840      	ldr	r0, [r0, #4]
90003224:	4611      	mov	r1, r2
90003226:	461a      	mov	r2, r3
90003228:	6803      	ldr	r3, [r0, #0]
9000322a:	689b      	ldr	r3, [r3, #8]
9000322c:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000322e:	6860      	ldr	r0, [r4, #4]
90003230:	4a10      	ldr	r2, [pc, #64]	@ (90003274 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003232:	6803      	ldr	r3, [r0, #0]
90003234:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003236:	4293      	cmp	r3, r2
90003238:	d10c      	bne.n	90003254 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000323a:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
9000323c:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000323e:	2300      	movs	r3, #0
90003240:	4a0d      	ldr	r2, [pc, #52]	@ (90003278 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003242:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003244:	60e0      	str	r0, [r4, #12]
90003246:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003248:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
9000324c:	d104      	bne.n	90003258 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000324e:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003252:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003254:	4798      	blx	r3
90003256:	e7f1      	b.n	9000323c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003258:	4620      	mov	r0, r4
9000325a:	46ac      	mov	ip, r5
9000325c:	2201      	movs	r2, #1
9000325e:	4619      	mov	r1, r3
    }
90003260:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003264:	4760      	bx	ip
        assert(handle < no_streams);
90003266:	4b05      	ldr	r3, [pc, #20]	@ (9000327c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003268:	214e      	movs	r1, #78	@ 0x4e
9000326a:	4a05      	ldr	r2, [pc, #20]	@ (90003280 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
9000326c:	4805      	ldr	r0, [pc, #20]	@ (90003284 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000326e:	f023 fdc3 	bl	90026df8 <__assert_func>
90003272:	bf00      	nop
90003274:	9000101d 	.word	0x9000101d
90003278:	900032f1 	.word	0x900032f1
9000327c:	90028794 	.word	0x90028794
90003280:	900290a4 	.word	0x900290a4
90003284:	900288c4 	.word	0x900288c4

90003288 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003288:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000328a:	bb09      	cbnz	r1, 900032d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
9000328c:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000328e:	6840      	ldr	r0, [r0, #4]
90003290:	4611      	mov	r1, r2
90003292:	6803      	ldr	r3, [r0, #0]
90003294:	68db      	ldr	r3, [r3, #12]
90003296:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003298:	6860      	ldr	r0, [r4, #4]
9000329a:	4a10      	ldr	r2, [pc, #64]	@ (900032dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
9000329c:	6803      	ldr	r3, [r0, #0]
9000329e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900032a0:	4293      	cmp	r3, r2
900032a2:	d10c      	bne.n	900032be <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
900032a4:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900032a6:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900032a8:	2300      	movs	r3, #0
900032aa:	4a0d      	ldr	r2, [pc, #52]	@ (900032e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
900032ac:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032ae:	60e0      	str	r0, [r4, #12]
900032b0:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900032b2:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900032b6:	d104      	bne.n	900032c2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900032b8:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900032bc:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900032be:	4798      	blx	r3
900032c0:	e7f1      	b.n	900032a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900032c2:	4620      	mov	r0, r4
900032c4:	46ac      	mov	ip, r5
900032c6:	2201      	movs	r2, #1
900032c8:	4619      	mov	r1, r3
    }
900032ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
900032ce:	4760      	bx	ip
        assert(handle < no_streams);
900032d0:	4b04      	ldr	r3, [pc, #16]	@ (900032e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900032d2:	215e      	movs	r1, #94	@ 0x5e
900032d4:	4a04      	ldr	r2, [pc, #16]	@ (900032e8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900032d6:	4805      	ldr	r0, [pc, #20]	@ (900032ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900032d8:	f023 fd8e 	bl	90026df8 <__assert_func>
900032dc:	9000101d 	.word	0x9000101d
900032e0:	900032f1 	.word	0x900032f1
900032e4:	90028794 	.word	0x90028794
900032e8:	90029210 	.word	0x90029210
900032ec:	900288c4 	.word	0x900288c4

900032f0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900032f0:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900032f2:	2900      	cmp	r1, #0
900032f4:	d14f      	bne.n	90003396 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900032f6:	4604      	mov	r4, r0
        switch (cmd)
900032f8:	2a05      	cmp	r2, #5
900032fa:	d80b      	bhi.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900032fc:	e8df f002 	tbb	[pc, r2]
90003300:	3c373311 	.word	0x3c373311
90003304:	0b03      	.short	0x0b03
            stream.isPlaying = false;
90003306:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
90003308:	2201      	movs	r2, #1
            stream.isPlaying = false;
9000330a:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
9000330e:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
90003310:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
90003312:	6103      	str	r3, [r0, #16]
    }
90003314:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
90003316:	3b00      	subs	r3, #0
90003318:	bf18      	it	ne
9000331a:	2301      	movne	r3, #1
9000331c:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
90003320:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003322:	6840      	ldr	r0, [r0, #4]
90003324:	6803      	ldr	r3, [r0, #0]
90003326:	691b      	ldr	r3, [r3, #16]
90003328:	4798      	blx	r3
9000332a:	2800      	cmp	r0, #0
9000332c:	d0f2      	beq.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
9000332e:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003330:	2101      	movs	r1, #1
                if (!stream.repeat)
90003332:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003336:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000333a:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
9000333c:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000333e:	2a00      	cmp	r2, #0
90003340:	d1e8      	bne.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003342:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003344:	4917      	ldr	r1, [pc, #92]	@ (900033a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003346:	6823      	ldr	r3, [r4, #0]
90003348:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000334a:	428a      	cmp	r2, r1
9000334c:	d11e      	bne.n	9000338c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000334e:	6965      	ldr	r5, [r4, #20]
90003350:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003352:	4620      	mov	r0, r4
90003354:	4798      	blx	r3
90003356:	4285      	cmp	r5, r0
90003358:	d1dc      	bne.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000335a:	6823      	ldr	r3, [r4, #0]
9000335c:	4620      	mov	r0, r4
9000335e:	699b      	ldr	r3, [r3, #24]
    }
90003360:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003364:	4718      	bx	r3
            stream.isPlaying = false;
90003366:	2300      	movs	r3, #0
90003368:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
9000336c:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000336e:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003370:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
90003372:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003374:	6102      	str	r2, [r0, #16]
    }
90003376:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003378:	2101      	movs	r1, #1
            stream.frameCount = 0;
9000337a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000337c:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000337e:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
90003382:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003386:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003388:	6102      	str	r2, [r0, #16]
    }
9000338a:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000338c:	4620      	mov	r0, r4
9000338e:	4790      	blx	r2
90003390:	6823      	ldr	r3, [r4, #0]
90003392:	4605      	mov	r5, r0
90003394:	e7dc      	b.n	90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
90003396:	4b04      	ldr	r3, [pc, #16]	@ (900033a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003398:	216e      	movs	r1, #110	@ 0x6e
9000339a:	4a04      	ldr	r2, [pc, #16]	@ (900033ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
9000339c:	4804      	ldr	r0, [pc, #16]	@ (900033b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
9000339e:	f023 fd2b 	bl	90026df8 <__assert_func>
900033a2:	bf00      	nop
900033a4:	9000101d 	.word	0x9000101d
900033a8:	90028794 	.word	0x90028794
900033ac:	90029348 	.word	0x90029348
900033b0:	900288c4 	.word	0x900288c4

900033b4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900033b4:	b538      	push	{r3, r4, r5, lr}
900033b6:	4604      	mov	r4, r0
    HAL::initialize();
900033b8:	f00c fee1 	bl	9001017e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900033bc:	6823      	ldr	r3, [r4, #0]
900033be:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
900033c0:	f011 fffa 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
900033c4:	4601      	mov	r1, r0
900033c6:	4620      	mov	r0, r4
900033c8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900033ca:	6823      	ldr	r3, [r4, #0]
900033cc:	4a13      	ldr	r2, [pc, #76]	@ (9000341c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
900033ce:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
900033d2:	4295      	cmp	r5, r2
900033d4:	d116      	bne.n	90003404 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900033d6:	4a12      	ldr	r2, [pc, #72]	@ (90003420 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900033d8:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900033da:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900033de:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900033e2:	4810      	ldr	r0, [pc, #64]	@ (90003424 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900033e4:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900033e8:	4a0f      	ldr	r2, [pc, #60]	@ (90003428 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900033ea:	7005      	strb	r5, [r0, #0]
900033ec:	4293      	cmp	r3, r2
900033ee:	d110      	bne.n	90003412 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900033f0:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900033f2:	4a0e      	ldr	r2, [pc, #56]	@ (9000342c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900033f4:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900033f6:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900033f8:	4b0d      	ldr	r3, [pc, #52]	@ (90003430 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900033fa:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900033fc:	4a0d      	ldr	r2, [pc, #52]	@ (90003434 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900033fe:	6459      	str	r1, [r3, #68]	@ 0x44
90003400:	6053      	str	r3, [r2, #4]
}
90003402:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003404:	4a0c      	ldr	r2, [pc, #48]	@ (90003438 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
90003406:	2300      	movs	r3, #0
90003408:	4620      	mov	r0, r4
9000340a:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
9000340e:	47a8      	blx	r5
90003410:	e7f2      	b.n	900033f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003412:	2100      	movs	r1, #0
90003414:	4620      	mov	r0, r4
90003416:	4798      	blx	r3
90003418:	e7ee      	b.n	900033f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000341a:	bf00      	nop
9000341c:	90000f31 	.word	0x90000f31
90003420:	d003fc00 	.word	0xd003fc00
90003424:	24021c5a 	.word	0x24021c5a
90003428:	90000d6d 	.word	0x90000d6d
9000342c:	24021c5b 	.word	0x24021c5b
90003430:	24007828 	.word	0x24007828
90003434:	240077f8 	.word	0x240077f8
90003438:	d007f800 	.word	0xd007f800

9000343c <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
9000343c:	4842      	ldr	r0, [pc, #264]	@ (90003548 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
{
9000343e:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003440:	6804      	ldr	r4, [r0, #0]
90003442:	f3bf 8f5b 	dmb	ish
90003446:	f014 0401 	ands.w	r4, r4, #1
9000344a:	d001      	beq.n	90003450 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
9000344c:	483f      	ldr	r0, [pc, #252]	@ (9000354c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000344e:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003450:	f023 f95c 	bl	9002670c <__cxa_guard_acquire>
90003454:	2800      	cmp	r0, #0
90003456:	d0f9      	beq.n	9000344c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003458:	4d3c      	ldr	r5, [pc, #240]	@ (9000354c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000345a:	4b3d      	ldr	r3, [pc, #244]	@ (90003550 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000345c:	4e3d      	ldr	r6, [pc, #244]	@ (90003554 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
9000345e:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003462:	612c      	str	r4, [r5, #16]
90003464:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003468:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
9000346c:	e9c5 3400 	strd	r3, r4, [r5]
90003470:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003474:	f013 fb2d 	bl	90016ad2 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003478:	f105 0058 	add.w	r0, r5, #88	@ 0x58
9000347c:	f00f f936 	bl	900126ec <_ZN8touchgfx12CanvasWidgetC1Ev>
90003480:	4935      	ldr	r1, [pc, #212]	@ (90003558 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90003482:	4a36      	ldr	r2, [pc, #216]	@ (9000355c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
90003484:	6833      	ldr	r3, [r6, #0]
90003486:	65a9      	str	r1, [r5, #88]	@ 0x58
90003488:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
class CWRVectorRendererRGB565 : public CWRVectorRenderer
9000348c:	4934      	ldr	r1, [pc, #208]	@ (90003560 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
9000348e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
90003492:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
90003496:	6029      	str	r1, [r5, #0]
90003498:	b192      	cbz	r2, 900034c0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
9000349a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000349c:	2800      	cmp	r0, #0
9000349e:	d03f      	beq.n	90003520 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
900034a0:	6803      	ldr	r3, [r0, #0]
900034a2:	4c30      	ldr	r4, [pc, #192]	@ (90003564 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
900034a4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900034a6:	42a2      	cmp	r2, r4
900034a8:	d017      	beq.n	900034da <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900034aa:	4790      	blx	r2
        return auxiliaryLCD;
900034ac:	6833      	ldr	r3, [r6, #0]
900034ae:	fab0 f680 	clz	r6, r0
900034b2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900034b4:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900034b6:	2800      	cmp	r0, #0
900034b8:	d03e      	beq.n	90003538 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfc>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900034ba:	6803      	ldr	r3, [r0, #0]
900034bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900034be:	e00a      	b.n	900034d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900034c0:	6898      	ldr	r0, [r3, #8]
900034c2:	4c28      	ldr	r4, [pc, #160]	@ (90003564 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900034c4:	6802      	ldr	r2, [r0, #0]
900034c6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900034c8:	42a2      	cmp	r2, r4
900034ca:	d1ee      	bne.n	900034aa <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
900034cc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900034ce:	b120      	cbz	r0, 900034da <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900034d0:	6803      	ldr	r3, [r0, #0]
900034d2:	2601      	movs	r6, #1
900034d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900034d6:	42a3      	cmp	r3, r4
900034d8:	d129      	bne.n	9000352e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf2>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900034da:	4923      	ldr	r1, [pc, #140]	@ (90003568 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900034dc:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900034de:	2300      	movs	r3, #0
        : AbstractPainter(),
900034e0:	2464      	movs	r4, #100	@ 0x64
900034e2:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : widgetWidth(0)
900034e6:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900034ea:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900034ee:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900034f2:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900034f6:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900034fa:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
        : AbstractPainter(),
900034fe:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
90003502:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
90003506:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
9000350a:	4a18      	ldr	r2, [pc, #96]	@ (9000356c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
9000350c:	4818      	ldr	r0, [pc, #96]	@ (90003570 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
9000350e:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
90003512:	f023 fc8f 	bl	90026e34 <atexit>
90003516:	480c      	ldr	r0, [pc, #48]	@ (90003548 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
90003518:	f023 f904 	bl	90026724 <__cxa_guard_release>
}
9000351c:	480b      	ldr	r0, [pc, #44]	@ (9000354c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000351e:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003520:	6898      	ldr	r0, [r3, #8]
90003522:	4c10      	ldr	r4, [pc, #64]	@ (90003564 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003524:	6803      	ldr	r3, [r0, #0]
90003526:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003528:	42a2      	cmp	r2, r4
9000352a:	d0d6      	beq.n	900034da <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000352c:	e7bd      	b.n	900034aa <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000352e:	4798      	blx	r3
90003530:	2800      	cmp	r0, #0
90003532:	bf08      	it	eq
90003534:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90003538:	2e00      	cmp	r6, #0
9000353a:	d1ce      	bne.n	900034da <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
9000353c:	4b0d      	ldr	r3, [pc, #52]	@ (90003574 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
9000353e:	212c      	movs	r1, #44	@ 0x2c
90003540:	4a0d      	ldr	r2, [pc, #52]	@ (90003578 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003542:	480e      	ldr	r0, [pc, #56]	@ (9000357c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003544:	f023 fc58 	bl	90026df8 <__assert_func>
90003548:	24007738 	.word	0x24007738
9000354c:	2400773c 	.word	0x2400773c
90003550:	9002a590 	.word	0x9002a590
90003554:	24021c5c 	.word	0x24021c5c
90003558:	900295d4 	.word	0x900295d4
9000355c:	900295b4 	.word	0x900295b4
90003560:	9002964c 	.word	0x9002964c
90003564:	90002de9 	.word	0x90002de9
90003568:	9002a544 	.word	0x9002a544
9000356c:	9002a524 	.word	0x9002a524
90003570:	90002e19 	.word	0x90002e19
90003574:	900294ac 	.word	0x900294ac
90003578:	9002950c 	.word	0x9002950c
9000357c:	90029548 	.word	0x90029548

90003580 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90003580:	b510      	push	{r4, lr}
        return instance;
90003582:	4c14      	ldr	r4, [pc, #80]	@ (900035d4 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90003584:	6823      	ldr	r3, [r4, #0]
90003586:	b323      	cbz	r3, 900035d2 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003588:	4b13      	ldr	r3, [pc, #76]	@ (900035d8 <HAL_LTDC_LineEventCallback+0x58>)
9000358a:	4a14      	ldr	r2, [pc, #80]	@ (900035dc <HAL_LTDC_LineEventCallback+0x5c>)
9000358c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000358e:	8811      	ldrh	r1, [r2, #0]
90003590:	428b      	cmp	r3, r1
90003592:	d00a      	beq.n	900035aa <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003594:	f007 f922 	bl	9000a7dc <HAL_LTDC_ProgramLineEvent>
90003598:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
9000359a:	6803      	ldr	r3, [r0, #0]
9000359c:	6a1b      	ldr	r3, [r3, #32]
9000359e:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
900035a0:	2000      	movs	r0, #0
        }
    }
900035a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900035a6:	f7fd bb85 	b.w	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900035aa:	4b0d      	ldr	r3, [pc, #52]	@ (900035e0 <HAL_LTDC_LineEventCallback+0x60>)
900035ac:	8819      	ldrh	r1, [r3, #0]
900035ae:	f007 f915 	bl	9000a7dc <HAL_LTDC_ProgramLineEvent>
        return instance;
900035b2:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900035b4:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
900035b8:	3301      	adds	r3, #1
900035ba:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            OSWrappers::signalVSync();
900035be:	f7fe fed9 	bl	90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900035c2:	6820      	ldr	r0, [r4, #0]
900035c4:	f00d fb34 	bl	90010c30 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900035c8:	2000      	movs	r0, #0
    }
900035ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900035ce:	f7fd bb3d 	b.w	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900035d2:	bd10      	pop	{r4, pc}
900035d4:	24021c5c 	.word	0x24021c5c
900035d8:	50001000 	.word	0x50001000
900035dc:	24007736 	.word	0x24007736
900035e0:	24007734 	.word	0x24007734

900035e4 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900035e4:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900035e6:	480b      	ldr	r0, [pc, #44]	@ (90003614 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900035e8:	f7fd fe8e 	bl	90001308 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900035ec:	4c0a      	ldr	r4, [pc, #40]	@ (90003618 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900035ee:	4b0b      	ldr	r3, [pc, #44]	@ (9000361c <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900035f0:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900035f2:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900035f6:	2101      	movs	r1, #1
900035f8:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900035fa:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900035fc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
90003600:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
90003604:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
90003606:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
9000360a:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
9000360e:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
90003612:	bd10      	pop	{r4, pc}
90003614:	24007828 	.word	0x24007828
90003618:	90029698 	.word	0x90029698
9000361c:	240077f8 	.word	0x240077f8

90003620 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003620:	4901      	ldr	r1, [pc, #4]	@ (90003628 <vApplicationIdleHook+0x8>)
90003622:	2000      	movs	r0, #0
90003624:	f00b be10 	b.w	9000f248 <vTaskSetApplicationTaskTag>
90003628:	90000ffd 	.word	0x90000ffd

9000362c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
9000362c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
9000362e:	2064      	movs	r0, #100	@ 0x64
90003630:	f009 fccc 	bl	9000cfcc <osDelay>
  for(;;)
90003634:	e7fb      	b.n	9000362e <StartDefaultTask+0x2>
90003636:	bf00      	nop

90003638 <SystemClock_Config>:
{
90003638:	b570      	push	{r4, r5, r6, lr}
9000363a:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
9000363c:	224c      	movs	r2, #76	@ 0x4c
9000363e:	2100      	movs	r1, #0
90003640:	a80a      	add	r0, sp, #40	@ 0x28
90003642:	f023 fe75 	bl	90027330 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003646:	2220      	movs	r2, #32
90003648:	2100      	movs	r1, #0
9000364a:	a802      	add	r0, sp, #8
9000364c:	f023 fe70 	bl	90027330 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003650:	2002      	movs	r0, #2
90003652:	f007 fb2d 	bl	9000acb0 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90003656:	4b22      	ldr	r3, [pc, #136]	@ (900036e0 <SystemClock_Config+0xa8>)
90003658:	2100      	movs	r1, #0
9000365a:	4a22      	ldr	r2, [pc, #136]	@ (900036e4 <SystemClock_Config+0xac>)
9000365c:	9101      	str	r1, [sp, #4]
9000365e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003660:	f021 0101 	bic.w	r1, r1, #1
90003664:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003666:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003668:	f003 0301 	and.w	r3, r3, #1
9000366c:	9301      	str	r3, [sp, #4]
9000366e:	6993      	ldr	r3, [r2, #24]
90003670:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
90003674:	6193      	str	r3, [r2, #24]
90003676:	6993      	ldr	r3, [r2, #24]
90003678:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
9000367c:	9301      	str	r3, [sp, #4]
9000367e:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003680:	6993      	ldr	r3, [r2, #24]
90003682:	0499      	lsls	r1, r3, #18
90003684:	d5fc      	bpl.n	90003680 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003686:	2201      	movs	r2, #1
90003688:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
9000368c:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
9000368e:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003690:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003692:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90003694:	9417      	str	r4, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90003696:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
9000369a:	2205      	movs	r2, #5
9000369c:	23a0      	movs	r3, #160	@ 0xa0
9000369e:	e9cd 2315 	strd	r2, r3, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
900036a2:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
900036a4:	e9cd 4413 	strd	r4, r4, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
900036a8:	9318      	str	r3, [sp, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
900036aa:	e9cd 4619 	strd	r4, r6, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900036ae:	e9cd 551b 	strd	r5, r5, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900036b2:	f007 fb93 	bl	9000addc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
900036b6:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900036b8:	223f      	movs	r2, #63	@ 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
900036ba:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
900036bc:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
900036be:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
900036c2:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
900036c4:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
900036c6:	9309      	str	r3, [sp, #36]	@ 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
900036c8:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
900036ca:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
900036cc:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
900036d0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
900036d4:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
900036d6:	f007 ff01 	bl	9000b4dc <HAL_RCC_ClockConfig>
}
900036da:	b01e      	add	sp, #120	@ 0x78
900036dc:	bd70      	pop	{r4, r5, r6, pc}
900036de:	bf00      	nop
900036e0:	58000400 	.word	0x58000400
900036e4:	58024800 	.word	0x58024800

900036e8 <main>:
{
900036e8:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
900036ea:	2400      	movs	r4, #0
{
900036ec:	b098      	sub	sp, #96	@ 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
900036ee:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900036f0:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900036f2:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
900036f4:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900036f8:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_MPU_Disable();
900036fc:	f004 fa4e 	bl	90007b9c <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003700:	f04f 5310 	mov.w	r3, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003704:	49d3      	ldr	r1, [pc, #844]	@ (90003a54 <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003706:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90003708:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000370a:	4bd3      	ldr	r3, [pc, #844]	@ (90003a58 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
9000370c:	f8ad 502c 	strh.w	r5, [sp, #44]	@ 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003710:	e9cd 130d 	strd	r1, r3, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003714:	f004 fa60 	bl	90007bd8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003718:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000371c:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000371e:	f88d 4037 	strb.w	r4, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90003722:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003724:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003728:	f88d 502d 	strb.w	r5, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000372c:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003730:	f004 fa52 	bl	90007bd8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003734:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003736:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003738:	f8ad 6037 	strh.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
9000373c:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90003740:	231a      	movs	r3, #26
90003742:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003746:	f240 1301 	movw	r3, #257	@ 0x101
9000374a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000374e:	f004 fa43 	bl	90007bd8 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003752:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003756:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003758:	f8ad 403a 	strh.w	r4, [sp, #58]	@ 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
9000375c:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000375e:	f8ad 3037 	strh.w	r3, [sp, #55]	@ 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90003762:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003766:	f88d 7034 	strb.w	r7, [sp, #52]	@ 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
9000376a:	930c      	str	r3, [sp, #48]	@ 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
9000376c:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003770:	f004 fa32 	bl	90007bd8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90003774:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003776:	a80b      	add	r0, sp, #44	@ 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003778:	f88d 6037 	strb.w	r6, [sp, #55]	@ 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
9000377c:	f88d 3034 	strb.w	r3, [sp, #52]	@ 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90003780:	f88d 402d 	strb.w	r4, [sp, #45]	@ 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90003784:	f88d 503a 	strb.w	r5, [sp, #58]	@ 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003788:	f004 fa26 	bl	90007bd8 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
9000378c:	4620      	mov	r0, r4
9000378e:	f004 fa13 	bl	90007bb8 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90003792:	4ab2      	ldr	r2, [pc, #712]	@ (90003a5c <main+0x374>)
90003794:	6953      	ldr	r3, [r2, #20]
90003796:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
9000379a:	d111      	bne.n	900037c0 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
9000379c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900037a0:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
900037a4:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
900037a8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900037ac:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
900037b0:	6953      	ldr	r3, [r2, #20]
900037b2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
900037b6:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
900037b8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900037bc:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
900037c0:	48a6      	ldr	r0, [pc, #664]	@ (90003a5c <main+0x374>)
900037c2:	6943      	ldr	r3, [r0, #20]
900037c4:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
900037c8:	d124      	bne.n	90003814 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900037ca:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900037ce:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900037d2:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900037d6:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900037da:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900037de:	f3c5 05c9 	ubfx	r5, r5, #3, #10
900037e2:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900037e4:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900037e8:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900037ea:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900037ee:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900037f0:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
900037f4:	1c5a      	adds	r2, r3, #1
900037f6:	d1f8      	bne.n	900037ea <main+0x102>
    } while(sets-- != 0U);
900037f8:	3c20      	subs	r4, #32
900037fa:	f114 0f20 	cmn.w	r4, #32
900037fe:	d1f1      	bne.n	900037e4 <main+0xfc>
90003800:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003804:	6943      	ldr	r3, [r0, #20]
90003806:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000380a:	6143      	str	r3, [r0, #20]
9000380c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003810:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003814:	f004 f90c 	bl	90007a30 <HAL_Init>
  SystemClock_Config();
90003818:	f7ff ff0e 	bl	90003638 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
9000381c:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000381e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003820:	4d8f      	ldr	r5, [pc, #572]	@ (90003a60 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003822:	21c0      	movs	r1, #192	@ 0xc0
90003824:	488f      	ldr	r0, [pc, #572]	@ (90003a64 <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003826:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003828:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000382a:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000382c:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003830:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90003832:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003836:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000383a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
9000383e:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003842:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003846:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
9000384a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000384e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003852:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90003856:	9301      	str	r3, [sp, #4]
90003858:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000385a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000385e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90003862:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003866:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000386a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
9000386e:	9302      	str	r3, [sp, #8]
90003870:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90003872:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003876:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000387a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000387e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003882:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90003886:	9303      	str	r3, [sp, #12]
90003888:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
9000388a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000388e:	f043 0310 	orr.w	r3, r3, #16
90003892:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003896:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000389a:	f003 0310 	and.w	r3, r3, #16
9000389e:	9304      	str	r3, [sp, #16]
900038a0:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
900038a2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900038a6:	f043 0302 	orr.w	r3, r3, #2
900038aa:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900038ae:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900038b2:	f003 0302 	and.w	r3, r3, #2
900038b6:	9305      	str	r3, [sp, #20]
900038b8:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
900038ba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900038be:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
900038c2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900038c6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900038ca:	f403 7300 	and.w	r3, r3, #512	@ 0x200
900038ce:	9306      	str	r3, [sp, #24]
900038d0:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
900038d2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900038d6:	f043 0308 	orr.w	r3, r3, #8
900038da:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900038de:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900038e2:	f003 0308 	and.w	r3, r3, #8
900038e6:	9307      	str	r3, [sp, #28]
900038e8:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
900038ea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900038ee:	f043 0320 	orr.w	r3, r3, #32
900038f2:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900038f6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900038fa:	f003 0320 	and.w	r3, r3, #32
900038fe:	9308      	str	r3, [sp, #32]
90003900:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003902:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003906:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000390a:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000390e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003912:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003916:	9309      	str	r3, [sp, #36]	@ 0x24
90003918:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
9000391a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000391e:	f043 0301 	orr.w	r3, r3, #1
90003922:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003926:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000392a:	f003 0301 	and.w	r3, r3, #1
9000392e:	930a      	str	r3, [sp, #40]	@ 0x28
90003930:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003932:	f004 fd4d 	bl	900083d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003936:	4622      	mov	r2, r4
90003938:	2180      	movs	r1, #128	@ 0x80
9000393a:	484b      	ldr	r0, [pc, #300]	@ (90003a68 <main+0x380>)
9000393c:	f004 fd48 	bl	900083d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003940:	4622      	mov	r2, r4
90003942:	2108      	movs	r1, #8
90003944:	4849      	ldr	r0, [pc, #292]	@ (90003a6c <main+0x384>)
90003946:	f004 fd43 	bl	900083d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
9000394a:	2201      	movs	r2, #1
9000394c:	4848      	ldr	r0, [pc, #288]	@ (90003a70 <main+0x388>)
9000394e:	4611      	mov	r1, r2
90003950:	f004 fd3e 	bl	900083d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003954:	4622      	mov	r2, r4
90003956:	2144      	movs	r1, #68	@ 0x44
90003958:	4846      	ldr	r0, [pc, #280]	@ (90003a74 <main+0x38c>)
9000395a:	f004 fd39 	bl	900083d0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
9000395e:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003960:	a90b      	add	r1, sp, #44	@ 0x2c
90003962:	4840      	ldr	r0, [pc, #256]	@ (90003a64 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003964:	e9cd 360b 	strd	r3, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003968:	e9cd 490d 	strd	r4, r9, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000396c:	f004 fb1e 	bl	90007fac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003970:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003972:	a90b      	add	r1, sp, #44	@ 0x2c
90003974:	483c      	ldr	r0, [pc, #240]	@ (90003a68 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003976:	930b      	str	r3, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003978:	940e      	str	r4, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
9000397a:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
9000397e:	f004 fb15 	bl	90007fac <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003982:	a90b      	add	r1, sp, #44	@ 0x2c
90003984:	4839      	ldr	r0, [pc, #228]	@ (90003a6c <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003986:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
9000398a:	970b      	str	r7, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
9000398c:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003990:	f004 fb0c 	bl	90007fac <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003994:	a90b      	add	r1, sp, #44	@ 0x2c
90003996:	4836      	ldr	r0, [pc, #216]	@ (90003a70 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003998:	e9cd 660b 	strd	r6, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000399c:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
900039a0:	f004 fb04 	bl	90007fac <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
900039a4:	a90b      	add	r1, sp, #44	@ 0x2c
900039a6:	4833      	ldr	r0, [pc, #204]	@ (90003a74 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900039a8:	e9cd 860b 	strd	r8, r6, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
900039ac:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
900039b0:	f004 fafc 	bl	90007fac <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900039b4:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900039b8:	f04f 0940 	mov.w	r9, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
900039bc:	a90b      	add	r1, sp, #44	@ 0x2c
900039be:	482d      	ldr	r0, [pc, #180]	@ (90003a74 <main+0x38c>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900039c0:	f8cd 902c 	str.w	r9, [sp, #44]	@ 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
900039c4:	e9cd 640c 	strd	r6, r4, [sp, #48]	@ 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
900039c8:	f004 faf0 	bl	90007fac <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
900039cc:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900039d0:	4622      	mov	r2, r4
900039d2:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
900039d4:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900039d6:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
900039d8:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
900039dc:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
900039e0:	4d25      	ldr	r5, [pc, #148]	@ (90003a78 <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
900039e2:	4033      	ands	r3, r6
900039e4:	9300      	str	r3, [sp, #0]
900039e6:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900039e8:	f004 f87c 	bl	90007ae4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
900039ec:	207a      	movs	r0, #122	@ 0x7a
900039ee:	f004 f8b5 	bl	90007b5c <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
900039f2:	2234      	movs	r2, #52	@ 0x34
900039f4:	4621      	mov	r1, r4
900039f6:	a80b      	add	r0, sp, #44	@ 0x2c
900039f8:	f023 fc9a 	bl	90027330 <memset>
  hltdc.Instance = LTDC;
900039fc:	4b1f      	ldr	r3, [pc, #124]	@ (90003a7c <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
900039fe:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003a00:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003a02:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003a04:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003a06:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003a0a:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003a0e:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003a10:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003a12:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003a14:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003a18:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003a1c:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003a20:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003a22:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003a26:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003a2a:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003a2c:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003a30:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003a34:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003a38:	f006 fd28 	bl	9000a48c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003a3c:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003a40:	4622      	mov	r2, r4
90003a42:	a90b      	add	r1, sp, #44	@ 0x2c
  pLayerCfg.WindowX1 = 480;
90003a44:	930c      	str	r3, [sp, #48]	@ 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003a46:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003a48:	9315      	str	r3, [sp, #84]	@ 0x54
  pLayerCfg.WindowY1 = 272;
90003a4a:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90003a4e:	4d0c      	ldr	r5, [pc, #48]	@ (90003a80 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90003a50:	930e      	str	r3, [sp, #56]	@ 0x38
90003a52:	e017      	b.n	90003a84 <main+0x39c>
90003a54:	03000012 	.word	0x03000012
90003a58:	01010001 	.word	0x01010001
90003a5c:	e000ed00 	.word	0xe000ed00
90003a60:	58024400 	.word	0x58024400
90003a64:	58020400 	.word	0x58020400
90003a68:	58020c00 	.word	0x58020c00
90003a6c:	58021800 	.word	0x58021800
90003a70:	58022800 	.word	0x58022800
90003a74:	58020000 	.word	0x58020000
90003a78:	240078ac 	.word	0x240078ac
90003a7c:	50001000 	.word	0x50001000
90003a80:	24007a84 	.word	0x24007a84
  pLayerCfg.ImageHeight = 272;
90003a84:	9316      	str	r3, [sp, #88]	@ 0x58
  pLayerCfg.Alpha = 255;
90003a86:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003a88:	940b      	str	r4, [sp, #44]	@ 0x2c
  pLayerCfg.Alpha = 255;
90003a8a:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003a8c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  pLayerCfg.WindowY0 = 0;
90003a90:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003a92:	9312      	str	r3, [sp, #72]	@ 0x48
  pLayerCfg.Alpha0 = 0;
90003a94:	9411      	str	r4, [sp, #68]	@ 0x44
  pLayerCfg.FBStartAdress = 0;
90003a96:	9414      	str	r4, [sp, #80]	@ 0x50
  pLayerCfg.Backcolor.Blue = 0;
90003a98:	f8ad 405c 	strh.w	r4, [sp, #92]	@ 0x5c
  pLayerCfg.Backcolor.Red = 0;
90003a9c:	f88d 405e 	strb.w	r4, [sp, #94]	@ 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003aa0:	970f      	str	r7, [sp, #60]	@ 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003aa2:	f8cd a04c 	str.w	sl, [sp, #76]	@ 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003aa6:	f006 fdc5 	bl	9000a634 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003aaa:	4b32      	ldr	r3, [pc, #200]	@ (90003b74 <main+0x48c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003aac:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003aae:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003ab0:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003ab2:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003ab4:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003ab8:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003abc:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003ac0:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003ac4:	f004 f930 	bl	90007d28 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003ac8:	4631      	mov	r1, r6
90003aca:	4628      	mov	r0, r5
90003acc:	f004 fa04 	bl	90007ed8 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003ad0:	4829      	ldr	r0, [pc, #164]	@ (90003b78 <main+0x490>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003ad2:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003ad6:	a90b      	add	r1, sp, #44	@ 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90003ad8:	f8cd a03c 	str.w	sl, [sp, #60]	@ 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90003adc:	970b      	str	r7, [sp, #44]	@ 0x2c
  SdramTiming.SelfRefreshTime = 4;
90003ade:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003ae2:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003ae6:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003aea:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003aec:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003af0:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90003af4:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003af6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
90003afa:	6243      	str	r3, [r0, #36]	@ 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90003afc:	2307      	movs	r3, #7
90003afe:	930c      	str	r3, [sp, #48]	@ 0x30
  SdramTiming.RowCycleDelay = 7;
90003b00:	930e      	str	r3, [sp, #56]	@ 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003b02:	4b1e      	ldr	r3, [pc, #120]	@ (90003b7c <main+0x494>)
90003b04:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003b06:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90003b08:	e9cd 7710 	strd	r7, r7, [sp, #64]	@ 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003b0c:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003b0e:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003b12:	f008 ff07 	bl	9000c924 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90003b16:	4620      	mov	r0, r4
90003b18:	f003 fd26 	bl	90007568 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003b1c:	4620      	mov	r0, r4
90003b1e:	f003 fd6d 	bl	900075fc <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003b22:	f7fc ffc3 	bl	90000aac <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003b26:	4b16      	ldr	r3, [pc, #88]	@ (90003b80 <main+0x498>)
90003b28:	4816      	ldr	r0, [pc, #88]	@ (90003b84 <main+0x49c>)
90003b2a:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003b2c:	f005 fc0a 	bl	90009344 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003b30:	4b15      	ldr	r3, [pc, #84]	@ (90003b88 <main+0x4a0>)
90003b32:	4816      	ldr	r0, [pc, #88]	@ (90003b8c <main+0x4a4>)
90003b34:	6003      	str	r3, [r0, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003b36:	8084      	strh	r4, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003b38:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003b3a:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003b3e:	f004 f87d 	bl	90007c3c <HAL_CRC_Init>
  MX_TouchGFX_Init();
90003b42:	f7fc ffb7 	bl	90000ab4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003b46:	f7fc ffb3 	bl	90000ab0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003b4a:	f009 f9d1 	bl	9000cef0 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003b4e:	4a10      	ldr	r2, [pc, #64]	@ (90003b90 <main+0x4a8>)
90003b50:	4621      	mov	r1, r4
90003b52:	4810      	ldr	r0, [pc, #64]	@ (90003b94 <main+0x4ac>)
90003b54:	f009 f9f8 	bl	9000cf48 <osThreadNew>
90003b58:	4b0f      	ldr	r3, [pc, #60]	@ (90003b98 <main+0x4b0>)
90003b5a:	4605      	mov	r5, r0
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003b5c:	4a0f      	ldr	r2, [pc, #60]	@ (90003b9c <main+0x4b4>)
90003b5e:	4621      	mov	r1, r4
90003b60:	480f      	ldr	r0, [pc, #60]	@ (90003ba0 <main+0x4b8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003b62:	601d      	str	r5, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003b64:	f009 f9f0 	bl	9000cf48 <osThreadNew>
90003b68:	4b0e      	ldr	r3, [pc, #56]	@ (90003ba4 <main+0x4bc>)
90003b6a:	6018      	str	r0, [r3, #0]
  osKernelStart();
90003b6c:	f009 f9d2 	bl	9000cf14 <osKernelStart>
  while (1)
90003b70:	e7fe      	b.n	90003b70 <main+0x488>
90003b72:	bf00      	nop
90003b74:	52001000 	.word	0x52001000
90003b78:	24007878 	.word	0x24007878
90003b7c:	52004140 	.word	0x52004140
90003b80:	52003000 	.word	0x52003000
90003b84:	24007a2c 	.word	0x24007a2c
90003b88:	58024c00 	.word	0x58024c00
90003b8c:	24007aec 	.word	0x24007aec
90003b90:	90029708 	.word	0x90029708
90003b94:	9000362d 	.word	0x9000362d
90003b98:	24007874 	.word	0x24007874
90003b9c:	900296e4 	.word	0x900296e4
90003ba0:	90000ac5 	.word	0x90000ac5
90003ba4:	24007870 	.word	0x24007870

90003ba8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90003ba8:	4b03      	ldr	r3, [pc, #12]	@ (90003bb8 <HAL_TIM_PeriodElapsedCallback+0x10>)
90003baa:	6802      	ldr	r2, [r0, #0]
90003bac:	429a      	cmp	r2, r3
90003bae:	d000      	beq.n	90003bb2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90003bb0:	4770      	bx	lr
    HAL_IncTick();
90003bb2:	f003 bf6d 	b.w	90007a90 <HAL_IncTick>
90003bb6:	bf00      	nop
90003bb8:	40001000 	.word	0x40001000

90003bbc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90003bbc:	4770      	bx	lr
90003bbe:	bf00      	nop

90003bc0 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003bc0:	4b0b      	ldr	r3, [pc, #44]	@ (90003bf0 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003bc2:	2200      	movs	r2, #0
90003bc4:	210f      	movs	r1, #15
90003bc6:	f06f 0001 	mvn.w	r0, #1
{
90003bca:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003bcc:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90003bd0:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003bd2:	f044 0402 	orr.w	r4, r4, #2
90003bd6:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90003bda:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90003bde:	f003 0302 	and.w	r3, r3, #2
90003be2:	9301      	str	r3, [sp, #4]
90003be4:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003be6:	b003      	add	sp, #12
90003be8:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003bec:	f003 bf7a 	b.w	90007ae4 <HAL_NVIC_SetPriority>
90003bf0:	58024400 	.word	0x58024400

90003bf4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90003bf4:	4b0a      	ldr	r3, [pc, #40]	@ (90003c20 <HAL_CRC_MspInit+0x2c>)
90003bf6:	6802      	ldr	r2, [r0, #0]
90003bf8:	429a      	cmp	r2, r3
90003bfa:	d000      	beq.n	90003bfe <HAL_CRC_MspInit+0xa>
90003bfc:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003bfe:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
90003c02:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90003c04:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003c08:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90003c0c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003c10:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90003c14:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90003c18:	9301      	str	r3, [sp, #4]
90003c1a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90003c1c:	b002      	add	sp, #8
90003c1e:	4770      	bx	lr
90003c20:	58024c00 	.word	0x58024c00

90003c24 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90003c24:	4b0f      	ldr	r3, [pc, #60]	@ (90003c64 <HAL_DMA2D_MspInit+0x40>)
90003c26:	6802      	ldr	r2, [r0, #0]
90003c28:	429a      	cmp	r2, r3
90003c2a:	d000      	beq.n	90003c2e <HAL_DMA2D_MspInit+0xa>
90003c2c:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003c2e:	4b0e      	ldr	r3, [pc, #56]	@ (90003c68 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003c30:	205a      	movs	r0, #90	@ 0x5a
90003c32:	2200      	movs	r2, #0
90003c34:	2105      	movs	r1, #5
{
90003c36:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003c38:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90003c3c:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003c3e:	f044 0410 	orr.w	r4, r4, #16
90003c42:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90003c46:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90003c4a:	f003 0310 	and.w	r3, r3, #16
90003c4e:	9301      	str	r3, [sp, #4]
90003c50:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003c52:	f003 ff47 	bl	90007ae4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003c56:	205a      	movs	r0, #90	@ 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90003c58:	b002      	add	sp, #8
90003c5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003c5e:	f003 bf7d 	b.w	90007b5c <HAL_NVIC_EnableIRQ>
90003c62:	bf00      	nop
90003c64:	52001000 	.word	0x52001000
90003c68:	58024400 	.word	0x58024400

90003c6c <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003c6c:	4b3f      	ldr	r3, [pc, #252]	@ (90003d6c <HAL_JPEG_MspInit+0x100>)
90003c6e:	6802      	ldr	r2, [r0, #0]
90003c70:	429a      	cmp	r2, r3
90003c72:	d000      	beq.n	90003c76 <HAL_JPEG_MspInit+0xa>
90003c74:	4770      	bx	lr
{
90003c76:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003c78:	4b3d      	ldr	r3, [pc, #244]	@ (90003d70 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003c7a:	2211      	movs	r2, #17
90003c7c:	4e3d      	ldr	r6, [pc, #244]	@ (90003d74 <HAL_JPEG_MspInit+0x108>)
{
90003c7e:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003c80:	4d3d      	ldr	r5, [pc, #244]	@ (90003d78 <HAL_JPEG_MspInit+0x10c>)
90003c82:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003c84:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003c86:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003c88:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003c8c:	493b      	ldr	r1, [pc, #236]	@ (90003d7c <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003c8e:	f042 0220 	orr.w	r2, r2, #32
90003c92:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003c96:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003c98:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003c9c:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003c9e:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003ca2:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003ca4:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003ca6:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003ca8:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003caa:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003cac:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003cb0:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90003cb4:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003cb6:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003cb8:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90003cbc:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003cc0:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003cc2:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90003cc6:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90003cca:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003cce:	2313      	movs	r3, #19
90003cd0:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003cd2:	2302      	movs	r3, #2
90003cd4:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003cd6:	f006 fda3 	bl	9000a820 <HAL_MDMA_Init>
90003cda:	2800      	cmp	r0, #0
90003cdc:	d13a      	bne.n	90003d54 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90003cde:	2200      	movs	r2, #0
90003ce0:	4824      	ldr	r0, [pc, #144]	@ (90003d74 <HAL_JPEG_MspInit+0x108>)
90003ce2:	4611      	mov	r1, r2
90003ce4:	f006 fe3a 	bl	9000a95c <HAL_MDMA_ConfigPostRequestMask>
90003ce8:	2800      	cmp	r0, #0
90003cea:	d13c      	bne.n	90003d66 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003cec:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003cee:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003cf0:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003cf2:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003cf4:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003cf6:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003cf8:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003cfc:	4920      	ldr	r1, [pc, #128]	@ (90003d80 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003cfe:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003d00:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
90003d02:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003d04:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003d06:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90003d0a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003d0e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003d10:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003d12:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003d16:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003d18:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003d1c:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003d20:	4815      	ldr	r0, [pc, #84]	@ (90003d78 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003d22:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003d24:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003d26:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003d28:	f006 fd7a 	bl	9000a820 <HAL_MDMA_Init>
90003d2c:	b9c0      	cbnz	r0, 90003d60 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90003d2e:	2200      	movs	r2, #0
90003d30:	4811      	ldr	r0, [pc, #68]	@ (90003d78 <HAL_JPEG_MspInit+0x10c>)
90003d32:	4611      	mov	r1, r2
90003d34:	f006 fe12 	bl	9000a95c <HAL_MDMA_ConfigPostRequestMask>
90003d38:	b978      	cbnz	r0, 90003d5a <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003d3a:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003d3c:	2079      	movs	r0, #121	@ 0x79
90003d3e:	2200      	movs	r2, #0
90003d40:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003d42:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003d44:	f003 fece 	bl	90007ae4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003d48:	2079      	movs	r0, #121	@ 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
90003d4a:	b002      	add	sp, #8
90003d4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003d50:	f003 bf04 	b.w	90007b5c <HAL_NVIC_EnableIRQ>
      Error_Handler();
90003d54:	f7ff ff32 	bl	90003bbc <Error_Handler>
90003d58:	e7c1      	b.n	90003cde <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90003d5a:	f7ff ff2f 	bl	90003bbc <Error_Handler>
90003d5e:	e7ec      	b.n	90003d3a <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90003d60:	f7ff ff2c 	bl	90003bbc <Error_Handler>
90003d64:	e7e3      	b.n	90003d2e <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
90003d66:	f7ff ff29 	bl	90003bbc <Error_Handler>
90003d6a:	e7bf      	b.n	90003cec <HAL_JPEG_MspInit+0x80>
90003d6c:	52003000 	.word	0x52003000
90003d70:	58024400 	.word	0x58024400
90003d74:	240079c0 	.word	0x240079c0
90003d78:	24007954 	.word	0x24007954
90003d7c:	52000200 	.word	0x52000200
90003d80:	520001c0 	.word	0x520001c0

90003d84 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003d84:	b570      	push	{r4, r5, r6, lr}
90003d86:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003d88:	2100      	movs	r1, #0
{
90003d8a:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003d8c:	22c0      	movs	r2, #192	@ 0xc0
90003d8e:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003d90:	9109      	str	r1, [sp, #36]	@ 0x24
90003d92:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003d96:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003d9a:	f023 fac9 	bl	90027330 <memset>
  if(hltdc->Instance==LTDC)
90003d9e:	4b4a      	ldr	r3, [pc, #296]	@ (90003ec8 <HAL_LTDC_MspInit+0x144>)
90003da0:	6822      	ldr	r2, [r4, #0]
90003da2:	429a      	cmp	r2, r3
90003da4:	d001      	beq.n	90003daa <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90003da6:	b03a      	add	sp, #232	@ 0xe8
90003da8:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003daa:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003dac:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003dae:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90003db2:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003db4:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003db6:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003db8:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003dba:	225d      	movs	r2, #93	@ 0x5d
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90003dbc:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003dbe:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003dc2:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003dc4:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003dc6:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90003dca:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003dce:	f007 fe4f 	bl	9000ba70 <HAL_RCCEx_PeriphCLKConfig>
90003dd2:	2800      	cmp	r0, #0
90003dd4:	d174      	bne.n	90003ec0 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90003dd6:	4b3d      	ldr	r3, [pc, #244]	@ (90003ecc <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003dd8:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003dda:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003ddc:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90003dde:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003de2:	a905      	add	r1, sp, #20
90003de4:	483a      	ldr	r0, [pc, #232]	@ (90003ed0 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003de6:	f042 0208 	orr.w	r2, r2, #8
90003dea:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
90003dee:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
90003df2:	f002 0208 	and.w	r2, r2, #8
90003df6:	9200      	str	r2, [sp, #0]
90003df8:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90003dfa:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003dfe:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
90003e02:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003e06:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003e0a:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
90003e0e:	9201      	str	r2, [sp, #4]
90003e10:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90003e12:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003e16:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90003e1a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003e1e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003e22:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90003e26:	9202      	str	r2, [sp, #8]
90003e28:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90003e2a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003e2e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90003e32:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003e36:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003e3a:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90003e3e:	9203      	str	r2, [sp, #12]
90003e40:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003e42:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003e46:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90003e4a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003e4e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003e52:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003e54:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003e58:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003e5a:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003e5c:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003e5e:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003e60:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e62:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003e66:	f004 f8a1 	bl	90007fac <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003e6a:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003e6e:	a905      	add	r1, sp, #20
90003e70:	4818      	ldr	r0, [pc, #96]	@ (90003ed4 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003e72:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e74:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003e78:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003e7c:	f004 f896 	bl	90007fac <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003e80:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003e84:	a905      	add	r1, sp, #20
90003e86:	4814      	ldr	r0, [pc, #80]	@ (90003ed8 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003e88:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003e8a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003e8e:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003e92:	f004 f88b 	bl	90007fac <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003e96:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003e9a:	a905      	add	r1, sp, #20
90003e9c:	480f      	ldr	r0, [pc, #60]	@ (90003edc <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003e9e:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003ea0:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003ea4:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003ea8:	f004 f880 	bl	90007fac <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90003eac:	462a      	mov	r2, r5
90003eae:	2105      	movs	r1, #5
90003eb0:	2058      	movs	r0, #88	@ 0x58
90003eb2:	f003 fe17 	bl	90007ae4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90003eb6:	2058      	movs	r0, #88	@ 0x58
90003eb8:	f003 fe50 	bl	90007b5c <HAL_NVIC_EnableIRQ>
}
90003ebc:	b03a      	add	sp, #232	@ 0xe8
90003ebe:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90003ec0:	f7ff fe7c 	bl	90003bbc <Error_Handler>
90003ec4:	e787      	b.n	90003dd6 <HAL_LTDC_MspInit+0x52>
90003ec6:	bf00      	nop
90003ec8:	50001000 	.word	0x50001000
90003ecc:	58024400 	.word	0x58024400
90003ed0:	58022800 	.word	0x58022800
90003ed4:	58022000 	.word	0x58022000
90003ed8:	58022400 	.word	0x58022400
90003edc:	58021c00 	.word	0x58021c00

90003ee0 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003ee0:	4836      	ldr	r0, [pc, #216]	@ (90003fbc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003ee2:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003ee4:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90003ee6:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003ee8:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003eea:	e9cd 3302 	strd	r3, r3, [sp, #8]
90003eee:	e9cd 3304 	strd	r3, r3, [sp, #16]
90003ef2:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90003ef4:	b109      	cbz	r1, 90003efa <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90003ef6:	b038      	add	sp, #224	@ 0xe0
90003ef8:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90003efa:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003efc:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
90003efe:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003f00:	a80a      	add	r0, sp, #40	@ 0x28
90003f02:	f023 fa15 	bl	90027330 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003f06:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90003f0a:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003f0c:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003f0e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003f12:	f007 fdad 	bl	9000ba70 <HAL_RCCEx_PeriphCLKConfig>
90003f16:	2800      	cmp	r0, #0
90003f18:	d14c      	bne.n	90003fb4 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
90003f1a:	4b29      	ldr	r3, [pc, #164]	@ (90003fc0 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003f1c:	f64f 7083 	movw	r0, #65411	@ 0xff83
90003f20:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003f22:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90003f24:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003f28:	2600      	movs	r6, #0
90003f2a:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90003f2c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90003f30:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90003f34:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003f38:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
90003f3a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003f3e:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90003f42:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90003f44:	a902      	add	r1, sp, #8
90003f46:	481f      	ldr	r0, [pc, #124]	@ (90003fc4 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90003f48:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003f4a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90003f4e:	f004 f82d 	bl	90007fac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003f52:	f248 1233 	movw	r2, #33075	@ 0x8133
90003f56:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003f58:	a902      	add	r1, sp, #8
90003f5a:	481b      	ldr	r0, [pc, #108]	@ (90003fc8 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003f5c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003f5e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003f62:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003f66:	f004 f821 	bl	90007fac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003f6a:	f24c 7203 	movw	r2, #50947	@ 0xc703
90003f6e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003f70:	a902      	add	r1, sp, #8
90003f72:	4816      	ldr	r0, [pc, #88]	@ (90003fcc <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003f74:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003f76:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003f7a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003f7e:	f004 f815 	bl	90007fac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003f82:	f64f 023f 	movw	r2, #63551	@ 0xf83f
90003f86:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003f88:	a902      	add	r1, sp, #8
90003f8a:	4811      	ldr	r0, [pc, #68]	@ (90003fd0 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003f8c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003f8e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003f92:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003f96:	f004 f809 	bl	90007fac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003f9a:	22e0      	movs	r2, #224	@ 0xe0
90003f9c:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003f9e:	a902      	add	r1, sp, #8
90003fa0:	480c      	ldr	r0, [pc, #48]	@ (90003fd4 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003fa2:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003fa4:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003fa8:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003fac:	f003 fffe 	bl	90007fac <HAL_GPIO_Init>
}
90003fb0:	b038      	add	sp, #224	@ 0xe0
90003fb2:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90003fb4:	f7ff fe02 	bl	90003bbc <Error_Handler>
90003fb8:	e7af      	b.n	90003f1a <HAL_SDRAM_MspInit+0x3a>
90003fba:	bf00      	nop
90003fbc:	24007b14 	.word	0x24007b14
90003fc0:	58024400 	.word	0x58024400
90003fc4:	58021000 	.word	0x58021000
90003fc8:	58021800 	.word	0x58021800
90003fcc:	58020c00 	.word	0x58020c00
90003fd0:	58021400 	.word	0x58021400
90003fd4:	58021c00 	.word	0x58021c00

90003fd8 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003fd8:	4b13      	ldr	r3, [pc, #76]	@ (90004028 <HAL_SDRAM_MspDeInit+0x50>)
90003fda:	681a      	ldr	r2, [r3, #0]
90003fdc:	b102      	cbz	r2, 90003fe0 <HAL_SDRAM_MspDeInit+0x8>
90003fde:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003fe0:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90003fe2:	4a12      	ldr	r2, [pc, #72]	@ (9000402c <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90003fe4:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003fe6:	f64f 7183 	movw	r1, #65411	@ 0xff83
90003fea:	4811      	ldr	r0, [pc, #68]	@ (90004030 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90003fec:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90003fee:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
90003ff2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90003ff6:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003ffa:	f004 f919 	bl	90008230 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003ffe:	f248 1133 	movw	r1, #33075	@ 0x8133
90004002:	480c      	ldr	r0, [pc, #48]	@ (90004034 <HAL_SDRAM_MspDeInit+0x5c>)
90004004:	f004 f914 	bl	90008230 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004008:	f24c 7103 	movw	r1, #50947	@ 0xc703
9000400c:	480a      	ldr	r0, [pc, #40]	@ (90004038 <HAL_SDRAM_MspDeInit+0x60>)
9000400e:	f004 f90f 	bl	90008230 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004012:	f64f 013f 	movw	r1, #63551	@ 0xf83f
90004016:	4809      	ldr	r0, [pc, #36]	@ (9000403c <HAL_SDRAM_MspDeInit+0x64>)
90004018:	f004 f90a 	bl	90008230 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
9000401c:	21e0      	movs	r1, #224	@ 0xe0
9000401e:	4808      	ldr	r0, [pc, #32]	@ (90004040 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90004020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004024:	f004 b904 	b.w	90008230 <HAL_GPIO_DeInit>
90004028:	24007b10 	.word	0x24007b10
9000402c:	58024400 	.word	0x58024400
90004030:	58021000 	.word	0x58021000
90004034:	58021800 	.word	0x58021800
90004038:	58020c00 	.word	0x58020c00
9000403c:	58021400 	.word	0x58021400
90004040:	58021c00 	.word	0x58021c00

90004044 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90004044:	280f      	cmp	r0, #15
90004046:	d901      	bls.n	9000404c <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90004048:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
9000404a:	4770      	bx	lr
{
9000404c:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
9000404e:	4601      	mov	r1, r0
{
90004050:	b08b      	sub	sp, #44	@ 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90004052:	2200      	movs	r2, #0
90004054:	4604      	mov	r4, r0
90004056:	2036      	movs	r0, #54	@ 0x36
90004058:	f003 fd44 	bl	90007ae4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
9000405c:	2036      	movs	r0, #54	@ 0x36
9000405e:	f003 fd7d 	bl	90007b5c <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90004062:	4b1b      	ldr	r3, [pc, #108]	@ (900040d0 <HAL_InitTick+0x8c>)
    uwTickPrio = TickPriority;
90004064:	4a1b      	ldr	r2, [pc, #108]	@ (900040d4 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004066:	4669      	mov	r1, sp
90004068:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
9000406a:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
9000406c:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004070:	f042 0210 	orr.w	r2, r2, #16
90004074:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
90004078:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
9000407c:	f003 0310 	and.w	r3, r3, #16
90004080:	9301      	str	r3, [sp, #4]
90004082:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004084:	f007 fbe4 	bl	9000b850 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90004088:	9b07      	ldr	r3, [sp, #28]
9000408a:	b9c3      	cbnz	r3, 900040be <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
9000408c:	f007 fb50 	bl	9000b730 <HAL_RCC_GetPCLK1Freq>
90004090:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004092:	4911      	ldr	r1, [pc, #68]	@ (900040d8 <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004094:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90004096:	4c11      	ldr	r4, [pc, #68]	@ (900040dc <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004098:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
9000409c:	4d10      	ldr	r5, [pc, #64]	@ (900040e0 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000409e:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900040a2:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900040a4:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
900040a6:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
900040a8:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900040aa:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900040ac:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
900040b0:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900040b2:	f008 fca9 	bl	9000ca08 <HAL_TIM_Base_Init>
900040b6:	b130      	cbz	r0, 900040c6 <HAL_InitTick+0x82>
    return HAL_ERROR;
900040b8:	2001      	movs	r0, #1
}
900040ba:	b00b      	add	sp, #44	@ 0x2c
900040bc:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900040be:	f007 fb37 	bl	9000b730 <HAL_RCC_GetPCLK1Freq>
900040c2:	0043      	lsls	r3, r0, #1
900040c4:	e7e5      	b.n	90004092 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
900040c6:	4620      	mov	r0, r4
900040c8:	f008 fd3c 	bl	9000cb44 <HAL_TIM_Base_Start_IT>
900040cc:	e7f5      	b.n	900040ba <HAL_InitTick+0x76>
900040ce:	bf00      	nop
900040d0:	58024400 	.word	0x58024400
900040d4:	24000080 	.word	0x24000080
900040d8:	431bde83 	.word	0x431bde83
900040dc:	24007b18 	.word	0x24007b18
900040e0:	40001000 	.word	0x40001000

900040e4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900040e4:	4770      	bx	lr
900040e6:	bf00      	nop

900040e8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900040e8:	e7fe      	b.n	900040e8 <HardFault_Handler>
900040ea:	bf00      	nop

900040ec <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900040ec:	e7fe      	b.n	900040ec <MemManage_Handler>
900040ee:	bf00      	nop

900040f0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900040f0:	e7fe      	b.n	900040f0 <BusFault_Handler>
900040f2:	bf00      	nop

900040f4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900040f4:	e7fe      	b.n	900040f4 <UsageFault_Handler>
900040f6:	bf00      	nop

900040f8 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
900040f8:	4770      	bx	lr
900040fa:	bf00      	nop

900040fc <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900040fc:	4801      	ldr	r0, [pc, #4]	@ (90004104 <TIM6_DAC_IRQHandler+0x8>)
900040fe:	f008 bd7b 	b.w	9000cbf8 <HAL_TIM_IRQHandler>
90004102:	bf00      	nop
90004104:	24007b18 	.word	0x24007b18

90004108 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90004108:	4801      	ldr	r0, [pc, #4]	@ (90004110 <LTDC_IRQHandler+0x8>)
9000410a:	f006 ba31 	b.w	9000a570 <HAL_LTDC_IRQHandler>
9000410e:	bf00      	nop
90004110:	240078ac 	.word	0x240078ac

90004114 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90004114:	4801      	ldr	r0, [pc, #4]	@ (9000411c <DMA2D_IRQHandler+0x8>)
90004116:	f003 be4b 	b.w	90007db0 <HAL_DMA2D_IRQHandler>
9000411a:	bf00      	nop
9000411c:	24007a84 	.word	0x24007a84

90004120 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004120:	4801      	ldr	r0, [pc, #4]	@ (90004128 <JPEG_IRQHandler+0x8>)
90004122:	f006 b913 	b.w	9000a34c <HAL_JPEG_IRQHandler>
90004126:	bf00      	nop
90004128:	24007a2c 	.word	0x24007a2c

9000412c <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
9000412c:	4804      	ldr	r0, [pc, #16]	@ (90004140 <MDMA_IRQHandler+0x14>)
{
9000412e:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004130:	f006 fd00 	bl	9000ab34 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004134:	4803      	ldr	r0, [pc, #12]	@ (90004144 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
90004136:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000413a:	f006 bcfb 	b.w	9000ab34 <HAL_MDMA_IRQHandler>
9000413e:	bf00      	nop
90004140:	24007954 	.word	0x24007954
90004144:	240079c0 	.word	0x240079c0

90004148 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004148:	2001      	movs	r0, #1
9000414a:	4770      	bx	lr

9000414c <_kill>:

int _kill(int pid, int sig)
{
9000414c:	b508      	push	{r3, lr}
	errno = EINVAL;
9000414e:	f023 f9a3 	bl	90027498 <__errno>
90004152:	2216      	movs	r2, #22
90004154:	4603      	mov	r3, r0
	return -1;
}
90004156:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000415a:	601a      	str	r2, [r3, #0]
}
9000415c:	bd08      	pop	{r3, pc}
9000415e:	bf00      	nop

90004160 <_exit>:

void _exit (int status)
{
90004160:	b508      	push	{r3, lr}
	errno = EINVAL;
90004162:	f023 f999 	bl	90027498 <__errno>
90004166:	2316      	movs	r3, #22
90004168:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000416a:	e7fe      	b.n	9000416a <_exit+0xa>

9000416c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
9000416c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000416e:	1e16      	subs	r6, r2, #0
90004170:	dd07      	ble.n	90004182 <_read+0x16>
90004172:	460c      	mov	r4, r1
90004174:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90004176:	f3af 8000 	nop.w
9000417a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000417e:	42a5      	cmp	r5, r4
90004180:	d1f9      	bne.n	90004176 <_read+0xa>
	}

return len;
}
90004182:	4630      	mov	r0, r6
90004184:	bd70      	pop	{r4, r5, r6, pc}
90004186:	bf00      	nop

90004188 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90004188:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000418a:	1e16      	subs	r6, r2, #0
9000418c:	dd07      	ble.n	9000419e <_write+0x16>
9000418e:	460c      	mov	r4, r1
90004190:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004192:	f814 0b01 	ldrb.w	r0, [r4], #1
90004196:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000419a:	42ac      	cmp	r4, r5
9000419c:	d1f9      	bne.n	90004192 <_write+0xa>
	}
	return len;
}
9000419e:	4630      	mov	r0, r6
900041a0:	bd70      	pop	{r4, r5, r6, pc}
900041a2:	bf00      	nop

900041a4 <_close>:

int _close(int file)
{
	return -1;
}
900041a4:	f04f 30ff 	mov.w	r0, #4294967295
900041a8:	4770      	bx	lr
900041aa:	bf00      	nop

900041ac <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
900041ac:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
900041b0:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
900041b2:	604b      	str	r3, [r1, #4]
}
900041b4:	4770      	bx	lr
900041b6:	bf00      	nop

900041b8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
900041b8:	2001      	movs	r0, #1
900041ba:	4770      	bx	lr

900041bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
900041bc:	2000      	movs	r0, #0
900041be:	4770      	bx	lr

900041c0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
900041c0:	4a0c      	ldr	r2, [pc, #48]	@ (900041f4 <_sbrk+0x34>)
{
900041c2:	b508      	push	{r3, lr}
900041c4:	4603      	mov	r3, r0
	if (heap_end == 0)
900041c6:	6810      	ldr	r0, [r2, #0]
900041c8:	b128      	cbz	r0, 900041d6 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
900041ca:	4403      	add	r3, r0
900041cc:	4669      	mov	r1, sp
900041ce:	428b      	cmp	r3, r1
900041d0:	d808      	bhi.n	900041e4 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
900041d2:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
900041d4:	bd08      	pop	{r3, pc}
		heap_end = &end;
900041d6:	4908      	ldr	r1, [pc, #32]	@ (900041f8 <_sbrk+0x38>)
900041d8:	4608      	mov	r0, r1
900041da:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
900041dc:	4669      	mov	r1, sp
900041de:	4403      	add	r3, r0
900041e0:	428b      	cmp	r3, r1
900041e2:	d9f6      	bls.n	900041d2 <_sbrk+0x12>
		errno = ENOMEM;
900041e4:	f023 f958 	bl	90027498 <__errno>
900041e8:	220c      	movs	r2, #12
900041ea:	4603      	mov	r3, r0
		return (caddr_t) -1;
900041ec:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
900041f0:	601a      	str	r2, [r3, #0]
}
900041f2:	bd08      	pop	{r3, pc}
900041f4:	24007b64 	.word	0x24007b64
900041f8:	24022898 	.word	0x24022898

900041fc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;         // verdana_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // verdanab_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900041fc:	4770      	bx	lr
900041fe:	bf00      	nop

90004200 <_ZN23ApplicationFontProviderD0Ev>:
90004200:	b510      	push	{r4, lr}
90004202:	4604      	mov	r4, r0
90004204:	2104      	movs	r1, #4
90004206:	f022 fa7f 	bl	90026708 <_ZdlPvj>
9000420a:	4620      	mov	r0, r4
9000420c:	bd10      	pop	{r4, pc}
9000420e:	bf00      	nop

90004210 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
90004210:	b508      	push	{r3, lr}
    switch (typography)
90004212:	2903      	cmp	r1, #3
90004214:	d813      	bhi.n	9000423e <_ZN23ApplicationFontProvider7getFontEt+0x2e>
90004216:	e8df f001 	tbb	[pc, r1]
9000421a:	0e0a      	.short	0x0e0a
9000421c:	0206      	.short	0x0206
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    case Typography::TYPOGRAPHY_00:
        // verdanab_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
9000421e:	f000 fd2f 	bl	90004c80 <_ZN17TypedTextDatabase8getFontsEv>
90004222:	68c0      	ldr	r0, [r0, #12]
    default:
        return 0;
    }
}
90004224:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004226:	f000 fd2b 	bl	90004c80 <_ZN17TypedTextDatabase8getFontsEv>
9000422a:	6880      	ldr	r0, [r0, #8]
}
9000422c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
9000422e:	f000 fd27 	bl	90004c80 <_ZN17TypedTextDatabase8getFontsEv>
90004232:	6800      	ldr	r0, [r0, #0]
}
90004234:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004236:	f000 fd23 	bl	90004c80 <_ZN17TypedTextDatabase8getFontsEv>
9000423a:	6840      	ldr	r0, [r0, #4]
}
9000423c:	bd08      	pop	{r3, pc}
    switch (typography)
9000423e:	2000      	movs	r0, #0
}
90004240:	bd08      	pop	{r3, pc}
90004242:	bf00      	nop

90004244 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004244:	4800      	ldr	r0, [pc, #0]	@ (90004248 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90004246:	4770      	bx	lr
90004248:	90029740 	.word	0x90029740

9000424c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
9000424c:	2008      	movs	r0, #8
9000424e:	4770      	bx	lr

90004250 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90004250:	b169      	cbz	r1, 9000426e <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004252:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004254:	b530      	push	{r4, r5, lr}
90004256:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004258:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000425a:	6895      	ldr	r5, [r2, #8]
9000425c:	f10d 0303 	add.w	r3, sp, #3
90004260:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90004262:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004264:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004268:	47a8      	blx	r5
        return glyph;
    }
9000426a:	b003      	add	sp, #12
9000426c:	bd30      	pop	{r4, r5, pc}
            return 0;
9000426e:	4608      	mov	r0, r1
    }
90004270:	4770      	bx	lr
90004272:	bf00      	nop

90004274 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004274:	89c0      	ldrh	r0, [r0, #14]
90004276:	4770      	bx	lr

90004278 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004278:	8a00      	ldrh	r0, [r0, #16]
9000427a:	4770      	bx	lr

9000427c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
9000427c:	88c0      	ldrh	r0, [r0, #6]
9000427e:	4770      	bx	lr

90004280 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90004280:	8880      	ldrh	r0, [r0, #4]
90004282:	4770      	bx	lr

90004284 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004284:	7a80      	ldrb	r0, [r0, #10]
    }
90004286:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
9000428a:	4770      	bx	lr

9000428c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
9000428c:	7a80      	ldrb	r0, [r0, #10]
    }
9000428e:	09c0      	lsrs	r0, r0, #7
90004290:	4770      	bx	lr
90004292:	bf00      	nop

90004294 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004294:	2000      	movs	r0, #0
90004296:	4770      	bx	lr

90004298 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004298:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 900042a0 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
9000429c:	4770      	bx	lr
9000429e:	bf00      	nop
900042a0:	00000000 	.word	0x00000000

900042a4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900042a4:	4770      	bx	lr
900042a6:	bf00      	nop

900042a8 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900042a8:	b510      	push	{r4, lr}
900042aa:	4604      	mov	r4, r0
    }
900042ac:	2108      	movs	r1, #8
900042ae:	f022 fa2b 	bl	90026708 <_ZdlPvj>
900042b2:	4620      	mov	r0, r4
900042b4:	bd10      	pop	{r4, pc}
900042b6:	bf00      	nop

900042b8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900042b8:	4770      	bx	lr
900042ba:	bf00      	nop

900042bc <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900042bc:	f500 7398 	add.w	r3, r0, #304	@ 0x130
900042c0:	6808      	ldr	r0, [r1, #0]
900042c2:	6849      	ldr	r1, [r1, #4]
900042c4:	c303      	stmia	r3!, {r0, r1}
    }
900042c6:	4770      	bx	lr

900042c8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
900042c8:	4770      	bx	lr
900042ca:	bf00      	nop

900042cc <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
900042cc:	4770      	bx	lr
900042ce:	bf00      	nop

900042d0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
900042d0:	6041      	str	r1, [r0, #4]
    }
900042d2:	4770      	bx	lr

900042d4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
900042d4:	4770      	bx	lr
900042d6:	bf00      	nop

900042d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900042d8:	4905      	ldr	r1, [pc, #20]	@ (900042f0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
900042da:	2200      	movs	r2, #0
// play

void FrontendApplicationBase::gotoplayScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoplayScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
900042dc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900042e0:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900042e4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900042e8:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoplayScreenNoTransition();
    }
900042ec:	4770      	bx	lr
900042ee:	bf00      	nop
900042f0:	9000451d 	.word	0x9000451d

900042f4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
900042f4:	2301      	movs	r3, #1
900042f6:	7203      	strb	r3, [r0, #8]
    }
900042f8:	4770      	bx	lr
900042fa:	bf00      	nop

900042fc <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
900042fc:	4770      	bx	lr
900042fe:	bf00      	nop

90004300 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90004300:	4770      	bx	lr
90004302:	bf00      	nop

90004304 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004304:	1d01      	adds	r1, r0, #4
90004306:	c90e      	ldmia	r1, {r1, r2, r3}
90004308:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000430c:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004310:	07db      	lsls	r3, r3, #31
90004312:	d502      	bpl.n	9000431a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004314:	f851 300c 	ldr.w	r3, [r1, ip]
90004318:	589a      	ldr	r2, [r3, r2]
9000431a:	4710      	bx	r2

9000431c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
9000431c:	6843      	ldr	r3, [r0, #4]
9000431e:	b13b      	cbz	r3, 90004330 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004320:	6883      	ldr	r3, [r0, #8]
90004322:	b10b      	cbz	r3, 90004328 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004324:	2001      	movs	r0, #1
    }
90004326:	4770      	bx	lr
90004328:	68c0      	ldr	r0, [r0, #12]
9000432a:	f000 0001 	and.w	r0, r0, #1
9000432e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004330:	4618      	mov	r0, r3
90004332:	4770      	bx	lr

90004334 <_ZN8touchgfx12NoTransitionD0Ev>:
90004334:	b510      	push	{r4, lr}
90004336:	4604      	mov	r4, r0
90004338:	210c      	movs	r1, #12
9000433a:	f022 f9e5 	bl	90026708 <_ZdlPvj>
9000433e:	4620      	mov	r0, r4
90004340:	bd10      	pop	{r4, pc}
90004342:	bf00      	nop

90004344 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004344:	b510      	push	{r4, lr}
90004346:	4604      	mov	r4, r0
90004348:	2110      	movs	r1, #16
9000434a:	f022 f9dd 	bl	90026708 <_ZdlPvj>
9000434e:	4620      	mov	r0, r4
90004350:	bd10      	pop	{r4, pc}
90004352:	bf00      	nop

90004354 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004354:	b510      	push	{r4, lr}
90004356:	4604      	mov	r4, r0
90004358:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
9000435c:	f022 f9d4 	bl	90026708 <_ZdlPvj>
90004360:	4620      	mov	r0, r4
90004362:	bd10      	pop	{r4, pc}

90004364 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004364:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90004366:	f011 f827 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
9000436a:	6803      	ldr	r3, [r0, #0]
    }
9000436c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004370:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004372:	4718      	bx	r3

90004374 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotogameScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotogameScreenNoTransitionImpl()
{
90004374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<gameView, gamePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004378:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
9000437c:	4607      	mov	r7, r0
9000437e:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004380:	68b0      	ldr	r0, [r6, #8]
90004382:	6803      	ldr	r3, [r0, #0]
90004384:	6a1b      	ldr	r3, [r3, #32]
90004386:	4798      	blx	r3
90004388:	f640 0397 	movw	r3, #2199	@ 0x897
9000438c:	4298      	cmp	r0, r3
9000438e:	f240 809c 	bls.w	900044ca <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004392:	6870      	ldr	r0, [r6, #4]
90004394:	6803      	ldr	r3, [r0, #0]
90004396:	6a1b      	ldr	r3, [r3, #32]
90004398:	4798      	blx	r3
9000439a:	280f      	cmp	r0, #15
9000439c:	f240 80a1 	bls.w	900044e2 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900043a0:	68f0      	ldr	r0, [r6, #12]
900043a2:	6803      	ldr	r3, [r0, #0]
900043a4:	6a1b      	ldr	r3, [r3, #32]
900043a6:	4798      	blx	r3
900043a8:	280b      	cmp	r0, #11
900043aa:	f240 8094 	bls.w	900044d6 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
900043ae:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90004514 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
900043b2:	f011 f801 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
900043b6:	3004      	adds	r0, #4
900043b8:	f011 f823 	bl	90015402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900043bc:	f8d9 0000 	ldr.w	r0, [r9]
900043c0:	b130      	cbz	r0, 900043d0 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x5c>
        (*currentTrans)->tearDown();
900043c2:	6803      	ldr	r3, [r0, #0]
900043c4:	494a      	ldr	r1, [pc, #296]	@ (900044f0 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x17c>)
900043c6:	68da      	ldr	r2, [r3, #12]
900043c8:	428a      	cmp	r2, r1
900043ca:	d177      	bne.n	900044bc <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
900043cc:	681b      	ldr	r3, [r3, #0]
900043ce:	4798      	blx	r3
    if (*currentScreen)
900043d0:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90004518 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x1a4>
900043d4:	f8d8 0000 	ldr.w	r0, [r8]
900043d8:	2800      	cmp	r0, #0
900043da:	d061      	beq.n	900044a0 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
900043dc:	6803      	ldr	r3, [r0, #0]
900043de:	695b      	ldr	r3, [r3, #20]
900043e0:	4798      	blx	r3
    if (*currentPresenter)
900043e2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900043e6:	2800      	cmp	r0, #0
900043e8:	d055      	beq.n	90004496 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
900043ea:	6803      	ldr	r3, [r0, #0]
900043ec:	685b      	ldr	r3, [r3, #4]
900043ee:	4798      	blx	r3
    if (*currentScreen)
900043f0:	f8d8 0000 	ldr.w	r0, [r8]
900043f4:	b110      	cbz	r0, 900043fc <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x88>
        (*currentScreen)->~Screen();
900043f6:	6803      	ldr	r3, [r0, #0]
900043f8:	681b      	ldr	r3, [r3, #0]
900043fa:	4798      	blx	r3
    if (*currentPresenter)
900043fc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004400:	b110      	cbz	r0, 90004408 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x94>
        (*currentPresenter)->~Presenter();
90004402:	6803      	ldr	r3, [r0, #0]
90004404:	689b      	ldr	r3, [r3, #8]
90004406:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004408:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
9000440a:	2100      	movs	r1, #0
9000440c:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
9000440e:	468b      	mov	fp, r1
90004410:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004412:	4798      	blx	r3
90004414:	4b37      	ldr	r3, [pc, #220]	@ (900044f4 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x180>)
90004416:	4604      	mov	r4, r0
90004418:	f8c0 b004 	str.w	fp, [r0, #4]
9000441c:	f880 b008 	strb.w	fp, [r0, #8]
90004420:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004422:	68b0      	ldr	r0, [r6, #8]
90004424:	6023      	str	r3, [r4, #0]
90004426:	6803      	ldr	r3, [r0, #0]
90004428:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000442a:	4798      	blx	r3
9000442c:	4605      	mov	r5, r0
9000442e:	f002 f97f 	bl	90006730 <_ZN8gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004432:	6870      	ldr	r0, [r6, #4]
90004434:	4659      	mov	r1, fp
90004436:	6803      	ldr	r3, [r0, #0]
90004438:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000443a:	4798      	blx	r3
9000443c:	4606      	mov	r6, r0
9000443e:	4629      	mov	r1, r5
90004440:	f002 f94c 	bl	900066dc <_ZN13gamePresenterC1ER8gameView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004444:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004446:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
9000444a:	4628      	mov	r0, r5
    *currentTrans = newTransition;
9000444c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004450:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004454:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004458:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
9000445a:	f8c6 a008 	str.w	sl, [r6, #8]
9000445e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004460:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004462:	4798      	blx	r3
    newPresenter->activate();
90004464:	6833      	ldr	r3, [r6, #0]
90004466:	4630      	mov	r0, r6
90004468:	681b      	ldr	r3, [r3, #0]
9000446a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
9000446c:	4621      	mov	r1, r4
9000446e:	4628      	mov	r0, r5
90004470:	f012 ff94 	bl	9001739c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004474:	6823      	ldr	r3, [r4, #0]
90004476:	4920      	ldr	r1, [pc, #128]	@ (900044f8 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x184>)
90004478:	691a      	ldr	r2, [r3, #16]
9000447a:	428a      	cmp	r2, r1
9000447c:	d11a      	bne.n	900044b4 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
9000447e:	695b      	ldr	r3, [r3, #20]
90004480:	4a1e      	ldr	r2, [pc, #120]	@ (900044fc <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x188>)
90004482:	4293      	cmp	r3, r2
90004484:	d111      	bne.n	900044aa <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004486:	f010 ff97 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
9000448a:	6803      	ldr	r3, [r0, #0]
9000448c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
9000448e:	b001      	add	sp, #4
90004490:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004494:	4718      	bx	r3
    if (*currentScreen)
90004496:	f8d8 0000 	ldr.w	r0, [r8]
9000449a:	2800      	cmp	r0, #0
9000449c:	d1ab      	bne.n	900043f6 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x82>
9000449e:	e7b3      	b.n	90004408 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x94>
    if (*currentPresenter)
900044a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900044a4:	2800      	cmp	r0, #0
900044a6:	d1a0      	bne.n	900043ea <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x76>
900044a8:	e7ae      	b.n	90004408 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x94>
    newTransition->invalidate();
900044aa:	4620      	mov	r0, r4
900044ac:	b001      	add	sp, #4
900044ae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900044b2:	4718      	bx	r3
    newTransition->init();
900044b4:	4620      	mov	r0, r4
900044b6:	4790      	blx	r2
    newTransition->invalidate();
900044b8:	6823      	ldr	r3, [r4, #0]
900044ba:	e7e0      	b.n	9000447e <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
900044bc:	4790      	blx	r2
    if (*currentTrans)
900044be:	f8d9 0000 	ldr.w	r0, [r9]
900044c2:	2800      	cmp	r0, #0
900044c4:	d084      	beq.n	900043d0 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x5c>
        (*currentTrans)->~Transition();
900044c6:	6803      	ldr	r3, [r0, #0]
900044c8:	e780      	b.n	900043cc <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x58>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900044ca:	4b0d      	ldr	r3, [pc, #52]	@ (90004500 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x18c>)
900044cc:	21a3      	movs	r1, #163	@ 0xa3
900044ce:	4a0d      	ldr	r2, [pc, #52]	@ (90004504 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x190>)
900044d0:	480d      	ldr	r0, [pc, #52]	@ (90004508 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x194>)
900044d2:	f022 fc91 	bl	90026df8 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900044d6:	4b0d      	ldr	r3, [pc, #52]	@ (9000450c <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x198>)
900044d8:	21a5      	movs	r1, #165	@ 0xa5
900044da:	4a0a      	ldr	r2, [pc, #40]	@ (90004504 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x190>)
900044dc:	480a      	ldr	r0, [pc, #40]	@ (90004508 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x194>)
900044de:	f022 fc8b 	bl	90026df8 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900044e2:	4b0b      	ldr	r3, [pc, #44]	@ (90004510 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x19c>)
900044e4:	21a4      	movs	r1, #164	@ 0xa4
900044e6:	4a07      	ldr	r2, [pc, #28]	@ (90004504 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x190>)
900044e8:	4807      	ldr	r0, [pc, #28]	@ (90004508 <_ZN23FrontendApplicationBase30gotogameScreenNoTransitionImplEv+0x194>)
900044ea:	f022 fc85 	bl	90026df8 <__assert_func>
900044ee:	bf00      	nop
900044f0:	900042c9 	.word	0x900042c9
900044f4:	90029c1c 	.word	0x90029c1c
900044f8:	900042cd 	.word	0x900042cd
900044fc:	90004365 	.word	0x90004365
90004500:	900297f0 	.word	0x900297f0
90004504:	90029880 	.word	0x90029880
90004508:	9002994c 	.word	0x9002994c
9000450c:	90029a38 	.word	0x90029a38
90004510:	90029994 	.word	0x90029994
90004514:	24021ca4 	.word	0x24021ca4
90004518:	24021ca0 	.word	0x24021ca0

9000451c <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv>:
{
9000451c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<playView, playPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004520:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004524:	4607      	mov	r7, r0
90004526:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004528:	68b0      	ldr	r0, [r6, #8]
9000452a:	6803      	ldr	r3, [r0, #0]
9000452c:	6a1b      	ldr	r3, [r3, #32]
9000452e:	4798      	blx	r3
90004530:	28ef      	cmp	r0, #239	@ 0xef
90004532:	f240 809c 	bls.w	9000466e <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x152>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004536:	6870      	ldr	r0, [r6, #4]
90004538:	6803      	ldr	r3, [r0, #0]
9000453a:	6a1b      	ldr	r3, [r3, #32]
9000453c:	4798      	blx	r3
9000453e:	280f      	cmp	r0, #15
90004540:	f240 80a1 	bls.w	90004686 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x16a>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004544:	68f0      	ldr	r0, [r6, #12]
90004546:	6803      	ldr	r3, [r0, #0]
90004548:	6a1b      	ldr	r3, [r3, #32]
9000454a:	4798      	blx	r3
9000454c:	280b      	cmp	r0, #11
9000454e:	f240 8094 	bls.w	9000467a <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x15e>
    if (*currentTrans)
90004552:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 900046b8 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90004556:	f010 ff2f 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
9000455a:	3004      	adds	r0, #4
9000455c:	f010 ff51 	bl	90015402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004560:	f8d9 0000 	ldr.w	r0, [r9]
90004564:	b130      	cbz	r0, 90004574 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x58>
        (*currentTrans)->tearDown();
90004566:	6803      	ldr	r3, [r0, #0]
90004568:	494a      	ldr	r1, [pc, #296]	@ (90004694 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x178>)
9000456a:	68da      	ldr	r2, [r3, #12]
9000456c:	428a      	cmp	r2, r1
9000456e:	d177      	bne.n	90004660 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x144>
        (*currentTrans)->~Transition();
90004570:	681b      	ldr	r3, [r3, #0]
90004572:	4798      	blx	r3
    if (*currentScreen)
90004574:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 900046bc <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x1a0>
90004578:	f8d8 0000 	ldr.w	r0, [r8]
9000457c:	2800      	cmp	r0, #0
9000457e:	d061      	beq.n	90004644 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x128>
        (*currentScreen)->tearDownScreen();
90004580:	6803      	ldr	r3, [r0, #0]
90004582:	695b      	ldr	r3, [r3, #20]
90004584:	4798      	blx	r3
    if (*currentPresenter)
90004586:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
9000458a:	2800      	cmp	r0, #0
9000458c:	d055      	beq.n	9000463a <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x11e>
        (*currentPresenter)->deactivate();
9000458e:	6803      	ldr	r3, [r0, #0]
90004590:	685b      	ldr	r3, [r3, #4]
90004592:	4798      	blx	r3
    if (*currentScreen)
90004594:	f8d8 0000 	ldr.w	r0, [r8]
90004598:	b110      	cbz	r0, 900045a0 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x84>
        (*currentScreen)->~Screen();
9000459a:	6803      	ldr	r3, [r0, #0]
9000459c:	681b      	ldr	r3, [r3, #0]
9000459e:	4798      	blx	r3
    if (*currentPresenter)
900045a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
900045a4:	b110      	cbz	r0, 900045ac <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->~Presenter();
900045a6:	6803      	ldr	r3, [r0, #0]
900045a8:	689b      	ldr	r3, [r3, #8]
900045aa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900045ac:	68f0      	ldr	r0, [r6, #12]
900045ae:	2100      	movs	r1, #0
900045b0:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900045b2:	468b      	mov	fp, r1
900045b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900045b6:	4798      	blx	r3
900045b8:	4b37      	ldr	r3, [pc, #220]	@ (90004698 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x17c>)
900045ba:	4604      	mov	r4, r0
900045bc:	f8c0 b004 	str.w	fp, [r0, #4]
900045c0:	f880 b008 	strb.w	fp, [r0, #8]
900045c4:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900045c6:	68b0      	ldr	r0, [r6, #8]
900045c8:	6023      	str	r3, [r4, #0]
900045ca:	6803      	ldr	r3, [r0, #0]
900045cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900045ce:	4798      	blx	r3
900045d0:	4605      	mov	r5, r0
900045d2:	f002 f8f7 	bl	900067c4 <_ZN8playViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900045d6:	6870      	ldr	r0, [r6, #4]
900045d8:	4659      	mov	r1, fp
900045da:	6803      	ldr	r3, [r0, #0]
900045dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900045de:	4798      	blx	r3
900045e0:	4606      	mov	r6, r0
900045e2:	4629      	mov	r1, r5
900045e4:	f002 f8c6 	bl	90006774 <_ZN13playPresenterC1ER8playView>
    model->bind(newPresenter);
900045e8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
900045ea:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
900045ee:	4628      	mov	r0, r5
    *currentTrans = newTransition;
900045f0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
900045f4:	f8c8 5000 	str.w	r5, [r8]
900045f8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
900045fc:	682b      	ldr	r3, [r5, #0]
900045fe:	f8c6 a008 	str.w	sl, [r6, #8]
90004602:	68db      	ldr	r3, [r3, #12]
90004604:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004606:	4798      	blx	r3
    newPresenter->activate();
90004608:	6833      	ldr	r3, [r6, #0]
9000460a:	4630      	mov	r0, r6
9000460c:	681b      	ldr	r3, [r3, #0]
9000460e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004610:	4621      	mov	r1, r4
90004612:	4628      	mov	r0, r5
90004614:	f012 fec2 	bl	9001739c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004618:	6823      	ldr	r3, [r4, #0]
9000461a:	4920      	ldr	r1, [pc, #128]	@ (9000469c <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x180>)
9000461c:	691a      	ldr	r2, [r3, #16]
9000461e:	428a      	cmp	r2, r1
90004620:	d11a      	bne.n	90004658 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x13c>
    newTransition->invalidate();
90004622:	695b      	ldr	r3, [r3, #20]
90004624:	4a1e      	ldr	r2, [pc, #120]	@ (900046a0 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x184>)
90004626:	4293      	cmp	r3, r2
90004628:	d111      	bne.n	9000464e <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x132>
        Application::getInstance()->invalidate();
9000462a:	f010 fec5 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
9000462e:	6803      	ldr	r3, [r0, #0]
90004630:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004632:	b001      	add	sp, #4
90004634:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004638:	4718      	bx	r3
    if (*currentScreen)
9000463a:	f8d8 0000 	ldr.w	r0, [r8]
9000463e:	2800      	cmp	r0, #0
90004640:	d1ab      	bne.n	9000459a <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x7e>
90004642:	e7b3      	b.n	900045ac <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x90>
    if (*currentPresenter)
90004644:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004648:	2800      	cmp	r0, #0
9000464a:	d1a0      	bne.n	9000458e <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x72>
9000464c:	e7ae      	b.n	900045ac <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x90>
    newTransition->invalidate();
9000464e:	4620      	mov	r0, r4
90004650:	b001      	add	sp, #4
90004652:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004656:	4718      	bx	r3
    newTransition->init();
90004658:	4620      	mov	r0, r4
9000465a:	4790      	blx	r2
    newTransition->invalidate();
9000465c:	6823      	ldr	r3, [r4, #0]
9000465e:	e7e0      	b.n	90004622 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x106>
        (*currentTrans)->tearDown();
90004660:	4790      	blx	r2
    if (*currentTrans)
90004662:	f8d9 0000 	ldr.w	r0, [r9]
90004666:	2800      	cmp	r0, #0
90004668:	d084      	beq.n	90004574 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x58>
        (*currentTrans)->~Transition();
9000466a:	6803      	ldr	r3, [r0, #0]
9000466c:	e780      	b.n	90004570 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x54>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
9000466e:	4b0d      	ldr	r3, [pc, #52]	@ (900046a4 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x188>)
90004670:	21a3      	movs	r1, #163	@ 0xa3
90004672:	4a0d      	ldr	r2, [pc, #52]	@ (900046a8 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x18c>)
90004674:	480d      	ldr	r0, [pc, #52]	@ (900046ac <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x190>)
90004676:	f022 fbbf 	bl	90026df8 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000467a:	4b0d      	ldr	r3, [pc, #52]	@ (900046b0 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x194>)
9000467c:	21a5      	movs	r1, #165	@ 0xa5
9000467e:	4a0a      	ldr	r2, [pc, #40]	@ (900046a8 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x18c>)
90004680:	480a      	ldr	r0, [pc, #40]	@ (900046ac <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x190>)
90004682:	f022 fbb9 	bl	90026df8 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004686:	4b0b      	ldr	r3, [pc, #44]	@ (900046b4 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x198>)
90004688:	21a4      	movs	r1, #164	@ 0xa4
9000468a:	4a07      	ldr	r2, [pc, #28]	@ (900046a8 <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x18c>)
9000468c:	4807      	ldr	r0, [pc, #28]	@ (900046ac <_ZN23FrontendApplicationBase30gotoplayScreenNoTransitionImplEv+0x190>)
9000468e:	f022 fbb3 	bl	90026df8 <__assert_func>
90004692:	bf00      	nop
90004694:	900042c9 	.word	0x900042c9
90004698:	90029c1c 	.word	0x90029c1c
9000469c:	900042cd 	.word	0x900042cd
900046a0:	90004365 	.word	0x90004365
900046a4:	900297f0 	.word	0x900297f0
900046a8:	90029adc 	.word	0x90029adc
900046ac:	9002994c 	.word	0x9002994c
900046b0:	90029a38 	.word	0x90029a38
900046b4:	90029994 	.word	0x90029994
900046b8:	24021ca4 	.word	0x24021ca4
900046bc:	24021ca0 	.word	0x24021ca0

900046c0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
900046c0:	b570      	push	{r4, r5, r6, lr}
900046c2:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
900046c4:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
900046c8:	b1b8      	cbz	r0, 900046fa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
900046ca:	6802      	ldr	r2, [r0, #0]
900046cc:	4916      	ldr	r1, [pc, #88]	@ (90004728 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
900046ce:	68d3      	ldr	r3, [r2, #12]
900046d0:	428b      	cmp	r3, r1
900046d2:	d11f      	bne.n	90004714 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
900046d4:	6843      	ldr	r3, [r0, #4]
900046d6:	b183      	cbz	r3, 900046fa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
900046d8:	6881      	ldr	r1, [r0, #8]
900046da:	b179      	cbz	r1, 900046fc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
900046dc:	6892      	ldr	r2, [r2, #8]
900046de:	4b13      	ldr	r3, [pc, #76]	@ (9000472c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
900046e0:	429a      	cmp	r2, r3
900046e2:	d11e      	bne.n	90004722 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
900046e4:	68c2      	ldr	r2, [r0, #12]
900046e6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
900046ea:	eb03 0062 	add.w	r0, r3, r2, asr #1
900046ee:	07d3      	lsls	r3, r2, #31
900046f0:	d40d      	bmi.n	9000470e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
900046f2:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
900046f4:	2300      	movs	r3, #0
900046f6:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
900046fa:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
900046fc:	68c5      	ldr	r5, [r0, #12]
900046fe:	07ee      	lsls	r6, r5, #31
90004700:	d5fb      	bpl.n	900046fa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90004702:	6892      	ldr	r2, [r2, #8]
90004704:	4e09      	ldr	r6, [pc, #36]	@ (9000472c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
90004706:	42b2      	cmp	r2, r6
90004708:	d10b      	bne.n	90004722 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
9000470a:	eb03 0065 	add.w	r0, r3, r5, asr #1
9000470e:	6803      	ldr	r3, [r0, #0]
90004710:	5859      	ldr	r1, [r3, r1]
90004712:	e7ee      	b.n	900046f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004714:	4798      	blx	r3
90004716:	2800      	cmp	r0, #0
90004718:	d0ef      	beq.n	900046fa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
9000471a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
9000471e:	6802      	ldr	r2, [r0, #0]
90004720:	e7dc      	b.n	900046dc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
90004722:	4790      	blx	r2
90004724:	e7e6      	b.n	900046f4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90004726:	bf00      	nop
90004728:	9000431d 	.word	0x9000431d
9000472c:	90004305 	.word	0x90004305

90004730 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004730:	b570      	push	{r4, r5, r6, lr}
90004732:	4604      	mov	r4, r0
90004734:	4615      	mov	r5, r2
90004736:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004738:	f010 ff04 	bl	90015544 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
9000473c:	4a1d      	ldr	r2, [pc, #116]	@ (900047b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
9000473e:	2300      	movs	r3, #0
      frontendHeap(heap),
90004740:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
90004744:	6014      	str	r4, [r2, #0]
        return instance;
90004746:	4d1c      	ldr	r5, [pc, #112]	@ (900047b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90004748:	4a1c      	ldr	r2, [pc, #112]	@ (900047bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
9000474a:	6828      	ldr	r0, [r5, #0]
9000474c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
9000474e:	4a1c      	ldr	r2, [pc, #112]	@ (900047c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90004750:	491c      	ldr	r1, [pc, #112]	@ (900047c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90004752:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
90004756:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
9000475a:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
9000475e:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
90004762:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004766:	6802      	ldr	r2, [r0, #0]
90004768:	6892      	ldr	r2, [r2, #8]
9000476a:	428a      	cmp	r2, r1
9000476c:	d11f      	bne.n	900047ae <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
9000476e:	f44f 7380 	mov.w	r3, #256	@ 0x100
90004772:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
90004776:	2000      	movs	r0, #0
90004778:	f000 fa34 	bl	90004be4 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000477c:	682b      	ldr	r3, [r5, #0]
9000477e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004782:	b192      	cbz	r2, 900047aa <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90004784:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004786:	b180      	cbz	r0, 900047aa <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004788:	f019 fefd 	bl	9001e586 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
9000478c:	682b      	ldr	r3, [r5, #0]
9000478e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90004792:	b12a      	cbz	r2, 900047a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
90004794:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90004796:	b118      	cbz	r0, 900047a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004798:	f019 ff70 	bl	9001e67c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
9000479c:	4620      	mov	r0, r4
9000479e:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900047a0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900047a2:	f019 ff6b 	bl	9001e67c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900047a6:	4620      	mov	r0, r4
900047a8:	bd70      	pop	{r4, r5, r6, pc}
900047aa:	6898      	ldr	r0, [r3, #8]
900047ac:	e7ec      	b.n	90004788 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900047ae:	4619      	mov	r1, r3
900047b0:	4790      	blx	r2
900047b2:	e7e0      	b.n	90004776 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900047b4:	24021cb0 	.word	0x24021cb0
900047b8:	24021c5c 	.word	0x24021c5c
900047bc:	90029bc8 	.word	0x90029bc8
900047c0:	90029bb0 	.word	0x90029bb0
900047c4:	90000d5d 	.word	0x90000d5d

900047c8 <_ZN23FrontendApplicationBase26gotoplayScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900047c8:	4905      	ldr	r1, [pc, #20]	@ (900047e0 <_ZN23FrontendApplicationBase26gotoplayScreenNoTransitionEv+0x18>)
900047ca:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900047cc:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900047d0:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900047d4:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900047d8:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900047dc:	4770      	bx	lr
900047de:	bf00      	nop
900047e0:	9000451d 	.word	0x9000451d

900047e4 <_ZN23FrontendApplicationBase26gotogameScreenNoTransitionEv>:
900047e4:	4905      	ldr	r1, [pc, #20]	@ (900047fc <_ZN23FrontendApplicationBase26gotogameScreenNoTransitionEv+0x18>)
900047e6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900047e8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900047ec:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900047f0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900047f4:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900047f8:	4770      	bx	lr
900047fa:	bf00      	nop
900047fc:	90004375 	.word	0x90004375

90004800 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004800:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90004802:	4770      	bx	lr

90004804 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004804:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004806:	4770      	bx	lr

90004808 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004808:	4770      	bx	lr
9000480a:	bf00      	nop

9000480c <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
9000480c:	888b      	ldrh	r3, [r1, #4]
9000480e:	69c0      	ldr	r0, [r0, #28]
90004810:	0adb      	lsrs	r3, r3, #11
90004812:	680a      	ldr	r2, [r1, #0]
90004814:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004818:	4410      	add	r0, r2
9000481a:	4770      	bx	lr

9000481c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
9000481c:	b1fa      	cbz	r2, 9000485e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
9000481e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004820:	7b14      	ldrb	r4, [r2, #12]
90004822:	b1d4      	cbz	r4, 9000485a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004824:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004828:	f892 e00b 	ldrb.w	lr, [r2, #11]
9000482c:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004830:	6a03      	ldr	r3, [r0, #32]
90004832:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90004836:	ea4e 0202 	orr.w	r2, lr, r2
9000483a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000483e:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90004842:	e004      	b.n	9000484e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90004844:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004848:	d807      	bhi.n	9000485a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000484a:	4283      	cmp	r3, r0
9000484c:	d005      	beq.n	9000485a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
9000484e:	881a      	ldrh	r2, [r3, #0]
90004850:	428a      	cmp	r2, r1
90004852:	d1f7      	bne.n	90004844 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90004854:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
90004858:	bd10      	pop	{r4, pc}
        return 0;
9000485a:	2000      	movs	r0, #0
}
9000485c:	bd10      	pop	{r4, pc}
        return 0;
9000485e:	4610      	mov	r0, r2
}
90004860:	4770      	bx	lr
90004862:	bf00      	nop

90004864 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004864:	b510      	push	{r4, lr}
90004866:	4604      	mov	r4, r0
90004868:	212c      	movs	r1, #44	@ 0x2c
9000486a:	f021 ff4d 	bl	90026708 <_ZdlPvj>
9000486e:	4620      	mov	r0, r4
90004870:	bd10      	pop	{r4, pc}
90004872:	bf00      	nop

90004874 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004874:	b530      	push	{r4, r5, lr}
90004876:	b08b      	sub	sp, #44	@ 0x2c
90004878:	4604      	mov	r4, r0
9000487a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
9000487e:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004880:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90004884:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004886:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
9000488a:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000488c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90004890:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004892:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
90004896:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004898:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
9000489c:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000489e:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
900048a2:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900048a4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
900048a8:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900048aa:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
900048ae:	9508      	str	r5, [sp, #32]
900048b0:	f012 f9cc 	bl	90016c4c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900048b4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
900048b6:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900048b8:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900048ba:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900048bc:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900048be:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900048c0:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
900048c2:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900048c4:	62a3      	str	r3, [r4, #40]	@ 0x28
900048c6:	4b02      	ldr	r3, [pc, #8]	@ (900048d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900048c8:	6023      	str	r3, [r4, #0]
}
900048ca:	b00b      	add	sp, #44	@ 0x2c
900048cc:	bd30      	pop	{r4, r5, pc}
900048ce:	bf00      	nop
900048d0:	90029c40 	.word	0x90029c40

900048d4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900048d4:	4770      	bx	lr
900048d6:	bf00      	nop

900048d8 <_Z23getFont_verdana_10_4bppv>:
{
900048d8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900048da:	4d18      	ldr	r5, [pc, #96]	@ (9000493c <_Z23getFont_verdana_10_4bppv+0x64>)
{
900048dc:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900048de:	682c      	ldr	r4, [r5, #0]
900048e0:	f3bf 8f5b 	dmb	ish
900048e4:	f014 0401 	ands.w	r4, r4, #1
900048e8:	d002      	beq.n	900048f0 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
900048ea:	4815      	ldr	r0, [pc, #84]	@ (90004940 <_Z23getFont_verdana_10_4bppv+0x68>)
900048ec:	b00f      	add	sp, #60	@ 0x3c
900048ee:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900048f0:	4628      	mov	r0, r5
900048f2:	f021 ff0b 	bl	9002670c <__cxa_guard_acquire>
900048f6:	2800      	cmp	r0, #0
900048f8:	d0f7      	beq.n	900048ea <_Z23getFont_verdana_10_4bppv+0x12>
900048fa:	213f      	movs	r1, #63	@ 0x3f
900048fc:	2201      	movs	r2, #1
900048fe:	230a      	movs	r3, #10
90004900:	2004      	movs	r0, #4
90004902:	9204      	str	r2, [sp, #16]
90004904:	9300      	str	r3, [sp, #0]
90004906:	9003      	str	r0, [sp, #12]
90004908:	480d      	ldr	r0, [pc, #52]	@ (90004940 <_Z23getFont_verdana_10_4bppv+0x68>)
9000490a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000490e:	490d      	ldr	r1, [pc, #52]	@ (90004944 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004910:	9108      	str	r1, [sp, #32]
90004912:	490d      	ldr	r1, [pc, #52]	@ (90004948 <_Z23getFont_verdana_10_4bppv+0x70>)
90004914:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90004918:	9107      	str	r1, [sp, #28]
9000491a:	490c      	ldr	r1, [pc, #48]	@ (9000494c <_Z23getFont_verdana_10_4bppv+0x74>)
9000491c:	e9cd 4405 	strd	r4, r4, [sp, #20]
90004920:	e9cd 4401 	strd	r4, r4, [sp, #4]
90004924:	f7ff ffa6 	bl	90004874 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004928:	4809      	ldr	r0, [pc, #36]	@ (90004950 <_Z23getFont_verdana_10_4bppv+0x78>)
9000492a:	f022 fa83 	bl	90026e34 <atexit>
9000492e:	4628      	mov	r0, r5
90004930:	f021 fef8 	bl	90026724 <__cxa_guard_release>
}
90004934:	4802      	ldr	r0, [pc, #8]	@ (90004940 <_Z23getFont_verdana_10_4bppv+0x68>)
90004936:	b00f      	add	sp, #60	@ 0x3c
90004938:	bd30      	pop	{r4, r5, pc}
9000493a:	bf00      	nop
9000493c:	24007b68 	.word	0x24007b68
90004940:	24007b6c 	.word	0x24007b6c
90004944:	9002ae2c 	.word	0x9002ae2c
90004948:	9002ae3c 	.word	0x9002ae3c
9000494c:	90200528 	.word	0x90200528
90004950:	900048d5 	.word	0x900048d5

90004954 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004954:	4770      	bx	lr
90004956:	bf00      	nop

90004958 <_Z23getFont_verdana_20_4bppv>:
{
90004958:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000495a:	4d18      	ldr	r5, [pc, #96]	@ (900049bc <_Z23getFont_verdana_20_4bppv+0x64>)
{
9000495c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000495e:	682c      	ldr	r4, [r5, #0]
90004960:	f3bf 8f5b 	dmb	ish
90004964:	f014 0401 	ands.w	r4, r4, #1
90004968:	d002      	beq.n	90004970 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
9000496a:	4815      	ldr	r0, [pc, #84]	@ (900049c0 <_Z23getFont_verdana_20_4bppv+0x68>)
9000496c:	b00f      	add	sp, #60	@ 0x3c
9000496e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004970:	4628      	mov	r0, r5
90004972:	f021 fecb 	bl	9002670c <__cxa_guard_acquire>
90004976:	2800      	cmp	r0, #0
90004978:	d0f7      	beq.n	9000496a <_Z23getFont_verdana_20_4bppv+0x12>
9000497a:	213f      	movs	r1, #63	@ 0x3f
9000497c:	2201      	movs	r2, #1
9000497e:	2314      	movs	r3, #20
90004980:	2004      	movs	r0, #4
90004982:	9204      	str	r2, [sp, #16]
90004984:	9300      	str	r3, [sp, #0]
90004986:	9003      	str	r0, [sp, #12]
90004988:	480d      	ldr	r0, [pc, #52]	@ (900049c0 <_Z23getFont_verdana_20_4bppv+0x68>)
9000498a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000498e:	490d      	ldr	r1, [pc, #52]	@ (900049c4 <_Z23getFont_verdana_20_4bppv+0x6c>)
90004990:	9108      	str	r1, [sp, #32]
90004992:	490d      	ldr	r1, [pc, #52]	@ (900049c8 <_Z23getFont_verdana_20_4bppv+0x70>)
90004994:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90004998:	9107      	str	r1, [sp, #28]
9000499a:	490c      	ldr	r1, [pc, #48]	@ (900049cc <_Z23getFont_verdana_20_4bppv+0x74>)
9000499c:	e9cd 4405 	strd	r4, r4, [sp, #20]
900049a0:	e9cd 4401 	strd	r4, r4, [sp, #4]
900049a4:	f7ff ff66 	bl	90004874 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900049a8:	4809      	ldr	r0, [pc, #36]	@ (900049d0 <_Z23getFont_verdana_20_4bppv+0x78>)
900049aa:	f022 fa43 	bl	90026e34 <atexit>
900049ae:	4628      	mov	r0, r5
900049b0:	f021 feb8 	bl	90026724 <__cxa_guard_release>
}
900049b4:	4802      	ldr	r0, [pc, #8]	@ (900049c0 <_Z23getFont_verdana_20_4bppv+0x68>)
900049b6:	b00f      	add	sp, #60	@ 0x3c
900049b8:	bd30      	pop	{r4, r5, pc}
900049ba:	bf00      	nop
900049bc:	24007b98 	.word	0x24007b98
900049c0:	24007b9c 	.word	0x24007b9c
900049c4:	9002ae30 	.word	0x9002ae30
900049c8:	9002ae40 	.word	0x9002ae40
900049cc:	90200538 	.word	0x90200538
900049d0:	90004955 	.word	0x90004955

900049d4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900049d4:	4770      	bx	lr
900049d6:	bf00      	nop

900049d8 <_Z23getFont_verdana_40_4bppv>:
{
900049d8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900049da:	4d18      	ldr	r5, [pc, #96]	@ (90004a3c <_Z23getFont_verdana_40_4bppv+0x64>)
{
900049dc:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900049de:	682c      	ldr	r4, [r5, #0]
900049e0:	f3bf 8f5b 	dmb	ish
900049e4:	f014 0401 	ands.w	r4, r4, #1
900049e8:	d002      	beq.n	900049f0 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
900049ea:	4815      	ldr	r0, [pc, #84]	@ (90004a40 <_Z23getFont_verdana_40_4bppv+0x68>)
900049ec:	b00f      	add	sp, #60	@ 0x3c
900049ee:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900049f0:	4628      	mov	r0, r5
900049f2:	f021 fe8b 	bl	9002670c <__cxa_guard_acquire>
900049f6:	2800      	cmp	r0, #0
900049f8:	d0f7      	beq.n	900049ea <_Z23getFont_verdana_40_4bppv+0x12>
900049fa:	213f      	movs	r1, #63	@ 0x3f
900049fc:	2201      	movs	r2, #1
900049fe:	2328      	movs	r3, #40	@ 0x28
90004a00:	2004      	movs	r0, #4
90004a02:	9204      	str	r2, [sp, #16]
90004a04:	9300      	str	r3, [sp, #0]
90004a06:	9003      	str	r0, [sp, #12]
90004a08:	480d      	ldr	r0, [pc, #52]	@ (90004a40 <_Z23getFont_verdana_40_4bppv+0x68>)
90004a0a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90004a0e:	490d      	ldr	r1, [pc, #52]	@ (90004a44 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004a10:	9108      	str	r1, [sp, #32]
90004a12:	490d      	ldr	r1, [pc, #52]	@ (90004a48 <_Z23getFont_verdana_40_4bppv+0x70>)
90004a14:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90004a18:	9107      	str	r1, [sp, #28]
90004a1a:	490c      	ldr	r1, [pc, #48]	@ (90004a4c <_Z23getFont_verdana_40_4bppv+0x74>)
90004a1c:	e9cd 4405 	strd	r4, r4, [sp, #20]
90004a20:	e9cd 4401 	strd	r4, r4, [sp, #4]
90004a24:	f7ff ff26 	bl	90004874 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004a28:	4809      	ldr	r0, [pc, #36]	@ (90004a50 <_Z23getFont_verdana_40_4bppv+0x78>)
90004a2a:	f022 fa03 	bl	90026e34 <atexit>
90004a2e:	4628      	mov	r0, r5
90004a30:	f021 fe78 	bl	90026724 <__cxa_guard_release>
}
90004a34:	4802      	ldr	r0, [pc, #8]	@ (90004a40 <_Z23getFont_verdana_40_4bppv+0x68>)
90004a36:	b00f      	add	sp, #60	@ 0x3c
90004a38:	bd30      	pop	{r4, r5, pc}
90004a3a:	bf00      	nop
90004a3c:	24007bc8 	.word	0x24007bc8
90004a40:	24007bcc 	.word	0x24007bcc
90004a44:	9002ae34 	.word	0x9002ae34
90004a48:	9002ae44 	.word	0x9002ae44
90004a4c:	90200548 	.word	0x90200548
90004a50:	900049d5 	.word	0x900049d5

90004a54 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_20_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_20_4bpp()
{
    static touchgfx::GeneratedFont verdanab_20_4bpp(glyphs_verdanab_20_4bpp, 12, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdanab_20_4bpp, kerning_verdanab_20_4bpp, 63, 0, 0, 0);
90004a54:	4770      	bx	lr
90004a56:	bf00      	nop

90004a58 <_Z24getFont_verdanab_20_4bppv>:
{
90004a58:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_20_4bpp(glyphs_verdanab_20_4bpp, 12, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdanab_20_4bpp, kerning_verdanab_20_4bpp, 63, 0, 0, 0);
90004a5a:	4d19      	ldr	r5, [pc, #100]	@ (90004ac0 <_Z24getFont_verdanab_20_4bppv+0x68>)
{
90004a5c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdanab_20_4bpp(glyphs_verdanab_20_4bpp, 12, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdanab_20_4bpp, kerning_verdanab_20_4bpp, 63, 0, 0, 0);
90004a5e:	682c      	ldr	r4, [r5, #0]
90004a60:	f3bf 8f5b 	dmb	ish
90004a64:	f014 0401 	ands.w	r4, r4, #1
90004a68:	d002      	beq.n	90004a70 <_Z24getFont_verdanab_20_4bppv+0x18>
    return verdanab_20_4bpp;
}
90004a6a:	4816      	ldr	r0, [pc, #88]	@ (90004ac4 <_Z24getFont_verdanab_20_4bppv+0x6c>)
90004a6c:	b00f      	add	sp, #60	@ 0x3c
90004a6e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdanab_20_4bpp(glyphs_verdanab_20_4bpp, 12, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdanab_20_4bpp, kerning_verdanab_20_4bpp, 63, 0, 0, 0);
90004a70:	4628      	mov	r0, r5
90004a72:	f021 fe4b 	bl	9002670c <__cxa_guard_acquire>
90004a76:	2800      	cmp	r0, #0
90004a78:	d0f7      	beq.n	90004a6a <_Z24getFont_verdanab_20_4bppv+0x12>
90004a7a:	213f      	movs	r1, #63	@ 0x3f
90004a7c:	4a12      	ldr	r2, [pc, #72]	@ (90004ac8 <_Z24getFont_verdanab_20_4bppv+0x70>)
90004a7e:	2301      	movs	r3, #1
90004a80:	2014      	movs	r0, #20
90004a82:	9208      	str	r2, [sp, #32]
90004a84:	2204      	movs	r2, #4
90004a86:	9304      	str	r3, [sp, #16]
90004a88:	9000      	str	r0, [sp, #0]
90004a8a:	9401      	str	r4, [sp, #4]
90004a8c:	480d      	ldr	r0, [pc, #52]	@ (90004ac4 <_Z24getFont_verdanab_20_4bppv+0x6c>)
90004a8e:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
90004a92:	490e      	ldr	r1, [pc, #56]	@ (90004acc <_Z24getFont_verdanab_20_4bppv+0x74>)
90004a94:	e9cd 4305 	strd	r4, r3, [sp, #20]
90004a98:	9107      	str	r1, [sp, #28]
90004a9a:	2318      	movs	r3, #24
90004a9c:	490c      	ldr	r1, [pc, #48]	@ (90004ad0 <_Z24getFont_verdanab_20_4bppv+0x78>)
90004a9e:	e9cd 4202 	strd	r4, r2, [sp, #8]
90004aa2:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90004aa6:	220c      	movs	r2, #12
90004aa8:	f7ff fee4 	bl	90004874 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004aac:	4809      	ldr	r0, [pc, #36]	@ (90004ad4 <_Z24getFont_verdanab_20_4bppv+0x7c>)
90004aae:	f022 f9c1 	bl	90026e34 <atexit>
90004ab2:	4628      	mov	r0, r5
90004ab4:	f021 fe36 	bl	90026724 <__cxa_guard_release>
}
90004ab8:	4802      	ldr	r0, [pc, #8]	@ (90004ac4 <_Z24getFont_verdanab_20_4bppv+0x6c>)
90004aba:	b00f      	add	sp, #60	@ 0x3c
90004abc:	bd30      	pop	{r4, r5, pc}
90004abe:	bf00      	nop
90004ac0:	24007bf8 	.word	0x24007bf8
90004ac4:	24007bfc 	.word	0x24007bfc
90004ac8:	9002ae38 	.word	0x9002ae38
90004acc:	9002ae48 	.word	0x9002ae48
90004ad0:	90200558 	.word	0x90200558
90004ad4:	90004a55 	.word	0x90004a55

90004ad8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90004ad8:	2000      	movs	r0, #0
90004ada:	4770      	bx	lr

90004adc <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90004adc:	2000      	movs	r0, #0
90004ade:	4770      	bx	lr

90004ae0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90004ae0:	b40e      	push	{r1, r2, r3}
90004ae2:	b500      	push	{lr}
90004ae4:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90004ae6:	2100      	movs	r1, #0
{
90004ae8:	ab03      	add	r3, sp, #12
90004aea:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90004aee:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90004af0:	f011 fbb0 	bl	90016254 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90004af4:	b002      	add	sp, #8
90004af6:	f85d eb04 	ldr.w	lr, [sp], #4
90004afa:	b003      	add	sp, #12
90004afc:	4770      	bx	lr
90004afe:	bf00      	nop

90004b00 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90004b00:	b40c      	push	{r2, r3}
90004b02:	b500      	push	{lr}
90004b04:	b083      	sub	sp, #12
90004b06:	ab04      	add	r3, sp, #16
90004b08:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90004b0c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90004b0e:	f011 fba1 	bl	90016254 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90004b12:	b003      	add	sp, #12
90004b14:	f85d eb04 	ldr.w	lr, [sp], #4
90004b18:	b002      	add	sp, #8
90004b1a:	4770      	bx	lr

90004b1c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90004b1c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90004b1e:	b510      	push	{r4, lr}
90004b20:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90004b22:	b133      	cbz	r3, 90004b32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90004b24:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90004b26:	b39b      	cbz	r3, 90004b90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90004b28:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90004b2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90004b2e:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90004b30:	b923      	cbnz	r3, 90004b3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90004b32:	4620      	mov	r0, r4
}
90004b34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90004b38:	f013 b84a 	b.w	90017bd0 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90004b3c:	f013 f946 	bl	90017dcc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90004b40:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90004b42:	2b01      	cmp	r3, #1
90004b44:	d92a      	bls.n	90004b9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90004b46:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90004b48:	1c53      	adds	r3, r2, #1
90004b4a:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90004b4c:	2b09      	cmp	r3, #9
90004b4e:	d812      	bhi.n	90004b76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90004b50:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90004b54:	f640 103f 	movw	r0, #2367	@ 0x93f
90004b58:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90004b5a:	4281      	cmp	r1, r0
90004b5c:	d1e9      	bne.n	90004b32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004b5e:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004b62:	0052      	lsls	r2, r2, #1
90004b64:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90004b66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90004b6a:	4422      	add	r2, r4
90004b6c:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90004b70:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
90004b72:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90004b74:	e7dd      	b.n	90004b32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90004b76:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004b7a:	f640 113f 	movw	r1, #2367	@ 0x93f
90004b7e:	89db      	ldrh	r3, [r3, #14]
90004b80:	428b      	cmp	r3, r1
90004b82:	d1d6      	bne.n	90004b32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004b84:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004b88:	2300      	movs	r3, #0
90004b8a:	0052      	lsls	r2, r2, #1
90004b8c:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90004b8e:	e7ea      	b.n	90004b66 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90004b90:	4b05      	ldr	r3, [pc, #20]	@ (90004ba8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90004b92:	21c5      	movs	r1, #197	@ 0xc5
90004b94:	4a05      	ldr	r2, [pc, #20]	@ (90004bac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90004b96:	4806      	ldr	r0, [pc, #24]	@ (90004bb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004b98:	f022 f92e 	bl	90026df8 <__assert_func>
            assert(offset < used);
90004b9c:	4b05      	ldr	r3, [pc, #20]	@ (90004bb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90004b9e:	21cb      	movs	r1, #203	@ 0xcb
90004ba0:	4a05      	ldr	r2, [pc, #20]	@ (90004bb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90004ba2:	4803      	ldr	r0, [pc, #12]	@ (90004bb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004ba4:	f022 f928 	bl	90026df8 <__assert_func>
90004ba8:	90029ca0 	.word	0x90029ca0
90004bac:	90029cac 	.word	0x90029cac
90004bb0:	90029d58 	.word	0x90029d58
90004bb4:	90029da4 	.word	0x90029da4
90004bb8:	90029db4 	.word	0x90029db4

90004bbc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90004bbc:	f012 bfd1 	b.w	90017b62 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90004bc0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90004bc0:	b510      	push	{r4, lr}
90004bc2:	b086      	sub	sp, #24
90004bc4:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90004bc8:	ac0a      	add	r4, sp, #40	@ 0x28
{
90004bca:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90004bce:	461a      	mov	r2, r3
90004bd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90004bd2:	4661      	mov	r1, ip
90004bd4:	9401      	str	r4, [sp, #4]
90004bd6:	9300      	str	r3, [sp, #0]
90004bd8:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90004bda:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90004bdc:	f00f ff88 	bl	90014af0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90004be0:	b006      	add	sp, #24
90004be2:	bd10      	pop	{r4, pc}

90004be4 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90004be4:	b9e0      	cbnz	r0, 90004c20 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90004be6:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90004be8:	4b13      	ldr	r3, [pc, #76]	@ (90004c38 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90004bea:	681b      	ldr	r3, [r3, #0]
90004bec:	b1cb      	cbz	r3, 90004c22 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90004bee:	4c13      	ldr	r4, [pc, #76]	@ (90004c3c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90004bf0:	4813      	ldr	r0, [pc, #76]	@ (90004c40 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90004bf2:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90004bf6:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90004bf8:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90004bfa:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90004bfc:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90004bfe:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90004c00:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90004c02:	4b10      	ldr	r3, [pc, #64]	@ (90004c44 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90004c04:	2200      	movs	r2, #0
90004c06:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90004c08:	f000 f83a 	bl	90004c80 <_ZN17TypedTextDatabase8getFontsEv>
90004c0c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90004c0e:	f000 f835 	bl	90004c7c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90004c12:	4b0d      	ldr	r3, [pc, #52]	@ (90004c48 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90004c14:	4a0d      	ldr	r2, [pc, #52]	@ (90004c4c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90004c16:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90004c18:	4b0d      	ldr	r3, [pc, #52]	@ (90004c50 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90004c1a:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90004c1c:	8018      	strh	r0, [r3, #0]
    }
}
90004c1e:	bd38      	pop	{r3, r4, r5, pc}
90004c20:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90004c22:	4c0c      	ldr	r4, [pc, #48]	@ (90004c54 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90004c24:	4905      	ldr	r1, [pc, #20]	@ (90004c3c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90004c26:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90004c28:	480b      	ldr	r0, [pc, #44]	@ (90004c58 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90004c2a:	4b05      	ldr	r3, [pc, #20]	@ (90004c40 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90004c2c:	4a0b      	ldr	r2, [pc, #44]	@ (90004c5c <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90004c2e:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90004c30:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90004c32:	2c00      	cmp	r4, #0
90004c34:	d1e5      	bne.n	90004c02 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90004c36:	bd38      	pop	{r3, r4, r5, pc}
90004c38:	24007c34 	.word	0x24007c34
90004c3c:	24007c2c 	.word	0x24007c2c
90004c40:	24007c28 	.word	0x24007c28
90004c44:	24007c30 	.word	0x24007c30
90004c48:	24021cb4 	.word	0x24021cb4
90004c4c:	24021cbc 	.word	0x24021cbc
90004c50:	24021cb8 	.word	0x24021cb8
90004c54:	90200630 	.word	0x90200630
90004c58:	9020060c 	.word	0x9020060c
90004c5c:	90200600 	.word	0x90200600

90004c60 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90004c60:	4a04      	ldr	r2, [pc, #16]	@ (90004c74 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90004c62:	4b05      	ldr	r3, [pc, #20]	@ (90004c78 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90004c64:	6812      	ldr	r2, [r2, #0]
90004c66:	681b      	ldr	r3, [r3, #0]
90004c68:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004c6c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90004c70:	4770      	bx	lr
90004c72:	bf00      	nop
90004c74:	24007c28 	.word	0x24007c28
90004c78:	24007c2c 	.word	0x24007c2c

90004c7c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004c7c:	2003      	movs	r0, #3
90004c7e:	4770      	bx	lr

90004c80 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90004c80:	4800      	ldr	r0, [pc, #0]	@ (90004c84 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90004c82:	4770      	bx	lr
90004c84:	24007c38 	.word	0x24007c38

90004c88 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdanab_20_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004c88:	b510      	push	{r4, lr}
};
90004c8a:	4c07      	ldr	r4, [pc, #28]	@ (90004ca8 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
    &(getFont_verdana_20_4bpp()),
90004c8c:	f7ff fe64 	bl	90004958 <_Z23getFont_verdana_20_4bppv>
};
90004c90:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90004c92:	f7ff fea1 	bl	900049d8 <_Z23getFont_verdana_40_4bppv>
};
90004c96:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
90004c98:	f7ff fe1e 	bl	900048d8 <_Z23getFont_verdana_10_4bppv>
};
90004c9c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdanab_20_4bpp())
90004c9e:	f7ff fedb 	bl	90004a58 <_Z24getFont_verdanab_20_4bppv>
};
90004ca2:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
90004ca4:	bd10      	pop	{r4, pc}
90004ca6:	bf00      	nop
90004ca8:	24007c38 	.word	0x24007c38

90004cac <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
90004cac:	b410      	push	{r4}
    pointArray = 0;
90004cae:	2400      	movs	r4, #0
90004cb0:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
90004cb2:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90004cb4:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90004cb6:	601c      	str	r4, [r3, #0]
}
90004cb8:	f85d 4b04 	ldr.w	r4, [sp], #4
90004cbc:	4770      	bx	lr
90004cbe:	bf00      	nop

90004cc0 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90004cc0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90004cc2:	4770      	bx	lr

90004cc4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004cc4:	4770      	bx	lr
90004cc6:	bf00      	nop

90004cc8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004cc8:	4770      	bx	lr
90004cca:	bf00      	nop

90004ccc <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004ccc:	4770      	bx	lr
90004cce:	bf00      	nop

90004cd0 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004cd0:	4770      	bx	lr
90004cd2:	bf00      	nop

90004cd4 <_ZN12gameViewBaseD1Ev>:
}

gameViewBase::~gameViewBase()
{

}
90004cd4:	4770      	bx	lr
90004cd6:	bf00      	nop

90004cd8 <_ZN12gameViewBase11setupScreenEv>:

void gameViewBase::setupScreen()
{

}
90004cd8:	4770      	bx	lr
90004cda:	bf00      	nop

90004cdc <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

int player = 0;

void gameViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &topLeft)
90004cdc:	f100 0398 	add.w	r3, r0, #152	@ 0x98
        } else {
        	topLeftKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &topMiddle)
90004ce0:	f500 7288 	add.w	r2, r0, #272	@ 0x110
    if (&src == &topLeft)
90004ce4:	4299      	cmp	r1, r3
{
90004ce6:	b410      	push	{r4}
    if (&src == &topLeft)
90004ce8:	d061      	beq.n	90004dae <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
    if (&src == &topMiddle)
90004cea:	4291      	cmp	r1, r2
90004cec:	d025      	beq.n	90004d3a <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5e>
        } else {
        	topMiddleKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &topRight)
90004cee:	f500 73c4 	add.w	r3, r0, #392	@ 0x188
90004cf2:	4299      	cmp	r1, r3
90004cf4:	f000 811c 	beq.w	90004f30 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x254>
        } else {
        	topRightKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &middleLeft)
90004cf8:	f500 7300 	add.w	r3, r0, #512	@ 0x200
90004cfc:	4299      	cmp	r1, r3
90004cfe:	f000 8112 	beq.w	90004f26 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24a>
        } else {
        	middleLeftKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &middleMiddle)
90004d02:	f500 731e 	add.w	r3, r0, #632	@ 0x278
90004d06:	4299      	cmp	r1, r3
90004d08:	f000 8108 	beq.w	90004f1c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x240>
        } else {
        	middleMiddleKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &middleRight)
90004d0c:	f500 733c 	add.w	r3, r0, #752	@ 0x2f0
90004d10:	4299      	cmp	r1, r3
90004d12:	f000 80fd 	beq.w	90004f10 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x234>
        } else {
        	middleRightKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &bottomLeft)
90004d16:	f500 735a 	add.w	r3, r0, #872	@ 0x368
90004d1a:	4299      	cmp	r1, r3
90004d1c:	f000 80f3 	beq.w	90004f06 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22a>
        } else {
        	bottomLeftKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &bottomMiddle)
90004d20:	f500 7378 	add.w	r3, r0, #992	@ 0x3e0
90004d24:	4299      	cmp	r1, r3
90004d26:	f000 80e9 	beq.w	90004efc <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x220>
        } else {
        	bottomMiddleKrozec.setVisible(true);
        	player = 0;
        }
    }
    if (&src == &bottomRight)
90004d2a:	f500 638b 	add.w	r3, r0, #1112	@ 0x458
90004d2e:	4299      	cmp	r1, r3
90004d30:	f000 80de 	beq.w	90004ef0 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x214>
        } else {
        	bottomRightKrozec.setVisible(true);
        	player = 0;
        }
    }
}
90004d34:	f85d 4b04 	ldr.w	r4, [sp], #4
90004d38:	4770      	bx	lr
        if (player == 0) {
90004d3a:	4b80      	ldr	r3, [pc, #512]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004d3c:	681a      	ldr	r2, [r3, #0]
90004d3e:	2a00      	cmp	r2, #0
90004d40:	f040 80ac 	bne.w	90004e9c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c0>
    if (&src == &topRight)
90004d44:	f500 72c4 	add.w	r2, r0, #392	@ 0x188
        visible = vis;
90004d48:	2401      	movs	r4, #1
90004d4a:	4291      	cmp	r1, r2
90004d4c:	f880 4579 	strb.w	r4, [r0, #1401]	@ 0x579
        	player = 1;
90004d50:	601c      	str	r4, [r3, #0]
    if (&src == &topRight)
90004d52:	d03a      	beq.n	90004dca <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xee>
    if (&src == &middleLeft)
90004d54:	f500 7200 	add.w	r2, r0, #512	@ 0x200
90004d58:	4291      	cmp	r1, r2
90004d5a:	d1d2      	bne.n	90004d02 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
        	player = 0;
90004d5c:	2200      	movs	r2, #0
90004d5e:	2401      	movs	r4, #1
90004d60:	601a      	str	r2, [r3, #0]
    if (&src == &middleMiddle)
90004d62:	f500 721e 	add.w	r2, r0, #632	@ 0x278
90004d66:	f880 4629 	strb.w	r4, [r0, #1577]	@ 0x629
90004d6a:	4291      	cmp	r1, r2
90004d6c:	d03a      	beq.n	90004de4 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x108>
    if (&src == &middleRight)
90004d6e:	f500 723c 	add.w	r2, r0, #752	@ 0x2f0
90004d72:	4291      	cmp	r1, r2
90004d74:	d1cf      	bne.n	90004d16 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
    if (&src == &bottomLeft)
90004d76:	f500 725a 	add.w	r2, r0, #872	@ 0x368
90004d7a:	2401      	movs	r4, #1
90004d7c:	4291      	cmp	r1, r2
90004d7e:	f880 46ad 	strb.w	r4, [r0, #1709]	@ 0x6ad
        	player = 1;
90004d82:	601c      	str	r4, [r3, #0]
    if (&src == &bottomLeft)
90004d84:	d03a      	beq.n	90004dfc <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x120>
    if (&src == &bottomMiddle)
90004d86:	f500 7278 	add.w	r2, r0, #992	@ 0x3e0
90004d8a:	4291      	cmp	r1, r2
90004d8c:	d1cd      	bne.n	90004d2a <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
90004d8e:	2401      	movs	r4, #1
        	player = 0;
90004d90:	2200      	movs	r2, #0
90004d92:	f880 4705 	strb.w	r4, [r0, #1797]	@ 0x705
90004d96:	601a      	str	r2, [r3, #0]
    if (&src == &bottomRight)
90004d98:	f500 628b 	add.w	r2, r0, #1112	@ 0x458
90004d9c:	4291      	cmp	r1, r2
90004d9e:	d1c9      	bne.n	90004d34 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x58>
90004da0:	2201      	movs	r2, #1
}
90004da2:	f85d 4b04 	ldr.w	r4, [sp], #4
90004da6:	f880 27b5 	strb.w	r2, [r0, #1973]	@ 0x7b5
        	player = 1;
90004daa:	601a      	str	r2, [r3, #0]
}
90004dac:	4770      	bx	lr
        if (player == 0) {
90004dae:	4b63      	ldr	r3, [pc, #396]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004db0:	681c      	ldr	r4, [r3, #0]
90004db2:	2c00      	cmp	r4, #0
90004db4:	d13b      	bne.n	90004e2e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x152>
90004db6:	2401      	movs	r4, #1
    if (&src == &topMiddle)
90004db8:	4291      	cmp	r1, r2
90004dba:	f880 44f5 	strb.w	r4, [r0, #1269]	@ 0x4f5
        	player = 1;
90004dbe:	601c      	str	r4, [r3, #0]
    if (&src == &topMiddle)
90004dc0:	d06c      	beq.n	90004e9c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c0>
    if (&src == &topRight)
90004dc2:	f500 72c4 	add.w	r2, r0, #392	@ 0x188
90004dc6:	4291      	cmp	r1, r2
90004dc8:	d196      	bne.n	90004cf8 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        	player = 0;
90004dca:	2200      	movs	r2, #0
90004dcc:	2401      	movs	r4, #1
90004dce:	601a      	str	r2, [r3, #0]
    if (&src == &middleLeft)
90004dd0:	f500 7200 	add.w	r2, r0, #512	@ 0x200
90004dd4:	f880 45a5 	strb.w	r4, [r0, #1445]	@ 0x5a5
90004dd8:	4291      	cmp	r1, r2
90004dda:	d06d      	beq.n	90004eb8 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1dc>
    if (&src == &middleMiddle)
90004ddc:	f500 721e 	add.w	r2, r0, #632	@ 0x278
90004de0:	4291      	cmp	r1, r2
90004de2:	d193      	bne.n	90004d0c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x30>
    if (&src == &middleRight)
90004de4:	f500 723c 	add.w	r2, r0, #752	@ 0x2f0
90004de8:	2401      	movs	r4, #1
90004dea:	4291      	cmp	r1, r2
90004dec:	f880 4655 	strb.w	r4, [r0, #1621]	@ 0x655
        	player = 1;
90004df0:	601c      	str	r4, [r3, #0]
    if (&src == &middleRight)
90004df2:	d06e      	beq.n	90004ed2 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1f6>
    if (&src == &bottomLeft)
90004df4:	f500 725a 	add.w	r2, r0, #872	@ 0x368
90004df8:	4291      	cmp	r1, r2
90004dfa:	d191      	bne.n	90004d20 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x44>
        	player = 0;
90004dfc:	2200      	movs	r2, #0
90004dfe:	2401      	movs	r4, #1
90004e00:	601a      	str	r2, [r3, #0]
    if (&src == &bottomMiddle)
90004e02:	f500 7278 	add.w	r2, r0, #992	@ 0x3e0
90004e06:	f880 4731 	strb.w	r4, [r0, #1841]	@ 0x731
90004e0a:	4291      	cmp	r1, r2
90004e0c:	d1c4      	bne.n	90004d98 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xbc>
    if (&src == &bottomRight)
90004e0e:	f500 628b 	add.w	r2, r0, #1112	@ 0x458
90004e12:	2401      	movs	r4, #1
90004e14:	4291      	cmp	r1, r2
90004e16:	f880 475d 	strb.w	r4, [r0, #1885]	@ 0x75d
        	player = 1;
90004e1a:	601c      	str	r4, [r3, #0]
    if (&src == &bottomRight)
90004e1c:	d18a      	bne.n	90004d34 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x58>
90004e1e:	2101      	movs	r1, #1
        	player = 0;
90004e20:	2200      	movs	r2, #0
}
90004e22:	f85d 4b04 	ldr.w	r4, [sp], #4
90004e26:	f880 17e1 	strb.w	r1, [r0, #2017]	@ 0x7e1
        	player = 0;
90004e2a:	601a      	str	r2, [r3, #0]
}
90004e2c:	4770      	bx	lr
90004e2e:	2401      	movs	r4, #1
    if (&src == &topMiddle)
90004e30:	4291      	cmp	r1, r2
90004e32:	f880 4521 	strb.w	r4, [r0, #1313]	@ 0x521
        	player = 0;
90004e36:	f04f 0400 	mov.w	r4, #0
90004e3a:	601c      	str	r4, [r3, #0]
    if (&src == &topMiddle)
90004e3c:	d082      	beq.n	90004d44 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x68>
    if (&src == &topRight)
90004e3e:	f500 72c4 	add.w	r2, r0, #392	@ 0x188
90004e42:	4291      	cmp	r1, r2
90004e44:	f47f af58 	bne.w	90004cf8 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
    if (&src == &middleLeft)
90004e48:	f500 7200 	add.w	r2, r0, #512	@ 0x200
90004e4c:	2401      	movs	r4, #1
90004e4e:	4291      	cmp	r1, r2
90004e50:	f880 45d1 	strb.w	r4, [r0, #1489]	@ 0x5d1
        	player = 1;
90004e54:	601c      	str	r4, [r3, #0]
    if (&src == &middleLeft)
90004e56:	d081      	beq.n	90004d5c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x80>
    if (&src == &middleMiddle)
90004e58:	f500 721e 	add.w	r2, r0, #632	@ 0x278
90004e5c:	4291      	cmp	r1, r2
90004e5e:	f47f af55 	bne.w	90004d0c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x30>
        	player = 0;
90004e62:	2200      	movs	r2, #0
90004e64:	2401      	movs	r4, #1
90004e66:	601a      	str	r2, [r3, #0]
    if (&src == &middleRight)
90004e68:	f500 723c 	add.w	r2, r0, #752	@ 0x2f0
90004e6c:	f880 4681 	strb.w	r4, [r0, #1665]	@ 0x681
90004e70:	4291      	cmp	r1, r2
90004e72:	d080      	beq.n	90004d76 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x9a>
    if (&src == &bottomLeft)
90004e74:	f500 725a 	add.w	r2, r0, #872	@ 0x368
90004e78:	4291      	cmp	r1, r2
90004e7a:	f47f af51 	bne.w	90004d20 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x44>
    if (&src == &bottomMiddle)
90004e7e:	f500 7278 	add.w	r2, r0, #992	@ 0x3e0
90004e82:	2401      	movs	r4, #1
90004e84:	4291      	cmp	r1, r2
90004e86:	f880 4789 	strb.w	r4, [r0, #1929]	@ 0x789
        	player = 1;
90004e8a:	601c      	str	r4, [r3, #0]
    if (&src == &bottomMiddle)
90004e8c:	f43f af7f 	beq.w	90004d8e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb2>
    if (&src == &bottomRight)
90004e90:	f500 628b 	add.w	r2, r0, #1112	@ 0x458
90004e94:	4291      	cmp	r1, r2
90004e96:	f47f af4d 	bne.w	90004d34 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x58>
90004e9a:	e7c0      	b.n	90004e1e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x142>
        	player = 0;
90004e9c:	2200      	movs	r2, #0
90004e9e:	2401      	movs	r4, #1
90004ea0:	601a      	str	r2, [r3, #0]
    if (&src == &topRight)
90004ea2:	f500 72c4 	add.w	r2, r0, #392	@ 0x188
90004ea6:	f880 454d 	strb.w	r4, [r0, #1357]	@ 0x54d
90004eaa:	4291      	cmp	r1, r2
90004eac:	d0cc      	beq.n	90004e48 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16c>
    if (&src == &middleLeft)
90004eae:	f500 7200 	add.w	r2, r0, #512	@ 0x200
90004eb2:	4291      	cmp	r1, r2
90004eb4:	f47f af25 	bne.w	90004d02 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
    if (&src == &middleMiddle)
90004eb8:	f500 721e 	add.w	r2, r0, #632	@ 0x278
90004ebc:	2401      	movs	r4, #1
90004ebe:	4291      	cmp	r1, r2
90004ec0:	f880 45fd 	strb.w	r4, [r0, #1533]	@ 0x5fd
        	player = 1;
90004ec4:	601c      	str	r4, [r3, #0]
    if (&src == &middleMiddle)
90004ec6:	d0cc      	beq.n	90004e62 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x186>
    if (&src == &middleRight)
90004ec8:	f500 723c 	add.w	r2, r0, #752	@ 0x2f0
90004ecc:	4291      	cmp	r1, r2
90004ece:	f47f af22 	bne.w	90004d16 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
        	player = 0;
90004ed2:	2200      	movs	r2, #0
90004ed4:	2401      	movs	r4, #1
90004ed6:	601a      	str	r2, [r3, #0]
    if (&src == &bottomLeft)
90004ed8:	f500 725a 	add.w	r2, r0, #872	@ 0x368
90004edc:	f880 46d9 	strb.w	r4, [r0, #1753]	@ 0x6d9
90004ee0:	4291      	cmp	r1, r2
90004ee2:	d0cc      	beq.n	90004e7e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1a2>
    if (&src == &bottomMiddle)
90004ee4:	f500 7278 	add.w	r2, r0, #992	@ 0x3e0
90004ee8:	4291      	cmp	r1, r2
90004eea:	f47f af1e 	bne.w	90004d2a <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
90004eee:	e78e      	b.n	90004e0e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x132>
        if (player == 0) {
90004ef0:	4b12      	ldr	r3, [pc, #72]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004ef2:	681a      	ldr	r2, [r3, #0]
90004ef4:	2a00      	cmp	r2, #0
90004ef6:	f43f af53 	beq.w	90004da0 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc4>
90004efa:	e790      	b.n	90004e1e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x142>
        if (player == 0) {
90004efc:	4b0f      	ldr	r3, [pc, #60]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004efe:	681a      	ldr	r2, [r3, #0]
90004f00:	2a00      	cmp	r2, #0
90004f02:	d084      	beq.n	90004e0e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x132>
90004f04:	e743      	b.n	90004d8e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb2>
        if (player == 0) {
90004f06:	4b0d      	ldr	r3, [pc, #52]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004f08:	681a      	ldr	r2, [r3, #0]
90004f0a:	2a00      	cmp	r2, #0
90004f0c:	d0b7      	beq.n	90004e7e <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1a2>
90004f0e:	e775      	b.n	90004dfc <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x120>
        if (player == 0) {
90004f10:	4b0a      	ldr	r3, [pc, #40]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004f12:	681a      	ldr	r2, [r3, #0]
90004f14:	2a00      	cmp	r2, #0
90004f16:	f43f af2e 	beq.w	90004d76 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x9a>
90004f1a:	e7da      	b.n	90004ed2 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1f6>
        if (player == 0) {
90004f1c:	4b07      	ldr	r3, [pc, #28]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004f1e:	681a      	ldr	r2, [r3, #0]
90004f20:	2a00      	cmp	r2, #0
90004f22:	d19e      	bne.n	90004e62 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x186>
90004f24:	e75e      	b.n	90004de4 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x108>
        if (player == 0) {
90004f26:	4b05      	ldr	r3, [pc, #20]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004f28:	681a      	ldr	r2, [r3, #0]
90004f2a:	2a00      	cmp	r2, #0
90004f2c:	d0c4      	beq.n	90004eb8 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1dc>
90004f2e:	e715      	b.n	90004d5c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x80>
        if (player == 0) {
90004f30:	4b02      	ldr	r3, [pc, #8]	@ (90004f3c <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x260>)
90004f32:	681a      	ldr	r2, [r3, #0]
90004f34:	2a00      	cmp	r2, #0
90004f36:	d087      	beq.n	90004e48 <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16c>
90004f38:	e747      	b.n	90004dca <_ZN12gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xee>
90004f3a:	bf00      	nop
90004f3c:	24007c48 	.word	0x24007c48

90004f40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
90004f40:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90004f44:	b133      	cbz	r3, 90004f54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
90004f46:	6ec2      	ldr	r2, [r0, #108]	@ 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004f48:	f100 0374 	add.w	r3, r0, #116	@ 0x74
90004f4c:	65c2      	str	r2, [r0, #92]	@ 0x5c
90004f4e:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90004f50:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
90004f52:	4770      	bx	lr
90004f54:	6e82      	ldr	r2, [r0, #104]	@ 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004f56:	f100 0370 	add.w	r3, r0, #112	@ 0x70
90004f5a:	65c2      	str	r2, [r0, #92]	@ 0x5c
90004f5c:	681b      	ldr	r3, [r3, #0]
90004f5e:	6603      	str	r3, [r0, #96]	@ 0x60
    }
90004f60:	4770      	bx	lr
90004f62:	bf00      	nop

90004f64 <_ZN8touchgfx8CallbackI12gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004f64:	4770      	bx	lr
90004f66:	bf00      	nop

90004f68 <_ZN8touchgfx8CallbackI12gameViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
90004f68:	4770      	bx	lr
90004f6a:	bf00      	nop

90004f6c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90004f6c:	4770      	bx	lr
90004f6e:	bf00      	nop

90004f70 <_ZN8touchgfx8CallbackI12gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004f70:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004f72:	68c3      	ldr	r3, [r0, #12]
90004f74:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90004f78:	f013 0f01 	tst.w	r3, #1
90004f7c:	eb04 0063 	add.w	r0, r4, r3, asr #1
90004f80:	d004      	beq.n	90004f8c <_ZN8touchgfx8CallbackI12gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90004f82:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004f86:	f854 300c 	ldr.w	r3, [r4, ip]
90004f8a:	589a      	ldr	r2, [r3, r2]
    }
90004f8c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f90:	4710      	bx	r2
90004f92:	bf00      	nop

90004f94 <_ZNK8touchgfx8CallbackI12gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004f94:	6843      	ldr	r3, [r0, #4]
90004f96:	b13b      	cbz	r3, 90004fa8 <_ZNK8touchgfx8CallbackI12gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004f98:	6883      	ldr	r3, [r0, #8]
90004f9a:	b10b      	cbz	r3, 90004fa0 <_ZNK8touchgfx8CallbackI12gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004f9c:	2001      	movs	r0, #1
    }
90004f9e:	4770      	bx	lr
90004fa0:	68c0      	ldr	r0, [r0, #12]
90004fa2:	f000 0001 	and.w	r0, r0, #1
90004fa6:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004fa8:	4618      	mov	r0, r3
90004faa:	4770      	bx	lr

90004fac <_ZN8touchgfx8CallbackI12gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004fac:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004fae:	68c3      	ldr	r3, [r0, #12]
90004fb0:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90004fb4:	f013 0f01 	tst.w	r3, #1
90004fb8:	eb04 0063 	add.w	r0, r4, r3, asr #1
90004fbc:	d004      	beq.n	90004fc8 <_ZN8touchgfx8CallbackI12gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1c>
90004fbe:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004fc2:	f854 300c 	ldr.w	r3, [r4, ip]
90004fc6:	589a      	ldr	r2, [r3, r2]
    }
90004fc8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004fcc:	4710      	bx	r2
90004fce:	bf00      	nop

90004fd0 <_ZNK8touchgfx8CallbackI12gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004fd0:	6843      	ldr	r3, [r0, #4]
90004fd2:	b13b      	cbz	r3, 90004fe4 <_ZNK8touchgfx8CallbackI12gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90004fd4:	6883      	ldr	r3, [r0, #8]
90004fd6:	b10b      	cbz	r3, 90004fdc <_ZNK8touchgfx8CallbackI12gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90004fd8:	2001      	movs	r0, #1
    }
90004fda:	4770      	bx	lr
90004fdc:	68c0      	ldr	r0, [r0, #12]
90004fde:	f000 0001 	and.w	r0, r0, #1
90004fe2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004fe4:	4618      	mov	r0, r3
90004fe6:	4770      	bx	lr

90004fe8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004fe8:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
90004fec:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90004ff0:	4770      	bx	lr
90004ff2:	bf00      	nop

90004ff4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90004ff4:	b510      	push	{r4, lr}
90004ff6:	4604      	mov	r4, r0
90004ff8:	2178      	movs	r1, #120	@ 0x78
90004ffa:	f021 fb85 	bl	90026708 <_ZdlPvj>
90004ffe:	4620      	mov	r0, r4
90005000:	bd10      	pop	{r4, pc}
90005002:	bf00      	nop

90005004 <_ZN8touchgfx8CallbackI12gameViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005004:	b510      	push	{r4, lr}
90005006:	4604      	mov	r4, r0
90005008:	2110      	movs	r1, #16
9000500a:	f021 fb7d 	bl	90026708 <_ZdlPvj>
9000500e:	4620      	mov	r0, r4
90005010:	bd10      	pop	{r4, pc}
90005012:	bf00      	nop

90005014 <_ZN8touchgfx8CallbackI12gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
90005014:	b510      	push	{r4, lr}
90005016:	4604      	mov	r4, r0
90005018:	2110      	movs	r1, #16
9000501a:	f021 fb75 	bl	90026708 <_ZdlPvj>
9000501e:	4620      	mov	r0, r4
90005020:	bd10      	pop	{r4, pc}
90005022:	bf00      	nop

90005024 <_ZN12gameViewBaseD0Ev>:
gameViewBase::~gameViewBase()
90005024:	b510      	push	{r4, lr}
90005026:	4604      	mov	r4, r0
}
90005028:	f640 0198 	movw	r1, #2200	@ 0x898
9000502c:	f021 fb6c 	bl	90026708 <_ZdlPvj>
90005030:	4620      	mov	r0, r4
90005032:	bd10      	pop	{r4, pc}

90005034 <_ZN12gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
90005034:	b538      	push	{r3, r4, r5, lr}
    if (&src == &back)
90005036:	f500 63fd 	add.w	r3, r0, #2024	@ 0x7e8
{
9000503a:	4604      	mov	r4, r0
9000503c:	460d      	mov	r5, r1
    if (&src == &back)
9000503e:	4299      	cmp	r1, r3
90005040:	d004      	beq.n	9000504c <_ZN12gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //Interaction10
        //When back clicked change screen to play
        //Go to play with no screen transition
        application().gotoplayScreenNoTransition();
    }
    if (&src == &restart)
90005042:	f504 6403 	add.w	r4, r4, #2096	@ 0x830
90005046:	42a5      	cmp	r5, r4
90005048:	d008      	beq.n	9000505c <_ZN12gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
        //Interaction11
        //When restart clicked change screen to game
        //Go to game with no screen transition
        application().gotogameScreenNoTransition();
    }
}
9000504a:	bd38      	pop	{r3, r4, r5, pc}
    if (&src == &restart)
9000504c:	f504 6403 	add.w	r4, r4, #2096	@ 0x830
    virtual ~gameViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005050:	f010 f9b2 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoplayScreenNoTransition();
90005054:	f7ff fbb8 	bl	900047c8 <_ZN23FrontendApplicationBase26gotoplayScreenNoTransitionEv>
    if (&src == &restart)
90005058:	42a5      	cmp	r5, r4
9000505a:	d1f6      	bne.n	9000504a <_ZN12gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
9000505c:	f010 f9ac 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
}
90005060:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotogameScreenNoTransition();
90005064:	f7ff bbbe 	b.w	900047e4 <_ZN23FrontendApplicationBase26gotogameScreenNoTransitionEv>

90005068 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
90005068:	b570      	push	{r4, r5, r6, lr}
9000506a:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
9000506c:	6b00      	ldr	r0, [r0, #48]	@ 0x30
9000506e:	b1c0      	cbz	r0, 900050a2 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
90005070:	6802      	ldr	r2, [r0, #0]
90005072:	4919      	ldr	r1, [pc, #100]	@ (900050d8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x70>)
90005074:	68d3      	ldr	r3, [r2, #12]
90005076:	428b      	cmp	r3, r1
90005078:	d124      	bne.n	900050c4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x5c>
        return (pobject != 0) && (pmemfun != 0);
9000507a:	6843      	ldr	r3, [r0, #4]
9000507c:	b18b      	cbz	r3, 900050a2 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
9000507e:	6885      	ldr	r5, [r0, #8]
90005080:	b185      	cbz	r5, 900050a4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
        {
            action->execute(*this);
90005082:	6892      	ldr	r2, [r2, #8]
90005084:	4b15      	ldr	r3, [pc, #84]	@ (900050dc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x74>)
90005086:	429a      	cmp	r2, r3
90005088:	d122      	bne.n	900050d0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x68>
        (pobject->*pmemfun)(t1);
9000508a:	68c2      	ldr	r2, [r0, #12]
9000508c:	e9d0 3501 	ldrd	r3, r5, [r0, #4]
90005090:	eb03 0062 	add.w	r0, r3, r2, asr #1
90005094:	07d3      	lsls	r3, r2, #31
90005096:	d40e      	bmi.n	900050b6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4e>
90005098:	4621      	mov	r1, r4
9000509a:	462b      	mov	r3, r5
        }
    }
9000509c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900050a0:	4718      	bx	r3
900050a2:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
900050a4:	68c1      	ldr	r1, [r0, #12]
900050a6:	07ce      	lsls	r6, r1, #31
900050a8:	d5fb      	bpl.n	900050a2 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
            action->execute(*this);
900050aa:	6892      	ldr	r2, [r2, #8]
900050ac:	4e0b      	ldr	r6, [pc, #44]	@ (900050dc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x74>)
900050ae:	42b2      	cmp	r2, r6
900050b0:	d10e      	bne.n	900050d0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x68>
        (pobject->*pmemfun)(t1);
900050b2:	eb03 0061 	add.w	r0, r3, r1, asr #1
900050b6:	6803      	ldr	r3, [r0, #0]
900050b8:	4621      	mov	r1, r4
900050ba:	595d      	ldr	r5, [r3, r5]
900050bc:	462b      	mov	r3, r5
    }
900050be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900050c2:	4718      	bx	r3
        if (action && action->isValid())
900050c4:	4798      	blx	r3
900050c6:	2800      	cmp	r0, #0
900050c8:	d0eb      	beq.n	900050a2 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
            action->execute(*this);
900050ca:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900050cc:	6802      	ldr	r2, [r0, #0]
900050ce:	e7d8      	b.n	90005082 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
900050d0:	4621      	mov	r1, r4
    }
900050d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
900050d6:	4710      	bx	r2
900050d8:	90004fd1 	.word	0x90004fd1
900050dc:	90004fad 	.word	0x90004fad

900050e0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
900050e0:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900050e2:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
900050e4:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900050e6:	bf18      	it	ne
900050e8:	2201      	movne	r2, #1
        return pressed;
900050ea:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
900050ee:	460d      	mov	r5, r1
900050f0:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900050f2:	42b2      	cmp	r2, r6
900050f4:	d004      	beq.n	90005100 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
900050f6:	b116      	cbz	r6, 900050fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900050f8:	792b      	ldrb	r3, [r5, #4]
900050fa:	2b01      	cmp	r3, #1
900050fc:	d00e      	beq.n	9000511c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
900050fe:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
90005100:	fab3 f383 	clz	r3, r3
90005104:	095b      	lsrs	r3, r3, #5
90005106:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
        handlePressedUpdated();
9000510a:	6803      	ldr	r3, [r0, #0]
9000510c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90005110:	4798      	blx	r3
            invalidate();
90005112:	6823      	ldr	r3, [r4, #0]
90005114:	4620      	mov	r0, r4
90005116:	695b      	ldr	r3, [r3, #20]
90005118:	4798      	blx	r3
9000511a:	e7ec      	b.n	900050f6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
9000511c:	6823      	ldr	r3, [r4, #0]
9000511e:	4a1e      	ldr	r2, [pc, #120]	@ (90005198 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb8>)
90005120:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
90005124:	4293      	cmp	r3, r2
90005126:	d128      	bne.n	9000517a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x9a>
        if (action && action->isValid())
90005128:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000512a:	2800      	cmp	r0, #0
9000512c:	d0e7      	beq.n	900050fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000512e:	6802      	ldr	r2, [r0, #0]
90005130:	491a      	ldr	r1, [pc, #104]	@ (9000519c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xbc>)
90005132:	68d3      	ldr	r3, [r2, #12]
90005134:	428b      	cmp	r3, r1
90005136:	d124      	bne.n	90005182 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa2>
        return (pobject != 0) && (pmemfun != 0);
90005138:	6843      	ldr	r3, [r0, #4]
9000513a:	2b00      	cmp	r3, #0
9000513c:	d0df      	beq.n	900050fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000513e:	6885      	ldr	r5, [r0, #8]
90005140:	b17d      	cbz	r5, 90005162 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x82>
            action->execute(*this);
90005142:	6892      	ldr	r2, [r2, #8]
90005144:	4b16      	ldr	r3, [pc, #88]	@ (900051a0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
90005146:	429a      	cmp	r2, r3
90005148:	d121      	bne.n	9000518e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
        (pobject->*pmemfun)(t1);
9000514a:	68c2      	ldr	r2, [r0, #12]
9000514c:	e9d0 3501 	ldrd	r3, r5, [r0, #4]
90005150:	eb03 0062 	add.w	r0, r3, r2, asr #1
90005154:	07d3      	lsls	r3, r2, #31
90005156:	d40d      	bmi.n	90005174 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x94>
90005158:	4621      	mov	r1, r4
9000515a:	462b      	mov	r3, r5
    }
9000515c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005160:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
90005162:	68c1      	ldr	r1, [r0, #12]
90005164:	07ce      	lsls	r6, r1, #31
90005166:	d5ca      	bpl.n	900050fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005168:	6892      	ldr	r2, [r2, #8]
9000516a:	4e0d      	ldr	r6, [pc, #52]	@ (900051a0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
9000516c:	42b2      	cmp	r2, r6
9000516e:	d10e      	bne.n	9000518e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
        (pobject->*pmemfun)(t1);
90005170:	eb03 0061 	add.w	r0, r3, r1, asr #1
90005174:	6803      	ldr	r3, [r0, #0]
90005176:	595d      	ldr	r5, [r3, r5]
90005178:	e7ee      	b.n	90005158 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
9000517a:	4620      	mov	r0, r4
    }
9000517c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
90005180:	4718      	bx	r3
        if (action && action->isValid())
90005182:	4798      	blx	r3
90005184:	2800      	cmp	r0, #0
90005186:	d0ba      	beq.n	900050fe <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
90005188:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000518a:	6802      	ldr	r2, [r0, #0]
9000518c:	e7d9      	b.n	90005142 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
9000518e:	4621      	mov	r1, r4
    }
90005190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005194:	4710      	bx	r2
90005196:	bf00      	nop
90005198:	90005069 	.word	0x90005069
9000519c:	90004fd1 	.word	0x90004fd1
900051a0:	90004fad 	.word	0x90004fad

900051a4 <_ZN12gameViewBaseC1Ev>:
gameViewBase::gameViewBase() :
900051a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900051a8:	b09f      	sub	sp, #124	@ 0x7c
900051aa:	4604      	mov	r4, r0
        : presenter(0)
900051ac:	f011 ff4a 	bl	90017044 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
900051b0:	4ae8      	ldr	r2, [pc, #928]	@ (90005554 <_ZN12gameViewBaseC1Ev+0x3b0>)
900051b2:	2700      	movs	r7, #0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900051b4:	f64f 78ff 	movw	r8, #65535	@ 0xffff
          touchable(false),
900051b8:	f44f 7580 	mov.w	r5, #256	@ 0x100
900051bc:	26ff      	movs	r6, #255	@ 0xff
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
900051be:	f8df 93a4 	ldr.w	r9, [pc, #932]	@ 90005564 <_ZN12gameViewBaseC1Ev+0x3c0>
    buttonCallback(this, &gameViewBase::buttonCallbackHandler)
900051c2:	f104 0398 	add.w	r3, r4, #152	@ 0x98
900051c6:	49e4      	ldr	r1, [pc, #912]	@ (90005558 <_ZN12gameViewBaseC1Ev+0x3b4>)
        : pressed(false), alpha(255), action(0)
900051c8:	f44f 4b7f 	mov.w	fp, #65280	@ 0xff00
900051cc:	6422      	str	r2, [r4, #64]	@ 0x40
900051ce:	f104 026c 	add.w	r2, r4, #108	@ 0x6c
900051d2:	6021      	str	r1, [r4, #0]
    {
        Image::setBitmap(bmp);
900051d4:	a91d      	add	r1, sp, #116	@ 0x74
900051d6:	4610      	mov	r0, r2
900051d8:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
900051dc:	f884 6066 	strb.w	r6, [r4, #102]	@ 0x66
        touchable = touch;
900051e0:	f240 1a01 	movw	sl, #257	@ 0x101
          touchable(false),
900051e4:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
900051e8:	63e7      	str	r7, [r4, #60]	@ 0x3c
900051ea:	6467      	str	r7, [r4, #68]	@ 0x44
          cachedAbsX(0),
900051ec:	6627      	str	r7, [r4, #96]	@ 0x60
        : color(col)
900051ee:	66a7      	str	r7, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
900051f0:	6727      	str	r7, [r4, #112]	@ 0x70
900051f2:	f8c4 708c 	str.w	r7, [r4, #140]	@ 0x8c
        : Widget(), bitmap(bmp), alpha(255)
900051f6:	f8a4 8092 	strh.w	r8, [r4, #146]	@ 0x92
900051fa:	f884 8094 	strb.w	r8, [r4, #148]	@ 0x94
900051fe:	f8c4 906c 	str.w	r9, [r4, #108]	@ 0x6c
90005202:	9300      	str	r3, [sp, #0]
        Image::setBitmap(bmp);
90005204:	921b      	str	r2, [sp, #108]	@ 0x6c
90005206:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
9000520a:	e9c4 7712 	strd	r7, r7, [r4, #72]	@ 0x48
          parent(0),
9000520e:	e9c4 7714 	strd	r7, r7, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
90005212:	e9c4 7716 	strd	r7, r7, [r4, #88]	@ 0x58
90005216:	e9c4 771d 	strd	r7, r7, [r4, #116]	@ 0x74
          parent(0),
9000521a:	e9c4 771f 	strd	r7, r7, [r4, #124]	@ 0x7c
          nextDrawChainElement(0),
9000521e:	e9c4 7721 	strd	r7, r7, [r4, #132]	@ 0x84
90005222:	f00d fc1b 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : T(), up(), down()
90005226:	4bcd      	ldr	r3, [pc, #820]	@ (9000555c <_ZN12gameViewBaseC1Ev+0x3b8>)
        : Box(), borderColor(0), borderSize(0)
90005228:	4acd      	ldr	r2, [pc, #820]	@ (90005560 <_ZN12gameViewBaseC1Ev+0x3bc>)
9000522a:	f504 7188 	add.w	r1, r4, #272	@ 0x110
9000522e:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
90005232:	f8c4 20cc 	str.w	r2, [r4, #204]	@ 0xcc
90005236:	f8a4 b0c4 	strh.w	fp, [r4, #196]	@ 0xc4
        touchable = touch;
9000523a:	f8a4 a0bc 	strh.w	sl, [r4, #188]	@ 0xbc
          touchable(false),
9000523e:	f8a4 50f0 	strh.w	r5, [r4, #240]	@ 0xf0
90005242:	f884 60f2 	strb.w	r6, [r4, #242]	@ 0xf2
90005246:	9101      	str	r1, [sp, #4]
        T::add(borderBox);
90005248:	f104 01cc 	add.w	r1, r4, #204	@ 0xcc
          firstChild(0)
9000524c:	f8c4 70c0 	str.w	r7, [r4, #192]	@ 0xc0
90005250:	f8c4 70c8 	str.w	r7, [r4, #200]	@ 0xc8
        : color(col)
90005254:	f8c4 70f4 	str.w	r7, [r4, #244]	@ 0xf4
90005258:	f8c4 70f8 	str.w	r7, [r4, #248]	@ 0xf8
9000525c:	f8a4 70fc 	strh.w	r7, [r4, #252]	@ 0xfc
        : x(0), y(0), width(0), height(0)
90005260:	e9c4 7727 	strd	r7, r7, [r4, #156]	@ 0x9c
90005264:	e9c4 7729 	strd	r7, r7, [r4, #164]	@ 0xa4
          nextSibling(0),
90005268:	e9c4 772b 	strd	r7, r7, [r4, #172]	@ 0xac
          cachedAbsX(0),
9000526c:	e9c4 772d 	strd	r7, r7, [r4, #180]	@ 0xb4
          nextSibling(0),
90005270:	e9c4 7738 	strd	r7, r7, [r4, #224]	@ 0xe0
          cachedAbsX(0),
90005274:	e9c4 773a 	strd	r7, r7, [r4, #232]	@ 0xe8
        : color(0)
90005278:	e9c4 7740 	strd	r7, r7, [r4, #256]	@ 0x100
9000527c:	e9c4 7742 	strd	r7, r7, [r4, #264]	@ 0x108
        rect.x = x;
90005280:	e9c4 7734 	strd	r7, r7, [r4, #208]	@ 0xd0
90005284:	e9c4 7736 	strd	r7, r7, [r4, #216]	@ 0xd8
90005288:	9800      	ldr	r0, [sp, #0]
9000528a:	f00a fc8f 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
9000528e:	4bb3      	ldr	r3, [pc, #716]	@ (9000555c <_ZN12gameViewBaseC1Ev+0x3b8>)
90005290:	4ab3      	ldr	r2, [pc, #716]	@ (90005560 <_ZN12gameViewBaseC1Ev+0x3bc>)
90005292:	f504 71c4 	add.w	r1, r4, #392	@ 0x188
90005296:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
9000529a:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
9000529e:	f8a4 b13c 	strh.w	fp, [r4, #316]	@ 0x13c
        touchable = touch;
900052a2:	f8a4 a134 	strh.w	sl, [r4, #308]	@ 0x134
          touchable(false),
900052a6:	f8a4 5168 	strh.w	r5, [r4, #360]	@ 0x168
900052aa:	f884 616a 	strb.w	r6, [r4, #362]	@ 0x16a
900052ae:	9102      	str	r1, [sp, #8]
        T::add(borderBox);
900052b0:	f504 71a2 	add.w	r1, r4, #324	@ 0x144
900052b4:	f8c4 7138 	str.w	r7, [r4, #312]	@ 0x138
900052b8:	f8c4 7140 	str.w	r7, [r4, #320]	@ 0x140
        : color(col)
900052bc:	f8c4 716c 	str.w	r7, [r4, #364]	@ 0x16c
900052c0:	f8c4 7170 	str.w	r7, [r4, #368]	@ 0x170
900052c4:	f8a4 7174 	strh.w	r7, [r4, #372]	@ 0x174
        : x(0), y(0), width(0), height(0)
900052c8:	e9c4 7745 	strd	r7, r7, [r4, #276]	@ 0x114
900052cc:	e9c4 7747 	strd	r7, r7, [r4, #284]	@ 0x11c
          nextSibling(0),
900052d0:	e9c4 7749 	strd	r7, r7, [r4, #292]	@ 0x124
          cachedAbsX(0),
900052d4:	e9c4 774b 	strd	r7, r7, [r4, #300]	@ 0x12c
          nextSibling(0),
900052d8:	e9c4 7756 	strd	r7, r7, [r4, #344]	@ 0x158
          cachedAbsX(0),
900052dc:	e9c4 7758 	strd	r7, r7, [r4, #352]	@ 0x160
        : color(0)
900052e0:	e9c4 775e 	strd	r7, r7, [r4, #376]	@ 0x178
900052e4:	e9c4 7760 	strd	r7, r7, [r4, #384]	@ 0x180
        rect.x = x;
900052e8:	e9c4 7752 	strd	r7, r7, [r4, #328]	@ 0x148
900052ec:	e9c4 7754 	strd	r7, r7, [r4, #336]	@ 0x150
900052f0:	9801      	ldr	r0, [sp, #4]
900052f2:	f00a fc5b 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
900052f6:	4b99      	ldr	r3, [pc, #612]	@ (9000555c <_ZN12gameViewBaseC1Ev+0x3b8>)
900052f8:	4a99      	ldr	r2, [pc, #612]	@ (90005560 <_ZN12gameViewBaseC1Ev+0x3bc>)
900052fa:	f504 7100 	add.w	r1, r4, #512	@ 0x200
900052fe:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
90005302:	f8c4 21bc 	str.w	r2, [r4, #444]	@ 0x1bc
90005306:	f8a4 b1b4 	strh.w	fp, [r4, #436]	@ 0x1b4
        touchable = touch;
9000530a:	f8a4 a1ac 	strh.w	sl, [r4, #428]	@ 0x1ac
          touchable(false),
9000530e:	f8a4 51e0 	strh.w	r5, [r4, #480]	@ 0x1e0
90005312:	f884 61e2 	strb.w	r6, [r4, #482]	@ 0x1e2
90005316:	9103      	str	r1, [sp, #12]
        T::add(borderBox);
90005318:	f504 71de 	add.w	r1, r4, #444	@ 0x1bc
9000531c:	f8c4 71b0 	str.w	r7, [r4, #432]	@ 0x1b0
90005320:	f8c4 71b8 	str.w	r7, [r4, #440]	@ 0x1b8
        : color(col)
90005324:	f8c4 71e4 	str.w	r7, [r4, #484]	@ 0x1e4
90005328:	f8c4 71e8 	str.w	r7, [r4, #488]	@ 0x1e8
9000532c:	f8a4 71ec 	strh.w	r7, [r4, #492]	@ 0x1ec
        : x(0), y(0), width(0), height(0)
90005330:	e9c4 7763 	strd	r7, r7, [r4, #396]	@ 0x18c
90005334:	e9c4 7765 	strd	r7, r7, [r4, #404]	@ 0x194
          nextSibling(0),
90005338:	e9c4 7767 	strd	r7, r7, [r4, #412]	@ 0x19c
          cachedAbsX(0),
9000533c:	e9c4 7769 	strd	r7, r7, [r4, #420]	@ 0x1a4
          nextSibling(0),
90005340:	e9c4 7774 	strd	r7, r7, [r4, #464]	@ 0x1d0
          cachedAbsX(0),
90005344:	e9c4 7776 	strd	r7, r7, [r4, #472]	@ 0x1d8
        : color(0)
90005348:	e9c4 777c 	strd	r7, r7, [r4, #496]	@ 0x1f0
9000534c:	e9c4 777e 	strd	r7, r7, [r4, #504]	@ 0x1f8
        rect.x = x;
90005350:	e9c4 7770 	strd	r7, r7, [r4, #448]	@ 0x1c0
90005354:	e9c4 7772 	strd	r7, r7, [r4, #456]	@ 0x1c8
90005358:	9802      	ldr	r0, [sp, #8]
9000535a:	f00a fc27 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
9000535e:	4b7f      	ldr	r3, [pc, #508]	@ (9000555c <_ZN12gameViewBaseC1Ev+0x3b8>)
90005360:	4a7f      	ldr	r2, [pc, #508]	@ (90005560 <_ZN12gameViewBaseC1Ev+0x3bc>)
90005362:	f504 711e 	add.w	r1, r4, #632	@ 0x278
90005366:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
9000536a:	f8c4 2234 	str.w	r2, [r4, #564]	@ 0x234
9000536e:	f8a4 b22c 	strh.w	fp, [r4, #556]	@ 0x22c
        touchable = touch;
90005372:	f8a4 a224 	strh.w	sl, [r4, #548]	@ 0x224
          touchable(false),
90005376:	f8a4 5258 	strh.w	r5, [r4, #600]	@ 0x258
9000537a:	f884 625a 	strb.w	r6, [r4, #602]	@ 0x25a
9000537e:	9104      	str	r1, [sp, #16]
        T::add(borderBox);
90005380:	f504 710d 	add.w	r1, r4, #564	@ 0x234
90005384:	f8c4 7228 	str.w	r7, [r4, #552]	@ 0x228
90005388:	f8c4 7230 	str.w	r7, [r4, #560]	@ 0x230
        : color(col)
9000538c:	f8c4 725c 	str.w	r7, [r4, #604]	@ 0x25c
90005390:	f8c4 7260 	str.w	r7, [r4, #608]	@ 0x260
90005394:	f8a4 7264 	strh.w	r7, [r4, #612]	@ 0x264
        : x(0), y(0), width(0), height(0)
90005398:	e9c4 7781 	strd	r7, r7, [r4, #516]	@ 0x204
9000539c:	e9c4 7783 	strd	r7, r7, [r4, #524]	@ 0x20c
          nextSibling(0),
900053a0:	e9c4 7785 	strd	r7, r7, [r4, #532]	@ 0x214
          cachedAbsX(0),
900053a4:	e9c4 7787 	strd	r7, r7, [r4, #540]	@ 0x21c
          nextSibling(0),
900053a8:	e9c4 7792 	strd	r7, r7, [r4, #584]	@ 0x248
          cachedAbsX(0),
900053ac:	e9c4 7794 	strd	r7, r7, [r4, #592]	@ 0x250
        : color(0)
900053b0:	e9c4 779a 	strd	r7, r7, [r4, #616]	@ 0x268
900053b4:	e9c4 779c 	strd	r7, r7, [r4, #624]	@ 0x270
        rect.x = x;
900053b8:	e9c4 778e 	strd	r7, r7, [r4, #568]	@ 0x238
900053bc:	e9c4 7790 	strd	r7, r7, [r4, #576]	@ 0x240
900053c0:	9803      	ldr	r0, [sp, #12]
900053c2:	f00a fbf3 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
900053c6:	4b65      	ldr	r3, [pc, #404]	@ (9000555c <_ZN12gameViewBaseC1Ev+0x3b8>)
900053c8:	4a65      	ldr	r2, [pc, #404]	@ (90005560 <_ZN12gameViewBaseC1Ev+0x3bc>)
900053ca:	f504 713c 	add.w	r1, r4, #752	@ 0x2f0
900053ce:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
900053d2:	f8c4 22ac 	str.w	r2, [r4, #684]	@ 0x2ac
900053d6:	f8a4 b2a4 	strh.w	fp, [r4, #676]	@ 0x2a4
        touchable = touch;
900053da:	f8a4 a29c 	strh.w	sl, [r4, #668]	@ 0x29c
          touchable(false),
900053de:	f8a4 52d0 	strh.w	r5, [r4, #720]	@ 0x2d0
900053e2:	f884 62d2 	strb.w	r6, [r4, #722]	@ 0x2d2
900053e6:	9105      	str	r1, [sp, #20]
        T::add(borderBox);
900053e8:	f504 712b 	add.w	r1, r4, #684	@ 0x2ac
900053ec:	f8c4 72a0 	str.w	r7, [r4, #672]	@ 0x2a0
900053f0:	f8c4 72a8 	str.w	r7, [r4, #680]	@ 0x2a8
        : color(col)
900053f4:	f8c4 72d4 	str.w	r7, [r4, #724]	@ 0x2d4
900053f8:	f8c4 72d8 	str.w	r7, [r4, #728]	@ 0x2d8
900053fc:	f8a4 72dc 	strh.w	r7, [r4, #732]	@ 0x2dc
        : x(0), y(0), width(0), height(0)
90005400:	e9c4 779f 	strd	r7, r7, [r4, #636]	@ 0x27c
90005404:	e9c4 77a1 	strd	r7, r7, [r4, #644]	@ 0x284
          nextSibling(0),
90005408:	e9c4 77a3 	strd	r7, r7, [r4, #652]	@ 0x28c
          cachedAbsX(0),
9000540c:	e9c4 77a5 	strd	r7, r7, [r4, #660]	@ 0x294
          nextSibling(0),
90005410:	e9c4 77b0 	strd	r7, r7, [r4, #704]	@ 0x2c0
          cachedAbsX(0),
90005414:	e9c4 77b2 	strd	r7, r7, [r4, #712]	@ 0x2c8
        : color(0)
90005418:	e9c4 77b8 	strd	r7, r7, [r4, #736]	@ 0x2e0
9000541c:	e9c4 77ba 	strd	r7, r7, [r4, #744]	@ 0x2e8
        rect.x = x;
90005420:	e9c4 77ac 	strd	r7, r7, [r4, #688]	@ 0x2b0
90005424:	e9c4 77ae 	strd	r7, r7, [r4, #696]	@ 0x2b8
90005428:	9804      	ldr	r0, [sp, #16]
9000542a:	f00a fbbf 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
9000542e:	4b4b      	ldr	r3, [pc, #300]	@ (9000555c <_ZN12gameViewBaseC1Ev+0x3b8>)
90005430:	4a4b      	ldr	r2, [pc, #300]	@ (90005560 <_ZN12gameViewBaseC1Ev+0x3bc>)
90005432:	f504 715a 	add.w	r1, r4, #872	@ 0x368
90005436:	f8c4 32f0 	str.w	r3, [r4, #752]	@ 0x2f0
9000543a:	f8c4 2324 	str.w	r2, [r4, #804]	@ 0x324
9000543e:	f8a4 b31c 	strh.w	fp, [r4, #796]	@ 0x31c
        touchable = touch;
90005442:	f8a4 a314 	strh.w	sl, [r4, #788]	@ 0x314
          touchable(false),
90005446:	f8a4 5348 	strh.w	r5, [r4, #840]	@ 0x348
9000544a:	f884 634a 	strb.w	r6, [r4, #842]	@ 0x34a
9000544e:	9106      	str	r1, [sp, #24]
        T::add(borderBox);
90005450:	f504 7149 	add.w	r1, r4, #804	@ 0x324
90005454:	f8c4 7318 	str.w	r7, [r4, #792]	@ 0x318
90005458:	f8c4 7320 	str.w	r7, [r4, #800]	@ 0x320
        : color(col)
9000545c:	f8c4 734c 	str.w	r7, [r4, #844]	@ 0x34c
90005460:	f8c4 7350 	str.w	r7, [r4, #848]	@ 0x350
90005464:	f8a4 7354 	strh.w	r7, [r4, #852]	@ 0x354
        : x(0), y(0), width(0), height(0)
90005468:	e9c4 77bd 	strd	r7, r7, [r4, #756]	@ 0x2f4
9000546c:	e9c4 77bf 	strd	r7, r7, [r4, #764]	@ 0x2fc
          nextSibling(0),
90005470:	e9c4 77c1 	strd	r7, r7, [r4, #772]	@ 0x304
          cachedAbsX(0),
90005474:	e9c4 77c3 	strd	r7, r7, [r4, #780]	@ 0x30c
          nextSibling(0),
90005478:	e9c4 77ce 	strd	r7, r7, [r4, #824]	@ 0x338
          cachedAbsX(0),
9000547c:	e9c4 77d0 	strd	r7, r7, [r4, #832]	@ 0x340
        : color(0)
90005480:	e9c4 77d6 	strd	r7, r7, [r4, #856]	@ 0x358
90005484:	e9c4 77d8 	strd	r7, r7, [r4, #864]	@ 0x360
        rect.x = x;
90005488:	e9c4 77ca 	strd	r7, r7, [r4, #808]	@ 0x328
9000548c:	e9c4 77cc 	strd	r7, r7, [r4, #816]	@ 0x330
90005490:	9805      	ldr	r0, [sp, #20]
90005492:	f00a fb8b 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
90005496:	4b31      	ldr	r3, [pc, #196]	@ (9000555c <_ZN12gameViewBaseC1Ev+0x3b8>)
90005498:	4a31      	ldr	r2, [pc, #196]	@ (90005560 <_ZN12gameViewBaseC1Ev+0x3bc>)
9000549a:	f504 7178 	add.w	r1, r4, #992	@ 0x3e0
9000549e:	f8c4 3368 	str.w	r3, [r4, #872]	@ 0x368
900054a2:	f8c4 239c 	str.w	r2, [r4, #924]	@ 0x39c
900054a6:	f8a4 b394 	strh.w	fp, [r4, #916]	@ 0x394
        touchable = touch;
900054aa:	f8a4 a38c 	strh.w	sl, [r4, #908]	@ 0x38c
          touchable(false),
900054ae:	f8a4 53c0 	strh.w	r5, [r4, #960]	@ 0x3c0
900054b2:	f884 63c2 	strb.w	r6, [r4, #962]	@ 0x3c2
900054b6:	9107      	str	r1, [sp, #28]
        T::add(borderBox);
900054b8:	f504 7167 	add.w	r1, r4, #924	@ 0x39c
900054bc:	f8c4 7390 	str.w	r7, [r4, #912]	@ 0x390
900054c0:	f8c4 7398 	str.w	r7, [r4, #920]	@ 0x398
        : color(col)
900054c4:	f8c4 73c4 	str.w	r7, [r4, #964]	@ 0x3c4
900054c8:	f8c4 73c8 	str.w	r7, [r4, #968]	@ 0x3c8
900054cc:	f8a4 73cc 	strh.w	r7, [r4, #972]	@ 0x3cc
        : x(0), y(0), width(0), height(0)
900054d0:	e9c4 77db 	strd	r7, r7, [r4, #876]	@ 0x36c
900054d4:	e9c4 77dd 	strd	r7, r7, [r4, #884]	@ 0x374
          nextSibling(0),
900054d8:	e9c4 77df 	strd	r7, r7, [r4, #892]	@ 0x37c
          cachedAbsX(0),
900054dc:	e9c4 77e1 	strd	r7, r7, [r4, #900]	@ 0x384
          nextSibling(0),
900054e0:	e9c4 77ec 	strd	r7, r7, [r4, #944]	@ 0x3b0
          cachedAbsX(0),
900054e4:	e9c4 77ee 	strd	r7, r7, [r4, #952]	@ 0x3b8
        : color(0)
900054e8:	e9c4 77f4 	strd	r7, r7, [r4, #976]	@ 0x3d0
900054ec:	e9c4 77f6 	strd	r7, r7, [r4, #984]	@ 0x3d8
        rect.x = x;
900054f0:	e9c4 77e8 	strd	r7, r7, [r4, #928]	@ 0x3a0
900054f4:	e9c4 77ea 	strd	r7, r7, [r4, #936]	@ 0x3a8
900054f8:	9806      	ldr	r0, [sp, #24]
900054fa:	f00a fb57 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
900054fe:	4b17      	ldr	r3, [pc, #92]	@ (9000555c <_ZN12gameViewBaseC1Ev+0x3b8>)
90005500:	4a17      	ldr	r2, [pc, #92]	@ (90005560 <_ZN12gameViewBaseC1Ev+0x3bc>)
90005502:	f504 618b 	add.w	r1, r4, #1112	@ 0x458
90005506:	f8c4 33e0 	str.w	r3, [r4, #992]	@ 0x3e0
9000550a:	f8c4 2414 	str.w	r2, [r4, #1044]	@ 0x414
9000550e:	f8a4 b40c 	strh.w	fp, [r4, #1036]	@ 0x40c
        touchable = touch;
90005512:	f8a4 a404 	strh.w	sl, [r4, #1028]	@ 0x404
          touchable(false),
90005516:	f8a4 5438 	strh.w	r5, [r4, #1080]	@ 0x438
9000551a:	f884 643a 	strb.w	r6, [r4, #1082]	@ 0x43a
9000551e:	9108      	str	r1, [sp, #32]
        T::add(borderBox);
90005520:	f204 4114 	addw	r1, r4, #1044	@ 0x414
          nextDrawChainElement(0),
90005524:	f8c4 73fc 	str.w	r7, [r4, #1020]	@ 0x3fc
          cachedAbsX(0),
90005528:	f8c4 7400 	str.w	r7, [r4, #1024]	@ 0x400
9000552c:	f8c4 7408 	str.w	r7, [r4, #1032]	@ 0x408
90005530:	f8c4 7410 	str.w	r7, [r4, #1040]	@ 0x410
          parent(0),
90005534:	f8c4 7428 	str.w	r7, [r4, #1064]	@ 0x428
          nextSibling(0),
90005538:	f8c4 742c 	str.w	r7, [r4, #1068]	@ 0x42c
          nextDrawChainElement(0),
9000553c:	f8c4 7430 	str.w	r7, [r4, #1072]	@ 0x430
          cachedAbsX(0),
90005540:	f8c4 7434 	str.w	r7, [r4, #1076]	@ 0x434
        : color(col)
90005544:	f8c4 743c 	str.w	r7, [r4, #1084]	@ 0x43c
90005548:	f8c4 7440 	str.w	r7, [r4, #1088]	@ 0x440
9000554c:	f8a4 7444 	strh.w	r7, [r4, #1092]	@ 0x444
90005550:	e00a      	b.n	90005568 <_ZN12gameViewBaseC1Ev+0x3c4>
90005552:	bf00      	nop
90005554:	9002a654 	.word	0x9002a654
90005558:	9002a024 	.word	0x9002a024
9000555c:	90029f58 	.word	0x90029f58
90005560:	9002a6bc 	.word	0x9002a6bc
90005564:	9002a724 	.word	0x9002a724
        : color(0)
90005568:	f8c4 7448 	str.w	r7, [r4, #1096]	@ 0x448
9000556c:	f8c4 744c 	str.w	r7, [r4, #1100]	@ 0x44c
90005570:	f8c4 7450 	str.w	r7, [r4, #1104]	@ 0x450
90005574:	f8c4 7454 	str.w	r7, [r4, #1108]	@ 0x454
        rect.x = x;
90005578:	f8c4 7418 	str.w	r7, [r4, #1048]	@ 0x418
9000557c:	f8c4 741c 	str.w	r7, [r4, #1052]	@ 0x41c
90005580:	f8c4 7420 	str.w	r7, [r4, #1056]	@ 0x420
90005584:	f8c4 7424 	str.w	r7, [r4, #1060]	@ 0x424
        : x(0), y(0), width(0), height(0)
90005588:	e9c4 77f9 	strd	r7, r7, [r4, #996]	@ 0x3e4
9000558c:	e9c4 77fb 	strd	r7, r7, [r4, #1004]	@ 0x3ec
          nextSibling(0),
90005590:	e9c4 77fd 	strd	r7, r7, [r4, #1012]	@ 0x3f4
90005594:	9807      	ldr	r0, [sp, #28]
90005596:	f00a fb09 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), up(), down()
9000559a:	4beb      	ldr	r3, [pc, #940]	@ (90005948 <_ZN12gameViewBaseC1Ev+0x7a4>)
9000559c:	4aeb      	ldr	r2, [pc, #940]	@ (9000594c <_ZN12gameViewBaseC1Ev+0x7a8>)
        T::add(borderBox);
9000559e:	f204 418c 	addw	r1, r4, #1164	@ 0x48c
        : T(), up(), down()
900055a2:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
900055a6:	f504 639a 	add.w	r3, r4, #1232	@ 0x4d0
900055aa:	f8c4 248c 	str.w	r2, [r4, #1164]	@ 0x48c
900055ae:	9309      	str	r3, [sp, #36]	@ 0x24
900055b0:	f8a4 b484 	strh.w	fp, [r4, #1156]	@ 0x484
900055b4:	f204 6b5c 	addw	fp, r4, #1628	@ 0x65c
        touchable = touch;
900055b8:	f8a4 a47c 	strh.w	sl, [r4, #1148]	@ 0x47c
900055bc:	f204 4afc 	addw	sl, r4, #1276	@ 0x4fc
          touchable(false),
900055c0:	f8a4 54b0 	strh.w	r5, [r4, #1200]	@ 0x4b0
900055c4:	f884 64b2 	strb.w	r6, [r4, #1202]	@ 0x4b2
900055c8:	f8c4 745c 	str.w	r7, [r4, #1116]	@ 0x45c
900055cc:	f8c4 7460 	str.w	r7, [r4, #1120]	@ 0x460
900055d0:	f8c4 7464 	str.w	r7, [r4, #1124]	@ 0x464
900055d4:	f8c4 7468 	str.w	r7, [r4, #1128]	@ 0x468
          parent(0),
900055d8:	f8c4 746c 	str.w	r7, [r4, #1132]	@ 0x46c
          nextSibling(0),
900055dc:	f8c4 7470 	str.w	r7, [r4, #1136]	@ 0x470
          nextDrawChainElement(0),
900055e0:	f8c4 7474 	str.w	r7, [r4, #1140]	@ 0x474
          cachedAbsX(0),
900055e4:	f8c4 7478 	str.w	r7, [r4, #1144]	@ 0x478
900055e8:	f8c4 7480 	str.w	r7, [r4, #1152]	@ 0x480
900055ec:	f8c4 7488 	str.w	r7, [r4, #1160]	@ 0x488
          parent(0),
900055f0:	f8c4 74a0 	str.w	r7, [r4, #1184]	@ 0x4a0
          nextSibling(0),
900055f4:	f8c4 74a4 	str.w	r7, [r4, #1188]	@ 0x4a4
          nextDrawChainElement(0),
900055f8:	f8c4 74a8 	str.w	r7, [r4, #1192]	@ 0x4a8
          cachedAbsX(0),
900055fc:	f8c4 74ac 	str.w	r7, [r4, #1196]	@ 0x4ac
        : color(col)
90005600:	f8c4 74b4 	str.w	r7, [r4, #1204]	@ 0x4b4
90005604:	f8c4 74b8 	str.w	r7, [r4, #1208]	@ 0x4b8
90005608:	f8a4 74bc 	strh.w	r7, [r4, #1212]	@ 0x4bc
        : color(0)
9000560c:	f8c4 74c0 	str.w	r7, [r4, #1216]	@ 0x4c0
90005610:	f8c4 74c4 	str.w	r7, [r4, #1220]	@ 0x4c4
90005614:	f8c4 74c8 	str.w	r7, [r4, #1224]	@ 0x4c8
90005618:	f8c4 74cc 	str.w	r7, [r4, #1228]	@ 0x4cc
        rect.x = x;
9000561c:	f8c4 7490 	str.w	r7, [r4, #1168]	@ 0x490
90005620:	f8c4 7494 	str.w	r7, [r4, #1172]	@ 0x494
90005624:	f8c4 7498 	str.w	r7, [r4, #1176]	@ 0x498
90005628:	f8c4 749c 	str.w	r7, [r4, #1180]	@ 0x49c
        T::add(borderBox);
9000562c:	9808      	ldr	r0, [sp, #32]
9000562e:	f00a fabd 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005632:	a91d      	add	r1, sp, #116	@ 0x74
90005634:	9809      	ldr	r0, [sp, #36]	@ 0x24
          touchable(false),
90005636:	f8a4 54f4 	strh.w	r5, [r4, #1268]	@ 0x4f4
        : Widget(), bitmap(bmp), alpha(255)
9000563a:	f884 64f8 	strb.w	r6, [r4, #1272]	@ 0x4f8
        : x(0), y(0), width(0), height(0)
9000563e:	f8c4 74d4 	str.w	r7, [r4, #1236]	@ 0x4d4
90005642:	f8c4 74d8 	str.w	r7, [r4, #1240]	@ 0x4d8
90005646:	f8c4 74dc 	str.w	r7, [r4, #1244]	@ 0x4dc
9000564a:	f8c4 74e0 	str.w	r7, [r4, #1248]	@ 0x4e0
          parent(0),
9000564e:	f8c4 74e4 	str.w	r7, [r4, #1252]	@ 0x4e4
          nextSibling(0),
90005652:	f8c4 74e8 	str.w	r7, [r4, #1256]	@ 0x4e8
          nextDrawChainElement(0),
90005656:	f8c4 74ec 	str.w	r7, [r4, #1260]	@ 0x4ec
          cachedAbsX(0),
9000565a:	f8c4 74f0 	str.w	r7, [r4, #1264]	@ 0x4f0
9000565e:	f8c4 94d0 	str.w	r9, [r4, #1232]	@ 0x4d0
90005662:	f8a4 84f6 	strh.w	r8, [r4, #1270]	@ 0x4f6
90005666:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
9000566a:	f00d f9f7 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000566e:	f504 63a5 	add.w	r3, r4, #1320	@ 0x528
90005672:	a91d      	add	r1, sp, #116	@ 0x74
90005674:	4650      	mov	r0, sl
          touchable(false),
90005676:	f8a4 5520 	strh.w	r5, [r4, #1312]	@ 0x520
        : Widget(), bitmap(bmp), alpha(255)
9000567a:	f884 6524 	strb.w	r6, [r4, #1316]	@ 0x524
9000567e:	f8c4 7500 	str.w	r7, [r4, #1280]	@ 0x500
90005682:	f8c4 7504 	str.w	r7, [r4, #1284]	@ 0x504
90005686:	f8c4 7508 	str.w	r7, [r4, #1288]	@ 0x508
9000568a:	f8c4 750c 	str.w	r7, [r4, #1292]	@ 0x50c
          parent(0),
9000568e:	f8c4 7510 	str.w	r7, [r4, #1296]	@ 0x510
          nextSibling(0),
90005692:	f8c4 7514 	str.w	r7, [r4, #1300]	@ 0x514
          nextDrawChainElement(0),
90005696:	f8c4 7518 	str.w	r7, [r4, #1304]	@ 0x518
          cachedAbsX(0),
9000569a:	f8c4 751c 	str.w	r7, [r4, #1308]	@ 0x51c
9000569e:	f8c4 94fc 	str.w	r9, [r4, #1276]	@ 0x4fc
900056a2:	f8a4 8522 	strh.w	r8, [r4, #1314]	@ 0x522
900056a6:	930a      	str	r3, [sp, #40]	@ 0x28
900056a8:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
900056ac:	f00d f9d6 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900056b0:	f204 5254 	addw	r2, r4, #1364	@ 0x554
900056b4:	a91d      	add	r1, sp, #116	@ 0x74
900056b6:	980a      	ldr	r0, [sp, #40]	@ 0x28
          touchable(false),
900056b8:	f8a4 554c 	strh.w	r5, [r4, #1356]	@ 0x54c
        : Widget(), bitmap(bmp), alpha(255)
900056bc:	f884 6550 	strb.w	r6, [r4, #1360]	@ 0x550
900056c0:	f8c4 752c 	str.w	r7, [r4, #1324]	@ 0x52c
900056c4:	f8c4 7530 	str.w	r7, [r4, #1328]	@ 0x530
900056c8:	f8c4 7534 	str.w	r7, [r4, #1332]	@ 0x534
900056cc:	f8c4 7538 	str.w	r7, [r4, #1336]	@ 0x538
          parent(0),
900056d0:	f8c4 753c 	str.w	r7, [r4, #1340]	@ 0x53c
          nextSibling(0),
900056d4:	f8c4 7540 	str.w	r7, [r4, #1344]	@ 0x540
          nextDrawChainElement(0),
900056d8:	f8c4 7544 	str.w	r7, [r4, #1348]	@ 0x544
          cachedAbsX(0),
900056dc:	f8c4 7548 	str.w	r7, [r4, #1352]	@ 0x548
900056e0:	f8c4 9528 	str.w	r9, [r4, #1320]	@ 0x528
900056e4:	f8a4 854e 	strh.w	r8, [r4, #1358]	@ 0x54e
900056e8:	920b      	str	r2, [sp, #44]	@ 0x2c
900056ea:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
900056ee:	f00d f9b5 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900056f2:	f504 63b0 	add.w	r3, r4, #1408	@ 0x580
900056f6:	a91d      	add	r1, sp, #116	@ 0x74
900056f8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
          touchable(false),
900056fa:	f8a4 5578 	strh.w	r5, [r4, #1400]	@ 0x578
        : Widget(), bitmap(bmp), alpha(255)
900056fe:	f884 657c 	strb.w	r6, [r4, #1404]	@ 0x57c
90005702:	f8c4 7558 	str.w	r7, [r4, #1368]	@ 0x558
90005706:	f8c4 755c 	str.w	r7, [r4, #1372]	@ 0x55c
9000570a:	f8c4 7560 	str.w	r7, [r4, #1376]	@ 0x560
9000570e:	f8c4 7564 	str.w	r7, [r4, #1380]	@ 0x564
          parent(0),
90005712:	f8c4 7568 	str.w	r7, [r4, #1384]	@ 0x568
          nextSibling(0),
90005716:	f8c4 756c 	str.w	r7, [r4, #1388]	@ 0x56c
          nextDrawChainElement(0),
9000571a:	f8c4 7570 	str.w	r7, [r4, #1392]	@ 0x570
          cachedAbsX(0),
9000571e:	f8c4 7574 	str.w	r7, [r4, #1396]	@ 0x574
90005722:	f8c4 9554 	str.w	r9, [r4, #1364]	@ 0x554
90005726:	f8a4 857a 	strh.w	r8, [r4, #1402]	@ 0x57a
9000572a:	930c      	str	r3, [sp, #48]	@ 0x30
9000572c:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005730:	f00d f994 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005734:	f204 52ac 	addw	r2, r4, #1452	@ 0x5ac
90005738:	a91d      	add	r1, sp, #116	@ 0x74
9000573a:	980c      	ldr	r0, [sp, #48]	@ 0x30
          touchable(false),
9000573c:	f8a4 55a4 	strh.w	r5, [r4, #1444]	@ 0x5a4
        : Widget(), bitmap(bmp), alpha(255)
90005740:	f884 65a8 	strb.w	r6, [r4, #1448]	@ 0x5a8
90005744:	f8c4 7584 	str.w	r7, [r4, #1412]	@ 0x584
90005748:	f8c4 7588 	str.w	r7, [r4, #1416]	@ 0x588
9000574c:	f8c4 758c 	str.w	r7, [r4, #1420]	@ 0x58c
90005750:	f8c4 7590 	str.w	r7, [r4, #1424]	@ 0x590
          parent(0),
90005754:	f8c4 7594 	str.w	r7, [r4, #1428]	@ 0x594
          nextSibling(0),
90005758:	f8c4 7598 	str.w	r7, [r4, #1432]	@ 0x598
          nextDrawChainElement(0),
9000575c:	f8c4 759c 	str.w	r7, [r4, #1436]	@ 0x59c
          cachedAbsX(0),
90005760:	f8c4 75a0 	str.w	r7, [r4, #1440]	@ 0x5a0
90005764:	f8c4 9580 	str.w	r9, [r4, #1408]	@ 0x580
90005768:	f8a4 85a6 	strh.w	r8, [r4, #1446]	@ 0x5a6
9000576c:	920d      	str	r2, [sp, #52]	@ 0x34
9000576e:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005772:	f00d f973 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005776:	f504 63bb 	add.w	r3, r4, #1496	@ 0x5d8
9000577a:	a91d      	add	r1, sp, #116	@ 0x74
9000577c:	980d      	ldr	r0, [sp, #52]	@ 0x34
          touchable(false),
9000577e:	f8a4 55d0 	strh.w	r5, [r4, #1488]	@ 0x5d0
        : Widget(), bitmap(bmp), alpha(255)
90005782:	f884 65d4 	strb.w	r6, [r4, #1492]	@ 0x5d4
90005786:	f8c4 75b0 	str.w	r7, [r4, #1456]	@ 0x5b0
9000578a:	f8c4 75b4 	str.w	r7, [r4, #1460]	@ 0x5b4
9000578e:	f8c4 75b8 	str.w	r7, [r4, #1464]	@ 0x5b8
90005792:	f8c4 75bc 	str.w	r7, [r4, #1468]	@ 0x5bc
          parent(0),
90005796:	f8c4 75c0 	str.w	r7, [r4, #1472]	@ 0x5c0
          nextSibling(0),
9000579a:	f8c4 75c4 	str.w	r7, [r4, #1476]	@ 0x5c4
          nextDrawChainElement(0),
9000579e:	f8c4 75c8 	str.w	r7, [r4, #1480]	@ 0x5c8
          cachedAbsX(0),
900057a2:	f8c4 75cc 	str.w	r7, [r4, #1484]	@ 0x5cc
900057a6:	f8c4 95ac 	str.w	r9, [r4, #1452]	@ 0x5ac
900057aa:	f8a4 85d2 	strh.w	r8, [r4, #1490]	@ 0x5d2
900057ae:	930e      	str	r3, [sp, #56]	@ 0x38
900057b0:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
900057b4:	f00d f952 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900057b8:	f204 6204 	addw	r2, r4, #1540	@ 0x604
900057bc:	a91d      	add	r1, sp, #116	@ 0x74
900057be:	980e      	ldr	r0, [sp, #56]	@ 0x38
          touchable(false),
900057c0:	f8a4 55fc 	strh.w	r5, [r4, #1532]	@ 0x5fc
        : Widget(), bitmap(bmp), alpha(255)
900057c4:	f884 6600 	strb.w	r6, [r4, #1536]	@ 0x600
900057c8:	f8c4 75dc 	str.w	r7, [r4, #1500]	@ 0x5dc
900057cc:	f8c4 75e0 	str.w	r7, [r4, #1504]	@ 0x5e0
900057d0:	f8c4 75e4 	str.w	r7, [r4, #1508]	@ 0x5e4
900057d4:	f8c4 75e8 	str.w	r7, [r4, #1512]	@ 0x5e8
          parent(0),
900057d8:	f8c4 75ec 	str.w	r7, [r4, #1516]	@ 0x5ec
          nextSibling(0),
900057dc:	f8c4 75f0 	str.w	r7, [r4, #1520]	@ 0x5f0
          nextDrawChainElement(0),
900057e0:	f8c4 75f4 	str.w	r7, [r4, #1524]	@ 0x5f4
          cachedAbsX(0),
900057e4:	f8c4 75f8 	str.w	r7, [r4, #1528]	@ 0x5f8
900057e8:	f8c4 95d8 	str.w	r9, [r4, #1496]	@ 0x5d8
900057ec:	f8a4 85fe 	strh.w	r8, [r4, #1534]	@ 0x5fe
900057f0:	920f      	str	r2, [sp, #60]	@ 0x3c
900057f2:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
900057f6:	f00d f931 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900057fa:	f504 63c6 	add.w	r3, r4, #1584	@ 0x630
900057fe:	a91d      	add	r1, sp, #116	@ 0x74
90005800:	980f      	ldr	r0, [sp, #60]	@ 0x3c
          touchable(false),
90005802:	f8a4 5628 	strh.w	r5, [r4, #1576]	@ 0x628
        : Widget(), bitmap(bmp), alpha(255)
90005806:	f884 662c 	strb.w	r6, [r4, #1580]	@ 0x62c
9000580a:	f8c4 7608 	str.w	r7, [r4, #1544]	@ 0x608
9000580e:	f8c4 760c 	str.w	r7, [r4, #1548]	@ 0x60c
90005812:	f8c4 7610 	str.w	r7, [r4, #1552]	@ 0x610
90005816:	f8c4 7614 	str.w	r7, [r4, #1556]	@ 0x614
          parent(0),
9000581a:	f8c4 7618 	str.w	r7, [r4, #1560]	@ 0x618
          nextSibling(0),
9000581e:	f8c4 761c 	str.w	r7, [r4, #1564]	@ 0x61c
          nextDrawChainElement(0),
90005822:	f8c4 7620 	str.w	r7, [r4, #1568]	@ 0x620
          cachedAbsX(0),
90005826:	f8c4 7624 	str.w	r7, [r4, #1572]	@ 0x624
9000582a:	f8c4 9604 	str.w	r9, [r4, #1540]	@ 0x604
9000582e:	f8a4 862a 	strh.w	r8, [r4, #1578]	@ 0x62a
90005832:	9310      	str	r3, [sp, #64]	@ 0x40
90005834:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005838:	f00d f910 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000583c:	a91d      	add	r1, sp, #116	@ 0x74
9000583e:	9810      	ldr	r0, [sp, #64]	@ 0x40
          touchable(false),
90005840:	f8a4 5654 	strh.w	r5, [r4, #1620]	@ 0x654
90005844:	f8c4 7634 	str.w	r7, [r4, #1588]	@ 0x634
90005848:	f8c4 7638 	str.w	r7, [r4, #1592]	@ 0x638
9000584c:	f8c4 763c 	str.w	r7, [r4, #1596]	@ 0x63c
90005850:	f8c4 7640 	str.w	r7, [r4, #1600]	@ 0x640
          parent(0),
90005854:	f8c4 7644 	str.w	r7, [r4, #1604]	@ 0x644
          nextSibling(0),
90005858:	f8c4 7648 	str.w	r7, [r4, #1608]	@ 0x648
          nextDrawChainElement(0),
9000585c:	f8c4 764c 	str.w	r7, [r4, #1612]	@ 0x64c
          cachedAbsX(0),
90005860:	f8c4 7650 	str.w	r7, [r4, #1616]	@ 0x650
        : Widget(), bitmap(bmp), alpha(255)
90005864:	f8c4 9630 	str.w	r9, [r4, #1584]	@ 0x630
90005868:	f8a4 8656 	strh.w	r8, [r4, #1622]	@ 0x656
9000586c:	f884 8658 	strb.w	r8, [r4, #1624]	@ 0x658
90005870:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005874:	f00d f8f2 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005878:	f504 63d1 	add.w	r3, r4, #1672	@ 0x688
9000587c:	a91d      	add	r1, sp, #116	@ 0x74
9000587e:	4658      	mov	r0, fp
          touchable(false),
90005880:	f8a4 5680 	strh.w	r5, [r4, #1664]	@ 0x680
        : Widget(), bitmap(bmp), alpha(255)
90005884:	f884 6684 	strb.w	r6, [r4, #1668]	@ 0x684
90005888:	f8c4 7660 	str.w	r7, [r4, #1632]	@ 0x660
9000588c:	f8c4 7664 	str.w	r7, [r4, #1636]	@ 0x664
90005890:	f8c4 7668 	str.w	r7, [r4, #1640]	@ 0x668
90005894:	f8c4 766c 	str.w	r7, [r4, #1644]	@ 0x66c
          parent(0),
90005898:	f8c4 7670 	str.w	r7, [r4, #1648]	@ 0x670
          nextSibling(0),
9000589c:	f8c4 7674 	str.w	r7, [r4, #1652]	@ 0x674
          nextDrawChainElement(0),
900058a0:	f8c4 7678 	str.w	r7, [r4, #1656]	@ 0x678
          cachedAbsX(0),
900058a4:	f8c4 767c 	str.w	r7, [r4, #1660]	@ 0x67c
900058a8:	f8c4 965c 	str.w	r9, [r4, #1628]	@ 0x65c
900058ac:	f8a4 8682 	strh.w	r8, [r4, #1666]	@ 0x682
900058b0:	9311      	str	r3, [sp, #68]	@ 0x44
900058b2:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
900058b6:	f00d f8d1 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900058ba:	f204 62b4 	addw	r2, r4, #1716	@ 0x6b4
900058be:	a91d      	add	r1, sp, #116	@ 0x74
900058c0:	9811      	ldr	r0, [sp, #68]	@ 0x44
          touchable(false),
900058c2:	f8a4 56ac 	strh.w	r5, [r4, #1708]	@ 0x6ac
        : Widget(), bitmap(bmp), alpha(255)
900058c6:	f884 66b0 	strb.w	r6, [r4, #1712]	@ 0x6b0
900058ca:	f8c4 768c 	str.w	r7, [r4, #1676]	@ 0x68c
900058ce:	f8c4 7690 	str.w	r7, [r4, #1680]	@ 0x690
900058d2:	f8c4 7694 	str.w	r7, [r4, #1684]	@ 0x694
900058d6:	f8c4 7698 	str.w	r7, [r4, #1688]	@ 0x698
          parent(0),
900058da:	f8c4 769c 	str.w	r7, [r4, #1692]	@ 0x69c
          nextSibling(0),
900058de:	f8c4 76a0 	str.w	r7, [r4, #1696]	@ 0x6a0
          nextDrawChainElement(0),
900058e2:	f8c4 76a4 	str.w	r7, [r4, #1700]	@ 0x6a4
          cachedAbsX(0),
900058e6:	f8c4 76a8 	str.w	r7, [r4, #1704]	@ 0x6a8
900058ea:	f8c4 9688 	str.w	r9, [r4, #1672]	@ 0x688
900058ee:	f8a4 86ae 	strh.w	r8, [r4, #1710]	@ 0x6ae
900058f2:	9212      	str	r2, [sp, #72]	@ 0x48
900058f4:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
900058f8:	f00d f8b0 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900058fc:	f504 63dc 	add.w	r3, r4, #1760	@ 0x6e0
90005900:	a91d      	add	r1, sp, #116	@ 0x74
90005902:	9812      	ldr	r0, [sp, #72]	@ 0x48
          touchable(false),
90005904:	f8a4 56d8 	strh.w	r5, [r4, #1752]	@ 0x6d8
        : Widget(), bitmap(bmp), alpha(255)
90005908:	f884 66dc 	strb.w	r6, [r4, #1756]	@ 0x6dc
9000590c:	f8c4 76b8 	str.w	r7, [r4, #1720]	@ 0x6b8
90005910:	f8c4 76bc 	str.w	r7, [r4, #1724]	@ 0x6bc
90005914:	f8c4 76c0 	str.w	r7, [r4, #1728]	@ 0x6c0
90005918:	f8c4 76c4 	str.w	r7, [r4, #1732]	@ 0x6c4
          parent(0),
9000591c:	f8c4 76c8 	str.w	r7, [r4, #1736]	@ 0x6c8
          nextSibling(0),
90005920:	f8c4 76cc 	str.w	r7, [r4, #1740]	@ 0x6cc
          nextDrawChainElement(0),
90005924:	f8c4 76d0 	str.w	r7, [r4, #1744]	@ 0x6d0
          cachedAbsX(0),
90005928:	f8c4 76d4 	str.w	r7, [r4, #1748]	@ 0x6d4
9000592c:	f8c4 96b4 	str.w	r9, [r4, #1716]	@ 0x6b4
90005930:	f8a4 86da 	strh.w	r8, [r4, #1754]	@ 0x6da
90005934:	9313      	str	r3, [sp, #76]	@ 0x4c
90005936:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
9000593a:	f00d f88f 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000593e:	f204 720c 	addw	r2, r4, #1804	@ 0x70c
90005942:	a91d      	add	r1, sp, #116	@ 0x74
90005944:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90005946:	e003      	b.n	90005950 <_ZN12gameViewBaseC1Ev+0x7ac>
90005948:	90029f58 	.word	0x90029f58
9000594c:	9002a6bc 	.word	0x9002a6bc
          touchable(false),
90005950:	f8a4 5704 	strh.w	r5, [r4, #1796]	@ 0x704
        : Widget(), bitmap(bmp), alpha(255)
90005954:	f884 6708 	strb.w	r6, [r4, #1800]	@ 0x708
90005958:	f8c4 76e4 	str.w	r7, [r4, #1764]	@ 0x6e4
9000595c:	f8c4 76e8 	str.w	r7, [r4, #1768]	@ 0x6e8
90005960:	f8c4 76ec 	str.w	r7, [r4, #1772]	@ 0x6ec
90005964:	f8c4 76f0 	str.w	r7, [r4, #1776]	@ 0x6f0
          parent(0),
90005968:	f8c4 76f4 	str.w	r7, [r4, #1780]	@ 0x6f4
          nextSibling(0),
9000596c:	f8c4 76f8 	str.w	r7, [r4, #1784]	@ 0x6f8
          nextDrawChainElement(0),
90005970:	f8c4 76fc 	str.w	r7, [r4, #1788]	@ 0x6fc
          cachedAbsX(0),
90005974:	f8c4 7700 	str.w	r7, [r4, #1792]	@ 0x700
90005978:	f8c4 96e0 	str.w	r9, [r4, #1760]	@ 0x6e0
9000597c:	f8a4 8706 	strh.w	r8, [r4, #1798]	@ 0x706
90005980:	9214      	str	r2, [sp, #80]	@ 0x50
90005982:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005986:	f00d f869 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000598a:	f504 63e7 	add.w	r3, r4, #1848	@ 0x738
9000598e:	a91d      	add	r1, sp, #116	@ 0x74
90005990:	9814      	ldr	r0, [sp, #80]	@ 0x50
          touchable(false),
90005992:	f8a4 5730 	strh.w	r5, [r4, #1840]	@ 0x730
        : Widget(), bitmap(bmp), alpha(255)
90005996:	f884 6734 	strb.w	r6, [r4, #1844]	@ 0x734
9000599a:	f8c4 7710 	str.w	r7, [r4, #1808]	@ 0x710
9000599e:	f8c4 7714 	str.w	r7, [r4, #1812]	@ 0x714
900059a2:	f8c4 7718 	str.w	r7, [r4, #1816]	@ 0x718
900059a6:	f8c4 771c 	str.w	r7, [r4, #1820]	@ 0x71c
          parent(0),
900059aa:	f8c4 7720 	str.w	r7, [r4, #1824]	@ 0x720
          nextSibling(0),
900059ae:	f8c4 7724 	str.w	r7, [r4, #1828]	@ 0x724
          nextDrawChainElement(0),
900059b2:	f8c4 7728 	str.w	r7, [r4, #1832]	@ 0x728
          cachedAbsX(0),
900059b6:	f8c4 772c 	str.w	r7, [r4, #1836]	@ 0x72c
900059ba:	f8c4 970c 	str.w	r9, [r4, #1804]	@ 0x70c
900059be:	f8a4 8732 	strh.w	r8, [r4, #1842]	@ 0x732
900059c2:	9315      	str	r3, [sp, #84]	@ 0x54
900059c4:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
900059c8:	f00d f848 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900059cc:	f204 7264 	addw	r2, r4, #1892	@ 0x764
900059d0:	a91d      	add	r1, sp, #116	@ 0x74
900059d2:	9815      	ldr	r0, [sp, #84]	@ 0x54
          touchable(false),
900059d4:	f8a4 575c 	strh.w	r5, [r4, #1884]	@ 0x75c
        : Widget(), bitmap(bmp), alpha(255)
900059d8:	f884 6760 	strb.w	r6, [r4, #1888]	@ 0x760
900059dc:	f8c4 773c 	str.w	r7, [r4, #1852]	@ 0x73c
900059e0:	f8c4 7740 	str.w	r7, [r4, #1856]	@ 0x740
900059e4:	f8c4 7744 	str.w	r7, [r4, #1860]	@ 0x744
900059e8:	f8c4 7748 	str.w	r7, [r4, #1864]	@ 0x748
          parent(0),
900059ec:	f8c4 774c 	str.w	r7, [r4, #1868]	@ 0x74c
          nextSibling(0),
900059f0:	f8c4 7750 	str.w	r7, [r4, #1872]	@ 0x750
          nextDrawChainElement(0),
900059f4:	f8c4 7754 	str.w	r7, [r4, #1876]	@ 0x754
          cachedAbsX(0),
900059f8:	f8c4 7758 	str.w	r7, [r4, #1880]	@ 0x758
900059fc:	f8c4 9738 	str.w	r9, [r4, #1848]	@ 0x738
90005a00:	f8a4 875e 	strh.w	r8, [r4, #1886]	@ 0x75e
90005a04:	9216      	str	r2, [sp, #88]	@ 0x58
90005a06:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005a0a:	f00d f827 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005a0e:	f504 63f2 	add.w	r3, r4, #1936	@ 0x790
90005a12:	a91d      	add	r1, sp, #116	@ 0x74
90005a14:	9816      	ldr	r0, [sp, #88]	@ 0x58
          touchable(false),
90005a16:	f8a4 5788 	strh.w	r5, [r4, #1928]	@ 0x788
        : Widget(), bitmap(bmp), alpha(255)
90005a1a:	f884 678c 	strb.w	r6, [r4, #1932]	@ 0x78c
90005a1e:	f8c4 7768 	str.w	r7, [r4, #1896]	@ 0x768
90005a22:	f8c4 776c 	str.w	r7, [r4, #1900]	@ 0x76c
90005a26:	f8c4 7770 	str.w	r7, [r4, #1904]	@ 0x770
90005a2a:	f8c4 7774 	str.w	r7, [r4, #1908]	@ 0x774
          parent(0),
90005a2e:	f8c4 7778 	str.w	r7, [r4, #1912]	@ 0x778
          nextSibling(0),
90005a32:	f8c4 777c 	str.w	r7, [r4, #1916]	@ 0x77c
          nextDrawChainElement(0),
90005a36:	f8c4 7780 	str.w	r7, [r4, #1920]	@ 0x780
          cachedAbsX(0),
90005a3a:	f8c4 7784 	str.w	r7, [r4, #1924]	@ 0x784
90005a3e:	f8c4 9764 	str.w	r9, [r4, #1892]	@ 0x764
90005a42:	f8a4 878a 	strh.w	r8, [r4, #1930]	@ 0x78a
90005a46:	9317      	str	r3, [sp, #92]	@ 0x5c
90005a48:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005a4c:	f00d f806 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005a50:	f204 72bc 	addw	r2, r4, #1980	@ 0x7bc
90005a54:	a91d      	add	r1, sp, #116	@ 0x74
90005a56:	9817      	ldr	r0, [sp, #92]	@ 0x5c
          touchable(false),
90005a58:	f8a4 57b4 	strh.w	r5, [r4, #1972]	@ 0x7b4
        : Widget(), bitmap(bmp), alpha(255)
90005a5c:	f884 67b8 	strb.w	r6, [r4, #1976]	@ 0x7b8
90005a60:	f8c4 7794 	str.w	r7, [r4, #1940]	@ 0x794
90005a64:	f8c4 7798 	str.w	r7, [r4, #1944]	@ 0x798
90005a68:	f8c4 779c 	str.w	r7, [r4, #1948]	@ 0x79c
90005a6c:	f8c4 77a0 	str.w	r7, [r4, #1952]	@ 0x7a0
          parent(0),
90005a70:	f8c4 77a4 	str.w	r7, [r4, #1956]	@ 0x7a4
          nextSibling(0),
90005a74:	f8c4 77a8 	str.w	r7, [r4, #1960]	@ 0x7a8
          nextDrawChainElement(0),
90005a78:	f8c4 77ac 	str.w	r7, [r4, #1964]	@ 0x7ac
          cachedAbsX(0),
90005a7c:	f8c4 77b0 	str.w	r7, [r4, #1968]	@ 0x7b0
90005a80:	f8c4 9790 	str.w	r9, [r4, #1936]	@ 0x790
90005a84:	f8a4 87b6 	strh.w	r8, [r4, #1974]	@ 0x7b6
90005a88:	9218      	str	r2, [sp, #96]	@ 0x60
90005a8a:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005a8e:	f00c ffe5 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
          touchable(false),
90005a92:	f8a4 57e0 	strh.w	r5, [r4, #2016]	@ 0x7e0
90005a96:	f504 65fd 	add.w	r5, r4, #2024	@ 0x7e8
90005a9a:	a91d      	add	r1, sp, #116	@ 0x74
90005a9c:	9818      	ldr	r0, [sp, #96]	@ 0x60
        : Widget(), bitmap(bmp), alpha(255)
90005a9e:	f884 67e4 	strb.w	r6, [r4, #2020]	@ 0x7e4
90005aa2:	f8c4 97bc 	str.w	r9, [r4, #1980]	@ 0x7bc
90005aa6:	f8c4 77c0 	str.w	r7, [r4, #1984]	@ 0x7c0
90005aaa:	f8c4 77c4 	str.w	r7, [r4, #1988]	@ 0x7c4
90005aae:	f8c4 77c8 	str.w	r7, [r4, #1992]	@ 0x7c8
90005ab2:	f8c4 77cc 	str.w	r7, [r4, #1996]	@ 0x7cc
          parent(0),
90005ab6:	f8c4 77d0 	str.w	r7, [r4, #2000]	@ 0x7d0
          nextSibling(0),
90005aba:	f8c4 77d4 	str.w	r7, [r4, #2004]	@ 0x7d4
          nextDrawChainElement(0),
90005abe:	f8c4 77d8 	str.w	r7, [r4, #2008]	@ 0x7d8
          cachedAbsX(0),
90005ac2:	f8c4 77dc 	str.w	r7, [r4, #2012]	@ 0x7dc
90005ac6:	f8a4 87e2 	strh.w	r8, [r4, #2018]	@ 0x7e2
90005aca:	9519      	str	r5, [sp, #100]	@ 0x64
90005acc:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
        Image::setBitmap(bmp);
90005ad0:	f00c ffc4 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005ad4:	f504 6303 	add.w	r3, r4, #2096	@ 0x830
90005ad8:	4628      	mov	r0, r5
    __background.setPosition(0, 0, 480, 272);
90005ada:	f104 0540 	add.w	r5, r4, #64	@ 0x40
    buttonCallback(this, &gameViewBase::buttonCallbackHandler)
90005ade:	461e      	mov	r6, r3
90005ae0:	931a      	str	r3, [sp, #104]	@ 0x68
90005ae2:	f00d f8fd 	bl	90012ce0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
90005ae6:	4630      	mov	r0, r6
90005ae8:	f00d f8fa 	bl	90012ce0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90005aec:	4ad5      	ldr	r2, [pc, #852]	@ (90005e44 <_ZN12gameViewBaseC1Ev+0xca0>)
        setWidth(width);
90005aee:	4628      	mov	r0, r5
90005af0:	f44f 71f0 	mov.w	r1, #480	@ 0x1e0
90005af4:	f8c4 2878 	str.w	r2, [r4, #2168]	@ 0x878
90005af8:	4ad3      	ldr	r2, [pc, #844]	@ (90005e48 <_ZN12gameViewBaseC1Ev+0xca4>)
90005afa:	f8c4 487c 	str.w	r4, [r4, #2172]	@ 0x87c
90005afe:	f8c4 2880 	str.w	r2, [r4, #2176]	@ 0x880
90005b02:	4ad2      	ldr	r2, [pc, #840]	@ (90005e4c <_ZN12gameViewBaseC1Ev+0xca8>)
90005b04:	f8c4 7884 	str.w	r7, [r4, #2180]	@ 0x884
90005b08:	f8c4 2888 	str.w	r2, [r4, #2184]	@ 0x888
90005b0c:	4ad0      	ldr	r2, [pc, #832]	@ (90005e50 <_ZN12gameViewBaseC1Ev+0xcac>)
90005b0e:	f8c4 488c 	str.w	r4, [r4, #2188]	@ 0x88c
90005b12:	f8c4 2890 	str.w	r2, [r4, #2192]	@ 0x890
90005b16:	f8c4 7894 	str.w	r7, [r4, #2196]	@ 0x894
        rect.x = x;
90005b1a:	6467      	str	r7, [r4, #68]	@ 0x44
        setWidth(width);
90005b1c:	f7fd f916 	bl	90002d4c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
90005b20:	4628      	mov	r0, r5
90005b22:	f44f 7188 	mov.w	r1, #272	@ 0x110
90005b26:	f7fd f913 	bl	90002d50 <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90005b2a:	4629      	mov	r1, r5
        color = newColor;
90005b2c:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
90005b30:	1d25      	adds	r5, r4, #4
90005b32:	66a2      	str	r2, [r4, #104]	@ 0x68
90005b34:	4628      	mov	r0, r5
90005b36:	f00a f839 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Image2.setBitmap(touchgfx::Bitmap(BITMAP_GAME_ID));
90005b3a:	9e1b      	ldr	r6, [sp, #108]	@ 0x6c
90005b3c:	2204      	movs	r2, #4
90005b3e:	a91d      	add	r1, sp, #116	@ 0x74
90005b40:	4630      	mov	r0, r6
        rect.x = x;
90005b42:	6727      	str	r7, [r4, #112]	@ 0x70
90005b44:	f8ad 2074 	strh.w	r2, [sp, #116]	@ 0x74
90005b48:	f00c ff88 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005b4c:	4631      	mov	r1, r6
90005b4e:	4628      	mov	r0, r5
90005b50:	f00a f82c 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005b54:	f04f 1354 	mov.w	r3, #5505108	@ 0x540054
        borderUp = borderColorReleased;
90005b58:	49be      	ldr	r1, [pc, #760]	@ (90005e54 <_ZN12gameViewBaseC1Ev+0xcb0>)
90005b5a:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90005b5e:	2305      	movs	r3, #5
90005b60:	f8c4 1108 	str.w	r1, [r4, #264]	@ 0x108
        borderDown = borderColorPressed;
90005b64:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
        down = colorPressed;
90005b68:	4abb      	ldr	r2, [pc, #748]	@ (90005e58 <_ZN12gameViewBaseC1Ev+0xcb4>)
        borderDown = borderColorPressed;
90005b6a:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
90005b6e:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
        borderBox.setColor(T::getPressed() ? down : up);
90005b72:	f894 00c4 	ldrb.w	r0, [r4, #196]	@ 0xc4
        down = colorPressed;
90005b76:	4bb9      	ldr	r3, [pc, #740]	@ (90005e5c <_ZN12gameViewBaseC1Ev+0xcb8>)
        borderDown = borderColorPressed;
90005b78:	f8c4 110c 	str.w	r1, [r4, #268]	@ 0x10c
90005b7c:	f8c4 70d0 	str.w	r7, [r4, #208]	@ 0xd0
        handlePressedUpdated();
90005b80:	f8d4 1098 	ldr.w	r1, [r4, #152]	@ 0x98
        down = colorPressed;
90005b84:	e9c4 3240 	strd	r3, r2, [r4, #256]	@ 0x100
        borderBox.setColor(T::getPressed() ? down : up);
90005b88:	2800      	cmp	r0, #0
90005b8a:	f000 8416 	beq.w	900063ba <_ZN12gameViewBaseC1Ev+0x1216>
90005b8e:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005b90:	f504 7286 	add.w	r2, r4, #268	@ 0x10c
90005b94:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
90005b98:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005b9a:	4fb1      	ldr	r7, [pc, #708]	@ (90005e60 <_ZN12gameViewBaseC1Ev+0xcbc>)
90005b9c:	f8c4 30f8 	str.w	r3, [r4, #248]	@ 0xf8
        alpha = newAlpha;
90005ba0:	2300      	movs	r3, #0
90005ba2:	f884 30c5 	strb.w	r3, [r4, #197]	@ 0xc5
        handleAlphaUpdated();
90005ba6:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005baa:	42ba      	cmp	r2, r7
90005bac:	f040 8421 	bne.w	900063f2 <_ZN12gameViewBaseC1Ev+0x124e>
        alpha = newAlpha;
90005bb0:	f884 30f2 	strb.w	r3, [r4, #242]	@ 0xf2
90005bb4:	f04f 1354 	mov.w	r3, #5505108	@ 0x540054
    topLeft.setAction(flexButtonCallback);
90005bb8:	f604 0678 	addw	r6, r4, #2168	@ 0x878
90005bbc:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 90005e84 <_ZN12gameViewBaseC1Ev+0xce0>
90005bc0:	4628      	mov	r0, r5
90005bc2:	9900      	ldr	r1, [sp, #0]
        action = &callback;
90005bc4:	f8c4 60c8 	str.w	r6, [r4, #200]	@ 0xc8
90005bc8:	e9c4 9327 	strd	r9, r3, [r4, #156]	@ 0x9c
90005bcc:	f009 ffee 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005bd0:	2200      	movs	r2, #0
90005bd2:	4ba4      	ldr	r3, [pc, #656]	@ (90005e64 <_ZN12gameViewBaseC1Ev+0xcc0>)
        borderUp = borderColorReleased;
90005bd4:	499f      	ldr	r1, [pc, #636]	@ (90005e54 <_ZN12gameViewBaseC1Ev+0xcb0>)
        borderBox.setColor(T::getPressed() ? down : up);
90005bd6:	f894 013c 	ldrb.w	r0, [r4, #316]	@ 0x13c
        borderUp = borderColorReleased;
90005bda:	f8c4 1180 	str.w	r1, [r4, #384]	@ 0x180
        borderDown = borderColorPressed;
90005bde:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
90005be2:	e9c4 2352 	strd	r2, r3, [r4, #328]	@ 0x148
        borderSize = size;
90005be6:	2305      	movs	r3, #5
90005be8:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
        down = colorPressed;
90005bec:	4a9a      	ldr	r2, [pc, #616]	@ (90005e58 <_ZN12gameViewBaseC1Ev+0xcb4>)
90005bee:	f8a4 3174 	strh.w	r3, [r4, #372]	@ 0x174
90005bf2:	4b9a      	ldr	r3, [pc, #616]	@ (90005e5c <_ZN12gameViewBaseC1Ev+0xcb8>)
        borderDown = borderColorPressed;
90005bf4:	f8c4 1184 	str.w	r1, [r4, #388]	@ 0x184
        handlePressedUpdated();
90005bf8:	f8d4 1110 	ldr.w	r1, [r4, #272]	@ 0x110
        down = colorPressed;
90005bfc:	e9c4 325e 	strd	r3, r2, [r4, #376]	@ 0x178
        borderBox.setColor(T::getPressed() ? down : up);
90005c00:	2800      	cmp	r0, #0
90005c02:	f000 83d7 	beq.w	900063b4 <_ZN12gameViewBaseC1Ev+0x1210>
        color = newColor;
90005c06:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005c08:	f504 72c2 	add.w	r2, r4, #388	@ 0x184
90005c0c:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
90005c10:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005c12:	f8c4 3170 	str.w	r3, [r4, #368]	@ 0x170
        alpha = newAlpha;
90005c16:	2300      	movs	r3, #0
90005c18:	f884 313d 	strb.w	r3, [r4, #317]	@ 0x13d
        handleAlphaUpdated();
90005c1c:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005c20:	42ba      	cmp	r2, r7
90005c22:	f040 83e3 	bne.w	900063ec <_ZN12gameViewBaseC1Ev+0x1248>
        alpha = newAlpha;
90005c26:	f884 316a 	strb.w	r3, [r4, #362]	@ 0x16a
90005c2a:	4b8e      	ldr	r3, [pc, #568]	@ (90005e64 <_ZN12gameViewBaseC1Ev+0xcc0>)
90005c2c:	4628      	mov	r0, r5
90005c2e:	f8df e258 	ldr.w	lr, [pc, #600]	@ 90005e88 <_ZN12gameViewBaseC1Ev+0xce4>
90005c32:	f04f 0800 	mov.w	r8, #0
90005c36:	9901      	ldr	r1, [sp, #4]
        action = &callback;
90005c38:	f8c4 6140 	str.w	r6, [r4, #320]	@ 0x140
90005c3c:	e9c4 e345 	strd	lr, r3, [r4, #276]	@ 0x114
90005c40:	f009 ffb4 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c44:	4b88      	ldr	r3, [pc, #544]	@ (90005e68 <_ZN12gameViewBaseC1Ev+0xcc4>)
        borderUp = borderColorReleased;
90005c46:	4983      	ldr	r1, [pc, #524]	@ (90005e54 <_ZN12gameViewBaseC1Ev+0xcb0>)
        down = colorPressed;
90005c48:	4a83      	ldr	r2, [pc, #524]	@ (90005e58 <_ZN12gameViewBaseC1Ev+0xcb4>)
        borderUp = borderColorReleased;
90005c4a:	f8c4 11f8 	str.w	r1, [r4, #504]	@ 0x1f8
        borderDown = borderColorPressed;
90005c4e:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005c52:	f894 01b4 	ldrb.w	r0, [r4, #436]	@ 0x1b4
        borderDown = borderColorPressed;
90005c56:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
90005c5a:	e9c4 8370 	strd	r8, r3, [r4, #448]	@ 0x1c0
        borderSize = size;
90005c5e:	2305      	movs	r3, #5
90005c60:	f8c4 11fc 	str.w	r1, [r4, #508]	@ 0x1fc
        handlePressedUpdated();
90005c64:	f8d4 1188 	ldr.w	r1, [r4, #392]	@ 0x188
90005c68:	f8a4 31ec 	strh.w	r3, [r4, #492]	@ 0x1ec
        down = colorPressed;
90005c6c:	4b7b      	ldr	r3, [pc, #492]	@ (90005e5c <_ZN12gameViewBaseC1Ev+0xcb8>)
90005c6e:	e9c4 327c 	strd	r3, r2, [r4, #496]	@ 0x1f0
        borderBox.setColor(T::getPressed() ? down : up);
90005c72:	2800      	cmp	r0, #0
90005c74:	f000 839b 	beq.w	900063ae <_ZN12gameViewBaseC1Ev+0x120a>
        color = newColor;
90005c78:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005c7a:	f504 72fe 	add.w	r2, r4, #508	@ 0x1fc
90005c7e:	f8c4 31e4 	str.w	r3, [r4, #484]	@ 0x1e4
90005c82:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005c84:	f8c4 31e8 	str.w	r3, [r4, #488]	@ 0x1e8
        alpha = newAlpha;
90005c88:	2300      	movs	r3, #0
90005c8a:	f884 31b5 	strb.w	r3, [r4, #437]	@ 0x1b5
        handleAlphaUpdated();
90005c8e:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005c92:	42ba      	cmp	r2, r7
90005c94:	f040 83a7 	bne.w	900063e6 <_ZN12gameViewBaseC1Ev+0x1242>
        alpha = newAlpha;
90005c98:	f884 31e2 	strb.w	r3, [r4, #482]	@ 0x1e2
90005c9c:	4b72      	ldr	r3, [pc, #456]	@ (90005e68 <_ZN12gameViewBaseC1Ev+0xcc4>)
90005c9e:	4873      	ldr	r0, [pc, #460]	@ (90005e6c <_ZN12gameViewBaseC1Ev+0xcc8>)
90005ca0:	9902      	ldr	r1, [sp, #8]
        action = &callback;
90005ca2:	f8c4 61b8 	str.w	r6, [r4, #440]	@ 0x1b8
90005ca6:	e9c4 0363 	strd	r0, r3, [r4, #396]	@ 0x18c
90005caa:	4628      	mov	r0, r5
90005cac:	f009 ff7e 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005cb0:	4b6f      	ldr	r3, [pc, #444]	@ (90005e70 <_ZN12gameViewBaseC1Ev+0xccc>)
        borderUp = borderColorReleased;
90005cb2:	4968      	ldr	r1, [pc, #416]	@ (90005e54 <_ZN12gameViewBaseC1Ev+0xcb0>)
90005cb4:	f04f 0c00 	mov.w	ip, #0
        down = colorPressed;
90005cb8:	4a67      	ldr	r2, [pc, #412]	@ (90005e58 <_ZN12gameViewBaseC1Ev+0xcb4>)
        borderUp = borderColorReleased;
90005cba:	f8c4 1270 	str.w	r1, [r4, #624]	@ 0x270
        borderDown = borderColorPressed;
90005cbe:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005cc2:	f894 022c 	ldrb.w	r0, [r4, #556]	@ 0x22c
        borderDown = borderColorPressed;
90005cc6:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
90005cca:	e9c4 c38e 	strd	ip, r3, [r4, #568]	@ 0x238
        borderSize = size;
90005cce:	2305      	movs	r3, #5
90005cd0:	f8c4 1274 	str.w	r1, [r4, #628]	@ 0x274
        handlePressedUpdated();
90005cd4:	f8d4 1200 	ldr.w	r1, [r4, #512]	@ 0x200
90005cd8:	f8a4 3264 	strh.w	r3, [r4, #612]	@ 0x264
        down = colorPressed;
90005cdc:	4b5f      	ldr	r3, [pc, #380]	@ (90005e5c <_ZN12gameViewBaseC1Ev+0xcb8>)
90005cde:	e9c4 329a 	strd	r3, r2, [r4, #616]	@ 0x268
        borderBox.setColor(T::getPressed() ? down : up);
90005ce2:	2800      	cmp	r0, #0
90005ce4:	f000 8360 	beq.w	900063a8 <_ZN12gameViewBaseC1Ev+0x1204>
        color = newColor;
90005ce8:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005cea:	f504 721d 	add.w	r2, r4, #628	@ 0x274
90005cee:	f8c4 325c 	str.w	r3, [r4, #604]	@ 0x25c
90005cf2:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005cf4:	f8c4 3260 	str.w	r3, [r4, #608]	@ 0x260
        alpha = newAlpha;
90005cf8:	2300      	movs	r3, #0
90005cfa:	f884 322d 	strb.w	r3, [r4, #557]	@ 0x22d
        handleAlphaUpdated();
90005cfe:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005d02:	42ba      	cmp	r2, r7
90005d04:	f040 836c 	bne.w	900063e0 <_ZN12gameViewBaseC1Ev+0x123c>
        alpha = newAlpha;
90005d08:	f884 325a 	strb.w	r3, [r4, #602]	@ 0x25a
90005d0c:	4a59      	ldr	r2, [pc, #356]	@ (90005e74 <_ZN12gameViewBaseC1Ev+0xcd0>)
90005d0e:	4628      	mov	r0, r5
90005d10:	4b57      	ldr	r3, [pc, #348]	@ (90005e70 <_ZN12gameViewBaseC1Ev+0xccc>)
90005d12:	9903      	ldr	r1, [sp, #12]
        action = &callback;
90005d14:	f8c4 6230 	str.w	r6, [r4, #560]	@ 0x230
90005d18:	e9c4 2381 	strd	r2, r3, [r4, #516]	@ 0x204
90005d1c:	f009 ff46 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d20:	2100      	movs	r1, #0
90005d22:	4b55      	ldr	r3, [pc, #340]	@ (90005e78 <_ZN12gameViewBaseC1Ev+0xcd4>)
        down = colorPressed;
90005d24:	4a4c      	ldr	r2, [pc, #304]	@ (90005e58 <_ZN12gameViewBaseC1Ev+0xcb4>)
        borderBox.setColor(T::getPressed() ? down : up);
90005d26:	f894 02a4 	ldrb.w	r0, [r4, #676]	@ 0x2a4
90005d2a:	e9c4 13ac 	strd	r1, r3, [r4, #688]	@ 0x2b0
        borderUp = borderColorReleased;
90005d2e:	4949      	ldr	r1, [pc, #292]	@ (90005e54 <_ZN12gameViewBaseC1Ev+0xcb0>)
        borderSize = size;
90005d30:	2305      	movs	r3, #5
90005d32:	f8c4 12e8 	str.w	r1, [r4, #744]	@ 0x2e8
        borderDown = borderColorPressed;
90005d36:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
90005d3a:	f8a4 32dc 	strh.w	r3, [r4, #732]	@ 0x2dc
90005d3e:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
        down = colorPressed;
90005d42:	4b46      	ldr	r3, [pc, #280]	@ (90005e5c <_ZN12gameViewBaseC1Ev+0xcb8>)
        borderDown = borderColorPressed;
90005d44:	f8c4 12ec 	str.w	r1, [r4, #748]	@ 0x2ec
        handlePressedUpdated();
90005d48:	f8d4 1278 	ldr.w	r1, [r4, #632]	@ 0x278
        down = colorPressed;
90005d4c:	e9c4 32b8 	strd	r3, r2, [r4, #736]	@ 0x2e0
        borderBox.setColor(T::getPressed() ? down : up);
90005d50:	2800      	cmp	r0, #0
90005d52:	f000 8326 	beq.w	900063a2 <_ZN12gameViewBaseC1Ev+0x11fe>
        color = newColor;
90005d56:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005d58:	f504 723b 	add.w	r2, r4, #748	@ 0x2ec
90005d5c:	f8c4 32d4 	str.w	r3, [r4, #724]	@ 0x2d4
90005d60:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005d62:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
        alpha = newAlpha;
90005d66:	2300      	movs	r3, #0
90005d68:	f884 32a5 	strb.w	r3, [r4, #677]	@ 0x2a5
        handleAlphaUpdated();
90005d6c:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005d70:	42ba      	cmp	r2, r7
90005d72:	f040 8332 	bne.w	900063da <_ZN12gameViewBaseC1Ev+0x1236>
        alpha = newAlpha;
90005d76:	f884 32d2 	strb.w	r3, [r4, #722]	@ 0x2d2
90005d7a:	4b3f      	ldr	r3, [pc, #252]	@ (90005e78 <_ZN12gameViewBaseC1Ev+0xcd4>)
90005d7c:	4628      	mov	r0, r5
90005d7e:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 90005e8c <_ZN12gameViewBaseC1Ev+0xce8>
90005d82:	f04f 0900 	mov.w	r9, #0
90005d86:	9904      	ldr	r1, [sp, #16]
        action = &callback;
90005d88:	f8c4 62a8 	str.w	r6, [r4, #680]	@ 0x2a8
90005d8c:	e9c4 839f 	strd	r8, r3, [r4, #636]	@ 0x27c
90005d90:	f009 ff0c 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d94:	4b39      	ldr	r3, [pc, #228]	@ (90005e7c <_ZN12gameViewBaseC1Ev+0xcd8>)
        borderUp = borderColorReleased;
90005d96:	492f      	ldr	r1, [pc, #188]	@ (90005e54 <_ZN12gameViewBaseC1Ev+0xcb0>)
        down = colorPressed;
90005d98:	4a2f      	ldr	r2, [pc, #188]	@ (90005e58 <_ZN12gameViewBaseC1Ev+0xcb4>)
        borderUp = borderColorReleased;
90005d9a:	f8c4 1360 	str.w	r1, [r4, #864]	@ 0x360
        borderDown = borderColorPressed;
90005d9e:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005da2:	f894 031c 	ldrb.w	r0, [r4, #796]	@ 0x31c
        borderDown = borderColorPressed;
90005da6:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
90005daa:	e9c4 93ca 	strd	r9, r3, [r4, #808]	@ 0x328
        borderSize = size;
90005dae:	2305      	movs	r3, #5
90005db0:	f8c4 1364 	str.w	r1, [r4, #868]	@ 0x364
        handlePressedUpdated();
90005db4:	f8d4 12f0 	ldr.w	r1, [r4, #752]	@ 0x2f0
90005db8:	f8a4 3354 	strh.w	r3, [r4, #852]	@ 0x354
        down = colorPressed;
90005dbc:	4b27      	ldr	r3, [pc, #156]	@ (90005e5c <_ZN12gameViewBaseC1Ev+0xcb8>)
90005dbe:	e9c4 32d6 	strd	r3, r2, [r4, #856]	@ 0x358
        borderBox.setColor(T::getPressed() ? down : up);
90005dc2:	2800      	cmp	r0, #0
90005dc4:	f000 82ea 	beq.w	9000639c <_ZN12gameViewBaseC1Ev+0x11f8>
        color = newColor;
90005dc8:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005dca:	f504 7259 	add.w	r2, r4, #868	@ 0x364
90005dce:	f8c4 334c 	str.w	r3, [r4, #844]	@ 0x34c
90005dd2:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005dd4:	f8c4 3350 	str.w	r3, [r4, #848]	@ 0x350
        alpha = newAlpha;
90005dd8:	2300      	movs	r3, #0
90005dda:	f884 331d 	strb.w	r3, [r4, #797]	@ 0x31d
        handleAlphaUpdated();
90005dde:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005de2:	42ba      	cmp	r2, r7
90005de4:	f040 82f6 	bne.w	900063d4 <_ZN12gameViewBaseC1Ev+0x1230>
        alpha = newAlpha;
90005de8:	f884 334a 	strb.w	r3, [r4, #842]	@ 0x34a
90005dec:	4b23      	ldr	r3, [pc, #140]	@ (90005e7c <_ZN12gameViewBaseC1Ev+0xcd8>)
90005dee:	4628      	mov	r0, r5
90005df0:	f8df c09c 	ldr.w	ip, [pc, #156]	@ 90005e90 <_ZN12gameViewBaseC1Ev+0xcec>
90005df4:	9905      	ldr	r1, [sp, #20]
        action = &callback;
90005df6:	f8c4 6320 	str.w	r6, [r4, #800]	@ 0x320
90005dfa:	e9c4 c3bd 	strd	ip, r3, [r4, #756]	@ 0x2f4
90005dfe:	f009 fed5 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005e02:	4b1f      	ldr	r3, [pc, #124]	@ (90005e80 <_ZN12gameViewBaseC1Ev+0xcdc>)
        borderUp = borderColorReleased;
90005e04:	4913      	ldr	r1, [pc, #76]	@ (90005e54 <_ZN12gameViewBaseC1Ev+0xcb0>)
90005e06:	f04f 0e00 	mov.w	lr, #0
        down = colorPressed;
90005e0a:	4a13      	ldr	r2, [pc, #76]	@ (90005e58 <_ZN12gameViewBaseC1Ev+0xcb4>)
        borderUp = borderColorReleased;
90005e0c:	f8c4 13d8 	str.w	r1, [r4, #984]	@ 0x3d8
        borderDown = borderColorPressed;
90005e10:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005e14:	f894 0394 	ldrb.w	r0, [r4, #916]	@ 0x394
        borderDown = borderColorPressed;
90005e18:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
90005e1c:	e9c4 e3e8 	strd	lr, r3, [r4, #928]	@ 0x3a0
        borderSize = size;
90005e20:	2305      	movs	r3, #5
90005e22:	f8c4 13dc 	str.w	r1, [r4, #988]	@ 0x3dc
        handlePressedUpdated();
90005e26:	f8d4 1368 	ldr.w	r1, [r4, #872]	@ 0x368
90005e2a:	f8a4 33cc 	strh.w	r3, [r4, #972]	@ 0x3cc
        down = colorPressed;
90005e2e:	4b0b      	ldr	r3, [pc, #44]	@ (90005e5c <_ZN12gameViewBaseC1Ev+0xcb8>)
90005e30:	e9c4 32f4 	strd	r3, r2, [r4, #976]	@ 0x3d0
        borderBox.setColor(T::getPressed() ? down : up);
90005e34:	2800      	cmp	r0, #0
90005e36:	f000 82ae 	beq.w	90006396 <_ZN12gameViewBaseC1Ev+0x11f2>
        color = newColor;
90005e3a:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005e3c:	f504 7277 	add.w	r2, r4, #988	@ 0x3dc
90005e40:	e028      	b.n	90005e94 <_ZN12gameViewBaseC1Ev+0xcf0>
90005e42:	bf00      	nop
90005e44:	90029ff4 	.word	0x90029ff4
90005e48:	90004cdd 	.word	0x90004cdd
90005e4c:	9002a00c 	.word	0x9002a00c
90005e50:	90005035 	.word	0x90005035
90005e54:	ff003366 	.word	0xff003366
90005e58:	ff0099cc 	.word	0xff0099cc
90005e5c:	ff006699 	.word	0xff006699
90005e60:	90004fe9 	.word	0x90004fe9
90005e64:	00540051 	.word	0x00540051
90005e68:	00540053 	.word	0x00540053
90005e6c:	0007011e 	.word	0x0007011e
90005e70:	004e0054 	.word	0x004e0054
90005e74:	0062006d 	.word	0x0062006d
90005e78:	004e0051 	.word	0x004e0051
90005e7c:	004e0053 	.word	0x004e0053
90005e80:	00530054 	.word	0x00530054
90005e84:	0007006d 	.word	0x0007006d
90005e88:	000700c7 	.word	0x000700c7
90005e8c:	006200c7 	.word	0x006200c7
90005e90:	0062011e 	.word	0x0062011e
90005e94:	f8c4 33c4 	str.w	r3, [r4, #964]	@ 0x3c4
90005e98:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005e9a:	f8c4 33c8 	str.w	r3, [r4, #968]	@ 0x3c8
        alpha = newAlpha;
90005e9e:	2300      	movs	r3, #0
90005ea0:	f884 3395 	strb.w	r3, [r4, #917]	@ 0x395
        handleAlphaUpdated();
90005ea4:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005ea8:	42ba      	cmp	r2, r7
90005eaa:	f040 8290 	bne.w	900063ce <_ZN12gameViewBaseC1Ev+0x122a>
        alpha = newAlpha;
90005eae:	f884 33c2 	strb.w	r3, [r4, #962]	@ 0x3c2
90005eb2:	4be4      	ldr	r3, [pc, #912]	@ (90006244 <_ZN12gameViewBaseC1Ev+0x10a0>)
90005eb4:	48e4      	ldr	r0, [pc, #912]	@ (90006248 <_ZN12gameViewBaseC1Ev+0x10a4>)
90005eb6:	9906      	ldr	r1, [sp, #24]
        action = &callback;
90005eb8:	f8c4 6398 	str.w	r6, [r4, #920]	@ 0x398
90005ebc:	e9c4 03db 	strd	r0, r3, [r4, #876]	@ 0x36c
90005ec0:	4628      	mov	r0, r5
90005ec2:	f009 fe73 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005ec6:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90005ec8:	49e0      	ldr	r1, [pc, #896]	@ (9000624c <_ZN12gameViewBaseC1Ev+0x10a8>)
90005eca:	f8c4 3418 	str.w	r3, [r4, #1048]	@ 0x418
90005ece:	4be0      	ldr	r3, [pc, #896]	@ (90006250 <_ZN12gameViewBaseC1Ev+0x10ac>)
90005ed0:	f8c4 1450 	str.w	r1, [r4, #1104]	@ 0x450
        borderDown = borderColorPressed;
90005ed4:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
90005ed8:	f8c4 341c 	str.w	r3, [r4, #1052]	@ 0x41c
        borderSize = size;
90005edc:	2305      	movs	r3, #5
90005ede:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
        down = colorPressed;
90005ee2:	4adc      	ldr	r2, [pc, #880]	@ (90006254 <_ZN12gameViewBaseC1Ev+0x10b0>)
90005ee4:	f8a4 3444 	strh.w	r3, [r4, #1092]	@ 0x444
        borderBox.setColor(T::getPressed() ? down : up);
90005ee8:	f894 040c 	ldrb.w	r0, [r4, #1036]	@ 0x40c
        up = colorReleased;
90005eec:	4bda      	ldr	r3, [pc, #872]	@ (90006258 <_ZN12gameViewBaseC1Ev+0x10b4>)
        borderDown = borderColorPressed;
90005eee:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
        up = colorReleased;
90005ef2:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
        handlePressedUpdated();
90005ef6:	f8d4 13e0 	ldr.w	r1, [r4, #992]	@ 0x3e0
        down = colorPressed;
90005efa:	f8c4 244c 	str.w	r2, [r4, #1100]	@ 0x44c
        borderBox.setColor(T::getPressed() ? down : up);
90005efe:	2800      	cmp	r0, #0
90005f00:	f000 8246 	beq.w	90006390 <_ZN12gameViewBaseC1Ev+0x11ec>
        color = newColor;
90005f04:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005f06:	f204 4254 	addw	r2, r4, #1108	@ 0x454
90005f0a:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
90005f0e:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005f10:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
        alpha = newAlpha;
90005f14:	2300      	movs	r3, #0
90005f16:	f884 340d 	strb.w	r3, [r4, #1037]	@ 0x40d
        handleAlphaUpdated();
90005f1a:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005f1e:	42ba      	cmp	r2, r7
90005f20:	f040 8252 	bne.w	900063c8 <_ZN12gameViewBaseC1Ev+0x1224>
        alpha = newAlpha;
90005f24:	f884 343a 	strb.w	r3, [r4, #1082]	@ 0x43a
90005f28:	4acc      	ldr	r2, [pc, #816]	@ (9000625c <_ZN12gameViewBaseC1Ev+0x10b8>)
90005f2a:	4628      	mov	r0, r5
90005f2c:	4bc8      	ldr	r3, [pc, #800]	@ (90006250 <_ZN12gameViewBaseC1Ev+0x10ac>)
90005f2e:	9907      	ldr	r1, [sp, #28]
        action = &callback;
90005f30:	f8c4 6410 	str.w	r6, [r4, #1040]	@ 0x410
90005f34:	e9c4 23f9 	strd	r2, r3, [r4, #996]	@ 0x3e4
90005f38:	f009 fe38 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005f3c:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90005f3e:	49c3      	ldr	r1, [pc, #780]	@ (9000624c <_ZN12gameViewBaseC1Ev+0x10a8>)
90005f40:	f8c4 3490 	str.w	r3, [r4, #1168]	@ 0x490
90005f44:	f04f 1353 	mov.w	r3, #5439571	@ 0x530053
90005f48:	f8c4 14c8 	str.w	r1, [r4, #1224]	@ 0x4c8
        borderDown = borderColorPressed;
90005f4c:	f101 1133 	add.w	r1, r1, #3342387	@ 0x330033
90005f50:	f8c4 3494 	str.w	r3, [r4, #1172]	@ 0x494
        borderSize = size;
90005f54:	2305      	movs	r3, #5
90005f56:	f501 514c 	add.w	r1, r1, #13056	@ 0x3300
        down = colorPressed;
90005f5a:	4abe      	ldr	r2, [pc, #760]	@ (90006254 <_ZN12gameViewBaseC1Ev+0x10b0>)
90005f5c:	f8a4 34bc 	strh.w	r3, [r4, #1212]	@ 0x4bc
        borderBox.setColor(T::getPressed() ? down : up);
90005f60:	f894 0484 	ldrb.w	r0, [r4, #1156]	@ 0x484
        up = colorReleased;
90005f64:	4bbc      	ldr	r3, [pc, #752]	@ (90006258 <_ZN12gameViewBaseC1Ev+0x10b4>)
        borderDown = borderColorPressed;
90005f66:	f8c4 14cc 	str.w	r1, [r4, #1228]	@ 0x4cc
        up = colorReleased;
90005f6a:	f8c4 34c0 	str.w	r3, [r4, #1216]	@ 0x4c0
        handlePressedUpdated();
90005f6e:	f8d4 1458 	ldr.w	r1, [r4, #1112]	@ 0x458
        down = colorPressed;
90005f72:	f8c4 24c4 	str.w	r2, [r4, #1220]	@ 0x4c4
        borderBox.setColor(T::getPressed() ? down : up);
90005f76:	2800      	cmp	r0, #0
90005f78:	f000 8207 	beq.w	9000638a <_ZN12gameViewBaseC1Ev+0x11e6>
        color = newColor;
90005f7c:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005f7e:	f204 42cc 	addw	r2, r4, #1228	@ 0x4cc
90005f82:	f8c4 34b4 	str.w	r3, [r4, #1204]	@ 0x4b4
90005f86:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005f88:	f8c4 34b8 	str.w	r3, [r4, #1208]	@ 0x4b8
        alpha = newAlpha;
90005f8c:	2300      	movs	r3, #0
90005f8e:	f884 3485 	strb.w	r3, [r4, #1157]	@ 0x485
        handleAlphaUpdated();
90005f92:	f8d1 2090 	ldr.w	r2, [r1, #144]	@ 0x90
90005f96:	42ba      	cmp	r2, r7
90005f98:	f040 8213 	bne.w	900063c2 <_ZN12gameViewBaseC1Ev+0x121e>
        alpha = newAlpha;
90005f9c:	f884 34b2 	strb.w	r3, [r4, #1202]	@ 0x4b2
90005fa0:	4baf      	ldr	r3, [pc, #700]	@ (90006260 <_ZN12gameViewBaseC1Ev+0x10bc>)
90005fa2:	4628      	mov	r0, r5
90005fa4:	9908      	ldr	r1, [sp, #32]
90005fa6:	f04f 0805 	mov.w	r8, #5
90005faa:	f8c4 345c 	str.w	r3, [r4, #1116]	@ 0x45c
90005fae:	f04f 1353 	mov.w	r3, #5439571	@ 0x530053
        action = &callback;
90005fb2:	f8c4 6488 	str.w	r6, [r4, #1160]	@ 0x488
        visible = vis;
90005fb6:	2600      	movs	r6, #0
        rect.x = x;
90005fb8:	f8c4 3460 	str.w	r3, [r4, #1120]	@ 0x460
90005fbc:	f009 fdf6 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005fc0:	f8df 92b0 	ldr.w	r9, [pc, #688]	@ 90006274 <_ZN12gameViewBaseC1Ev+0x10d0>
    topLeftKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
90005fc4:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90005fc6:	a91d      	add	r1, sp, #116	@ 0x74
90005fc8:	f8c4 94d4 	str.w	r9, [r4, #1236]	@ 0x4d4
90005fcc:	4638      	mov	r0, r7
90005fce:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
90005fd2:	f00c fd43 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005fd6:	4639      	mov	r1, r7
90005fd8:	4628      	mov	r0, r5
90005fda:	2706      	movs	r7, #6
        visible = vis;
90005fdc:	f884 64f5 	strb.w	r6, [r4, #1269]	@ 0x4f5
90005fe0:	f009 fde4 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    topLeftKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
90005fe4:	4650      	mov	r0, sl
90005fe6:	a91d      	add	r1, sp, #116	@ 0x74
        rect.x = x;
90005fe8:	f8c4 9500 	str.w	r9, [r4, #1280]	@ 0x500
90005fec:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
90005ff0:	f00c fd34 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005ff4:	4651      	mov	r1, sl
90005ff6:	4628      	mov	r0, r5
        visible = vis;
90005ff8:	f884 6521 	strb.w	r6, [r4, #1313]	@ 0x521
90005ffc:	f009 fdd6 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006000:	f8df a274 	ldr.w	sl, [pc, #628]	@ 90006278 <_ZN12gameViewBaseC1Ev+0x10d4>
    topMiddleKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
90006004:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90006008:	a91d      	add	r1, sp, #116	@ 0x74
9000600a:	f8c4 a52c 	str.w	sl, [r4, #1324]	@ 0x52c
9000600e:	4648      	mov	r0, r9
90006010:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
90006014:	f00c fd22 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006018:	4649      	mov	r1, r9
9000601a:	4628      	mov	r0, r5
        visible = vis;
9000601c:	f884 654d 	strb.w	r6, [r4, #1357]	@ 0x54d
90006020:	f009 fdc4 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    topMiddleKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
90006024:	f8dd 902c 	ldr.w	r9, [sp, #44]	@ 0x2c
90006028:	a91d      	add	r1, sp, #116	@ 0x74
        rect.x = x;
9000602a:	f8c4 a558 	str.w	sl, [r4, #1368]	@ 0x558
9000602e:	4648      	mov	r0, r9
90006030:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
90006034:	f00c fd12 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006038:	4649      	mov	r1, r9
9000603a:	4628      	mov	r0, r5
        visible = vis;
9000603c:	f884 6579 	strb.w	r6, [r4, #1401]	@ 0x579
90006040:	f009 fdb4 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006044:	f10a 0a57 	add.w	sl, sl, #87	@ 0x57
    topRightKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
90006048:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
9000604c:	a91d      	add	r1, sp, #116	@ 0x74
9000604e:	f8c4 a584 	str.w	sl, [r4, #1412]	@ 0x584
90006052:	4648      	mov	r0, r9
90006054:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
90006058:	f00c fd00 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000605c:	4649      	mov	r1, r9
9000605e:	4628      	mov	r0, r5
        visible = vis;
90006060:	f884 65a5 	strb.w	r6, [r4, #1445]	@ 0x5a5
90006064:	f009 fda2 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    topRightKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
90006068:	f8dd 9034 	ldr.w	r9, [sp, #52]	@ 0x34
9000606c:	a91d      	add	r1, sp, #116	@ 0x74
        rect.x = x;
9000606e:	f8c4 a5b0 	str.w	sl, [r4, #1456]	@ 0x5b0
90006072:	4648      	mov	r0, r9
90006074:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
90006078:	f00c fcf0 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000607c:	4649      	mov	r1, r9
9000607e:	4628      	mov	r0, r5
        visible = vis;
90006080:	f884 65d1 	strb.w	r6, [r4, #1489]	@ 0x5d1
90006084:	f009 fd92 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006088:	4b76      	ldr	r3, [pc, #472]	@ (90006264 <_ZN12gameViewBaseC1Ev+0x10c0>)
    middleLeftKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
9000608a:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
9000608e:	a91d      	add	r1, sp, #116	@ 0x74
90006090:	f8c4 35dc 	str.w	r3, [r4, #1500]	@ 0x5dc
90006094:	4648      	mov	r0, r9
90006096:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
9000609a:	f00c fcdf 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000609e:	4649      	mov	r1, r9
900060a0:	4628      	mov	r0, r5
        visible = vis;
900060a2:	f884 65fd 	strb.w	r6, [r4, #1533]	@ 0x5fd
900060a6:	f009 fd81 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900060aa:	4b6f      	ldr	r3, [pc, #444]	@ (90006268 <_ZN12gameViewBaseC1Ev+0x10c4>)
    middleLeftKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
900060ac:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
900060b0:	a91d      	add	r1, sp, #116	@ 0x74
900060b2:	f8c4 3608 	str.w	r3, [r4, #1544]	@ 0x608
900060b6:	4648      	mov	r0, r9
900060b8:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
900060bc:	f00c fcce 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900060c0:	4649      	mov	r1, r9
900060c2:	4628      	mov	r0, r5
        visible = vis;
900060c4:	f884 6629 	strb.w	r6, [r4, #1577]	@ 0x629
900060c8:	f009 fd70 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900060cc:	f8df a1ac 	ldr.w	sl, [pc, #428]	@ 9000627c <_ZN12gameViewBaseC1Ev+0x10d8>
    middleMiddleKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
900060d0:	f8dd 9040 	ldr.w	r9, [sp, #64]	@ 0x40
900060d4:	a91d      	add	r1, sp, #116	@ 0x74
900060d6:	f8c4 a634 	str.w	sl, [r4, #1588]	@ 0x634
900060da:	4648      	mov	r0, r9
900060dc:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
900060e0:	f00c fcbc 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900060e4:	4649      	mov	r1, r9
900060e6:	4628      	mov	r0, r5
        visible = vis;
900060e8:	f884 6655 	strb.w	r6, [r4, #1621]	@ 0x655
900060ec:	f009 fd5e 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    middleMiddleKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
900060f0:	4658      	mov	r0, fp
900060f2:	a91d      	add	r1, sp, #116	@ 0x74
        rect.x = x;
900060f4:	f8c4 a660 	str.w	sl, [r4, #1632]	@ 0x660
900060f8:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
900060fc:	f00c fcae 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006100:	4659      	mov	r1, fp
90006102:	4628      	mov	r0, r5
        visible = vis;
90006104:	f884 6681 	strb.w	r6, [r4, #1665]	@ 0x681
90006108:	f009 fd50 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000610c:	f8df a170 	ldr.w	sl, [pc, #368]	@ 90006280 <_ZN12gameViewBaseC1Ev+0x10dc>
    middleRightKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
90006110:	f8dd 9044 	ldr.w	r9, [sp, #68]	@ 0x44
90006114:	a91d      	add	r1, sp, #116	@ 0x74
90006116:	f8c4 a68c 	str.w	sl, [r4, #1676]	@ 0x68c
9000611a:	4648      	mov	r0, r9
9000611c:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
90006120:	f00c fc9c 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006124:	4649      	mov	r1, r9
90006126:	4628      	mov	r0, r5
        visible = vis;
90006128:	f884 66ad 	strb.w	r6, [r4, #1709]	@ 0x6ad
9000612c:	f009 fd3e 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    middleRightKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
90006130:	f8dd 9048 	ldr.w	r9, [sp, #72]	@ 0x48
90006134:	a91d      	add	r1, sp, #116	@ 0x74
        rect.x = x;
90006136:	f8c4 a6b8 	str.w	sl, [r4, #1720]	@ 0x6b8
9000613a:	4648      	mov	r0, r9
9000613c:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
90006140:	f00c fc8c 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006144:	4649      	mov	r1, r9
90006146:	4628      	mov	r0, r5
        visible = vis;
90006148:	f884 66d9 	strb.w	r6, [r4, #1753]	@ 0x6d9
9000614c:	f009 fd2e 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006150:	f8df b130 	ldr.w	fp, [pc, #304]	@ 90006284 <_ZN12gameViewBaseC1Ev+0x10e0>
    bottomMiddleKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
90006154:	f8dd 904c 	ldr.w	r9, [sp, #76]	@ 0x4c
90006158:	a91d      	add	r1, sp, #116	@ 0x74
9000615a:	f8c4 b6e4 	str.w	fp, [r4, #1764]	@ 0x6e4
9000615e:	4648      	mov	r0, r9
90006160:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
90006164:	f00c fc7a 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006168:	4649      	mov	r1, r9
9000616a:	4628      	mov	r0, r5
        visible = vis;
9000616c:	f884 6705 	strb.w	r6, [r4, #1797]	@ 0x705
90006170:	f009 fd1c 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006174:	f8df a110 	ldr.w	sl, [pc, #272]	@ 90006288 <_ZN12gameViewBaseC1Ev+0x10e4>
    bottomLeftKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
90006178:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
9000617c:	a91d      	add	r1, sp, #116	@ 0x74
9000617e:	f8c4 a710 	str.w	sl, [r4, #1808]	@ 0x710
90006182:	4648      	mov	r0, r9
90006184:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
90006188:	f00c fc68 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000618c:	4649      	mov	r1, r9
9000618e:	4628      	mov	r0, r5
        visible = vis;
90006190:	f884 6731 	strb.w	r6, [r4, #1841]	@ 0x731
90006194:	f009 fd0a 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bottomMiddleKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
90006198:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
9000619c:	a91d      	add	r1, sp, #116	@ 0x74
        rect.x = x;
9000619e:	f8c4 b73c 	str.w	fp, [r4, #1852]	@ 0x73c
900061a2:	4648      	mov	r0, r9
900061a4:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
900061a8:	f00c fc58 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900061ac:	4649      	mov	r1, r9
900061ae:	4628      	mov	r0, r5
        visible = vis;
900061b0:	f884 675d 	strb.w	r6, [r4, #1885]	@ 0x75d
900061b4:	f009 fcfa 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bottomLeftKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
900061b8:	f8dd 9058 	ldr.w	r9, [sp, #88]	@ 0x58
900061bc:	a91d      	add	r1, sp, #116	@ 0x74
        rect.x = x;
900061be:	f8c4 a768 	str.w	sl, [r4, #1896]	@ 0x768
900061c2:	4648      	mov	r0, r9
900061c4:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
900061c8:	f00c fc48 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900061cc:	4649      	mov	r1, r9
900061ce:	4628      	mov	r0, r5
        visible = vis;
900061d0:	f884 6789 	strb.w	r6, [r4, #1929]	@ 0x789
900061d4:	f009 fcea 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900061d8:	f10a 0ab0 	add.w	sl, sl, #176	@ 0xb0
900061dc:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
    bottomRightKrizec.setBitmap(touchgfx::Bitmap(BITMAP_KRIZEC_ID));
900061e0:	a91d      	add	r1, sp, #116	@ 0x74
900061e2:	f8dd 805c 	ldr.w	r8, [sp, #92]	@ 0x5c
900061e6:	f8c4 a794 	str.w	sl, [r4, #1940]	@ 0x794
900061ea:	4640      	mov	r0, r8
900061ec:	f00c fc36 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900061f0:	4641      	mov	r1, r8
900061f2:	4628      	mov	r0, r5
        visible = vis;
900061f4:	f884 67b5 	strb.w	r6, [r4, #1973]	@ 0x7b5
900061f8:	f009 fcd8 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
900061fc:	f8ad 7074 	strh.w	r7, [sp, #116]	@ 0x74
    bottomRightKrozec.setBitmap(touchgfx::Bitmap(BITMAP_KROZEC_ID));
90006200:	9f18      	ldr	r7, [sp, #96]	@ 0x60
90006202:	a91d      	add	r1, sp, #116	@ 0x74
        rect.x = x;
90006204:	f8c4 a7c0 	str.w	sl, [r4, #1984]	@ 0x7c0
90006208:	f04f 0801 	mov.w	r8, #1
9000620c:	4638      	mov	r0, r7
9000620e:	f00c fc25 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90006212:	4639      	mov	r1, r7
90006214:	4628      	mov	r0, r5
        visible = vis;
90006216:	f884 67e1 	strb.w	r6, [r4, #2017]	@ 0x7e1
9000621a:	f009 fcc7 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000621e:	4b13      	ldr	r3, [pc, #76]	@ (9000626c <_ZN12gameViewBaseC1Ev+0x10c8>)
        return typedTextId < numberOfTypedTexts;
90006220:	4f13      	ldr	r7, [pc, #76]	@ (90006270 <_ZN12gameViewBaseC1Ev+0x10cc>)
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
90006222:	aa1d      	add	r2, sp, #116	@ 0x74
90006224:	f8c4 37ec 	str.w	r3, [r4, #2028]	@ 0x7ec
90006228:	a91c      	add	r1, sp, #112	@ 0x70
9000622a:	9819      	ldr	r0, [sp, #100]	@ 0x64
9000622c:	f8ad 6070 	strh.w	r6, [sp, #112]	@ 0x70
90006230:	f8ad 8074 	strh.w	r8, [sp, #116]	@ 0x74
90006234:	f00c fab7 	bl	900127a6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
90006238:	883b      	ldrh	r3, [r7, #0]
class TypedText
9000623a:	f8a4 8820 	strh.w	r8, [r4, #2080]	@ 0x820
9000623e:	4543      	cmp	r3, r8
90006240:	d94c      	bls.n	900062dc <_ZN12gameViewBaseC1Ev+0x1138>
90006242:	e023      	b.n	9000628c <_ZN12gameViewBaseC1Ev+0x10e8>
90006244:	00530054 	.word	0x00530054
90006248:	00b6006d 	.word	0x00b6006d
9000624c:	ff003366 	.word	0xff003366
90006250:	00530051 	.word	0x00530051
90006254:	ff0099cc 	.word	0xff0099cc
90006258:	ff006699 	.word	0xff006699
9000625c:	00b600c7 	.word	0x00b600c7
90006260:	00b6011e 	.word	0x00b6011e
90006264:	00660075 	.word	0x00660075
90006268:	00620075 	.word	0x00620075
9000626c:	00e80006 	.word	0x00e80006
90006270:	24021cb8 	.word	0x24021cb8
90006274:	000f0075 	.word	0x000f0075
90006278:	000f00ce 	.word	0x000f00ce
9000627c:	006600ce 	.word	0x006600ce
90006280:	00670125 	.word	0x00670125
90006284:	00bd00ce 	.word	0x00bd00ce
90006288:	00bd0075 	.word	0x00bd0075
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000628c:	4b63      	ldr	r3, [pc, #396]	@ (9000641c <_ZN12gameViewBaseC1Ev+0x1278>)
9000628e:	681b      	ldr	r3, [r3, #0]
90006290:	2b00      	cmp	r3, #0
90006292:	f000 80bd 	beq.w	90006410 <_ZN12gameViewBaseC1Ev+0x126c>
        return fonts[typedTexts[typedTextId].fontIdx];
90006296:	789a      	ldrb	r2, [r3, #2]
        return texts->getText(typedTextId);
90006298:	4641      	mov	r1, r8
        return fonts[typedTexts[typedTextId].fontIdx];
9000629a:	4b61      	ldr	r3, [pc, #388]	@ (90006420 <_ZN12gameViewBaseC1Ev+0x127c>)
9000629c:	681b      	ldr	r3, [r3, #0]
9000629e:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900062a2:	4b60      	ldr	r3, [pc, #384]	@ (90006424 <_ZN12gameViewBaseC1Ev+0x1280>)
900062a4:	6818      	ldr	r0, [r3, #0]
900062a6:	f7fe fcdb 	bl	90004c60 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900062aa:	f8d8 3000 	ldr.w	r3, [r8]
900062ae:	495e      	ldr	r1, [pc, #376]	@ (90006428 <_ZN12gameViewBaseC1Ev+0x1284>)
900062b0:	4682      	mov	sl, r0
900062b2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900062b4:	428a      	cmp	r2, r1
900062b6:	f040 80a0 	bne.w	900063fa <_ZN12gameViewBaseC1Ev+0x1256>
        return fontHeight;
900062ba:	f8b8 6004 	ldrh.w	r6, [r8, #4]
900062be:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900062c0:	4651      	mov	r1, sl
900062c2:	4640      	mov	r0, r8
900062c4:	4798      	blx	r3
900062c6:	fb16 f600 	smulbb	r6, r6, r0
900062ca:	f8d8 3000 	ldr.w	r3, [r8]
900062ce:	4651      	mov	r1, sl
900062d0:	b2b6      	uxth	r6, r6
900062d2:	4640      	mov	r0, r8
900062d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900062d6:	4798      	blx	r3
900062d8:	4406      	add	r6, r0
900062da:	b236      	sxth	r6, r6
        color = col;
900062dc:	f04f 33ff 	mov.w	r3, #4294967295
    back.setAction(buttonCallback);
900062e0:	f604 0888 	addw	r8, r4, #2184	@ 0x888
900062e4:	9919      	ldr	r1, [sp, #100]	@ 0x64
900062e6:	4628      	mov	r0, r5
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900062e8:	f8a4 682e 	strh.w	r6, [r4, #2094]	@ 0x82e
900062ec:	2600      	movs	r6, #0
        color = col;
900062ee:	f8c4 3824 	str.w	r3, [r4, #2084]	@ 0x824
        colorPressed = col;
900062f2:	f8c4 3828 	str.w	r3, [r4, #2088]	@ 0x828
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900062f6:	f8c4 8810 	str.w	r8, [r4, #2064]	@ 0x810
900062fa:	f009 fc57 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
900062fe:	4b4b      	ldr	r3, [pc, #300]	@ (9000642c <_ZN12gameViewBaseC1Ev+0x1288>)
    restart.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
90006300:	aa1d      	add	r2, sp, #116	@ 0x74
90006302:	a91c      	add	r1, sp, #112	@ 0x70
90006304:	f8c4 3834 	str.w	r3, [r4, #2100]	@ 0x834
90006308:	2301      	movs	r3, #1
9000630a:	981a      	ldr	r0, [sp, #104]	@ 0x68
9000630c:	f8ad 3074 	strh.w	r3, [sp, #116]	@ 0x74
90006310:	f8ad 6070 	strh.w	r6, [sp, #112]	@ 0x70
90006314:	f00c fa47 	bl	900127a6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
90006318:	883b      	ldrh	r3, [r7, #0]
class TypedText
9000631a:	f8a4 6868 	strh.w	r6, [r4, #2152]	@ 0x868
9000631e:	b313      	cbz	r3, 90006366 <_ZN12gameViewBaseC1Ev+0x11c2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006320:	4b3e      	ldr	r3, [pc, #248]	@ (9000641c <_ZN12gameViewBaseC1Ev+0x1278>)
90006322:	681b      	ldr	r3, [r3, #0]
90006324:	2b00      	cmp	r3, #0
90006326:	d073      	beq.n	90006410 <_ZN12gameViewBaseC1Ev+0x126c>
        return fonts[typedTexts[typedTextId].fontIdx];
90006328:	781a      	ldrb	r2, [r3, #0]
        return texts->getText(typedTextId);
9000632a:	4631      	mov	r1, r6
        return fonts[typedTexts[typedTextId].fontIdx];
9000632c:	4b3c      	ldr	r3, [pc, #240]	@ (90006420 <_ZN12gameViewBaseC1Ev+0x127c>)
9000632e:	681b      	ldr	r3, [r3, #0]
90006330:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90006334:	4b3b      	ldr	r3, [pc, #236]	@ (90006424 <_ZN12gameViewBaseC1Ev+0x1280>)
90006336:	6818      	ldr	r0, [r3, #0]
90006338:	f7fe fc92 	bl	90004c60 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000633c:	683b      	ldr	r3, [r7, #0]
9000633e:	493a      	ldr	r1, [pc, #232]	@ (90006428 <_ZN12gameViewBaseC1Ev+0x1284>)
90006340:	4681      	mov	r9, r0
90006342:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90006344:	428a      	cmp	r2, r1
90006346:	d15e      	bne.n	90006406 <_ZN12gameViewBaseC1Ev+0x1262>
90006348:	88be      	ldrh	r6, [r7, #4]
9000634a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9000634c:	4649      	mov	r1, r9
9000634e:	4638      	mov	r0, r7
90006350:	4798      	blx	r3
90006352:	fb16 f600 	smulbb	r6, r6, r0
90006356:	683b      	ldr	r3, [r7, #0]
90006358:	4649      	mov	r1, r9
9000635a:	b2b6      	uxth	r6, r6
9000635c:	4638      	mov	r0, r7
9000635e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90006360:	4798      	blx	r3
90006362:	4430      	add	r0, r6
90006364:	b203      	sxth	r3, r0
90006366:	f8a4 3876 	strh.w	r3, [r4, #2166]	@ 0x876
        color = col;
9000636a:	f04f 33ff 	mov.w	r3, #4294967295
9000636e:	4628      	mov	r0, r5
90006370:	991a      	ldr	r1, [sp, #104]	@ 0x68
90006372:	f8c4 8858 	str.w	r8, [r4, #2136]	@ 0x858
90006376:	f8c4 386c 	str.w	r3, [r4, #2156]	@ 0x86c
        colorPressed = col;
9000637a:	f8c4 3870 	str.w	r3, [r4, #2160]	@ 0x870
9000637e:	f009 fc15 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90006382:	4620      	mov	r0, r4
90006384:	b01f      	add	sp, #124	@ 0x7c
90006386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000638a:	f504 6299 	add.w	r2, r4, #1224	@ 0x4c8
9000638e:	e5f8      	b.n	90005f82 <_ZN12gameViewBaseC1Ev+0xdde>
90006390:	f504 628a 	add.w	r2, r4, #1104	@ 0x450
90006394:	e5b9      	b.n	90005f0a <_ZN12gameViewBaseC1Ev+0xd66>
90006396:	f504 7276 	add.w	r2, r4, #984	@ 0x3d8
9000639a:	e57b      	b.n	90005e94 <_ZN12gameViewBaseC1Ev+0xcf0>
9000639c:	f504 7258 	add.w	r2, r4, #864	@ 0x360
900063a0:	e515      	b.n	90005dce <_ZN12gameViewBaseC1Ev+0xc2a>
900063a2:	f504 723a 	add.w	r2, r4, #744	@ 0x2e8
900063a6:	e4d9      	b.n	90005d5c <_ZN12gameViewBaseC1Ev+0xbb8>
900063a8:	f504 721c 	add.w	r2, r4, #624	@ 0x270
900063ac:	e49f      	b.n	90005cee <_ZN12gameViewBaseC1Ev+0xb4a>
900063ae:	f504 72fc 	add.w	r2, r4, #504	@ 0x1f8
900063b2:	e464      	b.n	90005c7e <_ZN12gameViewBaseC1Ev+0xada>
900063b4:	f504 72c0 	add.w	r2, r4, #384	@ 0x180
900063b8:	e428      	b.n	90005c0c <_ZN12gameViewBaseC1Ev+0xa68>
900063ba:	f504 7284 	add.w	r2, r4, #264	@ 0x108
900063be:	f7ff bbe9 	b.w	90005b94 <_ZN12gameViewBaseC1Ev+0x9f0>
        handleAlphaUpdated();
900063c2:	9808      	ldr	r0, [sp, #32]
900063c4:	4790      	blx	r2
900063c6:	e5eb      	b.n	90005fa0 <_ZN12gameViewBaseC1Ev+0xdfc>
900063c8:	9807      	ldr	r0, [sp, #28]
900063ca:	4790      	blx	r2
900063cc:	e5ac      	b.n	90005f28 <_ZN12gameViewBaseC1Ev+0xd84>
900063ce:	9806      	ldr	r0, [sp, #24]
900063d0:	4790      	blx	r2
900063d2:	e56e      	b.n	90005eb2 <_ZN12gameViewBaseC1Ev+0xd0e>
900063d4:	9805      	ldr	r0, [sp, #20]
900063d6:	4790      	blx	r2
900063d8:	e508      	b.n	90005dec <_ZN12gameViewBaseC1Ev+0xc48>
900063da:	9804      	ldr	r0, [sp, #16]
900063dc:	4790      	blx	r2
900063de:	e4cc      	b.n	90005d7a <_ZN12gameViewBaseC1Ev+0xbd6>
900063e0:	9803      	ldr	r0, [sp, #12]
900063e2:	4790      	blx	r2
900063e4:	e492      	b.n	90005d0c <_ZN12gameViewBaseC1Ev+0xb68>
900063e6:	9802      	ldr	r0, [sp, #8]
900063e8:	4790      	blx	r2
900063ea:	e457      	b.n	90005c9c <_ZN12gameViewBaseC1Ev+0xaf8>
900063ec:	9801      	ldr	r0, [sp, #4]
900063ee:	4790      	blx	r2
900063f0:	e41b      	b.n	90005c2a <_ZN12gameViewBaseC1Ev+0xa86>
900063f2:	9800      	ldr	r0, [sp, #0]
900063f4:	4790      	blx	r2
900063f6:	f7ff bbdd 	b.w	90005bb4 <_ZN12gameViewBaseC1Ev+0xa10>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900063fa:	4640      	mov	r0, r8
900063fc:	4790      	blx	r2
900063fe:	f8d8 3000 	ldr.w	r3, [r8]
90006402:	4606      	mov	r6, r0
90006404:	e75b      	b.n	900062be <_ZN12gameViewBaseC1Ev+0x111a>
90006406:	4638      	mov	r0, r7
90006408:	4790      	blx	r2
9000640a:	683b      	ldr	r3, [r7, #0]
9000640c:	4606      	mov	r6, r0
9000640e:	e79c      	b.n	9000634a <_ZN12gameViewBaseC1Ev+0x11a6>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006410:	4b07      	ldr	r3, [pc, #28]	@ (90006430 <_ZN12gameViewBaseC1Ev+0x128c>)
90006412:	216c      	movs	r1, #108	@ 0x6c
90006414:	4a07      	ldr	r2, [pc, #28]	@ (90006434 <_ZN12gameViewBaseC1Ev+0x1290>)
90006416:	4808      	ldr	r0, [pc, #32]	@ (90006438 <_ZN12gameViewBaseC1Ev+0x1294>)
90006418:	f020 fcee 	bl	90026df8 <__assert_func>
9000641c:	24021cb4 	.word	0x24021cb4
90006420:	24021cbc 	.word	0x24021cbc
90006424:	24021cc0 	.word	0x24021cc0
90006428:	90004281 	.word	0x90004281
9000642c:	00bb0006 	.word	0x00bb0006
90006430:	90029e88 	.word	0x90029e88
90006434:	90029ecc 	.word	0x90029ecc
90006438:	90029f08 	.word	0x90029f08

9000643c <_ZN12playViewBaseD1Ev>:
}

playViewBase::~playViewBase()
{

}
9000643c:	4770      	bx	lr
9000643e:	bf00      	nop

90006440 <_ZN12playViewBase11setupScreenEv>:

void playViewBase::setupScreen()
{

}
90006440:	4770      	bx	lr
90006442:	bf00      	nop

90006444 <_ZN8touchgfx8CallbackI12playViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006444:	4770      	bx	lr
90006446:	bf00      	nop

90006448 <_ZN8touchgfx8CallbackI12playViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90006448:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000644a:	68c3      	ldr	r3, [r0, #12]
9000644c:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90006450:	f013 0f01 	tst.w	r3, #1
90006454:	eb04 0063 	add.w	r0, r4, r3, asr #1
90006458:	d004      	beq.n	90006464 <_ZN8touchgfx8CallbackI12playViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
9000645a:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000645e:	f854 300c 	ldr.w	r3, [r4, ip]
90006462:	589a      	ldr	r2, [r3, r2]
    }
90006464:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90006468:	4710      	bx	r2
9000646a:	bf00      	nop

9000646c <_ZNK8touchgfx8CallbackI12playViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
9000646c:	6843      	ldr	r3, [r0, #4]
9000646e:	b13b      	cbz	r3, 90006480 <_ZNK8touchgfx8CallbackI12playViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90006470:	6883      	ldr	r3, [r0, #8]
90006472:	b10b      	cbz	r3, 90006478 <_ZNK8touchgfx8CallbackI12playViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90006474:	2001      	movs	r0, #1
    }
90006476:	4770      	bx	lr
90006478:	68c0      	ldr	r0, [r0, #12]
9000647a:	f000 0001 	and.w	r0, r0, #1
9000647e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90006480:	4618      	mov	r0, r3
90006482:	4770      	bx	lr

90006484 <_ZN8touchgfx8CallbackI12playViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90006484:	b510      	push	{r4, lr}
90006486:	4604      	mov	r4, r0
90006488:	2110      	movs	r1, #16
9000648a:	f020 f93d 	bl	90026708 <_ZdlPvj>
9000648e:	4620      	mov	r0, r4
90006490:	bd10      	pop	{r4, pc}
90006492:	bf00      	nop

90006494 <_ZN12playViewBaseD0Ev>:
playViewBase::~playViewBase()
90006494:	b510      	push	{r4, lr}
90006496:	4604      	mov	r4, r0
}
90006498:	21f0      	movs	r1, #240	@ 0xf0
9000649a:	f020 f935 	bl	90026708 <_ZdlPvj>
9000649e:	4620      	mov	r0, r4
900064a0:	bd10      	pop	{r4, pc}
900064a2:	bf00      	nop

900064a4 <_ZN12playViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void playViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonPlay)
900064a4:	3098      	adds	r0, #152	@ 0x98
900064a6:	4288      	cmp	r0, r1
900064a8:	d000      	beq.n	900064ac <_ZN12playViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
900064aa:	4770      	bx	lr
{
900064ac:	b508      	push	{r3, lr}
    virtual ~playViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900064ae:	f00e ff83 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonPlay clicked change screen to game
        //Go to game with no screen transition
        application().gotogameScreenNoTransition();
    }
}
900064b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotogameScreenNoTransition();
900064b6:	f7fe b995 	b.w	900047e4 <_ZN23FrontendApplicationBase26gotogameScreenNoTransitionEv>
900064ba:	bf00      	nop

900064bc <_ZN12playViewBaseC1Ev>:
playViewBase::playViewBase() :
900064bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900064c0:	b083      	sub	sp, #12
900064c2:	4604      	mov	r4, r0
900064c4:	f010 fdbe 	bl	90017044 <_ZN8touchgfx6ScreenC1Ev>
900064c8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
          touchable(false),
900064cc:	f44f 7280 	mov.w	r2, #256	@ 0x100
900064d0:	2500      	movs	r5, #0
        : Widget(), bitmap(bmp), alpha(255)
900064d2:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
    buttonCallback(this, &playViewBase::buttonCallbackHandler)
900064d6:	f104 086c 	add.w	r8, r4, #108	@ 0x6c
900064da:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
900064de:	f104 0798 	add.w	r7, r4, #152	@ 0x98
900064e2:	f8ad 3004 	strh.w	r3, [sp, #4]
        Image::setBitmap(bmp);
900064e6:	4640      	mov	r0, r8
        : Widget(), alpha(255), color(0)
900064e8:	4b4f      	ldr	r3, [pc, #316]	@ (90006628 <_ZN12playViewBaseC1Ev+0x16c>)
900064ea:	1d26      	adds	r6, r4, #4
900064ec:	494f      	ldr	r1, [pc, #316]	@ (9000662c <_ZN12playViewBaseC1Ev+0x170>)
900064ee:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
900064f2:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
900064f6:	6423      	str	r3, [r4, #64]	@ 0x40
900064f8:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), bitmap(bmp), alpha(255)
900064fa:	4a4d      	ldr	r2, [pc, #308]	@ (90006630 <_ZN12playViewBaseC1Ev+0x174>)
900064fc:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
90006500:	66e2      	str	r2, [r4, #108]	@ 0x6c
90006502:	6021      	str	r1, [r4, #0]
        Image::setBitmap(bmp);
90006504:	a901      	add	r1, sp, #4
90006506:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
90006508:	66a5      	str	r5, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
9000650a:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
9000650e:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
90006512:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90006516:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
9000651a:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
9000651e:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
90006522:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90006526:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
9000652a:	f00c fa97 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000652e:	4638      	mov	r0, r7
90006530:	f00c fbd6 	bl	90012ce0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90006534:	4b3f      	ldr	r3, [pc, #252]	@ (90006634 <_ZN12playViewBaseC1Ev+0x178>)
90006536:	f104 0140 	add.w	r1, r4, #64	@ 0x40
9000653a:	4630      	mov	r0, r6
9000653c:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90006540:	4b3d      	ldr	r3, [pc, #244]	@ (90006638 <_ZN12playViewBaseC1Ev+0x17c>)
90006542:	f8c4 40e4 	str.w	r4, [r4, #228]	@ 0xe4
90006546:	f8c4 30e8 	str.w	r3, [r4, #232]	@ 0xe8
        rect.x = x;
9000654a:	4b3c      	ldr	r3, [pc, #240]	@ (9000663c <_ZN12playViewBaseC1Ev+0x180>)
9000654c:	f8c4 50ec 	str.w	r5, [r4, #236]	@ 0xec
90006550:	64a3      	str	r3, [r4, #72]	@ 0x48
        color = newColor;
90006552:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90006556:	6465      	str	r5, [r4, #68]	@ 0x44
90006558:	66a3      	str	r3, [r4, #104]	@ 0x68
9000655a:	f009 fb27 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000655e:	2307      	movs	r3, #7
    Image1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_ID));
90006560:	4640      	mov	r0, r8
90006562:	a901      	add	r1, sp, #4
90006564:	6725      	str	r5, [r4, #112]	@ 0x70
90006566:	f8ad 3004 	strh.w	r3, [sp, #4]
9000656a:	f00c fa77 	bl	90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000656e:	4641      	mov	r1, r8
90006570:	4630      	mov	r0, r6
90006572:	f009 fb1b 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006576:	4b32      	ldr	r3, [pc, #200]	@ (90006640 <_ZN12playViewBaseC1Ev+0x184>)
90006578:	f04f 0802 	mov.w	r8, #2
    buttonPlay.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
9000657c:	aa01      	add	r2, sp, #4
9000657e:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90006582:	2303      	movs	r3, #3
90006584:	4669      	mov	r1, sp
90006586:	4638      	mov	r0, r7
90006588:	f8ad 3004 	strh.w	r3, [sp, #4]
9000658c:	f8ad 8000 	strh.w	r8, [sp]
90006590:	f00c f909 	bl	900127a6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        return typedTextId < numberOfTypedTexts;
90006594:	4b2b      	ldr	r3, [pc, #172]	@ (90006644 <_ZN12playViewBaseC1Ev+0x188>)
class TypedText
90006596:	f8a4 80d0 	strh.w	r8, [r4, #208]	@ 0xd0
        if (typedText.hasValidId())
9000659a:	881b      	ldrh	r3, [r3, #0]
9000659c:	4543      	cmp	r3, r8
9000659e:	d925      	bls.n	900065ec <_ZN12playViewBaseC1Ev+0x130>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900065a0:	4b29      	ldr	r3, [pc, #164]	@ (90006648 <_ZN12playViewBaseC1Ev+0x18c>)
900065a2:	681b      	ldr	r3, [r3, #0]
900065a4:	2b00      	cmp	r3, #0
900065a6:	d039      	beq.n	9000661c <_ZN12playViewBaseC1Ev+0x160>
        return fonts[typedTexts[typedTextId].fontIdx];
900065a8:	791a      	ldrb	r2, [r3, #4]
        return texts->getText(typedTextId);
900065aa:	4641      	mov	r1, r8
        return fonts[typedTexts[typedTextId].fontIdx];
900065ac:	4b27      	ldr	r3, [pc, #156]	@ (9000664c <_ZN12playViewBaseC1Ev+0x190>)
900065ae:	681b      	ldr	r3, [r3, #0]
900065b0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900065b4:	4b26      	ldr	r3, [pc, #152]	@ (90006650 <_ZN12playViewBaseC1Ev+0x194>)
900065b6:	6818      	ldr	r0, [r3, #0]
900065b8:	f7fe fb52 	bl	90004c60 <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900065bc:	f8d8 3000 	ldr.w	r3, [r8]
900065c0:	4924      	ldr	r1, [pc, #144]	@ (90006654 <_ZN12playViewBaseC1Ev+0x198>)
900065c2:	4681      	mov	r9, r0
900065c4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900065c6:	428a      	cmp	r2, r1
900065c8:	d122      	bne.n	90006610 <_ZN12playViewBaseC1Ev+0x154>
900065ca:	f8b8 5004 	ldrh.w	r5, [r8, #4]
900065ce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900065d0:	4649      	mov	r1, r9
900065d2:	4640      	mov	r0, r8
900065d4:	4798      	blx	r3
900065d6:	fb15 f500 	smulbb	r5, r5, r0
900065da:	f8d8 3000 	ldr.w	r3, [r8]
900065de:	4649      	mov	r1, r9
900065e0:	b2ad      	uxth	r5, r5
900065e2:	4640      	mov	r0, r8
900065e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900065e6:	4798      	blx	r3
900065e8:	4405      	add	r5, r0
900065ea:	b22d      	sxth	r5, r5
        color = col;
900065ec:	f04f 33ff 	mov.w	r3, #4294967295
900065f0:	4630      	mov	r0, r6
900065f2:	4639      	mov	r1, r7
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900065f4:	f8a4 50de 	strh.w	r5, [r4, #222]	@ 0xde
        colorPressed = col;
900065f8:	e9c4 3335 	strd	r3, r3, [r4, #212]	@ 0xd4
    buttonPlay.setAction(buttonCallback);
900065fc:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
90006600:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
90006604:	f009 fad2 	bl	9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90006608:	4620      	mov	r0, r4
9000660a:	b003      	add	sp, #12
9000660c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90006610:	4640      	mov	r0, r8
90006612:	4790      	blx	r2
90006614:	f8d8 3000 	ldr.w	r3, [r8]
90006618:	4605      	mov	r5, r0
9000661a:	e7d8      	b.n	900065ce <_ZN12playViewBaseC1Ev+0x112>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000661c:	4b0e      	ldr	r3, [pc, #56]	@ (90006658 <_ZN12playViewBaseC1Ev+0x19c>)
9000661e:	216c      	movs	r1, #108	@ 0x6c
90006620:	4a0e      	ldr	r2, [pc, #56]	@ (9000665c <_ZN12playViewBaseC1Ev+0x1a0>)
90006622:	480f      	ldr	r0, [pc, #60]	@ (90006660 <_ZN12playViewBaseC1Ev+0x1a4>)
90006624:	f020 fbe8 	bl	90026df8 <__assert_func>
90006628:	9002a654 	.word	0x9002a654
9000662c:	9002a070 	.word	0x9002a070
90006630:	9002a724 	.word	0x9002a724
90006634:	9002a058 	.word	0x9002a058
90006638:	900064a5 	.word	0x900064a5
9000663c:	011001e0 	.word	0x011001e0
90006640:	00bc0078 	.word	0x00bc0078
90006644:	24021cb8 	.word	0x24021cb8
90006648:	24021cb4 	.word	0x24021cb4
9000664c:	24021cbc 	.word	0x24021cbc
90006650:	24021cc0 	.word	0x24021cc0
90006654:	90004281 	.word	0x90004281
90006658:	90029e88 	.word	0x90029e88
9000665c:	90029ecc 	.word	0x90029ecc
90006660:	90029f08 	.word	0x90029f08

90006664 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90006664:	4770      	bx	lr
90006666:	bf00      	nop

90006668 <_ZN19FrontendApplicationD0Ev>:
90006668:	b510      	push	{r4, lr}
9000666a:	4604      	mov	r4, r0
9000666c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90006670:	f020 f84a 	bl	90026708 <_ZdlPvj>
90006674:	4620      	mov	r0, r4
90006676:	bd10      	pop	{r4, pc}

90006678 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90006678:	b510      	push	{r4, lr}
9000667a:	4604      	mov	r4, r0
    {
        model.tick();
9000667c:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90006680:	f000 f814 	bl	900066ac <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90006684:	4620      	mov	r0, r4
    }
90006686:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
9000668a:	f00e bf17 	b.w	900154bc <_ZN8touchgfx11Application15handleTickEventEv>
9000668e:	bf00      	nop

90006690 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90006690:	b510      	push	{r4, lr}
90006692:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90006694:	f7fe f84c 	bl	90004730 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90006698:	4b01      	ldr	r3, [pc, #4]	@ (900066a0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
9000669a:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
9000669c:	6023      	str	r3, [r4, #0]
}
9000669e:	bd10      	pop	{r4, pc}
900066a0:	9002a0a4 	.word	0x9002a0a4

900066a4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
900066a4:	2200      	movs	r2, #0
900066a6:	6002      	str	r2, [r0, #0]
{

}
900066a8:	4770      	bx	lr
900066aa:	bf00      	nop

900066ac <_ZN5Model4tickEv>:

void Model::tick()
{

}
900066ac:	4770      	bx	lr
900066ae:	bf00      	nop

900066b0 <_ZN13gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~gamePresenter() {}
900066b0:	4770      	bx	lr
900066b2:	bf00      	nop

900066b4 <_ZThn4_N13gamePresenterD1Ev>:
900066b4:	3804      	subs	r0, #4
900066b6:	4770      	bx	lr

900066b8 <_ZN13gamePresenter10deactivateEv>:
}

void gamePresenter::activate()
{

}
900066b8:	4770      	bx	lr
900066ba:	bf00      	nop

900066bc <_ZN13gamePresenterD0Ev>:
900066bc:	b510      	push	{r4, lr}
900066be:	4604      	mov	r4, r0
900066c0:	2110      	movs	r1, #16
900066c2:	f020 f821 	bl	90026708 <_ZdlPvj>
900066c6:	4620      	mov	r0, r4
900066c8:	bd10      	pop	{r4, pc}
900066ca:	bf00      	nop

900066cc <_ZThn4_N13gamePresenterD0Ev>:
900066cc:	b510      	push	{r4, lr}
900066ce:	1f04      	subs	r4, r0, #4
900066d0:	2110      	movs	r1, #16
900066d2:	4620      	mov	r0, r4
900066d4:	f020 f818 	bl	90026708 <_ZdlPvj>
900066d8:	4620      	mov	r0, r4
900066da:	bd10      	pop	{r4, pc}

900066dc <_ZN13gamePresenterC1ER8gameView>:
    : view(v)
900066dc:	4a05      	ldr	r2, [pc, #20]	@ (900066f4 <_ZN13gamePresenterC1ER8gameView+0x18>)
900066de:	60c1      	str	r1, [r0, #12]
900066e0:	6002      	str	r2, [r0, #0]
gamePresenter::gamePresenter(gameView& v)
900066e2:	b410      	push	{r4}
    ModelListener() : model(0) {}
900066e4:	2400      	movs	r4, #0
900066e6:	6084      	str	r4, [r0, #8]
    : view(v)
900066e8:	f102 0418 	add.w	r4, r2, #24
900066ec:	6044      	str	r4, [r0, #4]
}
900066ee:	f85d 4b04 	ldr.w	r4, [sp], #4
900066f2:	4770      	bx	lr
900066f4:	9002a0f8 	.word	0x9002a0f8

900066f8 <_ZN8gameView14tearDownScreenEv>:
}

void gameView::tearDownScreen()
{
    gameViewBase::tearDownScreen();
}
900066f8:	4770      	bx	lr
900066fa:	bf00      	nop

900066fc <_ZN8gameViewD1Ev>:

class gameView : public gameViewBase
{
public:
    gameView();
    virtual ~gameView() {}
900066fc:	4b03      	ldr	r3, [pc, #12]	@ (9000670c <_ZN8gameViewD1Ev+0x10>)
900066fe:	b510      	push	{r4, lr}
90006700:	4604      	mov	r4, r0
90006702:	6003      	str	r3, [r0, #0]
90006704:	f7fe fae6 	bl	90004cd4 <_ZN12gameViewBaseD1Ev>
90006708:	4620      	mov	r0, r4
9000670a:	bd10      	pop	{r4, pc}
9000670c:	9002a120 	.word	0x9002a120

90006710 <_ZN8gameViewD0Ev>:
90006710:	4b06      	ldr	r3, [pc, #24]	@ (9000672c <_ZN8gameViewD0Ev+0x1c>)
90006712:	b510      	push	{r4, lr}
90006714:	4604      	mov	r4, r0
90006716:	6003      	str	r3, [r0, #0]
90006718:	f7fe fadc 	bl	90004cd4 <_ZN12gameViewBaseD1Ev>
9000671c:	f640 0198 	movw	r1, #2200	@ 0x898
90006720:	4620      	mov	r0, r4
90006722:	f01f fff1 	bl	90026708 <_ZdlPvj>
90006726:	4620      	mov	r0, r4
90006728:	bd10      	pop	{r4, pc}
9000672a:	bf00      	nop
9000672c:	9002a120 	.word	0x9002a120

90006730 <_ZN8gameViewC1Ev>:
gameView::gameView()
90006730:	b510      	push	{r4, lr}
90006732:	4604      	mov	r4, r0
90006734:	f7fe fd36 	bl	900051a4 <_ZN12gameViewBaseC1Ev>
90006738:	4b01      	ldr	r3, [pc, #4]	@ (90006740 <_ZN8gameViewC1Ev+0x10>)
}
9000673a:	4620      	mov	r0, r4
gameView::gameView()
9000673c:	6023      	str	r3, [r4, #0]
}
9000673e:	bd10      	pop	{r4, pc}
90006740:	9002a120 	.word	0x9002a120

90006744 <_ZN8gameView11setupScreenEv>:
    gameViewBase::setupScreen();
90006744:	f7fe bac8 	b.w	90004cd8 <_ZN12gameViewBase11setupScreenEv>

90006748 <_ZN13playPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~playPresenter() {}
90006748:	4770      	bx	lr
9000674a:	bf00      	nop

9000674c <_ZThn4_N13playPresenterD1Ev>:
9000674c:	3804      	subs	r0, #4
9000674e:	4770      	bx	lr

90006750 <_ZN13playPresenter10deactivateEv>:
}

void playPresenter::activate()
{

}
90006750:	4770      	bx	lr
90006752:	bf00      	nop

90006754 <_ZN13playPresenterD0Ev>:
90006754:	b510      	push	{r4, lr}
90006756:	4604      	mov	r4, r0
90006758:	2110      	movs	r1, #16
9000675a:	f01f ffd5 	bl	90026708 <_ZdlPvj>
9000675e:	4620      	mov	r0, r4
90006760:	bd10      	pop	{r4, pc}
90006762:	bf00      	nop

90006764 <_ZThn4_N13playPresenterD0Ev>:
90006764:	b510      	push	{r4, lr}
90006766:	1f04      	subs	r4, r0, #4
90006768:	2110      	movs	r1, #16
9000676a:	4620      	mov	r0, r4
9000676c:	f01f ffcc 	bl	90026708 <_ZdlPvj>
90006770:	4620      	mov	r0, r4
90006772:	bd10      	pop	{r4, pc}

90006774 <_ZN13playPresenterC1ER8playView>:
    : view(v)
90006774:	4a05      	ldr	r2, [pc, #20]	@ (9000678c <_ZN13playPresenterC1ER8playView+0x18>)
90006776:	60c1      	str	r1, [r0, #12]
90006778:	6002      	str	r2, [r0, #0]
playPresenter::playPresenter(playView& v)
9000677a:	b410      	push	{r4}
9000677c:	2400      	movs	r4, #0
9000677e:	6084      	str	r4, [r0, #8]
    : view(v)
90006780:	f102 0418 	add.w	r4, r2, #24
90006784:	6044      	str	r4, [r0, #4]
}
90006786:	f85d 4b04 	ldr.w	r4, [sp], #4
9000678a:	4770      	bx	lr
9000678c:	9002a154 	.word	0x9002a154

90006790 <_ZN8playView14tearDownScreenEv>:
}

void playView::tearDownScreen()
{
    playViewBase::tearDownScreen();
}
90006790:	4770      	bx	lr
90006792:	bf00      	nop

90006794 <_ZN8playViewD1Ev>:

class playView : public playViewBase
{
public:
    playView();
    virtual ~playView() {}
90006794:	4b03      	ldr	r3, [pc, #12]	@ (900067a4 <_ZN8playViewD1Ev+0x10>)
90006796:	b510      	push	{r4, lr}
90006798:	4604      	mov	r4, r0
9000679a:	6003      	str	r3, [r0, #0]
9000679c:	f7ff fe4e 	bl	9000643c <_ZN12playViewBaseD1Ev>
900067a0:	4620      	mov	r0, r4
900067a2:	bd10      	pop	{r4, pc}
900067a4:	9002a17c 	.word	0x9002a17c

900067a8 <_ZN8playViewD0Ev>:
900067a8:	4b05      	ldr	r3, [pc, #20]	@ (900067c0 <_ZN8playViewD0Ev+0x18>)
900067aa:	b510      	push	{r4, lr}
900067ac:	4604      	mov	r4, r0
900067ae:	6003      	str	r3, [r0, #0]
900067b0:	f7ff fe44 	bl	9000643c <_ZN12playViewBaseD1Ev>
900067b4:	21f0      	movs	r1, #240	@ 0xf0
900067b6:	4620      	mov	r0, r4
900067b8:	f01f ffa6 	bl	90026708 <_ZdlPvj>
900067bc:	4620      	mov	r0, r4
900067be:	bd10      	pop	{r4, pc}
900067c0:	9002a17c 	.word	0x9002a17c

900067c4 <_ZN8playViewC1Ev>:
playView::playView()
900067c4:	b510      	push	{r4, lr}
900067c6:	4604      	mov	r4, r0
900067c8:	f7ff fe78 	bl	900064bc <_ZN12playViewBaseC1Ev>
900067cc:	4b01      	ldr	r3, [pc, #4]	@ (900067d4 <_ZN8playViewC1Ev+0x10>)
}
900067ce:	4620      	mov	r0, r4
playView::playView()
900067d0:	6023      	str	r3, [r4, #0]
}
900067d2:	bd10      	pop	{r4, pc}
900067d4:	9002a17c 	.word	0x9002a17c

900067d8 <_ZN8playView11setupScreenEv>:
    playViewBase::setupScreen();
900067d8:	f7ff be32 	b.w	90006440 <_ZN12playViewBase11setupScreenEv>

900067dc <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900067dc:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900067e0:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900067e2:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900067e6:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900067ea:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
900067ec:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
900067ee:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900067f2:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
900067f6:	4770      	bx	lr

900067f8 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
900067f8:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
900067fc:	2b01      	cmp	r3, #1
900067fe:	d102      	bne.n	90006806 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006800:	2300      	movs	r3, #0
90006802:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90006806:	2000      	movs	r0, #0
90006808:	4770      	bx	lr
9000680a:	bf00      	nop

9000680c <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
9000680c:	2000      	movs	r0, #0
9000680e:	4770      	bx	lr

90006810 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006810:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006812:	6904      	ldr	r4, [r0, #16]
90006814:	8900      	ldrh	r0, [r0, #8]
90006816:	46a4      	mov	ip, r4
}
90006818:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
9000681c:	4760      	bx	ip
9000681e:	bf00      	nop

90006820 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006820:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006822:	68c4      	ldr	r4, [r0, #12]
90006824:	8900      	ldrh	r0, [r0, #8]
90006826:	46a4      	mov	ip, r4
}
90006828:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000682c:	4760      	bx	ip
9000682e:	bf00      	nop

90006830 <FT5336_GestureConfig>:
{
90006830:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006832:	f100 0518 	add.w	r5, r0, #24
{
90006836:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006838:	7809      	ldrb	r1, [r1, #0]
9000683a:	4628      	mov	r0, r5
9000683c:	f000 f96c 	bl	90006b18 <ft5336_radian_value>
90006840:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006842:	7931      	ldrb	r1, [r6, #4]
90006844:	4628      	mov	r0, r5
90006846:	f000 f975 	bl	90006b34 <ft5336_offset_left_right>
9000684a:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
9000684c:	7a31      	ldrb	r1, [r6, #8]
9000684e:	4628      	mov	r0, r5
90006850:	f000 f97e 	bl	90006b50 <ft5336_offset_up_down>
90006854:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006856:	7b31      	ldrb	r1, [r6, #12]
90006858:	4628      	mov	r0, r5
9000685a:	f000 f987 	bl	90006b6c <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000685e:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006860:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006862:	4628      	mov	r0, r5
90006864:	f000 f990 	bl	90006b88 <ft5336_distance_up_down>
90006868:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000686a:	7d31      	ldrb	r1, [r6, #20]
9000686c:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000686e:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006870:	f000 f998 	bl	90006ba4 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006874:	42c4      	cmn	r4, r0
}
90006876:	bf14      	ite	ne
90006878:	f04f 30ff 	movne.w	r0, #4294967295
9000687c:	2000      	moveq	r0, #0
9000687e:	bd70      	pop	{r4, r5, r6, pc}

90006880 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006880:	3018      	adds	r0, #24
90006882:	f000 b9ab 	b.w	90006bdc <ft5336_chip_id>
90006886:	bf00      	nop

90006888 <FT5336_GetState>:
{
90006888:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000688a:	f100 0518 	add.w	r5, r0, #24
{
9000688e:	b083      	sub	sp, #12
90006890:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006892:	4628      	mov	r0, r5
90006894:	a901      	add	r1, sp, #4
90006896:	f000 f931 	bl	90006afc <ft5336_td_status>
9000689a:	bb10      	cbnz	r0, 900068e2 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
9000689c:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900068a0:	2b05      	cmp	r3, #5
900068a2:	bf94      	ite	ls
900068a4:	4619      	movls	r1, r3
900068a6:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900068a8:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900068aa:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900068ac:	4628      	mov	r0, r5
900068ae:	2103      	movs	r1, #3
900068b0:	eb0d 0203 	add.w	r2, sp, r3
900068b4:	f000 f910 	bl	90006ad8 <ft5336_read_reg>
900068b8:	b9b0      	cbnz	r0, 900068e8 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900068ba:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900068be:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900068c2:	0212      	lsls	r2, r2, #8
900068c4:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900068c8:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900068ca:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900068ce:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900068d2:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900068d4:	f89d 1007 	ldrb.w	r1, [sp, #7]
900068d8:	430b      	orrs	r3, r1
900068da:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900068de:	b003      	add	sp, #12
900068e0:	bd30      	pop	{r4, r5, pc}
900068e2:	f04f 31ff 	mov.w	r1, #4294967295
900068e6:	e7df      	b.n	900068a8 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
900068e8:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900068ec:	e7f7      	b.n	900068de <FT5336_GetState+0x56>
900068ee:	bf00      	nop

900068f0 <FT5336_GetMultiTouchState>:
{
900068f0:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900068f2:	f100 0518 	add.w	r5, r0, #24
{
900068f6:	b088      	sub	sp, #32
900068f8:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900068fa:	4628      	mov	r0, r5
900068fc:	4669      	mov	r1, sp
900068fe:	f000 f8fd 	bl	90006afc <ft5336_td_status>
90006902:	2800      	cmp	r0, #0
90006904:	f040 809a 	bne.w	90006a3c <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006908:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
9000690c:	2b05      	cmp	r3, #5
9000690e:	bf94      	ite	ls
90006910:	4619      	movls	r1, r3
90006912:	2100      	movhi	r1, #0
90006914:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006916:	231e      	movs	r3, #30
90006918:	466a      	mov	r2, sp
9000691a:	4628      	mov	r0, r5
9000691c:	2103      	movs	r1, #3
9000691e:	f000 f8db 	bl	90006ad8 <ft5336_read_reg>
90006922:	2800      	cmp	r0, #0
90006924:	f040 808d 	bne.w	90006a42 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006928:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000692c:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006930:	020a      	lsls	r2, r1, #8
90006932:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006936:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006938:	f89d c007 	ldrb.w	ip, [sp, #7]
9000693c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006940:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006942:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006946:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000694a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000694c:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006950:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006952:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006954:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006956:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006958:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000695c:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000695e:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006962:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006966:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006968:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000696a:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000696e:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006970:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006972:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006974:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006978:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000697a:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000697c:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006980:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006984:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006986:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006988:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000698a:	ea45 050c 	orr.w	r5, r5, ip
9000698e:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006992:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006996:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006998:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000699a:	0212      	lsls	r2, r2, #8
9000699c:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900069a0:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069a2:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900069a6:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069aa:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900069ac:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069ae:	f89d 300e 	ldrb.w	r3, [sp, #14]
900069b2:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069b4:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069b8:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069ba:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069bc:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069c0:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069c2:	f89d 200f 	ldrb.w	r2, [sp, #15]
900069c6:	4313      	orrs	r3, r2
900069c8:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900069ca:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069cc:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069d0:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069d4:	020a      	lsls	r2, r1, #8
900069d6:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069da:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069dc:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900069e0:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069e2:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069e6:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069e8:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900069ec:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069ee:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069f0:	f89d 1018 	ldrb.w	r1, [sp, #24]
900069f4:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069f6:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069f8:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900069fa:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900069fe:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006a00:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006a04:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006a06:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006a0a:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006a0e:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006a10:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006a12:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006a14:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006a18:	6625      	str	r5, [r4, #96]	@ 0x60
90006a1a:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006a1c:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006a20:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006a22:	021b      	lsls	r3, r3, #8
90006a24:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006a28:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90006a2c:	430b      	orrs	r3, r1
90006a2e:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006a30:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006a34:	4313      	orrs	r3, r2
90006a36:	6163      	str	r3, [r4, #20]
}
90006a38:	b008      	add	sp, #32
90006a3a:	bd70      	pop	{r4, r5, r6, pc}
90006a3c:	f04f 31ff 	mov.w	r1, #4294967295
90006a40:	e768      	b.n	90006914 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006a42:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006a46:	e7f7      	b.n	90006a38 <FT5336_GetMultiTouchState+0x148>

90006a48 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006a48:	3018      	adds	r0, #24
90006a4a:	f000 b84d 	b.w	90006ae8 <ft5336_gest_id>
90006a4e:	bf00      	nop

90006a50 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006a50:	2101      	movs	r1, #1
90006a52:	3018      	adds	r0, #24
90006a54:	f000 b8b4 	b.w	90006bc0 <ft5336_g_mode>

90006a58 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006a58:	2100      	movs	r1, #0
90006a5a:	3018      	adds	r0, #24
90006a5c:	f000 b8b0 	b.w	90006bc0 <ft5336_g_mode>

90006a60 <FT5336_Init>:
{
90006a60:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006a62:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90006a66:	b98d      	cbnz	r5, 90006a8c <FT5336_Init+0x2c>
    pObj->IO.Init();
90006a68:	4606      	mov	r6, r0
90006a6a:	4604      	mov	r4, r0
90006a6c:	f856 3b18 	ldr.w	r3, [r6], #24
90006a70:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006a72:	4629      	mov	r1, r5
90006a74:	4630      	mov	r0, r6
90006a76:	f000 f8a3 	bl	90006bc0 <ft5336_g_mode>
  if(ret != FT5336_OK)
90006a7a:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006a7c:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006a80:	bf18      	it	ne
90006a82:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006a84:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90006a88:	4240      	negs	r0, r0
}
90006a8a:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
90006a8c:	2000      	movs	r0, #0
}
90006a8e:	bd70      	pop	{r4, r5, r6, pc}

90006a90 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90006a90:	2000      	movs	r0, #0
90006a92:	4770      	bx	lr

90006a94 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006a94:	b1c0      	cbz	r0, 90006ac8 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006a96:	890a      	ldrh	r2, [r1, #8]
{
90006a98:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006a9a:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006a9e:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006aa0:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006aa4:	694a      	ldr	r2, [r1, #20]
90006aa6:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006aaa:	4909      	ldr	r1, [pc, #36]	@ (90006ad0 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006aac:	60c5      	str	r5, [r0, #12]
90006aae:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006ab2:	4a08      	ldr	r2, [pc, #32]	@ (90006ad4 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006ab4:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006ab8:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006aba:	b10b      	cbz	r3, 90006ac0 <FT5336_RegisterBusIO+0x2c>
}
90006abc:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006abe:	4718      	bx	r3
}
90006ac0:	f04f 30ff 	mov.w	r0, #4294967295
90006ac4:	bc30      	pop	{r4, r5}
90006ac6:	4770      	bx	lr
90006ac8:	f04f 30ff 	mov.w	r0, #4294967295
90006acc:	4770      	bx	lr
90006ace:	bf00      	nop
90006ad0:	90006811 	.word	0x90006811
90006ad4:	90006821 	.word	0x90006821

90006ad8 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006ad8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006ada:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006ade:	46a4      	mov	ip, r4
}
90006ae0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006ae4:	4760      	bx	ip
90006ae6:	bf00      	nop

90006ae8 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006ae8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006aea:	2301      	movs	r3, #1
{
90006aec:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006aee:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006af2:	4619      	mov	r1, r3
90006af4:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006af6:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006afa:	4760      	bx	ip

90006afc <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006afc:	b538      	push	{r3, r4, r5, lr}
90006afe:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006b00:	2301      	movs	r3, #1
90006b02:	2102      	movs	r1, #2
90006b04:	4622      	mov	r2, r4
90006b06:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90006b0a:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006b0c:	b918      	cbnz	r0, 90006b16 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006b0e:	7823      	ldrb	r3, [r4, #0]
90006b10:	f003 030f 	and.w	r3, r3, #15
90006b14:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90006b16:	bd38      	pop	{r3, r4, r5, pc}

90006b18 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006b18:	b510      	push	{r4, lr}
90006b1a:	460c      	mov	r4, r1
90006b1c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b1e:	2301      	movs	r3, #1
90006b20:	2191      	movs	r1, #145	@ 0x91
{
90006b22:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b26:	f10d 0207 	add.w	r2, sp, #7
90006b2a:	6804      	ldr	r4, [r0, #0]
90006b2c:	6880      	ldr	r0, [r0, #8]
90006b2e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006b30:	b002      	add	sp, #8
90006b32:	bd10      	pop	{r4, pc}

90006b34 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006b34:	b510      	push	{r4, lr}
90006b36:	460c      	mov	r4, r1
90006b38:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b3a:	2301      	movs	r3, #1
90006b3c:	2192      	movs	r1, #146	@ 0x92
{
90006b3e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b42:	f10d 0207 	add.w	r2, sp, #7
90006b46:	6804      	ldr	r4, [r0, #0]
90006b48:	6880      	ldr	r0, [r0, #8]
90006b4a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006b4c:	b002      	add	sp, #8
90006b4e:	bd10      	pop	{r4, pc}

90006b50 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006b50:	b510      	push	{r4, lr}
90006b52:	460c      	mov	r4, r1
90006b54:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b56:	2301      	movs	r3, #1
90006b58:	2193      	movs	r1, #147	@ 0x93
{
90006b5a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b5e:	f10d 0207 	add.w	r2, sp, #7
90006b62:	6804      	ldr	r4, [r0, #0]
90006b64:	6880      	ldr	r0, [r0, #8]
90006b66:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006b68:	b002      	add	sp, #8
90006b6a:	bd10      	pop	{r4, pc}

90006b6c <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006b6c:	b510      	push	{r4, lr}
90006b6e:	460c      	mov	r4, r1
90006b70:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b72:	2301      	movs	r3, #1
90006b74:	2194      	movs	r1, #148	@ 0x94
{
90006b76:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b7a:	f10d 0207 	add.w	r2, sp, #7
90006b7e:	6804      	ldr	r4, [r0, #0]
90006b80:	6880      	ldr	r0, [r0, #8]
90006b82:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006b84:	b002      	add	sp, #8
90006b86:	bd10      	pop	{r4, pc}

90006b88 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006b88:	b510      	push	{r4, lr}
90006b8a:	460c      	mov	r4, r1
90006b8c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b8e:	2301      	movs	r3, #1
90006b90:	2195      	movs	r1, #149	@ 0x95
{
90006b92:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b96:	f10d 0207 	add.w	r2, sp, #7
90006b9a:	6804      	ldr	r4, [r0, #0]
90006b9c:	6880      	ldr	r0, [r0, #8]
90006b9e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006ba0:	b002      	add	sp, #8
90006ba2:	bd10      	pop	{r4, pc}

90006ba4 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006ba4:	b510      	push	{r4, lr}
90006ba6:	460c      	mov	r4, r1
90006ba8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006baa:	2301      	movs	r3, #1
90006bac:	2196      	movs	r1, #150	@ 0x96
{
90006bae:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006bb2:	f10d 0207 	add.w	r2, sp, #7
90006bb6:	6804      	ldr	r4, [r0, #0]
90006bb8:	6880      	ldr	r0, [r0, #8]
90006bba:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006bbc:	b002      	add	sp, #8
90006bbe:	bd10      	pop	{r4, pc}

90006bc0 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006bc0:	b510      	push	{r4, lr}
90006bc2:	460c      	mov	r4, r1
90006bc4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006bc6:	2301      	movs	r3, #1
90006bc8:	21a4      	movs	r1, #164	@ 0xa4
{
90006bca:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006bce:	f10d 0207 	add.w	r2, sp, #7
90006bd2:	6804      	ldr	r4, [r0, #0]
90006bd4:	6880      	ldr	r0, [r0, #8]
90006bd6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90006bd8:	b002      	add	sp, #8
90006bda:	bd10      	pop	{r4, pc}

90006bdc <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006bdc:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006bde:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90006be2:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006be4:	2301      	movs	r3, #1
90006be6:	46a4      	mov	ip, r4
90006be8:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90006bea:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006bee:	4760      	bx	ip

90006bf0 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90006bf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006bf2:	680b      	ldr	r3, [r1, #0]
{
90006bf4:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006bf6:	4c2a      	ldr	r4, [pc, #168]	@ (90006ca0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006bf8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
90006bfc:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90006bfe:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90006c00:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c02:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90006c04:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006c06:	2301      	movs	r3, #1
90006c08:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90006c0a:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c0c:	f005 fec2 	bl	9000c994 <HAL_SDRAM_SendCommand>
90006c10:	2800      	cmp	r0, #0
90006c12:	d142      	bne.n	90006c9a <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90006c14:	f000 ff48 	bl	90007aa8 <HAL_GetTick>
90006c18:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90006c1a:	f000 ff45 	bl	90007aa8 <HAL_GetTick>
90006c1e:	4286      	cmp	r6, r0
90006c20:	d0fb      	beq.n	90006c1a <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006c22:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006c24:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90006c26:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c28:	491d      	ldr	r1, [pc, #116]	@ (90006ca0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006c2a:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90006c2c:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90006c2e:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c30:	4638      	mov	r0, r7
90006c32:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
90006c36:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90006c38:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c3a:	f005 feab 	bl	9000c994 <HAL_SDRAM_SendCommand>
90006c3e:	bb60      	cbnz	r0, 90006c9a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c40:	4917      	ldr	r1, [pc, #92]	@ (90006ca0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90006c42:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90006c46:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c48:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90006c4a:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90006c4e:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c50:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
90006c54:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c56:	f005 fe9d 	bl	9000c994 <HAL_SDRAM_SendCommand>
90006c5a:	b9f0      	cbnz	r0, 90006c9a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c5c:	4910      	ldr	r1, [pc, #64]	@ (90006ca0 <MT48LC4M32B2_Init+0xb0>)
90006c5e:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006c60:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006c64:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006c66:	696a      	ldr	r2, [r5, #20]
90006c68:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006c6a:	69aa      	ldr	r2, [r5, #24]
90006c6c:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006c6e:	69ea      	ldr	r2, [r5, #28]
90006c70:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90006c72:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006c74:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006c76:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006c78:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c7c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006c80:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c82:	f005 fe87 	bl	9000c994 <HAL_SDRAM_SendCommand>
90006c86:	b940      	cbnz	r0, 90006c9a <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006c88:	68a9      	ldr	r1, [r5, #8]
90006c8a:	4638      	mov	r0, r7
90006c8c:	f005 fea2 	bl	9000c9d4 <HAL_SDRAM_ProgramRefreshRate>
90006c90:	3800      	subs	r0, #0
90006c92:	bf18      	it	ne
90006c94:	2001      	movne	r0, #1
90006c96:	4240      	negs	r0, r0
}
90006c98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006c9a:	f04f 30ff 	mov.w	r0, #4294967295
}
90006c9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90006ca0:	24007c50 	.word	0x24007c50

90006ca4 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006ca4:	4a10      	ldr	r2, [pc, #64]	@ (90006ce8 <BSP_I2C4_DeInit+0x44>)
{
90006ca6:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006ca8:	6813      	ldr	r3, [r2, #0]
90006caa:	3b01      	subs	r3, #1
90006cac:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90006cae:	b10b      	cbz	r3, 90006cb4 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90006cb0:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90006cb2:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006cb4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90006cb8:	480c      	ldr	r0, [pc, #48]	@ (90006cec <BSP_I2C4_DeInit+0x48>)
90006cba:	f001 fab9 	bl	90008230 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90006cbe:	480b      	ldr	r0, [pc, #44]	@ (90006cec <BSP_I2C4_DeInit+0x48>)
90006cc0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90006cc4:	f001 fab4 	bl	90008230 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006cc8:	4a09      	ldr	r2, [pc, #36]	@ (90006cf0 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006cca:	480a      	ldr	r0, [pc, #40]	@ (90006cf4 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006ccc:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90006cd0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006cd4:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006cd8:	f001 fd4c 	bl	90008774 <HAL_I2C_DeInit>
90006cdc:	2800      	cmp	r0, #0
90006cde:	d0e7      	beq.n	90006cb0 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90006ce0:	f06f 0007 	mvn.w	r0, #7
}
90006ce4:	bd08      	pop	{r3, pc}
90006ce6:	bf00      	nop
90006ce8:	240086b8 	.word	0x240086b8
90006cec:	58020c00 	.word	0x58020c00
90006cf0:	58024400 	.word	0x58024400
90006cf4:	24007c60 	.word	0x24007c60

90006cf8 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90006cf8:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90006cfa:	2201      	movs	r2, #1
{
90006cfc:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90006cfe:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90006d02:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90006d06:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90006d0a:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90006d0e:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90006d10:	f001 fcd8 	bl	900086c4 <HAL_I2C_Init>
90006d14:	b108      	cbz	r0, 90006d1a <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90006d16:	2001      	movs	r0, #1
}
90006d18:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90006d1a:	4601      	mov	r1, r0
90006d1c:	4620      	mov	r0, r4
90006d1e:	f001 ffb7 	bl	90008c90 <HAL_I2CEx_ConfigAnalogFilter>
90006d22:	2800      	cmp	r0, #0
90006d24:	d1f7      	bne.n	90006d16 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90006d26:	4601      	mov	r1, r0
90006d28:	4620      	mov	r0, r4
90006d2a:	f001 ffdb 	bl	90008ce4 <HAL_I2CEx_ConfigDigitalFilter>
90006d2e:	3800      	subs	r0, #0
90006d30:	bf18      	it	ne
90006d32:	2001      	movne	r0, #1
}
90006d34:	bd10      	pop	{r4, pc}
90006d36:	bf00      	nop

90006d38 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90006d38:	4b9a      	ldr	r3, [pc, #616]	@ (90006fa4 <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
90006d3a:	489b      	ldr	r0, [pc, #620]	@ (90006fa8 <BSP_I2C4_Init+0x270>)
90006d3c:	4a9b      	ldr	r2, [pc, #620]	@ (90006fac <BSP_I2C4_Init+0x274>)
{
90006d3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
90006d42:	681c      	ldr	r4, [r3, #0]
{
90006d44:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
90006d46:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90006d48:	b11c      	cbz	r4, 90006d52 <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
90006d4a:	2000      	movs	r0, #0
}
90006d4c:	b01d      	add	sp, #116	@ 0x74
90006d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90006d52:	2201      	movs	r2, #1
90006d54:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90006d56:	f001 ff95 	bl	90008c84 <HAL_I2C_GetState>
90006d5a:	2800      	cmp	r0, #0
90006d5c:	d1f5      	bne.n	90006d4a <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006d5e:	4d94      	ldr	r5, [pc, #592]	@ (90006fb0 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006d60:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
90006d64:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006d66:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006d68:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006d6c:	f04f 0800 	mov.w	r8, #0
90006d70:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006d74:	f043 0308 	orr.w	r3, r3, #8
90006d78:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90006d7c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90006d80:	f003 0308 	and.w	r3, r3, #8
90006d84:	9313      	str	r3, [sp, #76]	@ 0x4c
90006d86:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006d88:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90006d8c:	f043 0308 	orr.w	r3, r3, #8
90006d90:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90006d94:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006d98:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006d9a:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006d9e:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006da2:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006da4:	a916      	add	r1, sp, #88	@ 0x58
90006da6:	4883      	ldr	r0, [pc, #524]	@ (90006fb4 <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006da8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006daa:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006dae:	f001 f8fd 	bl	90007fac <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006db2:	2312      	movs	r3, #18
90006db4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006db8:	a916      	add	r1, sp, #88	@ 0x58
90006dba:	487e      	ldr	r0, [pc, #504]	@ (90006fb4 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90006dbc:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006dbe:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
90006dc2:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006dc6:	f001 f8f1 	bl	90007fac <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90006dca:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90006dce:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90006dd2:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
90006dd6:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90006dda:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90006dde:	9315      	str	r3, [sp, #84]	@ 0x54
90006de0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
90006de2:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90006de6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90006dea:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
90006dee:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90006df2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006df6:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006dfa:	f004 fce1 	bl	9000b7c0 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90006dfe:	2800      	cmp	r0, #0
90006e00:	f000 81fd 	beq.w	900071fe <BSP_I2C4_Init+0x4c6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006e04:	4b6c      	ldr	r3, [pc, #432]	@ (90006fb8 <BSP_I2C4_Init+0x280>)
  if (tsdadel_max <= 0)
90006e06:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
90006e08:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006e0c:	4e6b      	ldr	r6, [pc, #428]	@ (90006fbc <BSP_I2C4_Init+0x284>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006e0e:	eb03 0350 	add.w	r3, r3, r0, lsr #1
90006e12:	9401      	str	r4, [sp, #4]
90006e14:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90006e18:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006e1a:	9700      	str	r7, [sp, #0]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006e1c:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006e20:	f5c3 7cc3 	rsb	ip, r3, #390	@ 0x186
90006e24:	4b66      	ldr	r3, [pc, #408]	@ (90006fc0 <BSP_I2C4_Init+0x288>)
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006e26:	007a      	lsls	r2, r7, #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90006e28:	f1c1 0e32 	rsb	lr, r1, #50	@ 0x32
90006e2c:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
90006e2e:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90006e32:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
90006e34:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
90006e38:	4689      	mov	r9, r1
90006e3a:	4622      	mov	r2, r4
90006e3c:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006e3e:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90006e42:	46b8      	mov	r8, r7
90006e44:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90006e48:	bf2c      	ite	cs
90006e4a:	2001      	movcs	r0, #1
90006e4c:	2000      	movcc	r0, #0
90006e4e:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
90006e52:	f000 0001 	and.w	r0, r0, #1
90006e56:	eb07 0187 	add.w	r1, r7, r7, lsl #2
90006e5a:	bf88      	it	hi
90006e5c:	2000      	movhi	r0, #0
90006e5e:	459e      	cmp	lr, r3
90006e60:	eb07 0483 	add.w	r4, r7, r3, lsl #2
90006e64:	9004      	str	r0, [sp, #16]
90006e66:	bf8c      	ite	hi
90006e68:	2000      	movhi	r0, #0
90006e6a:	2001      	movls	r0, #1
90006e6c:	459c      	cmp	ip, r3
90006e6e:	940f      	str	r4, [sp, #60]	@ 0x3c
90006e70:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
90006e74:	bf38      	it	cc
90006e76:	2000      	movcc	r0, #0
90006e78:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
90006e7c:	9006      	str	r0, [sp, #24]
90006e7e:	eb07 0041 	add.w	r0, r7, r1, lsl #1
90006e82:	9005      	str	r0, [sp, #20]
90006e84:	bf94      	ite	ls
90006e86:	2001      	movls	r0, #1
90006e88:	2000      	movhi	r0, #0
90006e8a:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90006e8e:	f000 0401 	and.w	r4, r0, #1
90006e92:	bf38      	it	cc
90006e94:	2400      	movcc	r4, #0
90006e96:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006e98:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006e9c:	9407      	str	r4, [sp, #28]
90006e9e:	bf8c      	ite	hi
90006ea0:	2400      	movhi	r4, #0
90006ea2:	2401      	movls	r4, #1
90006ea4:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006ea6:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006ea8:	bf38      	it	cc
90006eaa:	2400      	movcc	r4, #0
90006eac:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
90006eb0:	bf98      	it	ls
90006eb2:	2001      	movls	r0, #1
90006eb4:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90006eb8:	9408      	str	r4, [sp, #32]
90006eba:	465c      	mov	r4, fp
90006ebc:	f000 0001 	and.w	r0, r0, #1
90006ec0:	bf38      	it	cc
90006ec2:	2000      	movcc	r0, #0
90006ec4:	45de      	cmp	lr, fp
90006ec6:	9009      	str	r0, [sp, #36]	@ 0x24
90006ec8:	4658      	mov	r0, fp
90006eca:	bf8c      	ite	hi
90006ecc:	2000      	movhi	r0, #0
90006ece:	2001      	movls	r0, #1
90006ed0:	45dc      	cmp	ip, fp
90006ed2:	bf38      	it	cc
90006ed4:	2000      	movcc	r0, #0
90006ed6:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
90006eda:	4683      	mov	fp, r0
90006edc:	bf94      	ite	ls
90006ede:	f04f 0b01 	movls.w	fp, #1
90006ee2:	f04f 0b00 	movhi.w	fp, #0
90006ee6:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90006eea:	900a      	str	r0, [sp, #40]	@ 0x28
90006eec:	f00b 0b01 	and.w	fp, fp, #1
90006ef0:	bf38      	it	cc
90006ef2:	f04f 0b00 	movcc.w	fp, #0
90006ef6:	4658      	mov	r0, fp
90006ef8:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
90006efc:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
90006f00:	45de      	cmp	lr, fp
90006f02:	bf8c      	ite	hi
90006f04:	2000      	movhi	r0, #0
90006f06:	2001      	movls	r0, #1
90006f08:	45dc      	cmp	ip, fp
90006f0a:	bf38      	it	cc
90006f0c:	2000      	movcc	r0, #0
90006f0e:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
90006f12:	900c      	str	r0, [sp, #48]	@ 0x30
90006f14:	bf98      	it	ls
90006f16:	f04f 0b01 	movls.w	fp, #1
90006f1a:	9805      	ldr	r0, [sp, #20]
90006f1c:	bf88      	it	hi
90006f1e:	f04f 0b00 	movhi.w	fp, #0
90006f22:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90006f26:	f00b 0b01 	and.w	fp, fp, #1
90006f2a:	4601      	mov	r1, r0
90006f2c:	bf38      	it	cc
90006f2e:	f04f 0b00 	movcc.w	fp, #0
90006f32:	4586      	cmp	lr, r0
90006f34:	bf8c      	ite	hi
90006f36:	2100      	movhi	r1, #0
90006f38:	2101      	movls	r1, #1
90006f3a:	4584      	cmp	ip, r0
90006f3c:	4620      	mov	r0, r4
90006f3e:	bf38      	it	cc
90006f40:	2100      	movcc	r1, #0
90006f42:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
90006f46:	910d      	str	r1, [sp, #52]	@ 0x34
90006f48:	bf94      	ite	ls
90006f4a:	2101      	movls	r1, #1
90006f4c:	2100      	movhi	r1, #0
90006f4e:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90006f52:	f001 0101 	and.w	r1, r1, #1
90006f56:	bf38      	it	cc
90006f58:	2100      	movcc	r1, #0
90006f5a:	910e      	str	r1, [sp, #56]	@ 0x38
90006f5c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90006f5e:	4571      	cmp	r1, lr
90006f60:	460b      	mov	r3, r1
90006f62:	bf34      	ite	cc
90006f64:	2300      	movcc	r3, #0
90006f66:	2301      	movcs	r3, #1
90006f68:	4561      	cmp	r1, ip
90006f6a:	bf88      	it	hi
90006f6c:	2300      	movhi	r3, #0
90006f6e:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
90006f72:	930f      	str	r3, [sp, #60]	@ 0x3c
90006f74:	bf94      	ite	ls
90006f76:	2301      	movls	r3, #1
90006f78:	2300      	movhi	r3, #0
90006f7a:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
90006f7e:	f04f 0400 	mov.w	r4, #0
90006f82:	f003 0301 	and.w	r3, r3, #1
90006f86:	bf38      	it	cc
90006f88:	2300      	movcc	r3, #0
90006f8a:	9310      	str	r3, [sp, #64]	@ 0x40
90006f8c:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90006f90:	459e      	cmp	lr, r3
90006f92:	bf8c      	ite	hi
90006f94:	2100      	movhi	r1, #0
90006f96:	2101      	movls	r1, #1
90006f98:	459c      	cmp	ip, r3
90006f9a:	bf38      	it	cc
90006f9c:	2100      	movcc	r1, #0
90006f9e:	9105      	str	r1, [sp, #20]
90006fa0:	e014      	b.n	90006fcc <BSP_I2C4_Init+0x294>
90006fa2:	bf00      	nop
90006fa4:	240086b8 	.word	0x240086b8
90006fa8:	24007c60 	.word	0x24007c60
90006fac:	58001c00 	.word	0x58001c00
90006fb0:	58024400 	.word	0x58024400
90006fb4:	58020c00 	.word	0x58020c00
90006fb8:	3b9aca00 	.word	0x3b9aca00
90006fbc:	24007cb8 	.word	0x24007cb8
90006fc0:	24007cb4 	.word	0x24007cb4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006fc4:	2c10      	cmp	r4, #16
90006fc6:	44b8      	add	r8, r7
90006fc8:	f000 8273 	beq.w	900074b2 <BSP_I2C4_Init+0x77a>
      if (tscldel >= (uint32_t)tscldel_min)
90006fcc:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
90006fd0:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006fd2:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90006fd6:	d3f5      	bcc.n	90006fc4 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90006fd8:	ebba 0105 	subs.w	r1, sl, r5
90006fdc:	bf18      	it	ne
90006fde:	2101      	movne	r1, #1
90006fe0:	f1be 0f00 	cmp.w	lr, #0
90006fe4:	bf18      	it	ne
90006fe6:	2100      	movne	r1, #0
90006fe8:	2900      	cmp	r1, #0
90006fea:	f040 8250 	bne.w	9000748e <BSP_I2C4_Init+0x756>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006fee:	45bc      	cmp	ip, r7
90006ff0:	bf34      	ite	cc
90006ff2:	2100      	movcc	r1, #0
90006ff4:	2101      	movcs	r1, #1
90006ff6:	45be      	cmp	lr, r7
90006ff8:	bf88      	it	hi
90006ffa:	2100      	movhi	r1, #0
            if(presc != prev_presc)
90006ffc:	45aa      	cmp	sl, r5
90006ffe:	bf0c      	ite	eq
90007000:	2100      	moveq	r1, #0
90007002:	f001 0101 	andne.w	r1, r1, #1
90007006:	2900      	cmp	r1, #0
90007008:	f000 8103 	beq.w	90007212 <BSP_I2C4_Init+0x4da>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000700c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007010:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007014:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007016:	46b2      	mov	sl, r6
90007018:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000701c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007020:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007024:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007026:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007028:	f200 81aa 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
9000702c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000702e:	9a06      	ldr	r2, [sp, #24]
90007030:	45aa      	cmp	sl, r5
90007032:	bf0c      	ite	eq
90007034:	2200      	moveq	r2, #0
90007036:	f002 0201 	andne.w	r2, r2, #1
9000703a:	2a00      	cmp	r2, #0
9000703c:	f000 8105 	beq.w	9000724a <BSP_I2C4_Init+0x512>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007040:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007044:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007048:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000704a:	46b2      	mov	sl, r6
9000704c:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007050:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007054:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007058:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000705a:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000705c:	f200 8190 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
90007060:	4611      	mov	r1, r2
90007062:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007064:	9a08      	ldr	r2, [sp, #32]
90007066:	45aa      	cmp	sl, r5
90007068:	bf0c      	ite	eq
9000706a:	2200      	moveq	r2, #0
9000706c:	f002 0201 	andne.w	r2, r2, #1
90007070:	2a00      	cmp	r2, #0
90007072:	f000 8105 	beq.w	90007280 <BSP_I2C4_Init+0x548>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007076:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000707a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000707e:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007080:	46b2      	mov	sl, r6
90007082:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007086:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000708a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000708e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007090:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007092:	f200 8175 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
90007096:	4611      	mov	r1, r2
90007098:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000709a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9000709c:	45aa      	cmp	sl, r5
9000709e:	bf0c      	ite	eq
900070a0:	2200      	moveq	r2, #0
900070a2:	f002 0201 	andne.w	r2, r2, #1
900070a6:	2a00      	cmp	r2, #0
900070a8:	f000 8104 	beq.w	900072b4 <BSP_I2C4_Init+0x57c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070ac:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900070b0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900070b4:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070b6:	46b2      	mov	sl, r6
900070b8:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900070bc:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070c0:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900070c4:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900070c6:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900070c8:	f200 815a 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
900070cc:	4611      	mov	r1, r2
900070ce:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900070d0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900070d2:	45aa      	cmp	sl, r5
900070d4:	bf0c      	ite	eq
900070d6:	2200      	moveq	r2, #0
900070d8:	f002 0201 	andne.w	r2, r2, #1
900070dc:	2a00      	cmp	r2, #0
900070de:	f000 8103 	beq.w	900072e8 <BSP_I2C4_Init+0x5b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070e2:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900070e6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900070ea:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070ec:	46b2      	mov	sl, r6
900070ee:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900070f2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070f6:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900070fa:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900070fc:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900070fe:	f200 813f 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
90007102:	4611      	mov	r1, r2
90007104:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007106:	980d      	ldr	r0, [sp, #52]	@ 0x34
90007108:	4555      	cmp	r5, sl
9000710a:	bf0c      	ite	eq
9000710c:	2000      	moveq	r0, #0
9000710e:	f000 0001 	andne.w	r0, r0, #1
90007112:	2800      	cmp	r0, #0
90007114:	f000 8101 	beq.w	9000731a <BSP_I2C4_Init+0x5e2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007118:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000711c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007120:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007122:	46b2      	mov	sl, r6
90007124:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007128:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000712c:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007130:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007132:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007134:	f200 8124 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
90007138:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000713a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9000713c:	4555      	cmp	r5, sl
9000713e:	bf0c      	ite	eq
90007140:	2200      	moveq	r2, #0
90007142:	f002 0201 	andne.w	r2, r2, #1
90007146:	2a00      	cmp	r2, #0
90007148:	f000 8100 	beq.w	9000734c <BSP_I2C4_Init+0x614>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000714c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007150:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007154:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007156:	46b2      	mov	sl, r6
90007158:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000715c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007160:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007164:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007166:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007168:	f200 810a 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
9000716c:	4610      	mov	r0, r2
9000716e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007170:	9a05      	ldr	r2, [sp, #20]
90007172:	4555      	cmp	r5, sl
90007174:	bf0c      	ite	eq
90007176:	2200      	moveq	r2, #0
90007178:	f002 0201 	andne.w	r2, r2, #1
9000717c:	2a00      	cmp	r2, #0
9000717e:	f000 8182 	beq.w	90007486 <BSP_I2C4_Init+0x74e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007182:	eb09 0189 	add.w	r1, r9, r9, lsl #2
90007186:	f8df a360 	ldr.w	sl, [pc, #864]	@ 900074e8 <BSP_I2C4_Init+0x7b0>
              I2c_valid_timing_nbr ++;
9000718a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000718e:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
90007192:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007196:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000719a:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000719c:	f04f 030f 	mov.w	r3, #15
900071a0:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900071a2:	f200 80ed 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
900071a6:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900071a8:	e70c      	b.n	90006fc4 <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900071aa:	9a06      	ldr	r2, [sp, #24]
900071ac:	4661      	mov	r1, ip
900071ae:	f109 0914 	add.w	r9, r9, #20
900071b2:	3201      	adds	r2, #1
900071b4:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
900071b8:	e9dd 3c0c 	ldrd	r3, ip, [sp, #48]	@ 0x30
900071bc:	4572      	cmp	r2, lr
900071be:	9206      	str	r2, [sp, #24]
900071c0:	f040 8103 	bne.w	900073ca <BSP_I2C4_Init+0x692>
        if (idx < I2C_VALID_TIMING_NBR)
900071c4:	9b01      	ldr	r3, [sp, #4]
900071c6:	2b7f      	cmp	r3, #127	@ 0x7f
900071c8:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
900071cc:	d817      	bhi.n	900071fe <BSP_I2C4_Init+0x4c6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900071ce:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900071d2:	eb00 0283 	add.w	r2, r0, r3, lsl #2
900071d6:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900071da:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900071dc:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900071de:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900071e0:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900071e4:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900071e8:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900071ec:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900071ee:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900071f0:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900071f2:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900071f6:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900071f8:	430b      	orrs	r3, r1
900071fa:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900071fe:	4621      	mov	r1, r4
90007200:	48b7      	ldr	r0, [pc, #732]	@ (900074e0 <BSP_I2C4_Init+0x7a8>)
90007202:	f7ff fd79 	bl	90006cf8 <MX_I2C4_Init>
90007206:	2800      	cmp	r0, #0
90007208:	f43f ad9f 	beq.w	90006d4a <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
9000720c:	f06f 0007 	mvn.w	r0, #7
  return ret;
90007210:	e59c      	b.n	90006d4c <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
90007212:	4611      	mov	r1, r2
90007214:	9a04      	ldr	r2, [sp, #16]
90007216:	45aa      	cmp	sl, r5
90007218:	bf0c      	ite	eq
9000721a:	2200      	moveq	r2, #0
9000721c:	f002 0201 	andne.w	r2, r2, #1
90007220:	2a00      	cmp	r2, #0
90007222:	f43f af04 	beq.w	9000702e <BSP_I2C4_Init+0x2f6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007226:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000722a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000722e:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007230:	46b2      	mov	sl, r6
90007232:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007236:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000723a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000723e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007240:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007242:	f200 809d 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
90007246:	4611      	mov	r1, r2
90007248:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000724a:	9a07      	ldr	r2, [sp, #28]
9000724c:	45aa      	cmp	sl, r5
9000724e:	bf0c      	ite	eq
90007250:	2200      	moveq	r2, #0
90007252:	f002 0201 	andne.w	r2, r2, #1
90007256:	2a00      	cmp	r2, #0
90007258:	f43f af04 	beq.w	90007064 <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000725c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007260:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007264:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007266:	46b2      	mov	sl, r6
90007268:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000726c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007270:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007274:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007276:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007278:	f200 8082 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
9000727c:	4611      	mov	r1, r2
9000727e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007280:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90007282:	45aa      	cmp	sl, r5
90007284:	bf0c      	ite	eq
90007286:	2200      	moveq	r2, #0
90007288:	f002 0201 	andne.w	r2, r2, #1
9000728c:	2a00      	cmp	r2, #0
9000728e:	f43f af04 	beq.w	9000709a <BSP_I2C4_Init+0x362>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007292:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007296:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000729a:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000729c:	46b2      	mov	sl, r6
9000729e:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072a2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072a6:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072aa:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072ac:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072ae:	d867      	bhi.n	90007380 <BSP_I2C4_Init+0x648>
900072b0:	4611      	mov	r1, r2
900072b2:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900072b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900072b6:	45aa      	cmp	sl, r5
900072b8:	bf0c      	ite	eq
900072ba:	2200      	moveq	r2, #0
900072bc:	f002 0201 	andne.w	r2, r2, #1
900072c0:	2a00      	cmp	r2, #0
900072c2:	f43f af05 	beq.w	900070d0 <BSP_I2C4_Init+0x398>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072c6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072ca:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072ce:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072d0:	46b2      	mov	sl, r6
900072d2:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072d6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072da:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072de:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072e0:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072e2:	d84d      	bhi.n	90007380 <BSP_I2C4_Init+0x648>
900072e4:	4611      	mov	r1, r2
900072e6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900072e8:	45aa      	cmp	sl, r5
900072ea:	bf0c      	ite	eq
900072ec:	2200      	moveq	r2, #0
900072ee:	f00b 0201 	andne.w	r2, fp, #1
900072f2:	2a00      	cmp	r2, #0
900072f4:	f43f af07 	beq.w	90007106 <BSP_I2C4_Init+0x3ce>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072f8:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072fc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007300:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007302:	46b2      	mov	sl, r6
90007304:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007308:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000730c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007310:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007312:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007314:	d834      	bhi.n	90007380 <BSP_I2C4_Init+0x648>
90007316:	4611      	mov	r1, r2
90007318:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000731a:	980e      	ldr	r0, [sp, #56]	@ 0x38
9000731c:	4555      	cmp	r5, sl
9000731e:	bf0c      	ite	eq
90007320:	2000      	moveq	r0, #0
90007322:	f000 0001 	andne.w	r0, r0, #1
90007326:	2800      	cmp	r0, #0
90007328:	f000 80af 	beq.w	9000748a <BSP_I2C4_Init+0x752>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000732c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007330:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007334:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007336:	46b2      	mov	sl, r6
90007338:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000733c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007340:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007344:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007346:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007348:	d81a      	bhi.n	90007380 <BSP_I2C4_Init+0x648>
9000734a:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000734c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9000734e:	4555      	cmp	r5, sl
90007350:	bf0c      	ite	eq
90007352:	2200      	moveq	r2, #0
90007354:	f002 0201 	andne.w	r2, r2, #1
90007358:	2a00      	cmp	r2, #0
9000735a:	f43f af09 	beq.w	90007170 <BSP_I2C4_Init+0x438>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000735e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007362:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007366:	46b2      	mov	sl, r6
90007368:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
9000736c:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007370:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007374:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007376:	f04f 030e 	mov.w	r3, #14
9000737a:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000737c:	f67f af13 	bls.w	900071a6 <BSP_I2C4_Init+0x46e>
90007380:	4b58      	ldr	r3, [pc, #352]	@ (900074e4 <BSP_I2C4_Init+0x7ac>)
90007382:	4650      	mov	r0, sl
90007384:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
90007386:	4649      	mov	r1, r9
90007388:	9a02      	ldr	r2, [sp, #8]
9000738a:	f8c3 9000 	str.w	r9, [r3]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000738e:	2500      	movs	r5, #0
90007390:	9f00      	ldr	r7, [sp, #0]
90007392:	f240 2657 	movw	r6, #599	@ 0x257
90007396:	f240 4301 	movw	r3, #1025	@ 0x401
9000739a:	9506      	str	r5, [sp, #24]
9000739c:	f04f 35ff 	mov.w	r5, #4294967295
900073a0:	42be      	cmp	r6, r7
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900073a2:	468e      	mov	lr, r1
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900073a4:	9501      	str	r5, [sp, #4]
900073a6:	f102 0532 	add.w	r5, r2, #50	@ 0x32
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900073aa:	9408      	str	r4, [sp, #32]
900073ac:	eba3 0302 	sub.w	r3, r3, r2
900073b0:	bf38      	it	cc
900073b2:	463e      	movcc	r6, r7
900073b4:	f8df 9130 	ldr.w	r9, [pc, #304]	@ 900074e8 <BSP_I2C4_Init+0x7b0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900073b8:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
900073bc:	f6a2 0c34 	subw	ip, r2, #2100	@ 0x834
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900073c0:	f240 4a12 	movw	sl, #1042	@ 0x412
900073c4:	4639      	mov	r1, r7
900073c6:	462c      	mov	r4, r5
900073c8:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900073ca:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900073ce:	2500      	movs	r5, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900073d0:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900073d4:	1a1a      	subs	r2, r3, r0
900073d6:	1827      	adds	r7, r4, r0
900073d8:	ea4f 0842 	mov.w	r8, r2, lsl #1
900073dc:	eb0c 0200 	add.w	r2, ip, r0
900073e0:	e9cd 3c0c 	strd	r3, ip, [sp, #48]	@ 0x30
900073e4:	9207      	str	r2, [sp, #28]
900073e6:	468c      	mov	ip, r1
900073e8:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
900073ec:	e006      	b.n	900073fc <BSP_I2C4_Init+0x6c4>
900073ee:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
900073f2:	4407      	add	r7, r0
900073f4:	eba8 0800 	sub.w	r8, r8, r0
900073f8:	f43f aed7 	beq.w	900071aa <BSP_I2C4_Init+0x472>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900073fc:	f240 5314 	movw	r3, #1300	@ 0x514
90007400:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007402:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007404:	429f      	cmp	r7, r3
90007406:	d9f2      	bls.n	900073ee <BSP_I2C4_Init+0x6b6>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007408:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000740c:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90007410:	d2ed      	bcs.n	900073ee <BSP_I2C4_Init+0x6b6>
90007412:	f640 0e34 	movw	lr, #2100	@ 0x834
90007416:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007418:	2200      	movs	r2, #0
9000741a:	ebae 0e03 	sub.w	lr, lr, r3
9000741e:	9b07      	ldr	r3, [sp, #28]
90007420:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90007424:	e9cd 7804 	strd	r7, r8, [sp, #16]
90007428:	443b      	add	r3, r7
9000742a:	f8dd c004 	ldr.w	ip, [sp, #4]
9000742e:	f8dd 8018 	ldr.w	r8, [sp, #24]
90007432:	e005      	b.n	90007440 <BSP_I2C4_Init+0x708>
90007434:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90007438:	4403      	add	r3, r0
9000743a:	eba4 0400 	sub.w	r4, r4, r0
9000743e:	d01a      	beq.n	90007476 <BSP_I2C4_Init+0x73e>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007440:	eb0e 0103 	add.w	r1, lr, r3
90007444:	4617      	mov	r7, r2
90007446:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000744a:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000744c:	42b1      	cmp	r1, r6
9000744e:	d9f1      	bls.n	90007434 <BSP_I2C4_Init+0x6fc>
90007450:	4555      	cmp	r5, sl
90007452:	d8ef      	bhi.n	90007434 <BSP_I2C4_Init+0x6fc>
            if (error < 0)
90007454:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90007458:	bf28      	it	cs
9000745a:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
9000745c:	458b      	cmp	fp, r1
9000745e:	d9e9      	bls.n	90007434 <BSP_I2C4_Init+0x6fc>
              I2c_valid_timing[count].sclh = sclh;
90007460:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007462:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
90007466:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
90007468:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000746a:	4403      	add	r3, r0
9000746c:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90007470:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007474:	d1e4      	bne.n	90007440 <BSP_I2C4_Init+0x708>
90007476:	f8cd c004 	str.w	ip, [sp, #4]
9000747a:	9d02      	ldr	r5, [sp, #8]
9000747c:	f8dd 8014 	ldr.w	r8, [sp, #20]
90007480:	e9dd c703 	ldrd	ip, r7, [sp, #12]
90007484:	e7b3      	b.n	900073ee <BSP_I2C4_Init+0x6b6>
90007486:	4602      	mov	r2, r0
90007488:	e59c      	b.n	90006fc4 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
9000748a:	4608      	mov	r0, r1
9000748c:	e655      	b.n	9000713a <BSP_I2C4_Init+0x402>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000748e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007492:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007496:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007498:	46b2      	mov	sl, r6
9000749a:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000749e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074a2:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074a6:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074a8:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074aa:	f63f af69 	bhi.w	90007380 <BSP_I2C4_Init+0x648>
900074ae:	46aa      	mov	sl, r5
900074b0:	e6b0      	b.n	90007214 <BSP_I2C4_Init+0x4dc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900074b2:	3501      	adds	r5, #1
900074b4:	9b00      	ldr	r3, [sp, #0]
900074b6:	2d10      	cmp	r5, #16
900074b8:	441f      	add	r7, r3
900074ba:	f47f acc0 	bne.w	90006e3e <BSP_I2C4_Init+0x106>
900074be:	4693      	mov	fp, r2
900074c0:	9c01      	ldr	r4, [sp, #4]
900074c2:	9911      	ldr	r1, [sp, #68]	@ 0x44
900074c4:	9a02      	ldr	r2, [sp, #8]
900074c6:	f1bb 0f00 	cmp.w	fp, #0
900074ca:	d003      	beq.n	900074d4 <BSP_I2C4_Init+0x79c>
900074cc:	4b05      	ldr	r3, [pc, #20]	@ (900074e4 <BSP_I2C4_Init+0x7ac>)
900074ce:	4649      	mov	r1, r9
900074d0:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900074d4:	2900      	cmp	r1, #0
900074d6:	f43f ae92 	beq.w	900071fe <BSP_I2C4_Init+0x4c6>
900074da:	4803      	ldr	r0, [pc, #12]	@ (900074e8 <BSP_I2C4_Init+0x7b0>)
900074dc:	e757      	b.n	9000738e <BSP_I2C4_Init+0x656>
900074de:	bf00      	nop
900074e0:	24007c60 	.word	0x24007c60
900074e4:	24007cb4 	.word	0x24007cb4
900074e8:	24007cb8 	.word	0x24007cb8

900074ec <BSP_I2C4_WriteReg>:
{
900074ec:	b530      	push	{r4, r5, lr}
900074ee:	4614      	mov	r4, r2
900074f0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900074f2:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
900074f6:	460a      	mov	r2, r1
900074f8:	9301      	str	r3, [sp, #4]
900074fa:	4601      	mov	r1, r0
900074fc:	2301      	movs	r3, #1
900074fe:	4809      	ldr	r0, [pc, #36]	@ (90007524 <BSP_I2C4_WriteReg+0x38>)
90007500:	9502      	str	r5, [sp, #8]
90007502:	9400      	str	r4, [sp, #0]
90007504:	f001 f950 	bl	900087a8 <HAL_I2C_Mem_Write>
90007508:	b908      	cbnz	r0, 9000750e <BSP_I2C4_WriteReg+0x22>
}
9000750a:	b005      	add	sp, #20
9000750c:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000750e:	4805      	ldr	r0, [pc, #20]	@ (90007524 <BSP_I2C4_WriteReg+0x38>)
90007510:	f001 fbbc 	bl	90008c8c <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007514:	2804      	cmp	r0, #4
90007516:	bf14      	ite	ne
90007518:	f06f 0003 	mvnne.w	r0, #3
9000751c:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90007520:	e7f3      	b.n	9000750a <BSP_I2C4_WriteReg+0x1e>
90007522:	bf00      	nop
90007524:	24007c60 	.word	0x24007c60

90007528 <BSP_I2C4_ReadReg>:
{
90007528:	b530      	push	{r4, r5, lr}
9000752a:	4614      	mov	r4, r2
9000752c:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000752e:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90007532:	460a      	mov	r2, r1
90007534:	9301      	str	r3, [sp, #4]
90007536:	4601      	mov	r1, r0
90007538:	2301      	movs	r3, #1
9000753a:	4809      	ldr	r0, [pc, #36]	@ (90007560 <BSP_I2C4_ReadReg+0x38>)
9000753c:	9502      	str	r5, [sp, #8]
9000753e:	9400      	str	r4, [sp, #0]
90007540:	f001 fa60 	bl	90008a04 <HAL_I2C_Mem_Read>
90007544:	b908      	cbnz	r0, 9000754a <BSP_I2C4_ReadReg+0x22>
}
90007546:	b005      	add	sp, #20
90007548:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000754a:	4805      	ldr	r0, [pc, #20]	@ (90007560 <BSP_I2C4_ReadReg+0x38>)
9000754c:	f001 fb9e 	bl	90008c8c <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007550:	2804      	cmp	r0, #4
90007552:	bf14      	ite	ne
90007554:	f06f 0003 	mvnne.w	r0, #3
90007558:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
9000755c:	e7f3      	b.n	90007546 <BSP_I2C4_ReadReg+0x1e>
9000755e:	bf00      	nop
90007560:	24007c60 	.word	0x24007c60

90007564 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90007564:	f000 baa0 	b.w	90007aa8 <HAL_GetTick>

90007568 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90007568:	b970      	cbnz	r0, 90007588 <BSP_SDRAM_DeInit+0x20>
{
9000756a:	b510      	push	{r4, lr}
9000756c:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000756e:	4808      	ldr	r0, [pc, #32]	@ (90007590 <BSP_SDRAM_DeInit+0x28>)
90007570:	f005 fa02 	bl	9000c978 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007574:	207a      	movs	r0, #122	@ 0x7a
90007576:	f000 faff 	bl	90007b78 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000757a:	4b06      	ldr	r3, [pc, #24]	@ (90007594 <BSP_SDRAM_DeInit+0x2c>)
9000757c:	4806      	ldr	r0, [pc, #24]	@ (90007598 <BSP_SDRAM_DeInit+0x30>)
9000757e:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007580:	f003 f9c8 	bl	9000a914 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007584:	4620      	mov	r0, r4
}
90007586:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007588:	f06f 0001 	mvn.w	r0, #1
}
9000758c:	4770      	bx	lr
9000758e:	bf00      	nop
90007590:	240087b4 	.word	0x240087b4
90007594:	52000040 	.word	0x52000040
90007598:	240086bc 	.word	0x240086bc

9000759c <MX_SDRAM_BANK2_Init>:
{
9000759c:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000759e:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900075a0:	2200      	movs	r2, #0
{
900075a2:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
900075a4:	4c13      	ldr	r4, [pc, #76]	@ (900075f4 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900075a6:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900075a8:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900075aa:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
900075ac:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
900075ae:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
900075b0:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
900075b2:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900075b4:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
900075b8:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
900075ba:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900075bc:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
900075be:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900075c0:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900075c2:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900075c6:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900075c8:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900075cc:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900075ce:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900075d0:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
900075d4:	2204      	movs	r2, #4
900075d6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
900075da:	2202      	movs	r2, #2
900075dc:	2302      	movs	r3, #2
900075de:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
900075e2:	4b05      	ldr	r3, [pc, #20]	@ (900075f8 <MX_SDRAM_BANK2_Init+0x5c>)
900075e4:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900075e6:	f005 f99d 	bl	9000c924 <HAL_SDRAM_Init>
}
900075ea:	3800      	subs	r0, #0
900075ec:	bf18      	it	ne
900075ee:	2001      	movne	r0, #1
900075f0:	b009      	add	sp, #36	@ 0x24
900075f2:	bd30      	pop	{r4, r5, pc}
900075f4:	240087b4 	.word	0x240087b4
900075f8:	52004140 	.word	0x52004140

900075fc <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
900075fc:	2800      	cmp	r0, #0
900075fe:	f040 80cd 	bne.w	9000779c <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90007602:	4b69      	ldr	r3, [pc, #420]	@ (900077a8 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007604:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90007606:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000760a:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
9000760e:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90007610:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
90007614:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90007616:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000761a:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
9000761c:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
9000761e:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90007620:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007624:	4c61      	ldr	r4, [pc, #388]	@ (900077ac <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007626:	4e62      	ldr	r6, [pc, #392]	@ (900077b0 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007628:	9200      	str	r2, [sp, #0]
9000762a:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
9000762c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007630:	430a      	orrs	r2, r1
90007632:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90007636:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
9000763a:	400a      	ands	r2, r1
9000763c:	9201      	str	r2, [sp, #4]
9000763e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90007640:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007644:	f042 0208 	orr.w	r2, r2, #8
90007648:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000764c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007650:	f002 0208 	and.w	r2, r2, #8
90007654:	9202      	str	r2, [sp, #8]
90007656:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90007658:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000765c:	f042 0210 	orr.w	r2, r2, #16
90007660:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007664:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007668:	f002 0210 	and.w	r2, r2, #16
9000766c:	9203      	str	r2, [sp, #12]
9000766e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007670:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007674:	f042 0220 	orr.w	r2, r2, #32
90007678:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000767c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007680:	f002 0220 	and.w	r2, r2, #32
90007684:	9204      	str	r2, [sp, #16]
90007686:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007688:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000768c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007690:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007694:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007698:	f002 0240 	and.w	r2, r2, #64	@ 0x40
9000769c:	9205      	str	r2, [sp, #20]
9000769e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900076a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900076a4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900076a8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900076ac:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
900076ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900076b2:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900076b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900076b8:	483e      	ldr	r0, [pc, #248]	@ (900077b4 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
900076ba:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
900076bc:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900076be:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
900076c2:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900076c4:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900076c6:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900076c8:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900076cc:	f000 fc6e 	bl	90007fac <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900076d0:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900076d4:	a907      	add	r1, sp, #28
900076d6:	4838      	ldr	r0, [pc, #224]	@ (900077b8 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900076d8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900076da:	f000 fc67 	bl	90007fac <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900076de:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900076e2:	a907      	add	r1, sp, #28
900076e4:	4835      	ldr	r0, [pc, #212]	@ (900077bc <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900076e6:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900076e8:	f000 fc60 	bl	90007fac <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900076ec:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900076f0:	a907      	add	r1, sp, #28
900076f2:	4833      	ldr	r0, [pc, #204]	@ (900077c0 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900076f4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900076f6:	f000 fc59 	bl	90007fac <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900076fa:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900076fc:	a907      	add	r1, sp, #28
900076fe:	4831      	ldr	r0, [pc, #196]	@ (900077c4 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007700:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007702:	f000 fc53 	bl	90007fac <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007706:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007708:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000770c:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90007710:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90007712:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007714:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007716:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007718:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000771c:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000771e:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007720:	4a29      	ldr	r2, [pc, #164]	@ (900077c8 <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007722:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007724:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007726:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007728:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
9000772c:	f640 0308 	movw	r3, #2056	@ 0x808
90007730:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007732:	2320      	movs	r3, #32
90007734:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007736:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000773a:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000773e:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90007740:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90007744:	f003 f8e6 	bl	9000a914 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007748:	4620      	mov	r0, r4
9000774a:	f003 f869 	bl	9000a820 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000774e:	462a      	mov	r2, r5
90007750:	210f      	movs	r1, #15
90007752:	207a      	movs	r0, #122	@ 0x7a
90007754:	f000 f9c6 	bl	90007ae4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007758:	207a      	movs	r0, #122	@ 0x7a
9000775a:	f000 f9ff 	bl	90007b5c <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000775e:	2210      	movs	r2, #16
90007760:	2104      	movs	r1, #4
90007762:	4630      	mov	r0, r6
90007764:	f7ff ff1a 	bl	9000759c <MX_SDRAM_BANK2_Init>
90007768:	4603      	mov	r3, r0
9000776a:	b9d0      	cbnz	r0, 900077a2 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000776c:	4917      	ldr	r1, [pc, #92]	@ (900077cc <BSP_SDRAM_Init+0x1d0>)
9000776e:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007770:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007772:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007774:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007776:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
9000777a:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
9000777c:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007780:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007784:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007788:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000778c:	f7ff fa30 	bl	90006bf0 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007790:	2800      	cmp	r0, #0
90007792:	bf18      	it	ne
90007794:	f06f 0004 	mvnne.w	r0, #4
}
90007798:	b00d      	add	sp, #52	@ 0x34
9000779a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000779c:	f06f 0001 	mvn.w	r0, #1
}
900077a0:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
900077a2:	f04f 30ff 	mov.w	r0, #4294967295
900077a6:	e7f7      	b.n	90007798 <BSP_SDRAM_Init+0x19c>
900077a8:	58024400 	.word	0x58024400
900077ac:	24008728 	.word	0x24008728
900077b0:	240087b4 	.word	0x240087b4
900077b4:	58020c00 	.word	0x58020c00
900077b8:	58021000 	.word	0x58021000
900077bc:	58021400 	.word	0x58021400
900077c0:	58021800 	.word	0x58021800
900077c4:	58021c00 	.word	0x58021c00
900077c8:	52000040 	.word	0x52000040
900077cc:	24008794 	.word	0x24008794

900077d0 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
900077d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900077d4:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900077d6:	2800      	cmp	r0, #0
900077d8:	d16b      	bne.n	900078b2 <BSP_TS_Init+0xe2>
900077da:	680b      	ldr	r3, [r1, #0]
900077dc:	460d      	mov	r5, r1
900077de:	1e5a      	subs	r2, r3, #1
900077e0:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
900077e4:	d265      	bcs.n	900078b2 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900077e6:	684a      	ldr	r2, [r1, #4]
900077e8:	1e51      	subs	r1, r2, #1
900077ea:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
900077ee:	d260      	bcs.n	900078b2 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
900077f0:	4293      	cmp	r3, r2
900077f2:	bf28      	it	cs
900077f4:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900077f6:	68ea      	ldr	r2, [r5, #12]
900077f8:	429a      	cmp	r2, r3
900077fa:	d85a      	bhi.n	900078b2 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900077fc:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
900077fe:	4b31      	ldr	r3, [pc, #196]	@ (900078c4 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007800:	4c31      	ldr	r4, [pc, #196]	@ (900078c8 <BSP_TS_Init+0xf8>)
90007802:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007804:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007808:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000780a:	4a30      	ldr	r2, [pc, #192]	@ (900078cc <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000780c:	4b30      	ldr	r3, [pc, #192]	@ (900078d0 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000780e:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007810:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007812:	4a30      	ldr	r2, [pc, #192]	@ (900078d4 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007814:	4b30      	ldr	r3, [pc, #192]	@ (900078d8 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007816:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007818:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000781a:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
9000781c:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000781e:	f7ff f939 	bl	90006a94 <FT5336_RegisterBusIO>
90007822:	2800      	cmp	r0, #0
90007824:	d14b      	bne.n	900078be <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007826:	a901      	add	r1, sp, #4
90007828:	4620      	mov	r0, r4
9000782a:	f7ff f829 	bl	90006880 <FT5336_ReadID>
9000782e:	2800      	cmp	r0, #0
90007830:	d145      	bne.n	900078be <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007832:	9b01      	ldr	r3, [sp, #4]
90007834:	2b51      	cmp	r3, #81	@ 0x51
90007836:	d142      	bne.n	900078be <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007838:	4b28      	ldr	r3, [pc, #160]	@ (900078dc <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000783a:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
9000783c:	4f28      	ldr	r7, [pc, #160]	@ (900078e0 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000783e:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 900078e8 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007842:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007844:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007848:	681b      	ldr	r3, [r3, #0]
9000784a:	4798      	blx	r3
9000784c:	4606      	mov	r6, r0
9000784e:	2800      	cmp	r0, #0
90007850:	d135      	bne.n	900078be <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007852:	4c24      	ldr	r4, [pc, #144]	@ (900078e4 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007854:	a902      	add	r1, sp, #8
90007856:	6838      	ldr	r0, [r7, #0]
90007858:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000785c:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007860:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007862:	e9c4 7200 	strd	r7, r2, [r4]
90007866:	68aa      	ldr	r2, [r5, #8]
90007868:	60a2      	str	r2, [r4, #8]
9000786a:	68ea      	ldr	r2, [r5, #12]
9000786c:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000786e:	4798      	blx	r3
90007870:	2800      	cmp	r0, #0
90007872:	db18      	blt.n	900078a6 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007874:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007878:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000787c:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000787e:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007882:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007884:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007886:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007888:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000788a:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000788e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007892:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007896:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000789a:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000789c:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
9000789e:	4630      	mov	r0, r6
900078a0:	b008      	add	sp, #32
900078a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
900078a6:	f06f 0604 	mvn.w	r6, #4
}
900078aa:	4630      	mov	r0, r6
900078ac:	b008      	add	sp, #32
900078ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
900078b2:	f06f 0601 	mvn.w	r6, #1
}
900078b6:	4630      	mov	r0, r6
900078b8:	b008      	add	sp, #32
900078ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
900078be:	f04f 36ff 	mov.w	r6, #4294967295
900078c2:	e7ec      	b.n	9000789e <BSP_TS_Init+0xce>
900078c4:	90006d39 	.word	0x90006d39
900078c8:	240087e8 	.word	0x240087e8
900078cc:	90006ca5 	.word	0x90006ca5
900078d0:	90007529 	.word	0x90007529
900078d4:	900074ed 	.word	0x900074ed
900078d8:	90007565 	.word	0x90007565
900078dc:	24000044 	.word	0x24000044
900078e0:	24008850 	.word	0x24008850
900078e4:	24008810 	.word	0x24008810
900078e8:	24008854 	.word	0x24008854

900078ec <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
900078ec:	2800      	cmp	r0, #0
900078ee:	d154      	bne.n	9000799a <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900078f0:	4b2b      	ldr	r3, [pc, #172]	@ (900079a0 <BSP_TS_GetState+0xb4>)
900078f2:	4a2c      	ldr	r2, [pc, #176]	@ (900079a4 <BSP_TS_GetState+0xb8>)
900078f4:	681b      	ldr	r3, [r3, #0]
900078f6:	6810      	ldr	r0, [r2, #0]
900078f8:	691b      	ldr	r3, [r3, #16]
{
900078fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900078fe:	b084      	sub	sp, #16
90007900:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007902:	a901      	add	r1, sp, #4
90007904:	4798      	blx	r3
90007906:	2800      	cmp	r0, #0
90007908:	db3f      	blt.n	9000798a <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000790a:	4b27      	ldr	r3, [pc, #156]	@ (900079a8 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
9000790c:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000790e:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007910:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90007912:	b930      	cbnz	r0, 90007922 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90007914:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007916:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
9000791a:	2000      	movs	r0, #0
}
9000791c:	b004      	add	sp, #16
9000791e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007922:	689f      	ldr	r7, [r3, #8]
90007924:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90007926:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000792a:	d433      	bmi.n	90007994 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
9000792c:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
9000792e:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007930:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007934:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007938:	d003      	beq.n	90007942 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000793a:	f10e 32ff 	add.w	r2, lr, #4294967295
9000793e:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007942:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007946:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007948:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000794a:	bf48      	it	mi
9000794c:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007950:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007954:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007956:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007958:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000795c:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007960:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007964:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007966:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007968:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000796a:	bf8c      	ite	hi
9000796c:	1b90      	subhi	r0, r2, r6
9000796e:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007970:	42a9      	cmp	r1, r5
90007972:	bf8c      	ite	hi
90007974:	1b4f      	subhi	r7, r1, r5
90007976:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007978:	42b8      	cmp	r0, r7
9000797a:	bf38      	it	cc
9000797c:	4638      	movcc	r0, r7
9000797e:	68df      	ldr	r7, [r3, #12]
90007980:	4287      	cmp	r7, r0
90007982:	d2c8      	bcs.n	90007916 <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007984:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007986:	62d9      	str	r1, [r3, #44]	@ 0x2c
90007988:	e7c7      	b.n	9000791a <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000798a:	f06f 0004 	mvn.w	r0, #4
}
9000798e:	b004      	add	sp, #16
90007990:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90007994:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007996:	4642      	mov	r2, r8
90007998:	e7ca      	b.n	90007930 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
9000799a:	f06f 0001 	mvn.w	r0, #1
}
9000799e:	4770      	bx	lr
900079a0:	24008854 	.word	0x24008854
900079a4:	24008850 	.word	0x24008850
900079a8:	24008810 	.word	0x24008810

900079ac <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
900079ac:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900079ae:	4c19      	ldr	r4, [pc, #100]	@ (90007a14 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
900079b0:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
900079b2:	4b19      	ldr	r3, [pc, #100]	@ (90007a18 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900079b4:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
900079b8:	4818      	ldr	r0, [pc, #96]	@ (90007a1c <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
900079ba:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900079be:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
900079c2:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900079c4:	4c16      	ldr	r4, [pc, #88]	@ (90007a20 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
900079c6:	f041 0101 	orr.w	r1, r1, #1
900079ca:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
900079cc:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
900079ce:	6819      	ldr	r1, [r3, #0]
900079d0:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900079d2:	4914      	ldr	r1, [pc, #80]	@ (90007a24 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
900079d4:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
900079d6:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900079d8:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900079da:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900079dc:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
900079de:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
900079e0:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
900079e2:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
900079e4:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
900079e6:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
900079e8:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
900079ea:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
900079ec:	6818      	ldr	r0, [r3, #0]
900079ee:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
900079f2:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
900079f4:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900079f6:	6823      	ldr	r3, [r4, #0]
900079f8:	4019      	ands	r1, r3
900079fa:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
900079fe:	d203      	bcs.n	90007a08 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007a00:	4b09      	ldr	r3, [pc, #36]	@ (90007a28 <SystemInit+0x7c>)
90007a02:	2201      	movs	r2, #1
90007a04:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007a08:	4a08      	ldr	r2, [pc, #32]	@ (90007a2c <SystemInit+0x80>)
90007a0a:	4b02      	ldr	r3, [pc, #8]	@ (90007a14 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007a0c:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007a10:	609a      	str	r2, [r3, #8]
}
90007a12:	4770      	bx	lr
90007a14:	e000ed00 	.word	0xe000ed00
90007a18:	58024400 	.word	0x58024400
90007a1c:	eaf6ed7f 	.word	0xeaf6ed7f
90007a20:	5c001000 	.word	0x5c001000
90007a24:	ffff0000 	.word	0xffff0000
90007a28:	51008000 	.word	0x51008000
90007a2c:	90000000 	.word	0x90000000

90007a30 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007a30:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007a32:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a34:	4c12      	ldr	r4, [pc, #72]	@ (90007a80 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007a36:	f000 f843 	bl	90007ac0 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a3a:	f003 fcc1 	bl	9000b3c0 <HAL_RCC_GetSysClockFreq>
90007a3e:	4b11      	ldr	r3, [pc, #68]	@ (90007a84 <HAL_Init+0x54>)
90007a40:	4911      	ldr	r1, [pc, #68]	@ (90007a88 <HAL_Init+0x58>)
90007a42:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a44:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a46:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a4a:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a4e:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a50:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a52:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007a56:	490d      	ldr	r1, [pc, #52]	@ (90007a8c <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a58:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a5c:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a5e:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007a62:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007a64:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a66:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007a68:	f7fc faec 	bl	90004044 <HAL_InitTick>
90007a6c:	b110      	cbz	r0, 90007a74 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007a6e:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007a70:	4620      	mov	r0, r4
90007a72:	bd10      	pop	{r4, pc}
90007a74:	4604      	mov	r4, r0
  HAL_MspInit();
90007a76:	f7fc f8a3 	bl	90003bc0 <HAL_MspInit>
}
90007a7a:	4620      	mov	r0, r4
90007a7c:	bd10      	pop	{r4, pc}
90007a7e:	bf00      	nop
90007a80:	24000074 	.word	0x24000074
90007a84:	58024400 	.word	0x58024400
90007a88:	9002a1a8 	.word	0x9002a1a8
90007a8c:	24000078 	.word	0x24000078

90007a90 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007a90:	4a03      	ldr	r2, [pc, #12]	@ (90007aa0 <HAL_IncTick+0x10>)
90007a92:	4b04      	ldr	r3, [pc, #16]	@ (90007aa4 <HAL_IncTick+0x14>)
90007a94:	6811      	ldr	r1, [r2, #0]
90007a96:	781b      	ldrb	r3, [r3, #0]
90007a98:	440b      	add	r3, r1
90007a9a:	6013      	str	r3, [r2, #0]
}
90007a9c:	4770      	bx	lr
90007a9e:	bf00      	nop
90007aa0:	24008858 	.word	0x24008858
90007aa4:	2400007c 	.word	0x2400007c

90007aa8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007aa8:	4b01      	ldr	r3, [pc, #4]	@ (90007ab0 <HAL_GetTick+0x8>)
90007aaa:	6818      	ldr	r0, [r3, #0]
}
90007aac:	4770      	bx	lr
90007aae:	bf00      	nop
90007ab0:	24008858 	.word	0x24008858

90007ab4 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007ab4:	4b01      	ldr	r3, [pc, #4]	@ (90007abc <HAL_GetREVID+0x8>)
90007ab6:	6818      	ldr	r0, [r3, #0]
}
90007ab8:	0c00      	lsrs	r0, r0, #16
90007aba:	4770      	bx	lr
90007abc:	5c001000 	.word	0x5c001000

90007ac0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007ac0:	4906      	ldr	r1, [pc, #24]	@ (90007adc <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007ac2:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007ac6:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007ac8:	4b05      	ldr	r3, [pc, #20]	@ (90007ae0 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007aca:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007acc:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007ad0:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007ad4:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90007ad6:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90007ad8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90007ada:	4770      	bx	lr
90007adc:	e000ed00 	.word	0xe000ed00
90007ae0:	05fa0000 	.word	0x05fa0000

90007ae4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007ae4:	4b1a      	ldr	r3, [pc, #104]	@ (90007b50 <HAL_NVIC_SetPriority+0x6c>)
90007ae6:	68db      	ldr	r3, [r3, #12]
90007ae8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90007aec:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007aee:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007af2:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007af6:	f1be 0f04 	cmp.w	lr, #4
90007afa:	bf28      	it	cs
90007afc:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007b00:	f1bc 0f06 	cmp.w	ip, #6
90007b04:	d91a      	bls.n	90007b3c <HAL_NVIC_SetPriority+0x58>
90007b06:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90007b0a:	f04f 33ff 	mov.w	r3, #4294967295
90007b0e:	fa03 f30c 	lsl.w	r3, r3, ip
90007b12:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007b16:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90007b1a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007b1c:	fa03 f30e 	lsl.w	r3, r3, lr
90007b20:	ea21 0303 	bic.w	r3, r1, r3
90007b24:	fa03 f30c 	lsl.w	r3, r3, ip
90007b28:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007b2c:	ea4f 1303 	mov.w	r3, r3, lsl #4
90007b30:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90007b32:	db06      	blt.n	90007b42 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007b34:	4a07      	ldr	r2, [pc, #28]	@ (90007b54 <HAL_NVIC_SetPriority+0x70>)
90007b36:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007b38:	f85d fb04 	ldr.w	pc, [sp], #4
90007b3c:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007b3e:	4694      	mov	ip, r2
90007b40:	e7e9      	b.n	90007b16 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007b42:	f000 000f 	and.w	r0, r0, #15
90007b46:	4a04      	ldr	r2, [pc, #16]	@ (90007b58 <HAL_NVIC_SetPriority+0x74>)
90007b48:	5413      	strb	r3, [r2, r0]
90007b4a:	f85d fb04 	ldr.w	pc, [sp], #4
90007b4e:	bf00      	nop
90007b50:	e000ed00 	.word	0xe000ed00
90007b54:	e000e400 	.word	0xe000e400
90007b58:	e000ed14 	.word	0xe000ed14

90007b5c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007b5c:	2800      	cmp	r0, #0
90007b5e:	db07      	blt.n	90007b70 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007b60:	2301      	movs	r3, #1
90007b62:	f000 011f 	and.w	r1, r0, #31
90007b66:	4a03      	ldr	r2, [pc, #12]	@ (90007b74 <HAL_NVIC_EnableIRQ+0x18>)
90007b68:	0940      	lsrs	r0, r0, #5
90007b6a:	408b      	lsls	r3, r1
90007b6c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90007b70:	4770      	bx	lr
90007b72:	bf00      	nop
90007b74:	e000e100 	.word	0xe000e100

90007b78 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007b78:	2800      	cmp	r0, #0
90007b7a:	db0c      	blt.n	90007b96 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007b7c:	0943      	lsrs	r3, r0, #5
90007b7e:	2201      	movs	r2, #1
90007b80:	f000 001f 	and.w	r0, r0, #31
90007b84:	4904      	ldr	r1, [pc, #16]	@ (90007b98 <HAL_NVIC_DisableIRQ+0x20>)
90007b86:	3320      	adds	r3, #32
90007b88:	4082      	lsls	r2, r0
90007b8a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90007b8e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007b92:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007b96:	4770      	bx	lr
90007b98:	e000e100 	.word	0xe000e100

90007b9c <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90007b9c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007ba0:	4b04      	ldr	r3, [pc, #16]	@ (90007bb4 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90007ba2:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007ba4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007ba6:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90007baa:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90007bac:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90007bb0:	4770      	bx	lr
90007bb2:	bf00      	nop
90007bb4:	e000ed00 	.word	0xe000ed00

90007bb8 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90007bb8:	4b06      	ldr	r3, [pc, #24]	@ (90007bd4 <HAL_MPU_Enable+0x1c>)
90007bba:	f040 0001 	orr.w	r0, r0, #1
90007bbe:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90007bc2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90007bc4:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90007bc8:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90007bca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007bce:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90007bd2:	4770      	bx	lr
90007bd4:	e000ed00 	.word	0xe000ed00

90007bd8 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90007bd8:	4a17      	ldr	r2, [pc, #92]	@ (90007c38 <HAL_MPU_ConfigRegion+0x60>)
90007bda:	7843      	ldrb	r3, [r0, #1]
90007bdc:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  if ((MPU_Init->Enable) != 0UL)
90007be0:	7801      	ldrb	r1, [r0, #0]
90007be2:	b321      	cbz	r1, 90007c2e <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90007be4:	6843      	ldr	r3, [r0, #4]
{
90007be6:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
90007be8:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007bec:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007bee:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007bf2:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90007bf4:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007bf8:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90007bfc:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007c00:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90007c02:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007c04:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90007c08:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007c0c:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90007c10:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007c14:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
90007c18:	7a01      	ldrb	r1, [r0, #8]
90007c1a:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90007c1e:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90007c22:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007c26:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90007c2a:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
90007c2e:	f8c2 109c 	str.w	r1, [r2, #156]	@ 0x9c
    MPU->RASR = 0x00;
90007c32:	f8c2 10a0 	str.w	r1, [r2, #160]	@ 0xa0
90007c36:	4770      	bx	lr
90007c38:	e000ed00 	.word	0xe000ed00

90007c3c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90007c3c:	2800      	cmp	r0, #0
90007c3e:	d036      	beq.n	90007cae <HAL_CRC_Init+0x72>
{
90007c40:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90007c42:	7f43      	ldrb	r3, [r0, #29]
90007c44:	4604      	mov	r4, r0
90007c46:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007c4a:	b363      	cbz	r3, 90007ca6 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90007c4c:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007c4e:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90007c50:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007c52:	b9f3      	cbnz	r3, 90007c92 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90007c54:	6823      	ldr	r3, [r4, #0]
90007c56:	4a17      	ldr	r2, [pc, #92]	@ (90007cb4 <HAL_CRC_Init+0x78>)
90007c58:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90007c5a:	689a      	ldr	r2, [r3, #8]
90007c5c:	f022 0218 	bic.w	r2, r2, #24
90007c60:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90007c62:	7962      	ldrb	r2, [r4, #5]
90007c64:	b18a      	cbz	r2, 90007c8a <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90007c66:	6922      	ldr	r2, [r4, #16]
90007c68:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007c6a:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007c6c:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007c70:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90007c74:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90007c76:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007c78:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007c7a:	689a      	ldr	r2, [r3, #8]
90007c7c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90007c80:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90007c82:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007c84:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90007c86:	7761      	strb	r1, [r4, #29]
}
90007c88:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007c8a:	f04f 32ff 	mov.w	r2, #4294967295
90007c8e:	611a      	str	r2, [r3, #16]
90007c90:	e7eb      	b.n	90007c6a <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90007c92:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90007c96:	4620      	mov	r0, r4
90007c98:	f000 f80e 	bl	90007cb8 <HAL_CRCEx_Polynomial_Set>
90007c9c:	b908      	cbnz	r0, 90007ca2 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007c9e:	6823      	ldr	r3, [r4, #0]
90007ca0:	e7df      	b.n	90007c62 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90007ca2:	2001      	movs	r0, #1
}
90007ca4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90007ca6:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90007ca8:	f7fb ffa4 	bl	90003bf4 <HAL_CRC_MspInit>
90007cac:	e7ce      	b.n	90007c4c <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90007cae:	2001      	movs	r0, #1
}
90007cb0:	4770      	bx	lr
90007cb2:	bf00      	nop
90007cb4:	04c11db7 	.word	0x04c11db7

90007cb8 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007cb8:	07cb      	lsls	r3, r1, #31
90007cba:	d51a      	bpl.n	90007cf2 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90007cbc:	231f      	movs	r3, #31
{
90007cbe:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007cc0:	3b01      	subs	r3, #1
90007cc2:	1c5c      	adds	r4, r3, #1
90007cc4:	fa21 fc03 	lsr.w	ip, r1, r3
90007cc8:	d015      	beq.n	90007cf6 <HAL_CRCEx_Polynomial_Set+0x3e>
90007cca:	f01c 0f01 	tst.w	ip, #1
90007cce:	d0f7      	beq.n	90007cc0 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90007cd0:	2a18      	cmp	r2, #24
90007cd2:	d811      	bhi.n	90007cf8 <HAL_CRCEx_Polynomial_Set+0x40>
90007cd4:	e8df f002 	tbb	[pc, r2]
90007cd8:	10101016 	.word	0x10101016
90007cdc:	10101010 	.word	0x10101010
90007ce0:	10101024 	.word	0x10101024
90007ce4:	10101010 	.word	0x10101010
90007ce8:	10101021 	.word	0x10101021
90007cec:	10101010 	.word	0x10101010
90007cf0:	14          	.byte	0x14
90007cf1:	00          	.byte	0x00
90007cf2:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90007cf4:	4770      	bx	lr
    switch (PolyLength)
90007cf6:	b12a      	cbz	r2, 90007d04 <HAL_CRCEx_Polynomial_Set+0x4c>
90007cf8:	2001      	movs	r0, #1
}
90007cfa:	f85d 4b04 	ldr.w	r4, [sp], #4
90007cfe:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90007d00:	2b06      	cmp	r3, #6
90007d02:	d8f9      	bhi.n	90007cf8 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90007d04:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007d06:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90007d08:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007d0a:	68a3      	ldr	r3, [r4, #8]
90007d0c:	f023 0318 	bic.w	r3, r3, #24
90007d10:	4313      	orrs	r3, r2
90007d12:	60a3      	str	r3, [r4, #8]
}
90007d14:	f85d 4b04 	ldr.w	r4, [sp], #4
90007d18:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90007d1a:	2b07      	cmp	r3, #7
90007d1c:	d9f2      	bls.n	90007d04 <HAL_CRCEx_Polynomial_Set+0x4c>
90007d1e:	e7eb      	b.n	90007cf8 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90007d20:	2b0f      	cmp	r3, #15
90007d22:	d9ef      	bls.n	90007d04 <HAL_CRCEx_Polynomial_Set+0x4c>
90007d24:	e7e8      	b.n	90007cf8 <HAL_CRCEx_Polynomial_Set+0x40>
90007d26:	bf00      	nop

90007d28 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90007d28:	2800      	cmp	r0, #0
90007d2a:	d035      	beq.n	90007d98 <HAL_DMA2D_Init+0x70>
{
90007d2c:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90007d2e:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
90007d32:	4604      	mov	r4, r0
90007d34:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007d38:	b34b      	cbz	r3, 90007d8e <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d3a:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007d3c:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d3e:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007d40:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d44:	69e1      	ldr	r1, [r4, #28]
90007d46:	681d      	ldr	r5, [r3, #0]
90007d48:	4814      	ldr	r0, [pc, #80]	@ (90007d9c <HAL_DMA2D_Init+0x74>)
90007d4a:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d4c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d4e:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d50:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d52:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d54:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d56:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d58:	4302      	orrs	r2, r0
90007d5a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90007d5c:	4810      	ldr	r0, [pc, #64]	@ (90007da0 <HAL_DMA2D_Init+0x78>)
90007d5e:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d60:	4910      	ldr	r1, [pc, #64]	@ (90007da4 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d62:	4302      	orrs	r2, r0
90007d64:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d66:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90007d68:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d6a:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d6e:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d70:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d72:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d74:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90007d76:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007d7a:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d7c:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
90007d80:	430a      	orrs	r2, r1
90007d82:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007d84:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007d86:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007d88:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90007d8c:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90007d8e:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
90007d92:	f7fb ff47 	bl	90003c24 <HAL_DMA2D_MspInit>
90007d96:	e7d0      	b.n	90007d3a <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007d98:	2001      	movs	r0, #1
}
90007d9a:	4770      	bx	lr
90007d9c:	fff8ffbf 	.word	0xfff8ffbf
90007da0:	fffffef8 	.word	0xfffffef8
90007da4:	ffff0000 	.word	0xffff0000

90007da8 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90007da8:	4770      	bx	lr
90007daa:	bf00      	nop

90007dac <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90007dac:	4770      	bx	lr
90007dae:	bf00      	nop

90007db0 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007db0:	6803      	ldr	r3, [r0, #0]
{
90007db2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007db4:	685d      	ldr	r5, [r3, #4]
{
90007db6:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007db8:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007dba:	07ea      	lsls	r2, r5, #31
90007dbc:	d501      	bpl.n	90007dc2 <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90007dbe:	05f1      	lsls	r1, r6, #23
90007dc0:	d456      	bmi.n	90007e70 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90007dc2:	06aa      	lsls	r2, r5, #26
90007dc4:	d501      	bpl.n	90007dca <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90007dc6:	04b3      	lsls	r3, r6, #18
90007dc8:	d43b      	bmi.n	90007e42 <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007dca:	0728      	lsls	r0, r5, #28
90007dcc:	d501      	bpl.n	90007dd2 <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007dce:	0531      	lsls	r1, r6, #20
90007dd0:	d421      	bmi.n	90007e16 <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90007dd2:	076a      	lsls	r2, r5, #29
90007dd4:	d501      	bpl.n	90007dda <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90007dd6:	0573      	lsls	r3, r6, #21
90007dd8:	d472      	bmi.n	90007ec0 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007dda:	07a8      	lsls	r0, r5, #30
90007ddc:	d501      	bpl.n	90007de2 <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90007dde:	05b1      	lsls	r1, r6, #22
90007de0:	d404      	bmi.n	90007dec <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90007de2:	06ea      	lsls	r2, r5, #27
90007de4:	d501      	bpl.n	90007dea <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007de6:	04f3      	lsls	r3, r6, #19
90007de8:	d457      	bmi.n	90007e9a <HAL_DMA2D_IRQHandler+0xea>
}
90007dea:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007dec:	6823      	ldr	r3, [r4, #0]
90007dee:	681a      	ldr	r2, [r3, #0]
90007df0:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90007df4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007df6:	2202      	movs	r2, #2
90007df8:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007dfa:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007dfc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007dfe:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007e00:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007e02:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007e06:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
90007e0a:	6a23      	ldr	r3, [r4, #32]
90007e0c:	2b00      	cmp	r3, #0
90007e0e:	d0e8      	beq.n	90007de2 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90007e10:	4620      	mov	r0, r4
90007e12:	4798      	blx	r3
90007e14:	e7e5      	b.n	90007de2 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90007e16:	6823      	ldr	r3, [r4, #0]
90007e18:	681a      	ldr	r2, [r3, #0]
90007e1a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90007e1e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90007e20:	2208      	movs	r2, #8
90007e22:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e24:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90007e26:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007e28:	4313      	orrs	r3, r2
90007e2a:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e2c:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007e30:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007e32:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90007e34:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e38:	2b00      	cmp	r3, #0
90007e3a:	d0ca      	beq.n	90007dd2 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90007e3c:	4620      	mov	r0, r4
90007e3e:	4798      	blx	r3
90007e40:	e7c7      	b.n	90007dd2 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90007e42:	6823      	ldr	r3, [r4, #0]
90007e44:	681a      	ldr	r2, [r3, #0]
90007e46:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90007e4a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90007e4c:	2220      	movs	r2, #32
90007e4e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e50:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90007e52:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90007e54:	f043 0302 	orr.w	r3, r3, #2
90007e58:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e5a:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007e5e:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007e60:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
90007e62:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e66:	2b00      	cmp	r3, #0
90007e68:	d0af      	beq.n	90007dca <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90007e6a:	4620      	mov	r0, r4
90007e6c:	4798      	blx	r3
90007e6e:	e7ac      	b.n	90007dca <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90007e70:	681a      	ldr	r2, [r3, #0]
90007e72:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
90007e76:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007e78:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90007e7a:	f042 0201 	orr.w	r2, r2, #1
90007e7e:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90007e80:	2201      	movs	r2, #1
90007e82:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e84:	2304      	movs	r3, #4
90007e86:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007e8a:	2300      	movs	r3, #0
90007e8c:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e90:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90007e92:	2b00      	cmp	r3, #0
90007e94:	d095      	beq.n	90007dc2 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90007e96:	4798      	blx	r3
90007e98:	e793      	b.n	90007dc2 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007e9a:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007e9c:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007e9e:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90007ea0:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007ea2:	681a      	ldr	r2, [r3, #0]
90007ea4:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90007ea8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007eaa:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007eac:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007eae:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007eb0:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007eb4:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007eb6:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007eba:	f7ff ff77 	bl	90007dac <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90007ebe:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007ec0:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007ec2:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007ec4:	681a      	ldr	r2, [r3, #0]
90007ec6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90007eca:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90007ecc:	2204      	movs	r2, #4
90007ece:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007ed0:	f7ff ff6a 	bl	90007da8 <HAL_DMA2D_LineEventCallback>
90007ed4:	e781      	b.n	90007dda <HAL_DMA2D_IRQHandler+0x2a>
90007ed6:	bf00      	nop

90007ed8 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007ed8:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90007edc:	2a01      	cmp	r2, #1
90007ede:	d05f      	beq.n	90007fa0 <HAL_DMA2D_ConfigLayer+0xc8>
90007ee0:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007ee2:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007ee6:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007ee8:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90007eec:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90007ef0:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
90007ef2:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007ef4:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
90007ef8:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007efc:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007efe:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90007f00:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007f02:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007f04:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007f06:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f0a:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007f0e:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007f10:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f12:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007f16:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f1a:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f1c:	d923      	bls.n	90007f66 <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90007f1e:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007f22:	b971      	cbnz	r1, 90007f42 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f24:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007f26:	491f      	ldr	r1, [pc, #124]	@ (90007fa4 <HAL_DMA2D_ConfigLayer+0xcc>)
90007f28:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f2a:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f2c:	4311      	orrs	r1, r2
90007f2e:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f30:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90007f32:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007f34:	2101      	movs	r1, #1

  return HAL_OK;
90007f36:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007f38:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
90007f3c:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
90007f40:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007f42:	2d0b      	cmp	r5, #11
90007f44:	d12a      	bne.n	90007f9c <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90007f46:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90007f48:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
90007f4c:	4816      	ldr	r0, [pc, #88]	@ (90007fa8 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f4e:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f52:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f54:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f58:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f5a:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f5e:	430a      	orrs	r2, r1
90007f60:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f62:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f64:	e7e5      	b.n	90007f32 <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007f66:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90007f6a:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007f6c:	b959      	cbnz	r1, 90007f86 <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f6e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007f70:	490c      	ldr	r1, [pc, #48]	@ (90007fa4 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f72:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f74:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f76:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f78:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f7a:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f7e:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f80:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f82:	62a0      	str	r0, [r4, #40]	@ 0x28
90007f84:	e7d5      	b.n	90007f32 <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f86:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007f88:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f8c:	4905      	ldr	r1, [pc, #20]	@ (90007fa4 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f8e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f90:	4029      	ands	r1, r5
90007f92:	4311      	orrs	r1, r2
90007f94:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f96:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007f98:	6226      	str	r6, [r4, #32]
90007f9a:	e7ca      	b.n	90007f32 <HAL_DMA2D_ConfigLayer+0x5a>
90007f9c:	4801      	ldr	r0, [pc, #4]	@ (90007fa4 <HAL_DMA2D_ConfigLayer+0xcc>)
90007f9e:	e7d6      	b.n	90007f4e <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90007fa0:	2002      	movs	r0, #2
}
90007fa2:	4770      	bx	lr
90007fa4:	00ccfff0 	.word	0x00ccfff0
90007fa8:	00c0fff0 	.word	0x00c0fff0

90007fac <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90007fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007fb0:	680c      	ldr	r4, [r1, #0]
{
90007fb2:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007fb4:	2c00      	cmp	r4, #0
90007fb6:	f000 80a5 	beq.w	90008104 <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
90007fba:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007fbc:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90007fc0:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007fc4:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007fc6:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
90007fca:	ea1c 0a04 	ands.w	sl, ip, r4
90007fce:	f000 8094 	beq.w	900080fa <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fd2:	9900      	ldr	r1, [sp, #0]
90007fd4:	005f      	lsls	r7, r3, #1
90007fd6:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007fd8:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fda:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007fde:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fe2:	f102 38ff 	add.w	r8, r2, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007fe6:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fe8:	f1b8 0f01 	cmp.w	r8, #1
90007fec:	f240 808d 	bls.w	9000810a <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007ff0:	2a03      	cmp	r2, #3
90007ff2:	f040 80cb 	bne.w	9000818c <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007ff6:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
90007ff8:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007ffa:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007ffe:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008002:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90008006:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90008008:	d077      	beq.n	900080fa <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000800a:	4e7f      	ldr	r6, [pc, #508]	@ (90008208 <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000800c:	f003 0703 	and.w	r7, r3, #3
90008010:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008012:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008016:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008018:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000801c:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008020:	497a      	ldr	r1, [pc, #488]	@ (9000820c <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008022:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
90008026:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
9000802a:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000802e:	4288      	cmp	r0, r1
90008030:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008034:	f002 0202 	and.w	r2, r2, #2
90008038:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
9000803c:	9203      	str	r2, [sp, #12]
9000803e:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90008040:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008042:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008046:	d031      	beq.n	900080ac <HAL_GPIO_Init+0x100>
90008048:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000804c:	4288      	cmp	r0, r1
9000804e:	f000 80b0 	beq.w	900081b2 <HAL_GPIO_Init+0x206>
90008052:	496f      	ldr	r1, [pc, #444]	@ (90008210 <HAL_GPIO_Init+0x264>)
90008054:	4288      	cmp	r0, r1
90008056:	f000 80b2 	beq.w	900081be <HAL_GPIO_Init+0x212>
9000805a:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 90008214 <HAL_GPIO_Init+0x268>
9000805e:	4560      	cmp	r0, ip
90008060:	f000 80a1 	beq.w	900081a6 <HAL_GPIO_Init+0x1fa>
90008064:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 90008218 <HAL_GPIO_Init+0x26c>
90008068:	4560      	cmp	r0, ip
9000806a:	f000 80b4 	beq.w	900081d6 <HAL_GPIO_Init+0x22a>
9000806e:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 9000821c <HAL_GPIO_Init+0x270>
90008072:	4560      	cmp	r0, ip
90008074:	f000 80b5 	beq.w	900081e2 <HAL_GPIO_Init+0x236>
90008078:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 90008220 <HAL_GPIO_Init+0x274>
9000807c:	4560      	cmp	r0, ip
9000807e:	f000 80a4 	beq.w	900081ca <HAL_GPIO_Init+0x21e>
90008082:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 90008224 <HAL_GPIO_Init+0x278>
90008086:	4560      	cmp	r0, ip
90008088:	f000 80b1 	beq.w	900081ee <HAL_GPIO_Init+0x242>
9000808c:	f8df c198 	ldr.w	ip, [pc, #408]	@ 90008228 <HAL_GPIO_Init+0x27c>
90008090:	4560      	cmp	r0, ip
90008092:	f000 80b2 	beq.w	900081fa <HAL_GPIO_Init+0x24e>
90008096:	f8df c194 	ldr.w	ip, [pc, #404]	@ 9000822c <HAL_GPIO_Init+0x280>
9000809a:	4560      	cmp	r0, ip
9000809c:	bf0c      	ite	eq
9000809e:	f04f 0c09 	moveq.w	ip, #9
900080a2:	f04f 0c0a 	movne.w	ip, #10
900080a6:	fa0c f707 	lsl.w	r7, ip, r7
900080aa:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
900080ac:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900080ae:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
900080b0:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
900080b4:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
900080b8:	bf4c      	ite	mi
900080ba:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
900080be:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900080c0:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
900080c2:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
900080c6:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
900080ca:	bf54      	ite	pl
900080cc:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
900080ce:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900080d2:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
900080d4:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
900080d8:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
900080dc:	bf54      	ite	pl
900080de:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
900080e0:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900080e4:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
900080e6:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
900080ea:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
900080ee:	bf54      	ite	pl
900080f0:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
900080f2:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
900080f6:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
900080fa:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900080fc:	fa34 f203 	lsrs.w	r2, r4, r3
90008100:	f47f af61 	bne.w	90007fc6 <HAL_GPIO_Init+0x1a>
  }
}
90008104:	b005      	add	sp, #20
90008106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
9000810a:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000810c:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
9000810e:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
90008112:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008114:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
90008118:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000811c:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
9000811e:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008122:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
90008124:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008128:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000812c:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008130:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90008134:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008138:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
9000813c:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008140:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
90008144:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008148:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000814c:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008150:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008154:	f47f af4f 	bne.w	90007ff6 <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008158:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000815c:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
9000815e:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008162:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008166:	6909      	ldr	r1, [r1, #16]
90008168:	eb00 0888 	add.w	r8, r0, r8, lsl #2
9000816c:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
90008170:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008174:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008176:	210f      	movs	r1, #15
90008178:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000817c:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000817e:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008182:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
90008186:	f8c8 c020 	str.w	ip, [r8, #32]
9000818a:	e734      	b.n	90007ff6 <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000818c:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
9000818e:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008192:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008194:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008198:	fa01 fc07 	lsl.w	ip, r1, r7
9000819c:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900081a0:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900081a4:	e727      	b.n	90007ff6 <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900081a6:	f04f 0c03 	mov.w	ip, #3
900081aa:	fa0c f707 	lsl.w	r7, ip, r7
900081ae:	433a      	orrs	r2, r7
900081b0:	e77c      	b.n	900080ac <HAL_GPIO_Init+0x100>
900081b2:	f04f 0c01 	mov.w	ip, #1
900081b6:	fa0c f707 	lsl.w	r7, ip, r7
900081ba:	433a      	orrs	r2, r7
900081bc:	e776      	b.n	900080ac <HAL_GPIO_Init+0x100>
900081be:	f04f 0c02 	mov.w	ip, #2
900081c2:	fa0c f707 	lsl.w	r7, ip, r7
900081c6:	433a      	orrs	r2, r7
900081c8:	e770      	b.n	900080ac <HAL_GPIO_Init+0x100>
900081ca:	f04f 0c06 	mov.w	ip, #6
900081ce:	fa0c f707 	lsl.w	r7, ip, r7
900081d2:	433a      	orrs	r2, r7
900081d4:	e76a      	b.n	900080ac <HAL_GPIO_Init+0x100>
900081d6:	f04f 0c04 	mov.w	ip, #4
900081da:	fa0c f707 	lsl.w	r7, ip, r7
900081de:	433a      	orrs	r2, r7
900081e0:	e764      	b.n	900080ac <HAL_GPIO_Init+0x100>
900081e2:	f04f 0c05 	mov.w	ip, #5
900081e6:	fa0c f707 	lsl.w	r7, ip, r7
900081ea:	433a      	orrs	r2, r7
900081ec:	e75e      	b.n	900080ac <HAL_GPIO_Init+0x100>
900081ee:	f04f 0c07 	mov.w	ip, #7
900081f2:	fa0c f707 	lsl.w	r7, ip, r7
900081f6:	433a      	orrs	r2, r7
900081f8:	e758      	b.n	900080ac <HAL_GPIO_Init+0x100>
900081fa:	f04f 0c08 	mov.w	ip, #8
900081fe:	fa0c f707 	lsl.w	r7, ip, r7
90008202:	433a      	orrs	r2, r7
90008204:	e752      	b.n	900080ac <HAL_GPIO_Init+0x100>
90008206:	bf00      	nop
90008208:	58024400 	.word	0x58024400
9000820c:	58020000 	.word	0x58020000
90008210:	58020800 	.word	0x58020800
90008214:	58020c00 	.word	0x58020c00
90008218:	58021000 	.word	0x58021000
9000821c:	58021400 	.word	0x58021400
90008220:	58021800 	.word	0x58021800
90008224:	58021c00 	.word	0x58021c00
90008228:	58022000 	.word	0x58022000
9000822c:	58022400 	.word	0x58022400

90008230 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90008230:	2900      	cmp	r1, #0
90008232:	f000 80ac 	beq.w	9000838e <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
90008236:	2300      	movs	r3, #0
{
90008238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
9000823c:	2601      	movs	r6, #1
{
9000823e:	b083      	sub	sp, #12
90008240:	f8df a168 	ldr.w	sl, [pc, #360]	@ 900083ac <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008244:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008248:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
9000824c:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
90008250:	ea12 0c01 	ands.w	ip, r2, r1
90008254:	d073      	beq.n	9000833e <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
90008256:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000825a:	f003 0403 	and.w	r4, r3, #3
9000825e:	4455      	add	r5, sl
90008260:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
90008262:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008264:	fa08 fe04 	lsl.w	lr, r8, r4
90008268:	ea0e 0707 	and.w	r7, lr, r7
9000826c:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000826e:	4f4b      	ldr	r7, [pc, #300]	@ (9000839c <HAL_GPIO_DeInit+0x16c>)
90008270:	42b8      	cmp	r0, r7
90008272:	d027      	beq.n	900082c4 <HAL_GPIO_DeInit+0x94>
90008274:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
90008278:	42b8      	cmp	r0, r7
9000827a:	d067      	beq.n	9000834c <HAL_GPIO_DeInit+0x11c>
9000827c:	4f48      	ldr	r7, [pc, #288]	@ (900083a0 <HAL_GPIO_DeInit+0x170>)
9000827e:	42b8      	cmp	r0, r7
90008280:	d067      	beq.n	90008352 <HAL_GPIO_DeInit+0x122>
90008282:	4f48      	ldr	r7, [pc, #288]	@ (900083a4 <HAL_GPIO_DeInit+0x174>)
90008284:	42b8      	cmp	r0, r7
90008286:	d06e      	beq.n	90008366 <HAL_GPIO_DeInit+0x136>
90008288:	4f47      	ldr	r7, [pc, #284]	@ (900083a8 <HAL_GPIO_DeInit+0x178>)
9000828a:	42b8      	cmp	r0, r7
9000828c:	d070      	beq.n	90008370 <HAL_GPIO_DeInit+0x140>
9000828e:	f8df b120 	ldr.w	fp, [pc, #288]	@ 900083b0 <HAL_GPIO_DeInit+0x180>
90008292:	4558      	cmp	r0, fp
90008294:	d062      	beq.n	9000835c <HAL_GPIO_DeInit+0x12c>
90008296:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 900083b4 <HAL_GPIO_DeInit+0x184>
9000829a:	4558      	cmp	r0, fp
9000829c:	d072      	beq.n	90008384 <HAL_GPIO_DeInit+0x154>
9000829e:	f8df b118 	ldr.w	fp, [pc, #280]	@ 900083b8 <HAL_GPIO_DeInit+0x188>
900082a2:	4558      	cmp	r0, fp
900082a4:	d074      	beq.n	90008390 <HAL_GPIO_DeInit+0x160>
900082a6:	f8df b114 	ldr.w	fp, [pc, #276]	@ 900083bc <HAL_GPIO_DeInit+0x18c>
900082aa:	4558      	cmp	r0, fp
900082ac:	d065      	beq.n	9000837a <HAL_GPIO_DeInit+0x14a>
900082ae:	f8df b110 	ldr.w	fp, [pc, #272]	@ 900083c0 <HAL_GPIO_DeInit+0x190>
900082b2:	4558      	cmp	r0, fp
900082b4:	bf14      	ite	ne
900082b6:	f04f 0b0a 	movne.w	fp, #10
900082ba:	f04f 0b09 	moveq.w	fp, #9
900082be:	fa0b f404 	lsl.w	r4, fp, r4
900082c2:	e000      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
900082c4:	2400      	movs	r4, #0
900082c6:	9f01      	ldr	r7, [sp, #4]
900082c8:	42a7      	cmp	r7, r4
900082ca:	d119      	bne.n	90008300 <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900082cc:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
900082d0:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
900082d4:	ea27 070c 	bic.w	r7, r7, ip
900082d8:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900082dc:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
900082e0:	ea27 070c 	bic.w	r7, r7, ip
900082e4:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
900082e8:	6867      	ldr	r7, [r4, #4]
900082ea:	ea27 070c 	bic.w	r7, r7, ip
900082ee:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900082f0:	6827      	ldr	r7, [r4, #0]
900082f2:	ea27 070c 	bic.w	r7, r7, ip
900082f6:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900082f8:	68ac      	ldr	r4, [r5, #8]
900082fa:	ea24 040e 	bic.w	r4, r4, lr
900082fe:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008300:	005d      	lsls	r5, r3, #1
90008302:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008304:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008306:	fa09 f505 	lsl.w	r5, r9, r5
9000830a:	eb00 0787 	add.w	r7, r0, r7, lsl #2
9000830e:	432c      	orrs	r4, r5
90008310:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008312:	f003 0407 	and.w	r4, r3, #7
90008316:	f8d7 c020 	ldr.w	ip, [r7, #32]
9000831a:	00a4      	lsls	r4, r4, #2
9000831c:	fa08 f404 	lsl.w	r4, r8, r4
90008320:	ea2c 0404 	bic.w	r4, ip, r4
90008324:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008326:	68c4      	ldr	r4, [r0, #12]
90008328:	ea24 0405 	bic.w	r4, r4, r5
9000832c:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000832e:	6844      	ldr	r4, [r0, #4]
90008330:	ea24 0202 	bic.w	r2, r4, r2
90008334:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008336:	6882      	ldr	r2, [r0, #8]
90008338:	ea22 0205 	bic.w	r2, r2, r5
9000833c:	6082      	str	r2, [r0, #8]
    }

    position++;
9000833e:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90008340:	fa31 f203 	lsrs.w	r2, r1, r3
90008344:	d182      	bne.n	9000824c <HAL_GPIO_DeInit+0x1c>
  }
}
90008346:	b003      	add	sp, #12
90008348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000834c:	fa06 f404 	lsl.w	r4, r6, r4
90008350:	e7b9      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
90008352:	f04f 0b02 	mov.w	fp, #2
90008356:	fa0b f404 	lsl.w	r4, fp, r4
9000835a:	e7b4      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
9000835c:	f04f 0b05 	mov.w	fp, #5
90008360:	fa0b f404 	lsl.w	r4, fp, r4
90008364:	e7af      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
90008366:	f04f 0b03 	mov.w	fp, #3
9000836a:	fa0b f404 	lsl.w	r4, fp, r4
9000836e:	e7aa      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
90008370:	f04f 0b04 	mov.w	fp, #4
90008374:	fa0b f404 	lsl.w	r4, fp, r4
90008378:	e7a5      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
9000837a:	f04f 0b08 	mov.w	fp, #8
9000837e:	fa0b f404 	lsl.w	r4, fp, r4
90008382:	e7a0      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
90008384:	f04f 0b06 	mov.w	fp, #6
90008388:	fa0b f404 	lsl.w	r4, fp, r4
9000838c:	e79b      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
9000838e:	4770      	bx	lr
90008390:	f04f 0b07 	mov.w	fp, #7
90008394:	fa0b f404 	lsl.w	r4, fp, r4
90008398:	e795      	b.n	900082c6 <HAL_GPIO_DeInit+0x96>
9000839a:	bf00      	nop
9000839c:	58020000 	.word	0x58020000
900083a0:	58020800 	.word	0x58020800
900083a4:	58020c00 	.word	0x58020c00
900083a8:	58021000 	.word	0x58021000
900083ac:	58000400 	.word	0x58000400
900083b0:	58021400 	.word	0x58021400
900083b4:	58021800 	.word	0x58021800
900083b8:	58021c00 	.word	0x58021c00
900083bc:	58022000 	.word	0x58022000
900083c0:	58022400 	.word	0x58022400

900083c4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
900083c4:	6903      	ldr	r3, [r0, #16]
900083c6:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
900083c8:	bf14      	ite	ne
900083ca:	2001      	movne	r0, #1
900083cc:	2000      	moveq	r0, #0
900083ce:	4770      	bx	lr

900083d0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900083d0:	b902      	cbnz	r2, 900083d4 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900083d2:	0409      	lsls	r1, r1, #16
900083d4:	6181      	str	r1, [r0, #24]
  }
}
900083d6:	4770      	bx	lr

900083d8 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900083d8:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900083da:	ea01 0203 	and.w	r2, r1, r3
900083de:	ea21 0103 	bic.w	r1, r1, r3
900083e2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900083e6:	6181      	str	r1, [r0, #24]
}
900083e8:	4770      	bx	lr
900083ea:	bf00      	nop

900083ec <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
900083ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900083f0:	6803      	ldr	r3, [r0, #0]
{
900083f2:	4680      	mov	r8, r0
900083f4:	460d      	mov	r5, r1
900083f6:	4692      	mov	sl, r2
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900083f8:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900083fa:	699c      	ldr	r4, [r3, #24]
900083fc:	f014 0402 	ands.w	r4, r4, #2
90008400:	f040 80a5 	bne.w	9000854e <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
90008404:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008406:	f012 0c10 	ands.w	ip, r2, #16
9000840a:	d078      	beq.n	900084fe <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
9000840c:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
9000840e:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008410:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008412:	1c68      	adds	r0, r5, #1
90008414:	d001      	beq.n	9000841a <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
90008416:	e041      	b.n	9000849c <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
90008418:	b92e      	cbnz	r6, 90008426 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
9000841a:	699a      	ldr	r2, [r3, #24]
9000841c:	0691      	lsls	r1, r2, #26
9000841e:	d5fb      	bpl.n	90008418 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
90008420:	b90e      	cbnz	r6, 90008426 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008422:	2220      	movs	r2, #32
90008424:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008426:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90008428:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
9000842c:	2101      	movs	r1, #1

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000842e:	05d0      	lsls	r0, r2, #23
90008430:	d569      	bpl.n	90008506 <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008432:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008436:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008438:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000843c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000843e:	d504      	bpl.n	9000844a <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008440:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008444:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008448:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000844a:	0595      	lsls	r5, r2, #22
9000844c:	d504      	bpl.n	90008458 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000844e:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008452:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008456:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008458:	699a      	ldr	r2, [r3, #24]
9000845a:	0790      	lsls	r0, r2, #30
9000845c:	d501      	bpl.n	90008462 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
9000845e:	2200      	movs	r2, #0
90008460:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008462:	699a      	ldr	r2, [r3, #24]
90008464:	07d1      	lsls	r1, r2, #31
90008466:	d403      	bmi.n	90008470 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008468:	699a      	ldr	r2, [r3, #24]
9000846a:	f042 0201 	orr.w	r2, r2, #1
9000846e:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90008470:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90008472:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008474:	4c37      	ldr	r4, [pc, #220]	@ (90008554 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008476:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008478:	4022      	ands	r2, r4
9000847a:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000847c:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
90008480:	ea43 030c 	orr.w	r3, r3, ip
90008484:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008488:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000848c:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008490:	2300      	movs	r3, #0
      return HAL_ERROR;
90008492:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008494:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
90008498:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000849c:	699a      	ldr	r2, [r3, #24]
9000849e:	0692      	lsls	r2, r2, #26
900084a0:	d4be      	bmi.n	90008420 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
900084a2:	2e00      	cmp	r6, #0
900084a4:	d1bf      	bne.n	90008426 <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900084a6:	f7ff faff 	bl	90007aa8 <HAL_GetTick>
900084aa:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900084ae:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900084b2:	4285      	cmp	r5, r0
900084b4:	d301      	bcc.n	900084ba <I2C_WaitOnTXISFlagUntilTimeout+0xce>
900084b6:	2d00      	cmp	r5, #0
900084b8:	d1f0      	bne.n	9000849c <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900084ba:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900084bc:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900084c0:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900084c2:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900084c4:	0409      	lsls	r1, r1, #16
900084c6:	d50c      	bpl.n	900084e2 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
900084c8:	0441      	lsls	r1, r0, #17
900084ca:	d40a      	bmi.n	900084e2 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
900084cc:	2a20      	cmp	r2, #32
900084ce:	d008      	beq.n	900084e2 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900084d0:	685a      	ldr	r2, [r3, #4]
900084d2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900084d6:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900084d8:	f7ff fae6 	bl	90007aa8 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900084dc:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
900084e0:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900084e2:	699a      	ldr	r2, [r3, #24]
900084e4:	0692      	lsls	r2, r2, #26
900084e6:	d494      	bmi.n	90008412 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900084e8:	f7ff fade 	bl	90007aa8 <HAL_GetTick>
900084ec:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900084f0:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900084f4:	2819      	cmp	r0, #25
900084f6:	d9f4      	bls.n	900084e2 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900084f8:	2420      	movs	r4, #32
              status = HAL_ERROR;
900084fa:	2601      	movs	r6, #1
900084fc:	e789      	b.n	90008412 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
900084fe:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90008500:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008502:	05d0      	lsls	r0, r2, #23
90008504:	d495      	bmi.n	90008432 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008506:	0556      	lsls	r6, r2, #21
90008508:	d49a      	bmi.n	90008440 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000850a:	0594      	lsls	r4, r2, #22
9000850c:	d49f      	bmi.n	9000844e <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
9000850e:	2900      	cmp	r1, #0
90008510:	d1a2      	bne.n	90008458 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
90008512:	1c6a      	adds	r2, r5, #1
90008514:	f43f af71 	beq.w	900083fa <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008518:	f7ff fac6 	bl	90007aa8 <HAL_GetTick>
9000851c:	eba0 030a 	sub.w	r3, r0, sl
90008520:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008522:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008526:	d802      	bhi.n	9000852e <I2C_WaitOnTXISFlagUntilTimeout+0x142>
90008528:	2d00      	cmp	r5, #0
9000852a:	f47f af65 	bne.w	900083f8 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000852e:	699a      	ldr	r2, [r3, #24]
90008530:	f012 0202 	ands.w	r2, r2, #2
90008534:	f47f af60 	bne.w	900083f8 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008538:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000853c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000853e:	430b      	orrs	r3, r1
90008540:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008544:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008548:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
9000854c:	e7a0      	b.n	90008490 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
9000854e:	2000      	movs	r0, #0
}
90008550:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008554:	fe00e800 	.word	0xfe00e800

90008558 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008558:	6803      	ldr	r3, [r0, #0]
{
9000855a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000855e:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008560:	699a      	ldr	r2, [r3, #24]
90008562:	0694      	lsls	r4, r2, #26
90008564:	f100 8092 	bmi.w	9000868c <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
90008568:	4605      	mov	r5, r0
9000856a:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000856c:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008570:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008572:	f012 0c10 	ands.w	ip, r2, #16
90008576:	f000 808c 	beq.w	90008692 <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
9000857a:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
9000857c:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000857e:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008582:	46a2      	mov	sl, r4
90008584:	1c70      	adds	r0, r6, #1
90008586:	d003      	beq.n	90008590 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90008588:	e043      	b.n	90008612 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000858a:	f1ba 0f00 	cmp.w	sl, #0
9000858e:	d107      	bne.n	900085a0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90008590:	699a      	ldr	r2, [r3, #24]
90008592:	0691      	lsls	r1, r2, #26
90008594:	d5f9      	bpl.n	9000858a <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90008596:	f1ba 0f00 	cmp.w	sl, #0
9000859a:	d101      	bne.n	900085a0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000859c:	2220      	movs	r2, #32
9000859e:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
900085a0:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900085a4:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
900085a6:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900085a8:	05d0      	lsls	r0, r2, #23
900085aa:	d55a      	bpl.n	90008662 <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900085ac:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900085b0:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900085b2:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900085b6:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900085b8:	d504      	bpl.n	900085c4 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900085ba:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900085be:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900085c2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900085c4:	0596      	lsls	r6, r2, #22
900085c6:	d504      	bpl.n	900085d2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900085c8:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
900085cc:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900085d0:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900085d2:	699a      	ldr	r2, [r3, #24]
900085d4:	0790      	lsls	r0, r2, #30
900085d6:	d501      	bpl.n	900085dc <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
900085d8:	2200      	movs	r2, #0
900085da:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900085dc:	699a      	ldr	r2, [r3, #24]
900085de:	07d1      	lsls	r1, r2, #31
900085e0:	d403      	bmi.n	900085ea <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900085e2:	699a      	ldr	r2, [r3, #24]
900085e4:	f042 0201 	orr.w	r2, r2, #1
900085e8:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900085ea:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900085ec:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
900085ee:	4c33      	ldr	r4, [pc, #204]	@ (900086bc <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
900085f0:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900085f2:	4022      	ands	r2, r4
900085f4:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900085f6:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
900085f8:	ea43 030c 	orr.w	r3, r3, ip
900085fc:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900085fe:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008602:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90008606:	2300      	movs	r3, #0
      return HAL_ERROR;
90008608:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
9000860a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000860e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008612:	699a      	ldr	r2, [r3, #24]
90008614:	0692      	lsls	r2, r2, #26
90008616:	d4be      	bmi.n	90008596 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
90008618:	f1ba 0f00 	cmp.w	sl, #0
9000861c:	d1c0      	bne.n	900085a0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000861e:	f7ff fa43 	bl	90007aa8 <HAL_GetTick>
90008622:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008626:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008628:	4286      	cmp	r6, r0
9000862a:	d301      	bcc.n	90008630 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
9000862c:	2e00      	cmp	r6, #0
9000862e:	d1f0      	bne.n	90008612 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008630:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008632:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008636:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008638:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000863a:	0409      	lsls	r1, r1, #16
9000863c:	d503      	bpl.n	90008646 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
9000863e:	0441      	lsls	r1, r0, #17
90008640:	d401      	bmi.n	90008646 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008642:	2a20      	cmp	r2, #32
90008644:	d130      	bne.n	900086a8 <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008646:	699a      	ldr	r2, [r3, #24]
90008648:	0692      	lsls	r2, r2, #26
9000864a:	d49b      	bmi.n	90008584 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000864c:	f7ff fa2c 	bl	90007aa8 <HAL_GetTick>
90008650:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008654:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008656:	2819      	cmp	r0, #25
90008658:	d9f5      	bls.n	90008646 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000865a:	2420      	movs	r4, #32
              status = HAL_ERROR;
9000865c:	f04f 0a01 	mov.w	sl, #1
90008660:	e790      	b.n	90008584 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008662:	0550      	lsls	r0, r2, #21
90008664:	d4a9      	bmi.n	900085ba <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008666:	0594      	lsls	r4, r2, #22
90008668:	d4ae      	bmi.n	900085c8 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000866a:	2900      	cmp	r1, #0
9000866c:	d1b1      	bne.n	900085d2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000866e:	f7ff fa1b 	bl	90007aa8 <HAL_GetTick>
90008672:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008674:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008676:	42b0      	cmp	r0, r6
90008678:	d800      	bhi.n	9000867c <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
9000867a:	b91e      	cbnz	r6, 90008684 <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000867c:	699a      	ldr	r2, [r3, #24]
9000867e:	f012 0220 	ands.w	r2, r2, #32
90008682:	d008      	beq.n	90008696 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008684:	699a      	ldr	r2, [r3, #24]
90008686:	0692      	lsls	r2, r2, #26
90008688:	f57f af72 	bpl.w	90008570 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000868c:	2000      	movs	r0, #0
}
9000868e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008692:	4661      	mov	r1, ip
90008694:	e787      	b.n	900085a6 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008696:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008698:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000869a:	430b      	orrs	r3, r1
9000869c:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
9000869e:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
900086a2:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
900086a6:	e7ae      	b.n	90008606 <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900086a8:	685a      	ldr	r2, [r3, #4]
900086aa:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900086ae:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900086b0:	f7ff f9fa 	bl	90007aa8 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900086b4:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900086b6:	4681      	mov	r9, r0
900086b8:	e7c5      	b.n	90008646 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
900086ba:	bf00      	nop
900086bc:	fe00e800 	.word	0xfe00e800

900086c0 <HAL_I2C_MspInit>:
}
900086c0:	4770      	bx	lr
900086c2:	bf00      	nop

900086c4 <HAL_I2C_Init>:
  if (hi2c == NULL)
900086c4:	2800      	cmp	r0, #0
900086c6:	d04e      	beq.n	90008766 <HAL_I2C_Init+0xa2>
{
900086c8:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
900086ca:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
900086ce:	4604      	mov	r4, r0
900086d0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900086d4:	2b00      	cmp	r3, #0
900086d6:	d041      	beq.n	9000875c <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
900086d8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900086da:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900086dc:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
900086de:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
900086e2:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900086e4:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900086e8:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
900086ea:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900086ee:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
900086f0:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900086f2:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900086f4:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900086f6:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900086f8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
900086fc:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900086fe:	d029      	beq.n	90008754 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008700:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008704:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008706:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008708:	d102      	bne.n	90008710 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000870a:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000870e:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008710:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008712:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008716:	4915      	ldr	r1, [pc, #84]	@ (9000876c <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008718:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000871a:	4301      	orrs	r1, r0
9000871c:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000871e:	68d9      	ldr	r1, [r3, #12]
90008720:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
90008724:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008726:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000872a:	4302      	orrs	r2, r0
9000872c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008730:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008734:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008736:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008738:	4301      	orrs	r1, r0
  return HAL_OK;
9000873a:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000873c:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000873e:	6819      	ldr	r1, [r3, #0]
90008740:	f041 0101 	orr.w	r1, r1, #1
90008744:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008746:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008748:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000874c:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000874e:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90008752:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008754:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008758:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000875a:	e7d9      	b.n	90008710 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000875c:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90008760:	f7ff ffae 	bl	900086c0 <HAL_I2C_MspInit>
90008764:	e7b8      	b.n	900086d8 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90008766:	2001      	movs	r0, #1
}
90008768:	4770      	bx	lr
9000876a:	bf00      	nop
9000876c:	02008000 	.word	0x02008000

90008770 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90008770:	4770      	bx	lr
90008772:	bf00      	nop

90008774 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008774:	b1b0      	cbz	r0, 900087a4 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90008776:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008778:	2324      	movs	r3, #36	@ 0x24
{
9000877a:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000877c:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90008780:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90008782:	6813      	ldr	r3, [r2, #0]
90008784:	f023 0301 	bic.w	r3, r3, #1
90008788:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000878a:	f7ff fff1 	bl	90008770 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000878e:	2300      	movs	r3, #0
90008790:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90008792:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008794:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90008798:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000879c:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000879e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
900087a2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
900087a4:	2001      	movs	r0, #1
}
900087a6:	4770      	bx	lr

900087a8 <HAL_I2C_Mem_Write>:
{
900087a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900087ac:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
900087ae:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
900087b2:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
900087b6:	2b20      	cmp	r3, #32
{
900087b8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
900087ba:	d130      	bne.n	9000881e <HAL_I2C_Mem_Write+0x76>
    if ((pData == NULL) || (Size == 0U))
900087bc:	9b08      	ldr	r3, [sp, #32]
900087be:	4604      	mov	r4, r0
900087c0:	b33b      	cbz	r3, 90008812 <HAL_I2C_Mem_Write+0x6a>
900087c2:	f1ba 0f00 	cmp.w	sl, #0
900087c6:	d024      	beq.n	90008812 <HAL_I2C_Mem_Write+0x6a>
    __HAL_LOCK(hi2c);
900087c8:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
900087cc:	2b01      	cmp	r3, #1
900087ce:	d026      	beq.n	9000881e <HAL_I2C_Mem_Write+0x76>
900087d0:	2301      	movs	r3, #1
900087d2:	460e      	mov	r6, r1
900087d4:	4691      	mov	r9, r2
900087d6:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
900087da:	f7ff f965 	bl	90007aa8 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900087de:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
900087e0:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900087e2:	699a      	ldr	r2, [r3, #24]
900087e4:	0411      	lsls	r1, r2, #16
900087e6:	d51d      	bpl.n	90008824 <HAL_I2C_Mem_Write+0x7c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900087e8:	f7ff f95e 	bl	90007aa8 <HAL_GetTick>
900087ec:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900087ee:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900087f0:	2819      	cmp	r0, #25
900087f2:	d9f6      	bls.n	900087e2 <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900087f4:	699a      	ldr	r2, [r3, #24]
900087f6:	0412      	lsls	r2, r2, #16
900087f8:	d5f3      	bpl.n	900087e2 <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900087fa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900087fc:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900087fe:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008800:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90008802:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008806:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008808:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000880c:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
          return HAL_ERROR;
90008810:	e002      	b.n	90008818 <HAL_I2C_Mem_Write+0x70>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008812:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008816:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90008818:	2001      	movs	r0, #1
}
9000881a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_LOCK(hi2c);
9000881e:	2002      	movs	r0, #2
}
90008820:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008824:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008826:	2121      	movs	r1, #33	@ 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008828:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000882c:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000882e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008832:	2140      	movs	r1, #64	@ 0x40
    hi2c->pBuffPtr  = pData;
90008834:	6262      	str	r2, [r4, #36]	@ 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008836:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008838:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
    hi2c->XferISR   = NULL;
9000883c:	6362      	str	r2, [r4, #52]	@ 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000883e:	6462      	str	r2, [r4, #68]	@ 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90008840:	496b      	ldr	r1, [pc, #428]	@ (900089f0 <HAL_I2C_Mem_Write+0x248>)
    hi2c->XferCount = Size;
90008842:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008846:	685a      	ldr	r2, [r3, #4]
90008848:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000884a:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000884e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90008852:	4968      	ldr	r1, [pc, #416]	@ (900089f4 <HAL_I2C_Mem_Write+0x24c>)
90008854:	4332      	orrs	r2, r6
90008856:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008858:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000885a:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000885c:	4639      	mov	r1, r7
9000885e:	f7ff fdc5 	bl	900083ec <I2C_WaitOnTXISFlagUntilTimeout>
90008862:	2800      	cmp	r0, #0
90008864:	d17e      	bne.n	90008964 <HAL_I2C_Mem_Write+0x1bc>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008866:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000886a:	6822      	ldr	r2, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000886c:	f040 809a 	bne.w	900089a4 <HAL_I2C_Mem_Write+0x1fc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008870:	fa5f f389 	uxtb.w	r3, r9
90008874:	6293      	str	r3, [r2, #40]	@ 0x28
90008876:	1c78      	adds	r0, r7, #1
90008878:	d15d      	bne.n	90008936 <HAL_I2C_Mem_Write+0x18e>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000887a:	6993      	ldr	r3, [r2, #24]
9000887c:	0619      	lsls	r1, r3, #24
9000887e:	d5fc      	bpl.n	9000887a <HAL_I2C_Mem_Write+0xd2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008880:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008882:	b29b      	uxth	r3, r3
90008884:	2bff      	cmp	r3, #255	@ 0xff
90008886:	d97f      	bls.n	90008988 <HAL_I2C_Mem_Write+0x1e0>
  MODIFY_REG(hi2c->Instance->CR2, \
90008888:	6853      	ldr	r3, [r2, #4]
9000888a:	495b      	ldr	r1, [pc, #364]	@ (900089f8 <HAL_I2C_Mem_Write+0x250>)
9000888c:	400b      	ands	r3, r1
9000888e:	495b      	ldr	r1, [pc, #364]	@ (900089fc <HAL_I2C_Mem_Write+0x254>)
90008890:	4333      	orrs	r3, r6
90008892:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008894:	23ff      	movs	r3, #255	@ 0xff
90008896:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008898:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000889a:	e004      	b.n	900088a6 <HAL_I2C_Mem_Write+0xfe>
    } while (hi2c->XferCount > 0U);
9000889c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000889e:	b29b      	uxth	r3, r3
900088a0:	2b00      	cmp	r3, #0
900088a2:	f000 808e 	beq.w	900089c2 <HAL_I2C_Mem_Write+0x21a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900088a6:	462a      	mov	r2, r5
900088a8:	4639      	mov	r1, r7
900088aa:	4620      	mov	r0, r4
900088ac:	f7ff fd9e 	bl	900083ec <I2C_WaitOnTXISFlagUntilTimeout>
900088b0:	2800      	cmp	r0, #0
900088b2:	d1b1      	bne.n	90008818 <HAL_I2C_Mem_Write+0x70>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900088b4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900088b6:	6821      	ldr	r1, [r4, #0]
900088b8:	f810 2b01 	ldrb.w	r2, [r0], #1
      hi2c->XferSize--;
900088bc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900088be:	628a      	str	r2, [r1, #40]	@ 0x28
      hi2c->XferCount--;
900088c0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900088c2:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900088c4:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900088c6:	3a01      	subs	r2, #1
      hi2c->XferSize--;
900088c8:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
900088ca:	b292      	uxth	r2, r2
      hi2c->XferSize--;
900088cc:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
900088ce:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900088d0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
900088d2:	b292      	uxth	r2, r2
900088d4:	2a00      	cmp	r2, #0
900088d6:	d0e1      	beq.n	9000889c <HAL_I2C_Mem_Write+0xf4>
900088d8:	2b00      	cmp	r3, #0
900088da:	d1df      	bne.n	9000889c <HAL_I2C_Mem_Write+0xf4>
900088dc:	1c78      	adds	r0, r7, #1
900088de:	d110      	bne.n	90008902 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900088e0:	698b      	ldr	r3, [r1, #24]
900088e2:	061a      	lsls	r2, r3, #24
900088e4:	d5fc      	bpl.n	900088e0 <HAL_I2C_Mem_Write+0x138>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900088e6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900088e8:	b29b      	uxth	r3, r3
900088ea:	2bff      	cmp	r3, #255	@ 0xff
900088ec:	d93e      	bls.n	9000896c <HAL_I2C_Mem_Write+0x1c4>
  MODIFY_REG(hi2c->Instance->CR2, \
900088ee:	684b      	ldr	r3, [r1, #4]
900088f0:	4a41      	ldr	r2, [pc, #260]	@ (900089f8 <HAL_I2C_Mem_Write+0x250>)
900088f2:	4013      	ands	r3, r2
900088f4:	4a41      	ldr	r2, [pc, #260]	@ (900089fc <HAL_I2C_Mem_Write+0x254>)
900088f6:	4333      	orrs	r3, r6
900088f8:	431a      	orrs	r2, r3
          hi2c->XferSize = MAX_NBYTE_SIZE;
900088fa:	23ff      	movs	r3, #255	@ 0xff
900088fc:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900088fe:	604a      	str	r2, [r1, #4]
}
90008900:	e7cc      	b.n	9000889c <HAL_I2C_Mem_Write+0xf4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008902:	698b      	ldr	r3, [r1, #24]
90008904:	061b      	lsls	r3, r3, #24
90008906:	d4ee      	bmi.n	900088e6 <HAL_I2C_Mem_Write+0x13e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008908:	f7ff f8ce 	bl	90007aa8 <HAL_GetTick>
9000890c:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000890e:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008910:	4287      	cmp	r7, r0
90008912:	d301      	bcc.n	90008918 <HAL_I2C_Mem_Write+0x170>
90008914:	2f00      	cmp	r7, #0
90008916:	d1f4      	bne.n	90008902 <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008918:	698b      	ldr	r3, [r1, #24]
9000891a:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
9000891e:	d1f0      	bne.n	90008902 <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008920:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008922:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
90008924:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008928:	430a      	orrs	r2, r1
9000892a:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000892c:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008930:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          return HAL_ERROR;
90008934:	e770      	b.n	90008818 <HAL_I2C_Mem_Write+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008936:	6993      	ldr	r3, [r2, #24]
90008938:	061b      	lsls	r3, r3, #24
9000893a:	d4a1      	bmi.n	90008880 <HAL_I2C_Mem_Write+0xd8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000893c:	f7ff f8b4 	bl	90007aa8 <HAL_GetTick>
90008940:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008942:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008944:	4287      	cmp	r7, r0
90008946:	d301      	bcc.n	9000894c <HAL_I2C_Mem_Write+0x1a4>
90008948:	2f00      	cmp	r7, #0
9000894a:	d1f4      	bne.n	90008936 <HAL_I2C_Mem_Write+0x18e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000894c:	6993      	ldr	r3, [r2, #24]
9000894e:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
90008952:	d1f0      	bne.n	90008936 <HAL_I2C_Mem_Write+0x18e>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008954:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008956:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008958:	430a      	orrs	r2, r1
9000895a:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000895c:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008960:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
90008964:	2300      	movs	r3, #0
90008966:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
9000896a:	e755      	b.n	90008818 <HAL_I2C_Mem_Write+0x70>
          hi2c->XferSize = hi2c->XferCount;
9000896c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000896e:	4822      	ldr	r0, [pc, #136]	@ (900089f8 <HAL_I2C_Mem_Write+0x250>)
          hi2c->XferSize = hi2c->XferCount;
90008970:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008972:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
90008974:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008976:	684b      	ldr	r3, [r1, #4]
90008978:	4003      	ands	r3, r0
9000897a:	4333      	orrs	r3, r6
9000897c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008980:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008984:	604b      	str	r3, [r1, #4]
}
90008986:	e789      	b.n	9000889c <HAL_I2C_Mem_Write+0xf4>
      hi2c->XferSize = hi2c->XferCount;
90008988:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000898a:	481b      	ldr	r0, [pc, #108]	@ (900089f8 <HAL_I2C_Mem_Write+0x250>)
      hi2c->XferSize = hi2c->XferCount;
9000898c:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000898e:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
90008990:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008992:	6853      	ldr	r3, [r2, #4]
90008994:	4003      	ands	r3, r0
90008996:	4333      	orrs	r3, r6
90008998:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000899c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900089a0:	6053      	str	r3, [r2, #4]
}
900089a2:	e780      	b.n	900088a6 <HAL_I2C_Mem_Write+0xfe>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900089a4:	ea4f 2319 	mov.w	r3, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900089a8:	4639      	mov	r1, r7
900089aa:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900089ac:	6293      	str	r3, [r2, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900089ae:	462a      	mov	r2, r5
900089b0:	f7ff fd1c 	bl	900083ec <I2C_WaitOnTXISFlagUntilTimeout>
900089b4:	2800      	cmp	r0, #0
900089b6:	d1d5      	bne.n	90008964 <HAL_I2C_Mem_Write+0x1bc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900089b8:	fa5f f389 	uxtb.w	r3, r9
900089bc:	6822      	ldr	r2, [r4, #0]
900089be:	6293      	str	r3, [r2, #40]	@ 0x28
900089c0:	e759      	b.n	90008876 <HAL_I2C_Mem_Write+0xce>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900089c2:	462a      	mov	r2, r5
900089c4:	4639      	mov	r1, r7
900089c6:	4620      	mov	r0, r4
900089c8:	f7ff fdc6 	bl	90008558 <I2C_WaitOnSTOPFlagUntilTimeout>
900089cc:	2800      	cmp	r0, #0
900089ce:	f47f af23 	bne.w	90008818 <HAL_I2C_Mem_Write+0x70>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900089d2:	6823      	ldr	r3, [r4, #0]
900089d4:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900089d6:	4d0a      	ldr	r5, [pc, #40]	@ (90008a00 <HAL_I2C_Mem_Write+0x258>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900089d8:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900089da:	685a      	ldr	r2, [r3, #4]
900089dc:	402a      	ands	r2, r5
900089de:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900089e0:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900089e4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900089e8:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900089ec:	e715      	b.n	9000881a <HAL_I2C_Mem_Write+0x72>
900089ee:	bf00      	nop
900089f0:	fc009800 	.word	0xfc009800
900089f4:	01002000 	.word	0x01002000
900089f8:	fc009c00 	.word	0xfc009c00
900089fc:	01ff0000 	.word	0x01ff0000
90008a00:	fe00e800 	.word	0xfe00e800

90008a04 <HAL_I2C_Mem_Read>:
{
90008a04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008a08:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90008a0a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
{
90008a0e:	f8bd a024 	ldrh.w	sl, [sp, #36]	@ 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
90008a12:	2b20      	cmp	r3, #32
{
90008a14:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
90008a16:	d130      	bne.n	90008a7a <HAL_I2C_Mem_Read+0x76>
    if ((pData == NULL) || (Size == 0U))
90008a18:	9b08      	ldr	r3, [sp, #32]
90008a1a:	4604      	mov	r4, r0
90008a1c:	b33b      	cbz	r3, 90008a6e <HAL_I2C_Mem_Read+0x6a>
90008a1e:	f1ba 0f00 	cmp.w	sl, #0
90008a22:	d024      	beq.n	90008a6e <HAL_I2C_Mem_Read+0x6a>
    __HAL_LOCK(hi2c);
90008a24:	f890 3040 	ldrb.w	r3, [r0, #64]	@ 0x40
90008a28:	2b01      	cmp	r3, #1
90008a2a:	d026      	beq.n	90008a7a <HAL_I2C_Mem_Read+0x76>
90008a2c:	2301      	movs	r3, #1
90008a2e:	460f      	mov	r7, r1
90008a30:	4691      	mov	r9, r2
90008a32:	f880 3040 	strb.w	r3, [r0, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008a36:	f7ff f837 	bl	90007aa8 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008a3a:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
90008a3c:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008a3e:	699a      	ldr	r2, [r3, #24]
90008a40:	0411      	lsls	r1, r2, #16
90008a42:	d51d      	bpl.n	90008a80 <HAL_I2C_Mem_Read+0x7c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008a44:	f7ff f830 	bl	90007aa8 <HAL_GetTick>
90008a48:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008a4a:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008a4c:	2819      	cmp	r0, #25
90008a4e:	d9f6      	bls.n	90008a3e <HAL_I2C_Mem_Read+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008a50:	699a      	ldr	r2, [r3, #24]
90008a52:	0412      	lsls	r2, r2, #16
90008a54:	d5f3      	bpl.n	90008a3e <HAL_I2C_Mem_Read+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a56:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008a58:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008a5a:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a5c:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90008a5e:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a62:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008a64:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008a68:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
          return HAL_ERROR;
90008a6c:	e002      	b.n	90008a74 <HAL_I2C_Mem_Read+0x70>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008a6e:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008a72:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90008a74:	2001      	movs	r0, #1
}
90008a76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_LOCK(hi2c);
90008a7a:	2002      	movs	r0, #2
}
90008a7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008a80:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008a82:	2122      	movs	r1, #34	@ 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008a84:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008a88:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008a8a:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008a8e:	2140      	movs	r1, #64	@ 0x40
    hi2c->pBuffPtr  = pData;
90008a90:	6262      	str	r2, [r4, #36]	@ 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008a92:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008a94:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
    hi2c->XferISR   = NULL;
90008a98:	6362      	str	r2, [r4, #52]	@ 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008a9a:	6462      	str	r2, [r4, #68]	@ 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
90008a9c:	4973      	ldr	r1, [pc, #460]	@ (90008c6c <HAL_I2C_Mem_Read+0x268>)
    hi2c->XferCount = Size;
90008a9e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008aa2:	685a      	ldr	r2, [r3, #4]
90008aa4:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008aa6:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008aaa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008aae:	4631      	mov	r1, r6
  MODIFY_REG(hi2c->Instance->CR2, \
90008ab0:	433a      	orrs	r2, r7
90008ab2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008ab6:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008ab8:	462a      	mov	r2, r5
90008aba:	f7ff fc97 	bl	900083ec <I2C_WaitOnTXISFlagUntilTimeout>
90008abe:	2800      	cmp	r0, #0
90008ac0:	d16a      	bne.n	90008b98 <HAL_I2C_Mem_Read+0x194>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008ac2:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008ac6:	6821      	ldr	r1, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008ac8:	f040 80aa 	bne.w	90008c20 <HAL_I2C_Mem_Read+0x21c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008acc:	fa5f f389 	uxtb.w	r3, r9
90008ad0:	628b      	str	r3, [r1, #40]	@ 0x28
90008ad2:	1c70      	adds	r0, r6, #1
90008ad4:	d149      	bne.n	90008b6a <HAL_I2C_Mem_Read+0x166>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008ad6:	698b      	ldr	r3, [r1, #24]
90008ad8:	065a      	lsls	r2, r3, #25
90008ada:	d5fc      	bpl.n	90008ad6 <HAL_I2C_Mem_Read+0xd2>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008adc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008ade:	b29b      	uxth	r3, r3
90008ae0:	2bff      	cmp	r3, #255	@ 0xff
90008ae2:	f240 808f 	bls.w	90008c04 <HAL_I2C_Mem_Read+0x200>
  MODIFY_REG(hi2c->Instance->CR2, \
90008ae6:	684b      	ldr	r3, [r1, #4]
90008ae8:	4a60      	ldr	r2, [pc, #384]	@ (90008c6c <HAL_I2C_Mem_Read+0x268>)
90008aea:	4013      	ands	r3, r2
90008aec:	4a60      	ldr	r2, [pc, #384]	@ (90008c70 <HAL_I2C_Mem_Read+0x26c>)
90008aee:	433b      	orrs	r3, r7
90008af0:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008af2:	23ff      	movs	r3, #255	@ 0xff
90008af4:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008af6:	604a      	str	r2, [r1, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008af8:	1c70      	adds	r0, r6, #1
90008afa:	d11c      	bne.n	90008b36 <HAL_I2C_Mem_Read+0x132>
90008afc:	698b      	ldr	r3, [r1, #24]
90008afe:	075a      	lsls	r2, r3, #29
90008b00:	d5fc      	bpl.n	90008afc <HAL_I2C_Mem_Read+0xf8>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90008b02:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
90008b04:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90008b06:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
90008b08:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008b0a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90008b0c:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90008b0e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferSize--;
90008b10:	3b01      	subs	r3, #1
      hi2c->XferCount--;
90008b12:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
90008b14:	3101      	adds	r1, #1
      hi2c->XferSize--;
90008b16:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90008b18:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008b1a:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
90008b1c:	6261      	str	r1, [r4, #36]	@ 0x24
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008b1e:	b292      	uxth	r2, r2
      hi2c->XferSize--;
90008b20:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008b22:	b90b      	cbnz	r3, 90008b28 <HAL_I2C_Mem_Read+0x124>
90008b24:	2a00      	cmp	r2, #0
90008b26:	d13b      	bne.n	90008ba0 <HAL_I2C_Mem_Read+0x19c>
    } while (hi2c->XferCount > 0U);
90008b28:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008b2a:	b29b      	uxth	r3, r3
90008b2c:	2b00      	cmp	r3, #0
90008b2e:	f000 8086 	beq.w	90008c3e <HAL_I2C_Mem_Read+0x23a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b32:	6821      	ldr	r1, [r4, #0]
90008b34:	e7e0      	b.n	90008af8 <HAL_I2C_Mem_Read+0xf4>
90008b36:	698b      	ldr	r3, [r1, #24]
90008b38:	075b      	lsls	r3, r3, #29
90008b3a:	d4e2      	bmi.n	90008b02 <HAL_I2C_Mem_Read+0xfe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b3c:	f7fe ffb4 	bl	90007aa8 <HAL_GetTick>
90008b40:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b42:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b44:	4286      	cmp	r6, r0
90008b46:	d301      	bcc.n	90008b4c <HAL_I2C_Mem_Read+0x148>
90008b48:	2e00      	cmp	r6, #0
90008b4a:	d1f4      	bne.n	90008b36 <HAL_I2C_Mem_Read+0x132>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b4c:	698b      	ldr	r3, [r1, #24]
90008b4e:	f013 0304 	ands.w	r3, r3, #4
90008b52:	d1f0      	bne.n	90008b36 <HAL_I2C_Mem_Read+0x132>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b54:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b56:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
90008b58:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b5c:	430a      	orrs	r2, r1
90008b5e:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b60:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008b64:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
          return HAL_ERROR;
90008b68:	e784      	b.n	90008a74 <HAL_I2C_Mem_Read+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b6a:	698b      	ldr	r3, [r1, #24]
90008b6c:	065b      	lsls	r3, r3, #25
90008b6e:	d4b5      	bmi.n	90008adc <HAL_I2C_Mem_Read+0xd8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b70:	f7fe ff9a 	bl	90007aa8 <HAL_GetTick>
90008b74:	1b43      	subs	r3, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b76:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b78:	429e      	cmp	r6, r3
90008b7a:	d301      	bcc.n	90008b80 <HAL_I2C_Mem_Read+0x17c>
90008b7c:	2e00      	cmp	r6, #0
90008b7e:	d1f4      	bne.n	90008b6a <HAL_I2C_Mem_Read+0x166>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b80:	698b      	ldr	r3, [r1, #24]
90008b82:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
90008b86:	d1f0      	bne.n	90008b6a <HAL_I2C_Mem_Read+0x166>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b88:	6c62      	ldr	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b8a:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b8c:	430a      	orrs	r2, r1
90008b8e:	6462      	str	r2, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b90:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008b94:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
      __HAL_UNLOCK(hi2c);
90008b98:	2300      	movs	r3, #0
90008b9a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90008b9e:	e769      	b.n	90008a74 <HAL_I2C_Mem_Read+0x70>
90008ba0:	1c70      	adds	r0, r6, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008ba2:	6822      	ldr	r2, [r4, #0]
90008ba4:	d110      	bne.n	90008bc8 <HAL_I2C_Mem_Read+0x1c4>
90008ba6:	6993      	ldr	r3, [r2, #24]
90008ba8:	0619      	lsls	r1, r3, #24
90008baa:	d5fc      	bpl.n	90008ba6 <HAL_I2C_Mem_Read+0x1a2>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008bac:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008bae:	b29b      	uxth	r3, r3
90008bb0:	2bff      	cmp	r3, #255	@ 0xff
90008bb2:	d919      	bls.n	90008be8 <HAL_I2C_Mem_Read+0x1e4>
  MODIFY_REG(hi2c->Instance->CR2, \
90008bb4:	6853      	ldr	r3, [r2, #4]
90008bb6:	492f      	ldr	r1, [pc, #188]	@ (90008c74 <HAL_I2C_Mem_Read+0x270>)
90008bb8:	400b      	ands	r3, r1
90008bba:	492f      	ldr	r1, [pc, #188]	@ (90008c78 <HAL_I2C_Mem_Read+0x274>)
90008bbc:	433b      	orrs	r3, r7
90008bbe:	4319      	orrs	r1, r3
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008bc0:	23ff      	movs	r3, #255	@ 0xff
90008bc2:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008bc4:	6051      	str	r1, [r2, #4]
}
90008bc6:	e7af      	b.n	90008b28 <HAL_I2C_Mem_Read+0x124>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008bc8:	6993      	ldr	r3, [r2, #24]
90008bca:	061b      	lsls	r3, r3, #24
90008bcc:	d4ee      	bmi.n	90008bac <HAL_I2C_Mem_Read+0x1a8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008bce:	f7fe ff6b 	bl	90007aa8 <HAL_GetTick>
90008bd2:	1b43      	subs	r3, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008bd4:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008bd6:	429e      	cmp	r6, r3
90008bd8:	d301      	bcc.n	90008bde <HAL_I2C_Mem_Read+0x1da>
90008bda:	2e00      	cmp	r6, #0
90008bdc:	d1f4      	bne.n	90008bc8 <HAL_I2C_Mem_Read+0x1c4>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008bde:	6993      	ldr	r3, [r2, #24]
90008be0:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
90008be4:	d1f0      	bne.n	90008bc8 <HAL_I2C_Mem_Read+0x1c4>
90008be6:	e7b5      	b.n	90008b54 <HAL_I2C_Mem_Read+0x150>
          hi2c->XferSize = hi2c->XferCount;
90008be8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008bea:	4822      	ldr	r0, [pc, #136]	@ (90008c74 <HAL_I2C_Mem_Read+0x270>)
          hi2c->XferSize = hi2c->XferCount;
90008bec:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008bee:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
90008bf0:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008bf2:	6853      	ldr	r3, [r2, #4]
90008bf4:	4003      	ands	r3, r0
90008bf6:	433b      	orrs	r3, r7
90008bf8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90008bfc:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008c00:	6053      	str	r3, [r2, #4]
}
90008c02:	e791      	b.n	90008b28 <HAL_I2C_Mem_Read+0x124>
      hi2c->XferSize = hi2c->XferCount;
90008c04:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008c06:	4819      	ldr	r0, [pc, #100]	@ (90008c6c <HAL_I2C_Mem_Read+0x268>)
      hi2c->XferSize = hi2c->XferCount;
90008c08:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008c0a:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
90008c0c:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008c0e:	684b      	ldr	r3, [r1, #4]
90008c10:	4003      	ands	r3, r0
90008c12:	433b      	orrs	r3, r7
90008c14:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008c18:	4a18      	ldr	r2, [pc, #96]	@ (90008c7c <HAL_I2C_Mem_Read+0x278>)
90008c1a:	431a      	orrs	r2, r3
90008c1c:	604a      	str	r2, [r1, #4]
}
90008c1e:	e76b      	b.n	90008af8 <HAL_I2C_Mem_Read+0xf4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008c20:	ea4f 2319 	mov.w	r3, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008c24:	462a      	mov	r2, r5
90008c26:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008c28:	628b      	str	r3, [r1, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008c2a:	4631      	mov	r1, r6
90008c2c:	f7ff fbde 	bl	900083ec <I2C_WaitOnTXISFlagUntilTimeout>
90008c30:	2800      	cmp	r0, #0
90008c32:	d1b1      	bne.n	90008b98 <HAL_I2C_Mem_Read+0x194>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008c34:	fa5f f389 	uxtb.w	r3, r9
90008c38:	6821      	ldr	r1, [r4, #0]
90008c3a:	628b      	str	r3, [r1, #40]	@ 0x28
90008c3c:	e749      	b.n	90008ad2 <HAL_I2C_Mem_Read+0xce>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008c3e:	462a      	mov	r2, r5
90008c40:	4631      	mov	r1, r6
90008c42:	4620      	mov	r0, r4
90008c44:	f7ff fc88 	bl	90008558 <I2C_WaitOnSTOPFlagUntilTimeout>
90008c48:	2800      	cmp	r0, #0
90008c4a:	f47f af13 	bne.w	90008a74 <HAL_I2C_Mem_Read+0x70>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008c4e:	6823      	ldr	r3, [r4, #0]
90008c50:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008c52:	4d0b      	ldr	r5, [pc, #44]	@ (90008c80 <HAL_I2C_Mem_Read+0x27c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008c54:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008c56:	685a      	ldr	r2, [r3, #4]
90008c58:	402a      	ands	r2, r5
90008c5a:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008c5c:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008c60:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008c64:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90008c68:	e705      	b.n	90008a76 <HAL_I2C_Mem_Read+0x72>
90008c6a:	bf00      	nop
90008c6c:	fc009800 	.word	0xfc009800
90008c70:	01ff2400 	.word	0x01ff2400
90008c74:	fc009c00 	.word	0xfc009c00
90008c78:	01ff0000 	.word	0x01ff0000
90008c7c:	02002400 	.word	0x02002400
90008c80:	fe00e800 	.word	0xfe00e800

90008c84 <HAL_I2C_GetState>:
  return hi2c->State;
90008c84:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90008c88:	4770      	bx	lr
90008c8a:	bf00      	nop

90008c8c <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90008c8c:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
90008c8e:	4770      	bx	lr

90008c90 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008c90:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90008c94:	2a20      	cmp	r2, #32
90008c96:	d123      	bne.n	90008ce0 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90008c98:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008c9c:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90008ca0:	4603      	mov	r3, r0
90008ca2:	2a01      	cmp	r2, #1
90008ca4:	d01c      	beq.n	90008ce0 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008ca6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008ca8:	2024      	movs	r0, #36	@ 0x24
{
90008caa:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90008cac:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008cb0:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90008cb4:	6810      	ldr	r0, [r2, #0]
90008cb6:	f020 0001 	bic.w	r0, r0, #1
90008cba:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90008cbc:	6810      	ldr	r0, [r2, #0]
90008cbe:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
90008cc2:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90008cc4:	6810      	ldr	r0, [r2, #0]
90008cc6:	4301      	orrs	r1, r0

    return HAL_OK;
90008cc8:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90008cca:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008ccc:	6811      	ldr	r1, [r2, #0]
90008cce:	f041 0101 	orr.w	r1, r1, #1
90008cd2:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008cd4:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008cd8:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008cdc:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90008ce0:	2002      	movs	r0, #2
}
90008ce2:	4770      	bx	lr

90008ce4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008ce4:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90008ce8:	2a20      	cmp	r2, #32
90008cea:	d122      	bne.n	90008d32 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90008cec:	4603      	mov	r3, r0
{
90008cee:	b500      	push	{lr}
90008cf0:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008cf4:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90008cf8:	2a01      	cmp	r2, #1
90008cfa:	d01c      	beq.n	90008d36 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008cfc:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008cfe:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008d00:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008d04:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90008d08:	6810      	ldr	r0, [r2, #0]
90008d0a:	f020 0001 	bic.w	r0, r0, #1
90008d0e:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90008d10:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90008d12:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
90008d16:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90008d1a:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90008d1c:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008d1e:	6811      	ldr	r1, [r2, #0]
90008d20:	f041 0101 	orr.w	r1, r1, #1
90008d24:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008d26:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008d2a:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008d2e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90008d32:	2002      	movs	r0, #2
}
90008d34:	4770      	bx	lr
    __HAL_LOCK(hi2c);
90008d36:	2002      	movs	r0, #2
}
90008d38:	f85d fb04 	ldr.w	pc, [sp], #4

90008d3c <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90008d3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90008d40:	4699      	mov	r9, r3
90008d42:	4680      	mov	r8, r0
90008d44:	460d      	mov	r5, r1
90008d46:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90008d48:	7803      	ldrb	r3, [r0, #0]
90008d4a:	2601      	movs	r6, #1
  p = 0;
90008d4c:	2700      	movs	r7, #0
90008d4e:	e005      	b.n	90008d5c <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
90008d50:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
90008d54:	19da      	adds	r2, r3, r7
90008d56:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
90008d5a:	d83a      	bhi.n	90008dd2 <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90008d5c:	19e8      	adds	r0, r5, r7
90008d5e:	461a      	mov	r2, r3
90008d60:	4631      	mov	r1, r6
    while (i != 0UL)
90008d62:	b113      	cbz	r3, 90008d6a <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
90008d64:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
90008d66:	f01e fae3 	bl	90027330 <memset>
  for (l = 0; l < 16UL; l++)
90008d6a:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
90008d6c:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
90008d70:	d1ee      	bne.n	90008d50 <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
90008d72:	2300      	movs	r3, #0
90008d74:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
90008d76:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90008d7a:	7829      	ldrb	r1, [r5, #0]
90008d7c:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
90008d7e:	b329      	cbz	r1, 90008dcc <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
90008d80:	4699      	mov	r9, r3
90008d82:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008d86:	2701      	movs	r7, #1
  p = 0;
90008d88:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90008d8a:	4291      	cmp	r1, r2
90008d8c:	d124      	bne.n	90008dd8 <JPEG_Bits_To_SizeCodes+0x9c>
90008d8e:	eb06 0008 	add.w	r0, r6, r8
90008d92:	eb05 0c06 	add.w	ip, r5, r6
90008d96:	464b      	mov	r3, r9
90008d98:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90008d9c:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
90008da0:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
90008da2:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90008da6:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90008da8:	4596      	cmp	lr, r2
90008daa:	d0f7      	beq.n	90008d9c <JPEG_Bits_To_SizeCodes+0x60>
90008dac:	3601      	adds	r6, #1
90008dae:	eba6 0609 	sub.w	r6, r6, r9
      p++;
90008db2:	440e      	add	r6, r1
    if(si > 31UL)
90008db4:	2a1f      	cmp	r2, #31
90008db6:	d80c      	bhi.n	90008dd2 <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008db8:	fa07 f102 	lsl.w	r1, r7, r2
90008dbc:	4299      	cmp	r1, r3
90008dbe:	d908      	bls.n	90008dd2 <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
90008dc0:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90008dc2:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90008dc6:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90008dc8:	2900      	cmp	r1, #0
90008dca:	d1de      	bne.n	90008d8a <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
90008dcc:	2000      	movs	r0, #0
}
90008dce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
90008dd2:	2001      	movs	r0, #1
}
90008dd4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
90008dd8:	464b      	mov	r3, r9
90008dda:	e7eb      	b.n	90008db4 <JPEG_Bits_To_SizeCodes+0x78>

90008ddc <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90008ddc:	b5f0      	push	{r4, r5, r6, r7, lr}
90008dde:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
90008de2:	460d      	mov	r5, r1
90008de4:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008de6:	ab01      	add	r3, sp, #4
90008de8:	aa43      	add	r2, sp, #268	@ 0x10c
90008dea:	a902      	add	r1, sp, #8
90008dec:	f7ff ffa6 	bl	90008d3c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008df0:	b9d0      	cbnz	r0, 90008e28 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90008df2:	9f01      	ldr	r7, [sp, #4]
90008df4:	b1c7      	cbz	r7, 90008e28 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90008df6:	370f      	adds	r7, #15
90008df8:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90008dfc:	a902      	add	r1, sp, #8
90008dfe:	f104 0c0f 	add.w	ip, r4, #15
90008e02:	4427      	add	r7, r4
90008e04:	e009      	b.n	90008e1a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008e06:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90008e0a:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008e0c:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008e10:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008e14:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008e16:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90008e18:	d006      	beq.n	90008e28 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90008e1a:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008e1e:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008e20:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008e24:	d9ef      	bls.n	90008e06 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008e26:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008e28:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90008e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008e2e:	bf00      	nop

90008e30 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008e34:	6804      	ldr	r4, [r0, #0]
{
90008e36:	b093      	sub	sp, #76	@ 0x4c
90008e38:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008e3a:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90008e3e:	429a      	cmp	r2, r3
90008e40:	f000 809d 	beq.w	90008f7e <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90008e44:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90008e48:	429a      	cmp	r2, r3
90008e4a:	d003      	beq.n	90008e54 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008e4c:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008e4e:	b013      	add	sp, #76	@ 0x4c
90008e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008e54:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90008e58:	a903      	add	r1, sp, #12
90008e5a:	f7ff ffbf 	bl	90008ddc <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90008e5e:	2800      	cmp	r0, #0
90008e60:	d1f5      	bne.n	90008e4e <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90008e62:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e66:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e6a:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90008e6e:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e70:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90008e74:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e76:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90008e7a:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e7e:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
90008e82:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e86:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
90008e8a:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e8c:	f89d 9015 	ldrb.w	r9, [sp, #21]
90008e90:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e94:	f89d c014 	ldrb.w	ip, [sp, #20]
90008e98:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008e9c:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ea0:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ea4:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ea8:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eaa:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eae:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90008eb2:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90008eb6:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eba:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ebe:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ec2:	f89d 7011 	ldrb.w	r7, [sp, #17]
90008ec6:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eca:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90008ecc:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ed0:	f89d 2010 	ldrb.w	r2, [sp, #16]
90008ed4:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ed8:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90008eda:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ede:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ee0:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90008ee4:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ee8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eec:	f89d 600f 	ldrb.w	r6, [sp, #15]
90008ef0:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ef4:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ef8:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008efa:	9b01      	ldr	r3, [sp, #4]
90008efc:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f00:	f89d 500d 	ldrb.w	r5, [sp, #13]
90008f04:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f08:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90008f0c:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f10:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90008f12:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f16:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f1a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90008f1e:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f22:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f26:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f2a:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90008f2e:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90008f32:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90008f36:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f3a:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90008f3e:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f40:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
90008f44:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90008f46:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90008f4a:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f4e:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
90008f52:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f54:	f89d 2020 	ldrb.w	r2, [sp, #32]
90008f58:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90008f5a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90008f5e:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f62:	f89d 301c 	ldrb.w	r3, [sp, #28]
90008f66:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f68:	f89d 3018 	ldrb.w	r3, [sp, #24]
90008f6c:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90008f70:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90008f74:	f844 3c18 	str.w	r3, [r4, #-24]
}
90008f78:	b013      	add	sp, #76	@ 0x4c
90008f7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008f7e:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
90008f82:	e769      	b.n	90008e58 <JPEG_Set_HuffDC_Mem+0x28>

90008f84 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90008f84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008f88:	6804      	ldr	r4, [r0, #0]
{
90008f8a:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
90008f8e:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008f90:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90008f94:	429a      	cmp	r2, r3
90008f96:	d041      	beq.n	9000901c <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90008f98:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90008f9c:	429a      	cmp	r2, r3
90008f9e:	d004      	beq.n	90008faa <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008fa0:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008fa2:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90008fa6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008faa:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008fae:	4628      	mov	r0, r5
90008fb0:	466b      	mov	r3, sp
90008fb2:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
90008fb6:	a901      	add	r1, sp, #4
90008fb8:	f7ff fec0 	bl	90008d3c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008fbc:	2800      	cmp	r0, #0
90008fbe:	d1f0      	bne.n	90008fa2 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90008fc0:	9b00      	ldr	r3, [sp, #0]
90008fc2:	b373      	cbz	r3, 90009022 <JPEG_Set_HuffAC_Mem+0x9e>
90008fc4:	330f      	adds	r3, #15
90008fc6:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
90008fca:	af01      	add	r7, sp, #4
90008fcc:	f105 020f 	add.w	r2, r5, #15
90008fd0:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008fd4:	ae42      	add	r6, sp, #264	@ 0x108
90008fd6:	e011      	b.n	90008ffc <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
90008fd8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90008fdc:	2ba1      	cmp	r3, #161	@ 0xa1
90008fde:	d8df      	bhi.n	90008fa0 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008fe0:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008fe4:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90008fe8:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90008fec:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008fee:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008ff2:	46b1      	mov	r9, r6
90008ff4:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008ff8:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90008ffa:	d014      	beq.n	90009026 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90008ffc:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90009000:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
90009002:	2900      	cmp	r1, #0
90009004:	d0ec      	beq.n	90008fe0 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
90009006:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90009008:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000900c:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000900e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90009012:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009016:	d1df      	bne.n	90008fd8 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
90009018:	23a1      	movs	r3, #161	@ 0xa1
9000901a:	e7e1      	b.n	90008fe0 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000901c:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90009020:	e7c5      	b.n	90008fae <JPEG_Set_HuffAC_Mem+0x2a>
90009022:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
90009026:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
9000902a:	4a1a      	ldr	r2, [pc, #104]	@ (90009094 <JPEG_Set_HuffAC_Mem+0x110>)
9000902c:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90009030:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
90009032:	6023      	str	r3, [r4, #0]
90009034:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90009038:	6063      	str	r3, [r4, #4]
9000903a:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
9000903e:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90009040:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
90009044:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90009046:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
9000904a:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
9000904e:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90009050:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90009054:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90009056:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
9000905a:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000905c:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009060:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009064:	0212      	lsls	r2, r2, #8
90009066:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000906a:	021b      	lsls	r3, r3, #8
9000906c:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009070:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
90009074:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009076:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000907a:	433a      	orrs	r2, r7
    while (i > 1UL)
9000907c:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000907e:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
90009082:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009086:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000908a:	d1e7      	bne.n	9000905c <JPEG_Set_HuffAC_Mem+0xd8>
}
9000908c:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90009090:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009094:	0fd10fd0 	.word	0x0fd10fd0

90009098 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009098:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000909a:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000909c:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
900090a0:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900090a2:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900090a4:	f002 0203 	and.w	r2, r2, #3
900090a8:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900090aa:	685a      	ldr	r2, [r3, #4]
900090ac:	bf0c      	ite	eq
900090ae:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
900090b2:	f022 0208 	bicne.w	r2, r2, #8
900090b6:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900090b8:	681a      	ldr	r2, [r3, #0]
900090ba:	f022 0201 	bic.w	r2, r2, #1
900090be:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900090c0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900090c2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900090c6:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900090c8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900090ca:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
900090ce:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900090d0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900090d2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900090d6:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900090d8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900090da:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900090de:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
900090e0:	681a      	ldr	r2, [r3, #0]
900090e2:	f042 0201 	orr.w	r2, r2, #1
900090e6:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900090e8:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900090ea:	f002 020c 	and.w	r2, r2, #12
900090ee:	2a08      	cmp	r2, #8
900090f0:	d00a      	beq.n	90009108 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900090f2:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900090f4:	f002 020c 	and.w	r2, r2, #12
900090f8:	2a0c      	cmp	r2, #12
900090fa:	d000      	beq.n	900090fe <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
900090fc:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900090fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009100:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009104:	631a      	str	r2, [r3, #48]	@ 0x30
}
90009106:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90009108:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000910a:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
9000910e:	631a      	str	r2, [r3, #48]	@ 0x30
90009110:	4770      	bx	lr
90009112:	bf00      	nop

90009114 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009114:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009116:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
90009118:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000911a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
9000911c:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000911e:	42aa      	cmp	r2, r5
90009120:	d32a      	bcc.n	90009178 <JPEG_DMA_StartProcess+0x64>
90009122:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009124:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009126:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009128:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000912a:	42b3      	cmp	r3, r6
9000912c:	d324      	bcc.n	90009178 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000912e:	4f19      	ldr	r7, [pc, #100]	@ (90009194 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009130:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 900091a0 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009134:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009136:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000913a:	4917      	ldr	r1, [pc, #92]	@ (90009198 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000913c:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000913e:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90009140:	4916      	ldr	r1, [pc, #88]	@ (9000919c <JPEG_DMA_StartProcess+0x88>)
90009142:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90009144:	b1a5      	cbz	r5, 90009170 <JPEG_DMA_StartProcess+0x5c>
90009146:	b19e      	cbz	r6, 90009170 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009148:	fbb2 f1f5 	udiv	r1, r2, r5
9000914c:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009150:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009152:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009154:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009156:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009158:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000915a:	fbb3 f2f6 	udiv	r2, r3, r6
9000915e:	fb06 3212 	mls	r2, r6, r2, r3
90009162:	1a9b      	subs	r3, r3, r2
90009164:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009166:	9500      	str	r5, [sp, #0]
90009168:	69e2      	ldr	r2, [r4, #28]
9000916a:	f001 fc23 	bl	9000a9b4 <HAL_MDMA_Start_IT>
9000916e:	b130      	cbz	r0, 9000917e <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009170:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009172:	f043 0304 	orr.w	r3, r3, #4
90009176:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90009178:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000917a:	b003      	add	sp, #12
9000917c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000917e:	6822      	ldr	r2, [r4, #0]
90009180:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009182:	69a1      	ldr	r1, [r4, #24]
90009184:	3240      	adds	r2, #64	@ 0x40
90009186:	9500      	str	r5, [sp, #0]
90009188:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000918a:	f001 fc13 	bl	9000a9b4 <HAL_MDMA_Start_IT>
9000918e:	2800      	cmp	r0, #0
90009190:	d0f3      	beq.n	9000917a <JPEG_DMA_StartProcess+0x66>
90009192:	e7ed      	b.n	90009170 <JPEG_DMA_StartProcess+0x5c>
90009194:	90009781 	.word	0x90009781
90009198:	900099f5 	.word	0x900099f5
9000919c:	90009a75 	.word	0x90009a75
900091a0:	900097ad 	.word	0x900097ad

900091a4 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900091a4:	6803      	ldr	r3, [r0, #0]
900091a6:	685a      	ldr	r2, [r3, #4]
900091a8:	f002 0203 	and.w	r2, r2, #3
900091ac:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
900091ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900091b2:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900091b4:	d018      	beq.n	900091e8 <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
900091b6:	685a      	ldr	r2, [r3, #4]
900091b8:	f012 0203 	ands.w	r2, r2, #3
900091bc:	d10b      	bne.n	900091d6 <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900091be:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
900091c0:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900091c4:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900091c6:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900091c8:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900091ca:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900091ce:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
900091d2:	2100      	movs	r1, #0
900091d4:	e02f      	b.n	90009236 <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
900091d6:	685a      	ldr	r2, [r3, #4]
900091d8:	f002 0203 	and.w	r2, r2, #3
900091dc:	2a03      	cmp	r2, #3
900091de:	f000 8097 	beq.w	90009310 <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
900091e2:	2001      	movs	r0, #1
}
900091e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900091e8:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900091ea:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
900091ec:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900091f0:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900091f2:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900091f4:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900091f8:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
900091fa:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
900091fc:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900091fe:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009202:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009204:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009206:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000920a:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000920e:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009212:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009216:	d105      	bne.n	90009224 <HAL_JPEG_GetInfo.part.0+0x80>
90009218:	2a01      	cmp	r2, #1
9000921a:	d103      	bne.n	90009224 <HAL_JPEG_GetInfo.part.0+0x80>
9000921c:	070d      	lsls	r5, r1, #28
9000921e:	d1d8      	bne.n	900091d2 <HAL_JPEG_GetInfo.part.0+0x2e>
90009220:	2102      	movs	r1, #2
90009222:	e008      	b.n	90009236 <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009224:	433e      	orrs	r6, r7
90009226:	0734      	lsls	r4, r6, #28
90009228:	d0d3      	beq.n	900091d2 <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000922a:	430f      	orrs	r7, r1
9000922c:	0739      	lsls	r1, r7, #28
9000922e:	d1d0      	bne.n	900091d2 <HAL_JPEG_GetInfo.part.0+0x2e>
90009230:	2a03      	cmp	r2, #3
90009232:	d1ce      	bne.n	900091d2 <HAL_JPEG_GetInfo.part.0+0x2e>
90009234:	2101      	movs	r1, #1
90009236:	4a42      	ldr	r2, [pc, #264]	@ (90009340 <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90009238:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000923c:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
90009240:	2600      	movs	r6, #0
90009242:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009246:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000924a:	f241 3188 	movw	r1, #5000	@ 0x1388
9000924e:	e033      	b.n	900092b8 <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009250:	f892 8001 	ldrb.w	r8, [r2, #1]
90009254:	fb0e f707 	mul.w	r7, lr, r7
90009258:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000925a:	f815 8008 	ldrb.w	r8, [r5, r8]
9000925e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009262:	2f64      	cmp	r7, #100	@ 0x64
90009264:	d958      	bls.n	90009318 <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
90009266:	fbb1 f7f7 	udiv	r7, r1, r7
9000926a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000926c:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90009270:	2f01      	cmp	r7, #1
90009272:	d03d      	beq.n	900092f0 <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009274:	f892 8002 	ldrb.w	r8, [r2, #2]
90009278:	fb0e f707 	mul.w	r7, lr, r7
9000927c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000927e:	f815 8008 	ldrb.w	r8, [r5, r8]
90009282:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009286:	2f64      	cmp	r7, #100	@ 0x64
90009288:	d955      	bls.n	90009336 <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
9000928a:	fbb1 f7f7 	udiv	r7, r1, r7
9000928e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009290:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90009292:	2b01      	cmp	r3, #1
90009294:	d030      	beq.n	900092f8 <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009296:	78d7      	ldrb	r7, [r2, #3]
90009298:	fb0e f303 	mul.w	r3, lr, r3
9000929c:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000929e:	5def      	ldrb	r7, [r5, r7]
900092a0:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
900092a4:	2b64      	cmp	r3, #100	@ 0x64
900092a6:	d93c      	bls.n	90009322 <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
900092a8:	fbb1 f3f3 	udiv	r3, r1, r3
900092ac:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900092ae:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
900092b0:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900092b4:	4294      	cmp	r4, r2
900092b6:	d025      	beq.n	90009304 <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
900092b8:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900092bc:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
900092be:	2f01      	cmp	r7, #1
900092c0:	d028      	beq.n	90009314 <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900092c2:	f892 8000 	ldrb.w	r8, [r2]
900092c6:	fb0e f707 	mul.w	r7, lr, r7
900092ca:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
900092cc:	f815 8008 	ldrb.w	r8, [r5, r8]
900092d0:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900092d4:	2f64      	cmp	r7, #100	@ 0x64
900092d6:	d929      	bls.n	9000932c <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
900092d8:	fbb1 f7f7 	udiv	r7, r1, r7
900092dc:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900092de:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
900092e2:	2f01      	cmp	r7, #1
900092e4:	d1b4      	bne.n	90009250 <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900092e6:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
900092ea:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
900092ec:	2f01      	cmp	r7, #1
900092ee:	d1c1      	bne.n	90009274 <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900092f0:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
900092f2:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
900092f4:	2b01      	cmp	r3, #1
900092f6:	d1ce      	bne.n	90009296 <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900092f8:	3204      	adds	r2, #4
        quality += 100UL;
900092fa:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
900092fc:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009300:	4294      	cmp	r4, r2
90009302:	d1d9      	bne.n	900092b8 <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
90009304:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90009306:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90009308:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000930c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009310:	2130      	movs	r1, #48	@ 0x30
90009312:	e76a      	b.n	900091ea <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
90009314:	3664      	adds	r6, #100	@ 0x64
90009316:	e7e2      	b.n	900092de <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
90009318:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000931c:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009320:	e7a4      	b.n	9000926c <HAL_JPEG_GetInfo.part.0+0xc8>
90009322:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90009326:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000932a:	e7c0      	b.n	900092ae <HAL_JPEG_GetInfo.part.0+0x10a>
9000932c:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009330:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009334:	e7d3      	b.n	900092de <HAL_JPEG_GetInfo.part.0+0x13a>
90009336:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
9000933a:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000933e:	e7a7      	b.n	90009290 <HAL_JPEG_GetInfo.part.0+0xec>
90009340:	9002a238 	.word	0x9002a238

90009344 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90009344:	2800      	cmp	r0, #0
90009346:	f000 8107 	beq.w	90009558 <HAL_JPEG_Init+0x214>
{
9000934a:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000934c:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90009350:	4605      	mov	r5, r0
90009352:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009356:	2b00      	cmp	r3, #0
90009358:	f000 80f9 	beq.w	9000954e <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
9000935c:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000935e:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
90009360:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009362:	497e      	ldr	r1, [pc, #504]	@ (9000955c <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009364:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90009368:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000936a:	f042 0201 	orr.w	r2, r2, #1
9000936e:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009370:	6822      	ldr	r2, [r4, #0]
90009372:	f022 0201 	bic.w	r2, r2, #1
90009376:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009378:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000937a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000937e:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009380:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009382:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009386:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009388:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000938a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000938e:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009390:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90009392:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009396:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009398:	4a71      	ldr	r2, [pc, #452]	@ (90009560 <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000939a:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000939c:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
9000939e:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
900093a0:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900093a4:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
900093a8:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
900093ac:	4b6d      	ldr	r3, [pc, #436]	@ (90009564 <HAL_JPEG_Init+0x220>)
900093ae:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
900093b2:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900093b6:	496c      	ldr	r1, [pc, #432]	@ (90009568 <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900093b8:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900093bc:	4b6b      	ldr	r3, [pc, #428]	@ (9000956c <HAL_JPEG_Init+0x228>)
900093be:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
900093c2:	4a6b      	ldr	r2, [pc, #428]	@ (90009570 <HAL_JPEG_Init+0x22c>)
900093c4:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900093c8:	4b6a      	ldr	r3, [pc, #424]	@ (90009574 <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900093ca:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900093ce:	496a      	ldr	r1, [pc, #424]	@ (90009578 <HAL_JPEG_Init+0x234>)
900093d0:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
900093d4:	4a69      	ldr	r2, [pc, #420]	@ (9000957c <HAL_JPEG_Init+0x238>)
900093d6:	4b6a      	ldr	r3, [pc, #424]	@ (90009580 <HAL_JPEG_Init+0x23c>)
900093d8:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
900093dc:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
900093e0:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
900093e4:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
900093e8:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
900093ec:	4a65      	ldr	r2, [pc, #404]	@ (90009584 <HAL_JPEG_Init+0x240>)
900093ee:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
900093f0:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
900093f4:	4313      	orrs	r3, r2
  *address = value;
900093f6:	4a64      	ldr	r2, [pc, #400]	@ (90009588 <HAL_JPEG_Init+0x244>)
900093f8:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
900093fc:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009400:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90009404:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009406:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000940a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000940c:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009410:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90009414:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009416:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000941a:	ea43 030c 	orr.w	r3, r3, ip
9000941e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009422:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009426:	d1eb      	bne.n	90009400 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
90009428:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000942c:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90009430:	4954      	ldr	r1, [pc, #336]	@ (90009584 <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009432:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90009434:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90009436:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
9000943a:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
9000943e:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009442:	400b      	ands	r3, r1
  *address = value;
90009444:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009448:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
9000944c:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90009450:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009454:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90009458:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
9000945c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000945e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009462:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90009466:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
9000946a:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000946c:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000946e:	4b47      	ldr	r3, [pc, #284]	@ (9000958c <HAL_JPEG_Init+0x248>)
  *address = value;
90009470:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009474:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009478:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
9000947c:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90009480:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90009484:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009488:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000948a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
9000948e:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90009492:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90009496:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009498:	493d      	ldr	r1, [pc, #244]	@ (90009590 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000949a:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000949c:	4b3d      	ldr	r3, [pc, #244]	@ (90009594 <HAL_JPEG_Init+0x250>)
  *address = value;
9000949e:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900094a2:	4a3d      	ldr	r2, [pc, #244]	@ (90009598 <HAL_JPEG_Init+0x254>)
900094a4:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
900094a8:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900094ac:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
900094b0:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
900094b4:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
900094b8:	4a38      	ldr	r2, [pc, #224]	@ (9000959c <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
900094ba:	b29b      	uxth	r3, r3
900094bc:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
900094c0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
900094c4:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
900094c8:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
900094cc:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900094ce:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
900094d2:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
900094d4:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
900094d8:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
900094dc:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
900094de:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
900094e2:	ea43 030c 	orr.w	r3, r3, ip
900094e6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900094ea:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
900094ee:	d1eb      	bne.n	900094c8 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
900094f0:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
900094f4:	4924      	ldr	r1, [pc, #144]	@ (90009588 <HAL_JPEG_Init+0x244>)
900094f6:	4628      	mov	r0, r5
900094f8:	f7ff fd44 	bl	90008f84 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
900094fc:	b118      	cbz	r0, 90009506 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
900094fe:	2301      	movs	r3, #1
    return HAL_ERROR;
90009500:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009502:	652b      	str	r3, [r5, #80]	@ 0x50
}
90009504:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90009506:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
9000950a:	4924      	ldr	r1, [pc, #144]	@ (9000959c <HAL_JPEG_Init+0x258>)
9000950c:	4628      	mov	r0, r5
9000950e:	f7ff fd39 	bl	90008f84 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009512:	2800      	cmp	r0, #0
90009514:	d1f3      	bne.n	900094fe <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90009516:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
9000951a:	4921      	ldr	r1, [pc, #132]	@ (900095a0 <HAL_JPEG_Init+0x25c>)
9000951c:	4628      	mov	r0, r5
9000951e:	f7ff fc87 	bl	90008e30 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90009522:	2800      	cmp	r0, #0
90009524:	d1eb      	bne.n	900094fe <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90009526:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
9000952a:	491e      	ldr	r1, [pc, #120]	@ (900095a4 <HAL_JPEG_Init+0x260>)
9000952c:	4628      	mov	r0, r5
9000952e:	f7ff fc7f 	bl	90008e30 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90009532:	2800      	cmp	r0, #0
90009534:	d1e3      	bne.n	900094fe <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009536:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90009538:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000953a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000953e:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90009540:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90009542:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90009544:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90009548:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
9000954a:	6568      	str	r0, [r5, #84]	@ 0x54
}
9000954c:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000954e:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90009552:	f7fa fb8b 	bl	90003c6c <HAL_JPEG_MspInit>
90009556:	e701      	b.n	9000935c <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90009558:	2001      	movs	r0, #1
}
9000955a:	4770      	bx	lr
9000955c:	9002a1f8 	.word	0x9002a1f8
90009560:	9002a1b8 	.word	0x9002a1b8
90009564:	01050100 	.word	0x01050100
90009568:	0b0a0908 	.word	0x0b0a0908
9000956c:	07060504 	.word	0x07060504
90009570:	03020100 	.word	0x03020100
90009574:	7d010000 	.word	0x7d010000
90009578:	04040505 	.word	0x04040505
9000957c:	03040203 	.word	0x03040203
90009580:	03010200 	.word	0x03010200
90009584:	ffff0000 	.word	0xffff0000
90009588:	9002a32c 	.word	0x9002a32c
9000958c:	09080706 	.word	0x09080706
90009590:	01000404 	.word	0x01000404
90009594:	04040201 	.word	0x04040201
90009598:	05070403 	.word	0x05070403
9000959c:	9002a278 	.word	0x9002a278
900095a0:	9002a3fc 	.word	0x9002a3fc
900095a4:	9002a3e0 	.word	0x9002a3e0

900095a8 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
900095a8:	2b00      	cmp	r3, #0
900095aa:	bf18      	it	ne
900095ac:	2900      	cmpne	r1, #0
900095ae:	d036      	beq.n	9000961e <HAL_JPEG_Decode_DMA+0x76>
{
900095b0:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
900095b2:	fab0 f580 	clz	r5, r0
900095b6:	4604      	mov	r4, r0
900095b8:	096d      	lsrs	r5, r5, #5
900095ba:	b370      	cbz	r0, 9000961a <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
900095bc:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
900095c0:	f1bc 0f01 	cmp.w	ip, #1
900095c4:	d022      	beq.n	9000960c <HAL_JPEG_Decode_DMA+0x64>
900095c6:	f04f 0c01 	mov.w	ip, #1
900095ca:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
900095ce:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
900095d2:	f1bc 0f01 	cmp.w	ip, #1
900095d6:	d117      	bne.n	90009608 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
900095d8:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
900095da:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
900095de:	9b04      	ldr	r3, [sp, #16]
900095e0:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
900095e2:	2304      	movs	r3, #4
900095e4:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
900095e8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900095ea:	f023 030f 	bic.w	r3, r3, #15
900095ee:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
900095f0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900095f2:	f043 030e 	orr.w	r3, r3, #14
900095f6:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
900095f8:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
900095fa:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
900095fc:	f7ff fd4c 	bl	90009098 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90009600:	f7ff fd88 	bl	90009114 <JPEG_DMA_StartProcess>
90009604:	b920      	cbnz	r0, 90009610 <HAL_JPEG_Decode_DMA+0x68>
}
90009606:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90009608:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
9000960c:	2002      	movs	r0, #2
}
9000960e:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009610:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90009612:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009616:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000961a:	2001      	movs	r0, #1
}
9000961c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000961e:	2001      	movs	r0, #1
}
90009620:	4770      	bx	lr
90009622:	bf00      	nop

90009624 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009624:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009626:	f003 030c 	and.w	r3, r3, #12
9000962a:	2b0c      	cmp	r3, #12
9000962c:	d01a      	beq.n	90009664 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000962e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009630:	f003 030c 	and.w	r3, r3, #12
90009634:	2b08      	cmp	r3, #8
90009636:	d001      	beq.n	9000963c <HAL_JPEG_Pause+0x18>
}
90009638:	2000      	movs	r0, #0
9000963a:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000963c:	07ca      	lsls	r2, r1, #31
9000963e:	d41f      	bmi.n	90009680 <HAL_JPEG_Pause+0x5c>
90009640:	f04f 3cff 	mov.w	ip, #4294967295
90009644:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009648:	078b      	lsls	r3, r1, #30
9000964a:	d504      	bpl.n	90009656 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000964c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000964e:	4694      	mov	ip, r2
90009650:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009654:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009656:	6802      	ldr	r2, [r0, #0]
}
90009658:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000965a:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000965c:	ea03 030c 	and.w	r3, r3, ip
90009660:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009662:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009664:	07cb      	lsls	r3, r1, #31
90009666:	d503      	bpl.n	90009670 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009668:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000966a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000966e:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009670:	0789      	lsls	r1, r1, #30
90009672:	d5e1      	bpl.n	90009638 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009674:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009676:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000967a:	6543      	str	r3, [r0, #84]	@ 0x54
}
9000967c:	2000      	movs	r0, #0
9000967e:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009680:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009682:	f06f 0c06 	mvn.w	ip, #6
90009686:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
9000968a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000968e:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009690:	e7da      	b.n	90009648 <HAL_JPEG_Pause+0x24>
90009692:	bf00      	nop

90009694 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90009694:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90009696:	6282      	str	r2, [r0, #40]	@ 0x28
}
90009698:	4770      	bx	lr
9000969a:	bf00      	nop

9000969c <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000969c:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000969e:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
900096a0:	4770      	bx	lr
900096a2:	bf00      	nop

900096a4 <HAL_JPEG_Abort>:
{
900096a4:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
900096a6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
900096a8:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
900096aa:	6d41      	ldr	r1, [r0, #84]	@ 0x54
900096ac:	4a32      	ldr	r2, [pc, #200]	@ (90009778 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900096ae:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
900096b2:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900096b4:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
900096b6:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900096b8:	d043      	beq.n	90009742 <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900096ba:	6822      	ldr	r2, [r4, #0]
900096bc:	6813      	ldr	r3, [r2, #0]
900096be:	f023 0301 	bic.w	r3, r3, #1
900096c2:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
900096c4:	f7fe f9f0 	bl	90007aa8 <HAL_GetTick>
900096c8:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
900096ca:	e005      	b.n	900096d8 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
900096cc:	f7fe f9ec 	bl	90007aa8 <HAL_GetTick>
900096d0:	1b40      	subs	r0, r0, r5
900096d2:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
900096d6:	d82b      	bhi.n	90009730 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
900096d8:	6823      	ldr	r3, [r4, #0]
900096da:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
900096dc:	0612      	lsls	r2, r2, #24
900096de:	d4f5      	bmi.n	900096cc <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900096e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
900096e2:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900096e4:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900096e8:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900096ea:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900096ec:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
900096f0:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900096f2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900096f4:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900096f8:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900096fa:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900096fc:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009700:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90009702:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90009704:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90009706:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009708:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
9000970c:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
9000970e:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90009710:	b138      	cbz	r0, 90009722 <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009712:	2306      	movs	r3, #6
    return HAL_ERROR;
90009714:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009716:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
9000971a:	2300      	movs	r3, #0
9000971c:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009720:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90009722:	2301      	movs	r3, #1
90009724:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90009728:	2300      	movs	r3, #0
9000972a:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
9000972e:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009730:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009732:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009734:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009736:	f042 0208 	orr.w	r2, r2, #8
9000973a:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000973c:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90009740:	e7ce      	b.n	900096e0 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90009742:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90009744:	f001 f9a8 	bl	9000aa98 <HAL_MDMA_Abort>
90009748:	b118      	cbz	r0, 90009752 <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000974a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000974c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
9000974e:	2b40      	cmp	r3, #64	@ 0x40
90009750:	d00d      	beq.n	9000976e <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90009752:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009754:	f001 f9a0 	bl	9000aa98 <HAL_MDMA_Abort>
90009758:	2800      	cmp	r0, #0
9000975a:	d0ae      	beq.n	900096ba <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
9000975c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000975e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009760:	2b40      	cmp	r3, #64	@ 0x40
90009762:	d1aa      	bne.n	900096ba <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009764:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009766:	f043 0304 	orr.w	r3, r3, #4
9000976a:	6523      	str	r3, [r4, #80]	@ 0x50
9000976c:	e7a5      	b.n	900096ba <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000976e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009770:	f043 0304 	orr.w	r3, r3, #4
90009774:	6523      	str	r3, [r4, #80]	@ 0x50
90009776:	e7ec      	b.n	90009752 <HAL_JPEG_Abort+0xae>
90009778:	ffff7ff0 	.word	0xffff7ff0

9000977c <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
9000977c:	4770      	bx	lr
9000977e:	bf00      	nop

90009780 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009780:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90009782:	2101      	movs	r1, #1
{
90009784:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009786:	6803      	ldr	r3, [r0, #0]
90009788:	681a      	ldr	r2, [r3, #0]
9000978a:	f022 0201 	bic.w	r2, r2, #1
9000978e:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009790:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009792:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009796:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009798:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000979c:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000979e:	f043 0304 	orr.w	r3, r3, #4
900097a2:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
900097a4:	f7f8 fcae 	bl	90002104 <HAL_JPEG_ErrorCallback>
}
900097a8:	bd08      	pop	{r3, pc}
900097aa:	bf00      	nop

900097ac <JPEG_MDMAInCpltCallback>:
{
900097ac:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
900097ae:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
900097b0:	f248 010c 	movw	r1, #32780	@ 0x800c
{
900097b4:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900097b6:	6822      	ldr	r2, [r4, #0]
900097b8:	6b13      	ldr	r3, [r2, #48]	@ 0x30
900097ba:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
900097be:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
900097c0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900097c2:	400b      	ands	r3, r1
900097c4:	2b0c      	cmp	r3, #12
900097c6:	d001      	beq.n	900097cc <JPEG_MDMAInCpltCallback+0x20>
}
900097c8:	b003      	add	sp, #12
900097ca:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900097cc:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
900097ce:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900097d0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900097d2:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900097d4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900097d6:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900097da:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900097dc:	1a9b      	subs	r3, r3, r2
900097de:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
900097e0:	6a21      	ldr	r1, [r4, #32]
900097e2:	f7f8 fbc3 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
900097e6:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900097e8:	42ab      	cmp	r3, r5
900097ea:	d311      	bcc.n	90009810 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
900097ec:	b305      	cbz	r5, 90009830 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900097ee:	fbb3 f2f5 	udiv	r2, r3, r5
900097f2:	fb05 3212 	mls	r2, r5, r2, r3
900097f6:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900097f8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900097fa:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900097fc:	04d1      	lsls	r1, r2, #19
900097fe:	d400      	bmi.n	90009802 <JPEG_MDMAInCpltCallback+0x56>
90009800:	b963      	cbnz	r3, 9000981c <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009802:	6822      	ldr	r2, [r4, #0]
90009804:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009806:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
9000980a:	6313      	str	r3, [r2, #48]	@ 0x30
}
9000980c:	b003      	add	sp, #12
9000980e:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009810:	b1cb      	cbz	r3, 90009846 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90009812:	0798      	lsls	r0, r3, #30
90009814:	d119      	bne.n	9000984a <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009816:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009818:	04d2      	lsls	r2, r2, #19
9000981a:	d4f2      	bmi.n	90009802 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000981c:	6822      	ldr	r2, [r4, #0]
9000981e:	2501      	movs	r5, #1
90009820:	69a1      	ldr	r1, [r4, #24]
90009822:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009824:	3240      	adds	r2, #64	@ 0x40
90009826:	9500      	str	r5, [sp, #0]
90009828:	f001 f8c4 	bl	9000a9b4 <HAL_MDMA_Start_IT>
9000982c:	2800      	cmp	r0, #0
9000982e:	d0e8      	beq.n	90009802 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009830:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009832:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
90009834:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009836:	f043 0304 	orr.w	r3, r3, #4
9000983a:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000983c:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90009840:	f7f8 fc60 	bl	90002104 <HAL_JPEG_ErrorCallback>
        return;
90009844:	e7c0      	b.n	900097c8 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009846:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009848:	e7db      	b.n	90009802 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000984a:	f023 0303 	bic.w	r3, r3, #3
9000984e:	3304      	adds	r3, #4
90009850:	e7d2      	b.n	900097f8 <JPEG_MDMAInCpltCallback+0x4c>
90009852:	bf00      	nop

90009854 <JPEG_DMA_PollResidualData>:
{
90009854:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009856:	6802      	ldr	r2, [r0, #0]
90009858:	2610      	movs	r6, #16
{
9000985a:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000985c:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000985e:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009862:	d11d      	bne.n	900098a0 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009864:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009866:	06df      	lsls	r7, r3, #27
90009868:	d51a      	bpl.n	900098a0 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000986a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000986c:	69e7      	ldr	r7, [r4, #28]
9000986e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009870:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009872:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009874:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009876:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009878:	6a67      	ldr	r7, [r4, #36]	@ 0x24
9000987a:	69e2      	ldr	r2, [r4, #28]
9000987c:	443a      	add	r2, r7
9000987e:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009880:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009882:	69e2      	ldr	r2, [r4, #28]
90009884:	4402      	add	r2, r0
90009886:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009888:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000988a:	69e2      	ldr	r2, [r4, #28]
9000988c:	440a      	add	r2, r1
9000988e:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009890:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009892:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
90009894:	3304      	adds	r3, #4
90009896:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009898:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000989a:	4293      	cmp	r3, r2
9000989c:	d021      	beq.n	900098e2 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000989e:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
900098a0:	3e01      	subs	r6, #1
900098a2:	d1db      	bne.n	9000985c <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
900098a4:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900098a6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
900098a8:	06d8      	lsls	r0, r3, #27
900098aa:	d501      	bpl.n	900098b0 <JPEG_DMA_PollResidualData+0x5c>
900098ac:	048b      	lsls	r3, r1, #18
900098ae:	d417      	bmi.n	900098e0 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900098b0:	6813      	ldr	r3, [r2, #0]
900098b2:	f023 0301 	bic.w	r3, r3, #1
900098b6:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
900098b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900098ba:	b9eb      	cbnz	r3, 900098f8 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
900098bc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
900098be:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900098c0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900098c2:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900098c4:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900098c8:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900098cc:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900098d0:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900098d2:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900098d4:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900098d6:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900098da:	d00a      	beq.n	900098f2 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
900098dc:	f7ff ff4e 	bl	9000977c <HAL_JPEG_EncodeCpltCallback>
}
900098e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900098e2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098e4:	4620      	mov	r0, r4
900098e6:	69e1      	ldr	r1, [r4, #28]
900098e8:	f7f8 fb60 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900098ec:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
900098ee:	6265      	str	r5, [r4, #36]	@ 0x24
900098f0:	e7d6      	b.n	900098a0 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900098f2:	f7f8 fc09 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
900098f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900098f8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098fa:	4620      	mov	r0, r4
900098fc:	69e1      	ldr	r1, [r4, #28]
900098fe:	f7f8 fb55 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009902:	2300      	movs	r3, #0
90009904:	6263      	str	r3, [r4, #36]	@ 0x24
90009906:	e7d9      	b.n	900098bc <JPEG_DMA_PollResidualData+0x68>

90009908 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009908:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000990a:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
9000990e:	d06f      	beq.n	900099f0 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009910:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009912:	f003 030c 	and.w	r3, r3, #12
90009916:	2b0c      	cmp	r3, #12
{
90009918:	b530      	push	{r4, r5, lr}
9000991a:	4604      	mov	r4, r0
9000991c:	b083      	sub	sp, #12
9000991e:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009920:	d007      	beq.n	90009932 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009922:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009924:	f003 030c 	and.w	r3, r3, #12
90009928:	2b08      	cmp	r3, #8
9000992a:	d035      	beq.n	90009998 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
9000992c:	2000      	movs	r0, #0
}
9000992e:	b003      	add	sp, #12
90009930:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009932:	07c8      	lsls	r0, r1, #31
90009934:	d415      	bmi.n	90009962 <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009936:	07a9      	lsls	r1, r5, #30
90009938:	d5f8      	bpl.n	9000992c <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000993a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000993c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009940:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009942:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009944:	041a      	lsls	r2, r3, #16
90009946:	d44f      	bmi.n	900099e8 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009948:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000994a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
9000994c:	2a00      	cmp	r2, #0
9000994e:	d13a      	bne.n	900099c6 <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009950:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009952:	2206      	movs	r2, #6
    return HAL_ERROR;
90009954:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009956:	f043 0304 	orr.w	r3, r3, #4
9000995a:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000995c:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
90009960:	e7e5      	b.n	9000992e <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009962:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009964:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009966:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000996a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000996c:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000996e:	2a00      	cmp	r2, #0
90009970:	d0ee      	beq.n	90009950 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
90009972:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009974:	fbb3 f1f2 	udiv	r1, r3, r2
90009978:	fb02 3211 	mls	r2, r2, r1, r3
9000997c:	1a9b      	subs	r3, r3, r2
9000997e:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
90009980:	2b00      	cmp	r3, #0
90009982:	d0d8      	beq.n	90009936 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009984:	6822      	ldr	r2, [r4, #0]
90009986:	2101      	movs	r1, #1
90009988:	3240      	adds	r2, #64	@ 0x40
9000998a:	9100      	str	r1, [sp, #0]
9000998c:	69a1      	ldr	r1, [r4, #24]
9000998e:	f001 f811 	bl	9000a9b4 <HAL_MDMA_Start_IT>
90009992:	2800      	cmp	r0, #0
90009994:	d0cf      	beq.n	90009936 <HAL_JPEG_Resume+0x2e>
90009996:	e7db      	b.n	90009950 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009998:	f011 0101 	ands.w	r1, r1, #1
9000999c:	d011      	beq.n	900099c2 <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000999e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900099a0:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
900099a2:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900099a4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900099a8:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900099aa:	07ab      	lsls	r3, r5, #30
900099ac:	d504      	bpl.n	900099b8 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900099ae:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
900099b0:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900099b2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
900099b6:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
900099b8:	6822      	ldr	r2, [r4, #0]
900099ba:	6b13      	ldr	r3, [r2, #48]	@ 0x30
900099bc:	430b      	orrs	r3, r1
900099be:	6313      	str	r3, [r2, #48]	@ 0x30
900099c0:	e7b4      	b.n	9000992c <HAL_JPEG_Resume+0x24>
900099c2:	2228      	movs	r2, #40	@ 0x28
900099c4:	e7f1      	b.n	900099aa <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
900099c6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900099c8:	fbb3 f1f2 	udiv	r1, r3, r2
900099cc:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900099d0:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
900099d2:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900099d4:	2201      	movs	r2, #1
900099d6:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
900099d8:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900099da:	9200      	str	r2, [sp, #0]
900099dc:	69e2      	ldr	r2, [r4, #28]
900099de:	f000 ffe9 	bl	9000a9b4 <HAL_MDMA_Start_IT>
900099e2:	2800      	cmp	r0, #0
900099e4:	d0a2      	beq.n	9000992c <HAL_JPEG_Resume+0x24>
900099e6:	e7b3      	b.n	90009950 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
900099e8:	4620      	mov	r0, r4
900099ea:	f7ff ff33 	bl	90009854 <JPEG_DMA_PollResidualData>
900099ee:	e79d      	b.n	9000992c <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
900099f0:	2001      	movs	r0, #1
}
900099f2:	4770      	bx	lr

900099f4 <JPEG_MDMAOutCpltCallback>:
{
900099f4:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
900099f6:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
900099f8:	f248 010c 	movw	r1, #32780	@ 0x800c
{
900099fc:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900099fe:	6823      	ldr	r3, [r4, #0]
90009a00:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009a02:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009a06:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009a08:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009a0a:	400a      	ands	r2, r1
90009a0c:	2a0c      	cmp	r2, #12
90009a0e:	d001      	beq.n	90009a14 <JPEG_MDMAOutCpltCallback+0x20>
}
90009a10:	b003      	add	sp, #12
90009a12:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
90009a14:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009a16:	0692      	lsls	r2, r2, #26
90009a18:	d505      	bpl.n	90009a26 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009a1a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009a1c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009a20:	631a      	str	r2, [r3, #48]	@ 0x30
}
90009a22:	b003      	add	sp, #12
90009a24:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009a26:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a28:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009a2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009a2c:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a2e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009a30:	f3c2 0210 	ubfx	r2, r2, #0, #17
90009a34:	1a9b      	subs	r3, r3, r2
90009a36:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a38:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009a3a:	f7f8 fab7 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009a3e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009a40:	049b      	lsls	r3, r3, #18
90009a42:	d501      	bpl.n	90009a48 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009a44:	6823      	ldr	r3, [r4, #0]
90009a46:	e7e8      	b.n	90009a1a <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009a48:	6821      	ldr	r1, [r4, #0]
90009a4a:	2501      	movs	r5, #1
90009a4c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009a4e:	69e2      	ldr	r2, [r4, #28]
90009a50:	3144      	adds	r1, #68	@ 0x44
90009a52:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009a54:	9500      	str	r5, [sp, #0]
90009a56:	f000 ffad 	bl	9000a9b4 <HAL_MDMA_Start_IT>
90009a5a:	2800      	cmp	r0, #0
90009a5c:	d0f2      	beq.n	90009a44 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009a5e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009a60:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
90009a62:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009a64:	f043 0304 	orr.w	r3, r3, #4
90009a68:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009a6a:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
90009a6e:	f7f8 fb49 	bl	90002104 <HAL_JPEG_ErrorCallback>
          return;
90009a72:	e7cd      	b.n	90009a10 <JPEG_MDMAOutCpltCallback+0x1c>

90009a74 <JPEG_MDMAOutAbortCallback>:
{
90009a74:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009a76:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009a78:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009a7a:	041a      	lsls	r2, r3, #16
90009a7c:	d400      	bmi.n	90009a80 <JPEG_MDMAOutAbortCallback+0xc>
}
90009a7e:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009a80:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90009a82:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009a84:	681b      	ldr	r3, [r3, #0]
90009a86:	695b      	ldr	r3, [r3, #20]
90009a88:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009a8c:	1ad3      	subs	r3, r2, r3
90009a8e:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009a90:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009a92:	429a      	cmp	r2, r3
90009a94:	d025      	beq.n	90009ae2 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009a96:	6822      	ldr	r2, [r4, #0]
90009a98:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90009a9a:	f015 0510 	ands.w	r5, r5, #16
90009a9e:	d118      	bne.n	90009ad2 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
90009aa0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009aa2:	bb4b      	cbnz	r3, 90009af8 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009aa4:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009aa6:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009aa8:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009aaa:	f023 0301 	bic.w	r3, r3, #1
90009aae:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009ab0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009ab2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009ab4:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009ab8:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009abc:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009ac0:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009ac2:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009ac4:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009ac6:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009aca:	d012      	beq.n	90009af2 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009acc:	f7ff fe56 	bl	9000977c <HAL_JPEG_EncodeCpltCallback>
}
90009ad0:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009ad2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009ad4:	049b      	lsls	r3, r3, #18
90009ad6:	d4d2      	bmi.n	90009a7e <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009ad8:	4620      	mov	r0, r4
}
90009ada:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009ade:	f7ff beb9 	b.w	90009854 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009ae2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009ae4:	4620      	mov	r0, r4
90009ae6:	69e1      	ldr	r1, [r4, #28]
90009ae8:	f7f8 fa60 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009aec:	2300      	movs	r3, #0
90009aee:	6263      	str	r3, [r4, #36]	@ 0x24
90009af0:	e7d1      	b.n	90009a96 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009af2:	f7f8 fb09 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
90009af6:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009af8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009afa:	4620      	mov	r0, r4
90009afc:	69e1      	ldr	r1, [r4, #28]
90009afe:	f7f8 fa55 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009b02:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009b04:	6265      	str	r5, [r4, #36]	@ 0x24
90009b06:	e7cd      	b.n	90009aa4 <JPEG_MDMAOutAbortCallback+0x30>

90009b08 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009b08:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009b0a:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009b0c:	f002 0203 	and.w	r2, r2, #3
90009b10:	2a02      	cmp	r2, #2
{
90009b12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009b16:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009b18:	d01e      	beq.n	90009b58 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
90009b1a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009b1c:	04d7      	lsls	r7, r2, #19
90009b1e:	d407      	bmi.n	90009b30 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009b20:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b22:	0796      	lsls	r6, r2, #30
90009b24:	f100 811b 	bmi.w	90009d5e <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
90009b28:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b2a:	0750      	lsls	r0, r2, #29
90009b2c:	f100 81cc 	bmi.w	90009ec8 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009b30:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009b32:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009b36:	d107      	bne.n	90009b48 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
90009b38:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90009b3a:	f016 0608 	ands.w	r6, r6, #8
90009b3e:	d14a      	bne.n	90009bd6 <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009b40:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b42:	06d2      	lsls	r2, r2, #27
90009b44:	f100 81fe 	bmi.w	90009f44 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009b48:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b4a:	f002 0238 	and.w	r2, r2, #56	@ 0x38
90009b4e:	2a20      	cmp	r2, #32
90009b50:	d019      	beq.n	90009b86 <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
90009b52:	2000      	movs	r0, #0
}
90009b54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009b58:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009b5a:	0652      	lsls	r2, r2, #25
90009b5c:	d5dd      	bpl.n	90009b1a <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009b5e:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009b60:	4629      	mov	r1, r5
90009b62:	f7ff fb1f 	bl	900091a4 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009b66:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009b68:	4629      	mov	r1, r5
90009b6a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009b6c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009b6e:	f7f8 f9cf 	bl	90001f10 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009b72:	6823      	ldr	r3, [r4, #0]
90009b74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009b76:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
90009b7a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009b7c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009b7e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90009b82:	639a      	str	r2, [r3, #56]	@ 0x38
90009b84:	e7c9      	b.n	90009b1a <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009b86:	681a      	ldr	r2, [r3, #0]
90009b88:	f022 0201 	bic.w	r2, r2, #1
90009b8c:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009b8e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009b90:	f002 020c 	and.w	r2, r2, #12
90009b94:	2a08      	cmp	r2, #8
90009b96:	f000 8201 	beq.w	90009f9c <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009b9a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009b9c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009ba0:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
90009ba2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009ba4:	2b00      	cmp	r3, #0
90009ba6:	f040 81fe 	bne.w	90009fa6 <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
90009baa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
90009bac:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009bae:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009bb0:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bb2:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009bb6:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009bba:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009bbe:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bc0:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009bc2:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009bc4:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bc8:	f000 81e5 	beq.w	90009f96 <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009bcc:	f7ff fdd6 	bl	9000977c <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009bd0:	2001      	movs	r0, #1
}
90009bd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009bd6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009bd8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90009bda:	3220      	adds	r2, #32
90009bdc:	4296      	cmp	r6, r2
90009bde:	f0c0 8200 	bcc.w	90009fe2 <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
90009be2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009be4:	69e1      	ldr	r1, [r4, #28]
90009be6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009be8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009bea:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009bec:	69e2      	ldr	r2, [r4, #28]
90009bee:	440a      	add	r2, r1
90009bf0:	0a19      	lsrs	r1, r3, #8
90009bf2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009bf4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009bf6:	69e2      	ldr	r2, [r4, #28]
90009bf8:	440a      	add	r2, r1
90009bfa:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009bfc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009bfe:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c00:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c02:	69e2      	ldr	r2, [r4, #28]
90009c04:	440a      	add	r2, r1
90009c06:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c08:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c0a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009c0c:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c0e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009c10:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009c12:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c14:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c16:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c18:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c1a:	69e2      	ldr	r2, [r4, #28]
90009c1c:	440a      	add	r2, r1
90009c1e:	0a19      	lsrs	r1, r3, #8
90009c20:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c22:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c24:	69e2      	ldr	r2, [r4, #28]
90009c26:	440a      	add	r2, r1
90009c28:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c2a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c2c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c2e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c30:	69e2      	ldr	r2, [r4, #28]
90009c32:	440a      	add	r2, r1
90009c34:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c36:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c38:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009c3a:	3304      	adds	r3, #4
90009c3c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009c3e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c40:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c42:	69e1      	ldr	r1, [r4, #28]
90009c44:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c46:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c48:	69e2      	ldr	r2, [r4, #28]
90009c4a:	440a      	add	r2, r1
90009c4c:	0a19      	lsrs	r1, r3, #8
90009c4e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c50:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c52:	69e2      	ldr	r2, [r4, #28]
90009c54:	440a      	add	r2, r1
90009c56:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c58:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c5a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c5c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c5e:	69e2      	ldr	r2, [r4, #28]
90009c60:	440a      	add	r2, r1
90009c62:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c64:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c66:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009c68:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c6a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009c6c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009c6e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c70:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c72:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c74:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c76:	69e2      	ldr	r2, [r4, #28]
90009c78:	440a      	add	r2, r1
90009c7a:	0a19      	lsrs	r1, r3, #8
90009c7c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c7e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c80:	69e2      	ldr	r2, [r4, #28]
90009c82:	440a      	add	r2, r1
90009c84:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c86:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c88:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c8a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009c8c:	69e2      	ldr	r2, [r4, #28]
90009c8e:	440a      	add	r2, r1
90009c90:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c92:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c94:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009c96:	3304      	adds	r3, #4
90009c98:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009c9a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c9c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c9e:	69e1      	ldr	r1, [r4, #28]
90009ca0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009ca2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009ca4:	69e2      	ldr	r2, [r4, #28]
90009ca6:	440a      	add	r2, r1
90009ca8:	0a19      	lsrs	r1, r3, #8
90009caa:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009cac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009cae:	69e2      	ldr	r2, [r4, #28]
90009cb0:	440a      	add	r2, r1
90009cb2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009cb4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009cb6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009cb8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009cba:	69e2      	ldr	r2, [r4, #28]
90009cbc:	440a      	add	r2, r1
90009cbe:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009cc0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009cc2:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009cc4:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009cc6:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009cc8:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009cca:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009ccc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009cce:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009cd0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009cd2:	69e2      	ldr	r2, [r4, #28]
90009cd4:	440a      	add	r2, r1
90009cd6:	0a19      	lsrs	r1, r3, #8
90009cd8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009cda:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009cdc:	69e2      	ldr	r2, [r4, #28]
90009cde:	440a      	add	r2, r1
90009ce0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ce2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009ce4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ce6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009ce8:	69e2      	ldr	r2, [r4, #28]
90009cea:	440a      	add	r2, r1
90009cec:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009cee:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009cf0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009cf2:	3304      	adds	r3, #4
90009cf4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009cf6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009cf8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009cfa:	69e1      	ldr	r1, [r4, #28]
90009cfc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009cfe:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d00:	69e2      	ldr	r2, [r4, #28]
90009d02:	440a      	add	r2, r1
90009d04:	0a19      	lsrs	r1, r3, #8
90009d06:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d08:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d0a:	69e2      	ldr	r2, [r4, #28]
90009d0c:	440a      	add	r2, r1
90009d0e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d10:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d12:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d14:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d16:	69e2      	ldr	r2, [r4, #28]
90009d18:	440a      	add	r2, r1
90009d1a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009d1c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009d1e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009d20:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d22:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009d24:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009d26:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d28:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009d2a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009d2c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d2e:	69e2      	ldr	r2, [r4, #28]
90009d30:	440a      	add	r2, r1
90009d32:	0a19      	lsrs	r1, r3, #8
90009d34:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d36:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d38:	69e2      	ldr	r2, [r4, #28]
90009d3a:	440a      	add	r2, r1
90009d3c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d3e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d40:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d42:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009d44:	69e2      	ldr	r2, [r4, #28]
90009d46:	440a      	add	r2, r1
90009d48:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009d4a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009d4c:	3304      	adds	r3, #4
90009d4e:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009d50:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009d52:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009d54:	429a      	cmp	r2, r3
90009d56:	f000 8258 	beq.w	9000a20a <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009d5a:	6823      	ldr	r3, [r4, #0]
90009d5c:	e6f4      	b.n	90009b48 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009d5e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009d60:	2a00      	cmp	r2, #0
90009d62:	f000 8128 	beq.w	90009fb6 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009d66:	6a21      	ldr	r1, [r4, #32]
90009d68:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009d6a:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009d6c:	f240 81b9 	bls.w	9000a0e2 <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009d70:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009d72:	6d61      	ldr	r1, [r4, #84]	@ 0x54
90009d74:	04cd      	lsls	r5, r1, #19
90009d76:	f53f aedb 	bmi.w	90009b30 <JPEG_Process+0x28>
90009d7a:	2a00      	cmp	r2, #0
90009d7c:	f43f aed8 	beq.w	90009b30 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
90009d80:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
90009d82:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
90009d86:	f200 8248 	bhi.w	9000a21a <JPEG_Process+0x712>
      if (nb_words > 0UL)
90009d8a:	2a03      	cmp	r2, #3
90009d8c:	f240 82c0 	bls.w	9000a310 <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
90009d90:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009d92:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d94:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d96:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d9a:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d9c:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d9e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009da0:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009da4:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009da6:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009daa:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009dae:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009db2:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009db4:	6a21      	ldr	r1, [r4, #32]
90009db6:	f101 0104 	add.w	r1, r1, #4
90009dba:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009dbc:	f43f aeb8 	beq.w	90009b30 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009dc0:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009dc2:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dc4:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009dc8:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009dca:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dcc:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009dce:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009dd2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dd4:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009dd8:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ddc:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009de0:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009de2:	6a21      	ldr	r1, [r4, #32]
90009de4:	f101 0104 	add.w	r1, r1, #4
90009de8:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009dea:	f43f aea1 	beq.w	90009b30 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009dee:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009df0:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009df2:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009df6:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009df8:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dfa:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009dfc:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e00:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e02:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009e06:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e0a:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e0e:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009e10:	6a21      	ldr	r1, [r4, #32]
90009e12:	f101 0104 	add.w	r1, r1, #4
90009e16:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e18:	f43f ae8a 	beq.w	90009b30 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009e1c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e1e:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e20:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e24:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e26:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e28:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e2a:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e2e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e30:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009e34:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e38:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e3c:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009e3e:	6a21      	ldr	r1, [r4, #32]
90009e40:	f101 0104 	add.w	r1, r1, #4
90009e44:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e46:	f43f ae73 	beq.w	90009b30 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009e4a:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e4c:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e4e:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e52:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e54:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e56:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e58:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e5c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e5e:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009e62:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e66:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e6a:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009e6c:	6a21      	ldr	r1, [r4, #32]
90009e6e:	f101 0104 	add.w	r1, r1, #4
90009e72:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e74:	f43f ae5c 	beq.w	90009b30 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009e78:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009e7a:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e7c:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e80:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e82:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e84:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e86:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e8a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e8c:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
90009e90:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e94:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e98:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009e9a:	6a21      	ldr	r1, [r4, #32]
90009e9c:	f101 0104 	add.w	r1, r1, #4
90009ea0:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009ea2:	f47f ae45 	bne.w	90009b30 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009ea6:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ea8:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009eaa:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eac:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009eae:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eb0:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eb2:	7849      	ldrb	r1, [r1, #1]
90009eb4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90009eb8:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eba:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ebe:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009ec0:	6a22      	ldr	r2, [r4, #32]
90009ec2:	3204      	adds	r2, #4
90009ec4:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
90009ec6:	e633      	b.n	90009b30 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009ec8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009eca:	2a00      	cmp	r2, #0
90009ecc:	d073      	beq.n	90009fb6 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009ece:	6a21      	ldr	r1, [r4, #32]
90009ed0:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009ed2:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009ed4:	f200 8182 	bhi.w	9000a1dc <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009ed8:	428a      	cmp	r2, r1
90009eda:	f040 8104 	bne.w	9000a0e6 <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009ede:	6a21      	ldr	r1, [r4, #32]
90009ee0:	4620      	mov	r0, r4
90009ee2:	f7f8 f843 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009ee6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009ee8:	2a04      	cmp	r2, #4
90009eea:	d902      	bls.n	90009ef2 <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009eec:	f022 0203 	bic.w	r2, r2, #3
90009ef0:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009ef2:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ef4:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009ef6:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009ef8:	6d61      	ldr	r1, [r4, #84]	@ 0x54
90009efa:	04c9      	lsls	r1, r1, #19
90009efc:	f53f ae18 	bmi.w	90009b30 <JPEG_Process+0x28>
90009f00:	2a00      	cmp	r2, #0
90009f02:	f43f ae15 	beq.w	90009b30 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
90009f06:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f08:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
90009f0a:	f040 8177 	bne.w	9000a1fc <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f0e:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009f10:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009f12:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f14:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
90009f16:	f105 0501 	add.w	r5, r5, #1
90009f1a:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009f1c:	d010      	beq.n	90009f40 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f1e:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009f20:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f22:	5d45      	ldrb	r5, [r0, r5]
90009f24:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
90009f28:	6a25      	ldr	r5, [r4, #32]
90009f2a:	f105 0501 	add.w	r5, r5, #1
90009f2e:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009f30:	d106      	bne.n	90009f40 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f32:	6a22      	ldr	r2, [r4, #32]
90009f34:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
90009f36:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009f38:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
90009f3c:	3201      	adds	r2, #1
90009f3e:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009f40:	6419      	str	r1, [r3, #64]	@ 0x40
90009f42:	e5f5      	b.n	90009b30 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009f44:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f46:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
90009f48:	3204      	adds	r2, #4
90009f4a:	4295      	cmp	r5, r2
90009f4c:	f0c0 80cd 	bcc.w	9000a0ea <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
90009f50:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009f52:	69e1      	ldr	r1, [r4, #28]
90009f54:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f56:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009f58:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009f5a:	69e2      	ldr	r2, [r4, #28]
90009f5c:	440a      	add	r2, r1
90009f5e:	0a19      	lsrs	r1, r3, #8
90009f60:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009f62:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009f64:	69e2      	ldr	r2, [r4, #28]
90009f66:	440a      	add	r2, r1
90009f68:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009f6a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009f6c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009f6e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009f70:	69e2      	ldr	r2, [r4, #28]
90009f72:	440a      	add	r2, r1
90009f74:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009f76:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009f78:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
90009f7a:	3304      	adds	r3, #4
90009f7c:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009f7e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009f80:	429a      	cmp	r2, r3
90009f82:	f47f aeea 	bne.w	90009d5a <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f86:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f88:	4620      	mov	r0, r4
90009f8a:	69e1      	ldr	r1, [r4, #28]
90009f8c:	f7f8 f80e 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009f90:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009f92:	6266      	str	r6, [r4, #36]	@ 0x24
90009f94:	e5d8      	b.n	90009b48 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009f96:	f7f8 f8b7 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
90009f9a:	e619      	b.n	90009bd0 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009f9c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009f9e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009fa2:	631a      	str	r2, [r3, #48]	@ 0x30
90009fa4:	e5f9      	b.n	90009b9a <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009fa6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009fa8:	4620      	mov	r0, r4
90009faa:	69e1      	ldr	r1, [r4, #28]
90009fac:	f7f7 fffe 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009fb0:	2300      	movs	r3, #0
90009fb2:	6263      	str	r3, [r4, #36]	@ 0x24
90009fb4:	e5f9      	b.n	90009baa <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009fb6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009fb8:	f002 020c 	and.w	r2, r2, #12
90009fbc:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009fbe:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009fc0:	f000 811e 	beq.w	9000a200 <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009fc4:	f002 020c 	and.w	r2, r2, #12
90009fc8:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009fca:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009fcc:	f47f adb0 	bne.w	90009b30 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009fd0:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009fd4:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009fd6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009fd8:	f022 0206 	bic.w	r2, r2, #6
90009fdc:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009fde:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009fe0:	e5a6      	b.n	90009b30 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009fe2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009fe4:	4296      	cmp	r6, r2
90009fe6:	f67f adaf 	bls.w	90009b48 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009fea:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009fec:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
90009fee:	0880      	lsrs	r0, r0, #2
90009ff0:	d020      	beq.n	9000a034 <JPEG_Process+0x52c>
90009ff2:	4629      	mov	r1, r5
90009ff4:	e000      	b.n	90009ff8 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
90009ff6:	6823      	ldr	r3, [r4, #0]
90009ff8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
90009ffa:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009ffc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009ffe:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a000:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a002:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a004:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a006:	69e2      	ldr	r2, [r4, #28]
9000a008:	4432      	add	r2, r6
9000a00a:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000a00e:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a010:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a012:	69e2      	ldr	r2, [r4, #28]
9000a014:	4432      	add	r2, r6
9000a016:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a01a:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a01e:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a020:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a022:	69e2      	ldr	r2, [r4, #28]
9000a024:	4432      	add	r2, r6
9000a026:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a028:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a02a:	f103 0304 	add.w	r3, r3, #4
9000a02e:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a030:	d1e1      	bne.n	90009ff6 <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a032:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a034:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a036:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a038:	429e      	cmp	r6, r3
9000a03a:	f000 8161 	beq.w	9000a300 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a03e:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a042:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a044:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000a048:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a04a:	d00e      	beq.n	9000a06a <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a04c:	f005 0303 	and.w	r3, r5, #3
9000a050:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a052:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a054:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a056:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a058:	fa27 f303 	lsr.w	r3, r7, r3
9000a05c:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a05e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a060:	69e1      	ldr	r1, [r4, #28]
9000a062:	f103 0301 	add.w	r3, r3, #1
9000a066:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a068:	d1f0      	bne.n	9000a04c <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000a06a:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a06e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a070:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a072:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a076:	f7f7 ff99 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a07a:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a07c:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000a07e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a080:	f63f ae6b 	bhi.w	90009d5a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a084:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000a088:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a08a:	69e0      	ldr	r0, [r4, #28]
9000a08c:	fa27 f502 	lsr.w	r5, r7, r2
9000a090:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a092:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a094:	f101 0101 	add.w	r1, r1, #1
9000a098:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a09a:	f43f ae5e 	beq.w	90009d5a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a09e:	f102 0108 	add.w	r1, r2, #8
9000a0a2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a0a4:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a0a6:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a0a8:	fa27 f101 	lsr.w	r1, r7, r1
9000a0ac:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a0ae:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a0b0:	f101 0101 	add.w	r1, r1, #1
9000a0b4:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a0b6:	f43f ae50 	beq.w	90009d5a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a0ba:	3210      	adds	r2, #16
9000a0bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a0be:	69e0      	ldr	r0, [r4, #28]
9000a0c0:	fa27 f202 	lsr.w	r2, r7, r2
9000a0c4:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a0c6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0c8:	3201      	adds	r2, #1
9000a0ca:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a0cc:	2e00      	cmp	r6, #0
9000a0ce:	f47f ae44 	bne.w	90009d5a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a0d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a0d4:	0e3f      	lsrs	r7, r7, #24
9000a0d6:	69e2      	ldr	r2, [r4, #28]
9000a0d8:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000a0da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a0dc:	3301      	adds	r3, #1
9000a0de:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a0e0:	e63b      	b.n	90009d5a <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a0e2:	428a      	cmp	r2, r1
9000a0e4:	d07c      	beq.n	9000a1e0 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a0e6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a0e8:	e522      	b.n	90009b30 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a0ea:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0ec:	4295      	cmp	r5, r2
9000a0ee:	f67f ad2b 	bls.w	90009b48 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a0f2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a0f4:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000a0f6:	0880      	lsrs	r0, r0, #2
9000a0f8:	d020      	beq.n	9000a13c <JPEG_Process+0x634>
9000a0fa:	4631      	mov	r1, r6
9000a0fc:	e000      	b.n	9000a100 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000a0fe:	6823      	ldr	r3, [r4, #0]
9000a100:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a102:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a104:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a106:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a108:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a10a:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a10c:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a10e:	69e2      	ldr	r2, [r4, #28]
9000a110:	442a      	add	r2, r5
9000a112:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000a116:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a118:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a11a:	69e2      	ldr	r2, [r4, #28]
9000a11c:	442a      	add	r2, r5
9000a11e:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a122:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a126:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a128:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a12a:	69e2      	ldr	r2, [r4, #28]
9000a12c:	442a      	add	r2, r5
9000a12e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a130:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a132:	f103 0304 	add.w	r3, r3, #4
9000a136:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a138:	d1e1      	bne.n	9000a0fe <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a13a:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a13c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a13e:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a140:	429d      	cmp	r5, r3
9000a142:	f000 80dd 	beq.w	9000a300 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a146:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a14a:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a14c:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000a150:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a152:	d00e      	beq.n	9000a172 <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a154:	f006 0303 	and.w	r3, r6, #3
9000a158:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a15a:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a15c:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a15e:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a160:	fa27 f303 	lsr.w	r3, r7, r3
9000a164:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a166:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a168:	69e1      	ldr	r1, [r4, #28]
9000a16a:	f103 0301 	add.w	r3, r3, #1
9000a16e:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a170:	d1f0      	bne.n	9000a154 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000a172:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a176:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a178:	4620      	mov	r0, r4
9000a17a:	f7f7 ff17 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000a17e:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000a182:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a184:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000a186:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a188:	f63f ade7 	bhi.w	90009d5a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a18c:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000a190:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a192:	69e0      	ldr	r0, [r4, #28]
9000a194:	fa27 f502 	lsr.w	r5, r7, r2
9000a198:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a19a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a19c:	f101 0101 	add.w	r1, r1, #1
9000a1a0:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a1a2:	f43f adda 	beq.w	90009d5a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a1a6:	f102 0108 	add.w	r1, r2, #8
9000a1aa:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a1ac:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a1ae:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a1b0:	fa27 f101 	lsr.w	r1, r7, r1
9000a1b4:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a1b6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a1b8:	f101 0101 	add.w	r1, r1, #1
9000a1bc:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a1be:	f43f adcc 	beq.w	90009d5a <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a1c2:	3210      	adds	r2, #16
9000a1c4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a1c6:	69e0      	ldr	r0, [r4, #28]
9000a1c8:	fa27 f202 	lsr.w	r2, r7, r2
9000a1cc:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a1ce:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a1d0:	3201      	adds	r2, #1
9000a1d2:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a1d4:	2b00      	cmp	r3, #0
9000a1d6:	f43f af7c 	beq.w	9000a0d2 <JPEG_Process+0x5ca>
9000a1da:	e5be      	b.n	90009d5a <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a1dc:	1a52      	subs	r2, r2, r1
9000a1de:	e68b      	b.n	90009ef8 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a1e0:	6a21      	ldr	r1, [r4, #32]
9000a1e2:	4620      	mov	r0, r4
9000a1e4:	f7f7 fec2 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a1e8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a1ea:	2a04      	cmp	r2, #4
9000a1ec:	d902      	bls.n	9000a1f4 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a1ee:	f022 0203 	bic.w	r2, r2, #3
9000a1f2:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a1f4:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a1f6:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a1f8:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000a1fa:	e5ba      	b.n	90009d72 <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000a1fc:	6a22      	ldr	r2, [r4, #32]
9000a1fe:	e653      	b.n	90009ea8 <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a200:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a204:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a206:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a208:	e492      	b.n	90009b30 <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a20a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a20c:	4620      	mov	r0, r4
9000a20e:	69e1      	ldr	r1, [r4, #28]
9000a210:	f7f7 fecc 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a214:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a216:	6265      	str	r5, [r4, #36]	@ 0x24
9000a218:	e496      	b.n	90009b48 <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a21a:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000a21c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a21e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a220:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a222:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a224:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a226:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a228:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a22a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a22e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a230:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a234:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a236:	6a21      	ldr	r1, [r4, #32]
9000a238:	3104      	adds	r1, #4
9000a23a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a23c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a23e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a240:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a242:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a244:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a246:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a248:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a24a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a24e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a250:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a254:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a256:	6a21      	ldr	r1, [r4, #32]
9000a258:	3104      	adds	r1, #4
9000a25a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a25c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a25e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a260:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a262:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a264:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a266:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a268:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a26a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a26e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a270:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a274:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a276:	6a21      	ldr	r1, [r4, #32]
9000a278:	3104      	adds	r1, #4
9000a27a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a27c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a27e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a280:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a282:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a284:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a286:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a288:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a28a:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a28e:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a290:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a294:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a296:	6a21      	ldr	r1, [r4, #32]
9000a298:	3104      	adds	r1, #4
9000a29a:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a29c:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a29e:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2a0:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2a2:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2a4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2a6:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a2a8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2aa:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a2ae:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2b0:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2b4:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a2b6:	6a21      	ldr	r1, [r4, #32]
9000a2b8:	3104      	adds	r1, #4
9000a2ba:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a2bc:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2be:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2c0:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2c2:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2c4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2c6:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a2c8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2ca:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a2ce:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2d0:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2d4:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a2d6:	6a21      	ldr	r1, [r4, #32]
9000a2d8:	3104      	adds	r1, #4
9000a2da:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a2dc:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2de:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2e0:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2e2:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2e4:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2e6:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a2e8:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2ea:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a2ee:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2f0:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2f4:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a2f6:	6a21      	ldr	r1, [r4, #32]
9000a2f8:	3104      	adds	r1, #4
9000a2fa:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a2fc:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2fe:	e5d3      	b.n	90009ea8 <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a300:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a302:	4620      	mov	r0, r4
9000a304:	f7f7 fe52 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a308:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a30a:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a30c:	6262      	str	r2, [r4, #36]	@ 0x24
9000a30e:	e41b      	b.n	90009b48 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a310:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a312:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a314:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a316:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000a318:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a31c:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000a31e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a320:	f43f ae0e 	beq.w	90009f40 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a324:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a326:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a328:	5c28      	ldrb	r0, [r5, r0]
9000a32a:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000a32e:	6a20      	ldr	r0, [r4, #32]
9000a330:	f100 0001 	add.w	r0, r0, #1
9000a334:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a336:	f47f ae03 	bne.w	90009f40 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a33a:	6a22      	ldr	r2, [r4, #32]
9000a33c:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000a33e:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a340:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a344:	3201      	adds	r2, #1
9000a346:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a348:	e5fa      	b.n	90009f40 <JPEG_Process+0x438>
9000a34a:	bf00      	nop

9000a34c <HAL_JPEG_IRQHandler>:
{
9000a34c:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000a34e:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000a352:	3b03      	subs	r3, #3
9000a354:	2b01      	cmp	r3, #1
9000a356:	d900      	bls.n	9000a35a <HAL_JPEG_IRQHandler+0xe>
}
9000a358:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a35a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a35c:	4604      	mov	r4, r0
9000a35e:	f003 030c 	and.w	r3, r3, #12
9000a362:	2b08      	cmp	r3, #8
9000a364:	d050      	beq.n	9000a408 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a366:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a368:	f003 030c 	and.w	r3, r3, #12
9000a36c:	2b0c      	cmp	r3, #12
9000a36e:	d1f3      	bne.n	9000a358 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a370:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a372:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a374:	f002 0203 	and.w	r2, r2, #3
9000a378:	2a02      	cmp	r2, #2
9000a37a:	d049      	beq.n	9000a410 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000a37c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a37e:	0692      	lsls	r2, r2, #26
9000a380:	d5ea      	bpl.n	9000a358 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a382:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a384:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a386:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000a38a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a38c:	681a      	ldr	r2, [r3, #0]
9000a38e:	f022 0201 	bic.w	r2, r2, #1
9000a392:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a394:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a396:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a39a:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a39c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a39e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a3a2:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a3a4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000a3a8:	2b02      	cmp	r3, #2
9000a3aa:	d054      	beq.n	9000a456 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000a3ac:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a3ae:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000a3b2:	2b02      	cmp	r3, #2
9000a3b4:	d043      	beq.n	9000a43e <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a3b6:	6803      	ldr	r3, [r0, #0]
9000a3b8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a3ba:	695b      	ldr	r3, [r3, #20]
9000a3bc:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a3c0:	1ad3      	subs	r3, r2, r3
9000a3c2:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a3c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a3c6:	429a      	cmp	r2, r3
9000a3c8:	d048      	beq.n	9000a45c <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a3ca:	6822      	ldr	r2, [r4, #0]
9000a3cc:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000a3ce:	f015 0510 	ands.w	r5, r5, #16
9000a3d2:	d138      	bne.n	9000a446 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000a3d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a3d6:	2b00      	cmp	r3, #0
9000a3d8:	d14b      	bne.n	9000a472 <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a3da:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a3dc:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a3de:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a3e0:	f023 0301 	bic.w	r3, r3, #1
9000a3e4:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a3e6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a3e8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a3ea:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a3ee:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a3f2:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a3f6:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a3f8:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a3fa:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a3fc:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a400:	d034      	beq.n	9000a46c <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a402:	f7ff f9bb 	bl	9000977c <HAL_JPEG_EncodeCpltCallback>
}
9000a406:	bd38      	pop	{r3, r4, r5, pc}
9000a408:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000a40c:	f7ff bb7c 	b.w	90009b08 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a410:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a412:	0651      	lsls	r1, r2, #25
9000a414:	d5b2      	bpl.n	9000a37c <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a416:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a418:	4629      	mov	r1, r5
9000a41a:	f7fe fec3 	bl	900091a4 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a41e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a420:	4629      	mov	r1, r5
9000a422:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a424:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a426:	f7f7 fd73 	bl	90001f10 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a42a:	6823      	ldr	r3, [r4, #0]
9000a42c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a42e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000a432:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a434:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a436:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a43a:	639a      	str	r2, [r3, #56]	@ 0x38
9000a43c:	e79e      	b.n	9000a37c <HAL_JPEG_IRQHandler+0x30>
}
9000a43e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000a442:	f000 bb63 	b.w	9000ab0c <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a446:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a448:	049b      	lsls	r3, r3, #18
9000a44a:	d485      	bmi.n	9000a358 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000a44c:	4620      	mov	r0, r4
}
9000a44e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a452:	f7ff b9ff 	b.w	90009854 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000a456:	f000 fb59 	bl	9000ab0c <HAL_MDMA_Abort_IT>
9000a45a:	e7a7      	b.n	9000a3ac <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a45c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a45e:	4620      	mov	r0, r4
9000a460:	69e1      	ldr	r1, [r4, #28]
9000a462:	f7f7 fda3 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a466:	2300      	movs	r3, #0
9000a468:	6263      	str	r3, [r4, #36]	@ 0x24
9000a46a:	e7ae      	b.n	9000a3ca <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a46c:	f7f7 fe4c 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
9000a470:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a472:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a474:	4620      	mov	r0, r4
9000a476:	69e1      	ldr	r1, [r4, #28]
9000a478:	f7f7 fd98 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a47c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a47e:	6265      	str	r5, [r4, #36]	@ 0x24
9000a480:	e7ab      	b.n	9000a3da <HAL_JPEG_IRQHandler+0x8e>
9000a482:	bf00      	nop

9000a484 <HAL_JPEG_GetState>:
  return hjpeg->State;
9000a484:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000a488:	4770      	bx	lr
9000a48a:	bf00      	nop

9000a48c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000a48c:	2800      	cmp	r0, #0
9000a48e:	d067      	beq.n	9000a560 <HAL_LTDC_Init+0xd4>
{
9000a490:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000a492:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000a496:	4604      	mov	r4, r0
9000a498:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000a49c:	2b00      	cmp	r3, #0
9000a49e:	d05a      	beq.n	9000a556 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a4a0:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a4a2:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a4a4:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a4a8:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a4ac:	4302      	orrs	r2, r0
9000a4ae:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a4b0:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a4b2:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a4b4:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a4b6:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a4ba:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a4bc:	4929      	ldr	r1, [pc, #164]	@ (9000a564 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a4be:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a4c0:	6998      	ldr	r0, [r3, #24]
9000a4c2:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000a4c4:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a4c6:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a4c8:	689a      	ldr	r2, [r3, #8]
9000a4ca:	400a      	ands	r2, r1
9000a4cc:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a4ce:	689a      	ldr	r2, [r3, #8]
9000a4d0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a4d4:	69a0      	ldr	r0, [r4, #24]
9000a4d6:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000a4d8:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a4da:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000a4dc:	68da      	ldr	r2, [r3, #12]
9000a4de:	400a      	ands	r2, r1
9000a4e0:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a4e2:	68da      	ldr	r2, [r3, #12]
9000a4e4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a4e8:	6a20      	ldr	r0, [r4, #32]
9000a4ea:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000a4ec:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a4ee:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000a4f0:	691a      	ldr	r2, [r3, #16]
9000a4f2:	400a      	ands	r2, r1
9000a4f4:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a4f6:	691a      	ldr	r2, [r3, #16]
9000a4f8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a4fc:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000a4fe:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000a500:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a502:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000a504:	695a      	ldr	r2, [r3, #20]
9000a506:	400a      	ands	r2, r1
9000a508:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000a50a:	695a      	ldr	r2, [r3, #20]
9000a50c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000a50e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a512:	430a      	orrs	r2, r1
9000a514:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a516:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000a518:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a51c:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000a520:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a524:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a526:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000a528:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000a52c:	432a      	orrs	r2, r5
9000a52e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a532:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a534:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a538:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000a53a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a53c:	f042 0206 	orr.w	r2, r2, #6
9000a540:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000a542:	699a      	ldr	r2, [r3, #24]
9000a544:	f042 0201 	orr.w	r2, r2, #1
9000a548:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000a54a:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a54c:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000a550:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000a554:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000a556:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000a55a:	f7f9 fc13 	bl	90003d84 <HAL_LTDC_MspInit>
9000a55e:	e79f      	b.n	9000a4a0 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000a560:	2001      	movs	r0, #1
}
9000a562:	4770      	bx	lr
9000a564:	f000f800 	.word	0xf000f800

9000a568 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000a568:	4770      	bx	lr
9000a56a:	bf00      	nop

9000a56c <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000a56c:	4770      	bx	lr
9000a56e:	bf00      	nop

9000a570 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a570:	6803      	ldr	r3, [r0, #0]
{
9000a572:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a574:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000a576:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000a578:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000a57a:	076a      	lsls	r2, r5, #29
9000a57c:	d501      	bpl.n	9000a582 <HAL_LTDC_IRQHandler+0x12>
9000a57e:	0771      	lsls	r1, r6, #29
9000a580:	d41d      	bmi.n	9000a5be <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000a582:	07aa      	lsls	r2, r5, #30
9000a584:	d501      	bpl.n	9000a58a <HAL_LTDC_IRQHandler+0x1a>
9000a586:	07b3      	lsls	r3, r6, #30
9000a588:	d42d      	bmi.n	9000a5e6 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000a58a:	07e8      	lsls	r0, r5, #31
9000a58c:	d501      	bpl.n	9000a592 <HAL_LTDC_IRQHandler+0x22>
9000a58e:	07f1      	lsls	r1, r6, #31
9000a590:	d440      	bmi.n	9000a614 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000a592:	072a      	lsls	r2, r5, #28
9000a594:	d501      	bpl.n	9000a59a <HAL_LTDC_IRQHandler+0x2a>
9000a596:	0733      	lsls	r3, r6, #28
9000a598:	d400      	bmi.n	9000a59c <HAL_LTDC_IRQHandler+0x2c>
}
9000a59a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a59c:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a59e:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000a5a0:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000a5a2:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a5a4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a5a6:	f022 0208 	bic.w	r2, r2, #8
9000a5aa:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a5ac:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a5ae:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000a5b0:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000a5b4:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a5b8:	f7ff ffd8 	bl	9000a56c <HAL_LTDC_ReloadEventCallback>
}
9000a5bc:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000a5be:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a5c0:	f022 0204 	bic.w	r2, r2, #4
9000a5c4:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000a5c6:	2204      	movs	r2, #4
9000a5c8:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000a5ca:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000a5ce:	f043 0301 	orr.w	r3, r3, #1
9000a5d2:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000a5d6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a5d8:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000a5dc:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a5e0:	f7ff ffc2 	bl	9000a568 <HAL_LTDC_ErrorCallback>
9000a5e4:	e7cd      	b.n	9000a582 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a5e6:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000a5e8:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a5ea:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a5ec:	f022 0202 	bic.w	r2, r2, #2
9000a5f0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000a5f2:	2202      	movs	r2, #2
9000a5f4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a5f6:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000a5f8:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000a5fc:	f043 0302 	orr.w	r3, r3, #2
9000a600:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000a604:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a606:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000a60a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a60e:	f7ff ffab 	bl	9000a568 <HAL_LTDC_ErrorCallback>
9000a612:	e7ba      	b.n	9000a58a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a614:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000a616:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a618:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a61a:	f022 0201 	bic.w	r2, r2, #1
9000a61e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000a620:	2201      	movs	r2, #1
9000a622:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000a624:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000a626:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000a62a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000a62e:	f7f8 ffa7 	bl	90003580 <HAL_LTDC_LineEventCallback>
9000a632:	e7ae      	b.n	9000a592 <HAL_LTDC_IRQHandler+0x22>

9000a634 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000a634:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000a638:	2b01      	cmp	r3, #1
9000a63a:	f000 80c6 	beq.w	9000a7ca <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a63e:	2302      	movs	r3, #2
{
9000a640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a644:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a648:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a64c:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
9000a650:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a652:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a656:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a658:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a65c:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a65e:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000a662:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a664:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000a668:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a66a:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a66e:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a672:	f8df a164 	ldr.w	sl, [pc, #356]	@ 9000a7d8 <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a676:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000a67a:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000a67e:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a680:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a682:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a686:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a688:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a68a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a68e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a690:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a694:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a696:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a698:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a69c:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a69e:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a6a0:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a6a4:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000a6a8:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a6aa:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a6ac:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000a6b0:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a6b4:	440b      	add	r3, r1
9000a6b6:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a6ba:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a6be:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a6c2:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a6c6:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a6ca:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a6ce:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a6d0:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a6d4:	68ab      	ldr	r3, [r5, #8]
9000a6d6:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000a6da:	3301      	adds	r3, #1
9000a6dc:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000a6e0:	4403      	add	r3, r0
9000a6e2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a6e6:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a6e8:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000a6ec:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000a6f0:	f023 0307 	bic.w	r3, r3, #7
9000a6f4:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a6f8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a6fc:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000a700:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000a702:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000a706:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a70a:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000a70e:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000a712:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a716:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000a71a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000a71e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000a722:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000a726:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000a72a:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000a72e:	696b      	ldr	r3, [r5, #20]
9000a730:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a734:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a738:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a73a:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a73e:	6a28      	ldr	r0, [r5, #32]
9000a740:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a742:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a746:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000a74a:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
9000a74e:	2300      	movs	r3, #0
9000a750:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000a754:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000a756:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a75a:	b3a1      	cbz	r1, 9000a7c6 <HAL_LTDC_ConfigLayer+0x192>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000a75c:	2901      	cmp	r1, #1
9000a75e:	d036      	beq.n	9000a7ce <HAL_LTDC_ConfigLayer+0x19a>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000a760:	1e8b      	subs	r3, r1, #2
9000a762:	2907      	cmp	r1, #7
9000a764:	bf18      	it	ne
9000a766:	2b02      	cmpne	r3, #2
9000a768:	bf94      	ite	ls
9000a76a:	2301      	movls	r3, #1
9000a76c:	2300      	movhi	r3, #0
9000a76e:	3301      	adds	r3, #1
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a770:	1abf      	subs	r7, r7, r2
9000a772:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
9000a774:	fb03 f707 	mul.w	r7, r3, r7
9000a778:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a77c:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a77e:	3707      	adds	r7, #7
9000a780:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000a784:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000a788:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000a78c:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a790:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000a794:	4b0f      	ldr	r3, [pc, #60]	@ (9000a7d4 <HAL_LTDC_ConfigLayer+0x1a0>)
9000a796:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
9000a79a:	400b      	ands	r3, r1
9000a79c:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a7a0:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a7a4:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000a7a6:	f859 3006 	ldr.w	r3, [r9, r6]
9000a7aa:	4313      	orrs	r3, r2
9000a7ac:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000a7b0:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a7b2:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000a7b6:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000a7b8:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000a7bc:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000a7c0:	b003      	add	sp, #12
9000a7c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000a7c6:	2304      	movs	r3, #4
9000a7c8:	e7d2      	b.n	9000a770 <HAL_LTDC_ConfigLayer+0x13c>
  __HAL_LOCK(hltdc);
9000a7ca:	2002      	movs	r0, #2
}
9000a7cc:	4770      	bx	lr
    tmp = 3U;
9000a7ce:	2303      	movs	r3, #3
9000a7d0:	e7ce      	b.n	9000a770 <HAL_LTDC_ConfigLayer+0x13c>
9000a7d2:	bf00      	nop
9000a7d4:	fffff800 	.word	0xfffff800
9000a7d8:	fffff8f8 	.word	0xfffff8f8

9000a7dc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a7dc:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000a7e0:	2a01      	cmp	r2, #1
9000a7e2:	d019      	beq.n	9000a818 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a7e4:	6802      	ldr	r2, [r0, #0]
9000a7e6:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a7e8:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a7ea:	f04f 0c00 	mov.w	ip, #0
{
9000a7ee:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a7f0:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a7f4:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a7f6:	4c09      	ldr	r4, [pc, #36]	@ (9000a81c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a7f8:	f020 0001 	bic.w	r0, r0, #1
9000a7fc:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a7fe:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a800:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a802:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000a804:	4301      	orrs	r1, r0
9000a806:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a808:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000a80c:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a80e:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000a812:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a816:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a818:	2002      	movs	r0, #2
}
9000a81a:	4770      	bx	lr
9000a81c:	50001000 	.word	0x50001000

9000a820 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a820:	b538      	push	{r3, r4, r5, lr}
9000a822:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a824:	f7fd f940 	bl	90007aa8 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a828:	2c00      	cmp	r4, #0
9000a82a:	d058      	beq.n	9000a8de <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a82c:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a82e:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a830:	2100      	movs	r1, #0
9000a832:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a834:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000a838:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a83c:	68da      	ldr	r2, [r3, #12]
9000a83e:	f022 0201 	bic.w	r2, r2, #1
9000a842:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a844:	e005      	b.n	9000a852 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a846:	f7fd f92f 	bl	90007aa8 <HAL_GetTick>
9000a84a:	1b43      	subs	r3, r0, r5
9000a84c:	2b05      	cmp	r3, #5
9000a84e:	d841      	bhi.n	9000a8d4 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a850:	6823      	ldr	r3, [r4, #0]
9000a852:	68da      	ldr	r2, [r3, #12]
9000a854:	07d2      	lsls	r2, r2, #31
9000a856:	d4f6      	bmi.n	9000a846 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a858:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a85c:	69e0      	ldr	r0, [r4, #28]
9000a85e:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a860:	68e1      	ldr	r1, [r4, #12]
9000a862:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a864:	4302      	orrs	r2, r0
9000a866:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a868:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a86a:	4302      	orrs	r2, r0
9000a86c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a86e:	4302      	orrs	r2, r0
9000a870:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000a872:	4302      	orrs	r2, r0
9000a874:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a876:	4302      	orrs	r2, r0
9000a878:	68a0      	ldr	r0, [r4, #8]
9000a87a:	4302      	orrs	r2, r0
9000a87c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000a87e:	3801      	subs	r0, #1
9000a880:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a884:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a886:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a888:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a88c:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a88e:	d103      	bne.n	9000a898 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a890:	691a      	ldr	r2, [r3, #16]
9000a892:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000a896:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a898:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a89a:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000a89c:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a89e:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a8a0:	db1f      	blt.n	9000a8e2 <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a8a2:	b292      	uxth	r2, r2
9000a8a4:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a8a6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a8a8:	2a00      	cmp	r2, #0
9000a8aa:	db24      	blt.n	9000a8f6 <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a8ac:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a8ae:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a8b2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a8b6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a8b8:	d029      	beq.n	9000a90e <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a8ba:	b2c0      	uxtb	r0, r0
9000a8bc:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a8be:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a8c0:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a8c2:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000a8c4:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a8c6:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a8c8:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a8ca:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a8ce:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000a8d2:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a8d4:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a8d6:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a8d8:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a8da:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000a8de:	2001      	movs	r0, #1
}
9000a8e0:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a8e2:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a8e4:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a8e6:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a8ea:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a8ec:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a8ee:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a8f0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a8f2:	2a00      	cmp	r2, #0
9000a8f4:	dada      	bge.n	9000a8ac <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a8f6:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a8f8:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a8fa:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a8fe:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000a902:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a904:	6a19      	ldr	r1, [r3, #32]
9000a906:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a90a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a90c:	d1d5      	bne.n	9000a8ba <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a90e:	2200      	movs	r2, #0
9000a910:	629a      	str	r2, [r3, #40]	@ 0x28
9000a912:	e7d4      	b.n	9000a8be <HAL_MDMA_Init+0x9e>

9000a914 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a914:	b1f8      	cbz	r0, 9000a956 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a916:	6802      	ldr	r2, [r0, #0]
9000a918:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a91a:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a91c:	68d0      	ldr	r0, [r2, #12]
{
9000a91e:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a920:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a924:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a926:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a928:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a92a:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a92c:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a92e:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a930:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a932:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a934:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a936:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000a938:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000a93a:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000a93c:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a93e:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a940:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000a942:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000a946:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000a94a:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000a94e:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a950:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000a954:	4770      	bx	lr
    return HAL_ERROR;
9000a956:	2001      	movs	r0, #1
}
9000a958:	4770      	bx	lr
9000a95a:	bf00      	nop

9000a95c <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000a95c:	b308      	cbz	r0, 9000a9a2 <HAL_MDMA_ConfigPostRequestMask+0x46>
9000a95e:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000a960:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000a964:	2801      	cmp	r0, #1
9000a966:	d01e      	beq.n	9000a9a6 <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000a968:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000a96a:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a96e:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000a972:	45f4      	cmp	ip, lr
9000a974:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000a978:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a97c:	d004      	beq.n	9000a988 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000a97e:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000a980:	2200      	movs	r2, #0
9000a982:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000a986:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000a988:	681c      	ldr	r4, [r3, #0]
9000a98a:	6925      	ldr	r5, [r4, #16]
9000a98c:	006d      	lsls	r5, r5, #1
9000a98e:	d4f7      	bmi.n	9000a980 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000a990:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000a992:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a994:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000a996:	b941      	cbnz	r1, 9000a9aa <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a998:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000a99c:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000a99e:	2000      	movs	r0, #0
9000a9a0:	e7ee      	b.n	9000a980 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000a9a2:	2001      	movs	r0, #1
9000a9a4:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000a9a6:	2002      	movs	r0, #2
}
9000a9a8:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a9aa:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000a9ae:	6122      	str	r2, [r4, #16]
9000a9b0:	e7f5      	b.n	9000a99e <HAL_MDMA_ConfigPostRequestMask+0x42>
9000a9b2:	bf00      	nop

9000a9b4 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000a9b4:	2800      	cmp	r0, #0
9000a9b6:	d06b      	beq.n	9000aa90 <HAL_MDMA_Start_IT+0xdc>
{
9000a9b8:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000a9ba:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000a9be:	2c01      	cmp	r4, #1
9000a9c0:	d009      	beq.n	9000a9d6 <HAL_MDMA_Start_IT+0x22>
9000a9c2:	2401      	movs	r4, #1
9000a9c4:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a9c8:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000a9cc:	2c01      	cmp	r4, #1
9000a9ce:	d005      	beq.n	9000a9dc <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000a9d0:	2300      	movs	r3, #0
9000a9d2:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000a9d6:	2002      	movs	r0, #2
}
9000a9d8:	bc70      	pop	{r4, r5, r6}
9000a9da:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a9dc:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a9de:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a9e0:	4d2c      	ldr	r5, [pc, #176]	@ (9000aa94 <HAL_MDMA_Start_IT+0xe0>)
9000a9e2:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a9e6:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a9ea:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a9ec:	f106 3cff 	add.w	ip, r6, #4294967295
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a9f0:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a9f4:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000a9f6:	6804      	ldr	r4, [r0, #0]
9000a9f8:	68e6      	ldr	r6, [r4, #12]
9000a9fa:	f026 0601 	bic.w	r6, r6, #1
9000a9fe:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000aa00:	6966      	ldr	r6, [r4, #20]
9000aa02:	ea05 0506 	and.w	r5, r5, r6
9000aa06:	ea45 0503 	orr.w	r5, r5, r3
9000aa0a:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000aa0c:	6963      	ldr	r3, [r4, #20]
9000aa0e:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000aa12:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000aa16:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000aa18:	f04f 031f 	mov.w	r3, #31
9000aa1c:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000aa1e:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000aa20:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000aa22:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000aa24:	bf0c      	ite	eq
9000aa26:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000aa2a:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000aa2e:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000aa32:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000aa34:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000aa36:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000aa38:	bf0c      	ite	eq
9000aa3a:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000aa3e:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000aa42:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000aa44:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000aa46:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000aa48:	68e3      	ldr	r3, [r4, #12]
9000aa4a:	f043 0306 	orr.w	r3, r3, #6
9000aa4e:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000aa50:	b11a      	cbz	r2, 9000aa5a <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000aa52:	68e3      	ldr	r3, [r4, #12]
9000aa54:	f043 0310 	orr.w	r3, r3, #16
9000aa58:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000aa5a:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000aa5c:	b11b      	cbz	r3, 9000aa66 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000aa5e:	68e3      	ldr	r3, [r4, #12]
9000aa60:	f043 0308 	orr.w	r3, r3, #8
9000aa64:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000aa66:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000aa68:	b11b      	cbz	r3, 9000aa72 <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000aa6a:	68e3      	ldr	r3, [r4, #12]
9000aa6c:	f043 0320 	orr.w	r3, r3, #32
9000aa70:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000aa72:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aa74:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000aa76:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aa7a:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000aa7e:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aa80:	d103      	bne.n	9000aa8a <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000aa82:	68e3      	ldr	r3, [r4, #12]
9000aa84:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000aa88:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000aa8a:	2000      	movs	r0, #0
}
9000aa8c:	bc70      	pop	{r4, r5, r6}
9000aa8e:	4770      	bx	lr
    return HAL_ERROR;
9000aa90:	2001      	movs	r0, #1
}
9000aa92:	4770      	bx	lr
9000aa94:	fffe0000 	.word	0xfffe0000

9000aa98 <HAL_MDMA_Abort>:
{
9000aa98:	b538      	push	{r3, r4, r5, lr}
9000aa9a:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000aa9c:	f7fd f804 	bl	90007aa8 <HAL_GetTick>
  if(hmdma == NULL)
9000aaa0:	b334      	cbz	r4, 9000aaf0 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000aaa2:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000aaa6:	2b02      	cmp	r3, #2
9000aaa8:	d11d      	bne.n	9000aae6 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000aaaa:	6822      	ldr	r2, [r4, #0]
9000aaac:	4605      	mov	r5, r0
9000aaae:	68d3      	ldr	r3, [r2, #12]
9000aab0:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000aab4:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000aab6:	68d3      	ldr	r3, [r2, #12]
9000aab8:	f023 0301 	bic.w	r3, r3, #1
9000aabc:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000aabe:	e005      	b.n	9000aacc <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000aac0:	f7fc fff2 	bl	90007aa8 <HAL_GetTick>
9000aac4:	1b43      	subs	r3, r0, r5
9000aac6:	2b05      	cmp	r3, #5
9000aac8:	d814      	bhi.n	9000aaf4 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000aaca:	6822      	ldr	r2, [r4, #0]
9000aacc:	68d3      	ldr	r3, [r2, #12]
9000aace:	f013 0301 	ands.w	r3, r3, #1
9000aad2:	d1f5      	bne.n	9000aac0 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000aad4:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000aad6:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000aad8:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000aada:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000aadc:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000aae0:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000aae4:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000aae6:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000aae8:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000aaea:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000aaec:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000aaf0:	2001      	movs	r0, #1
}
9000aaf2:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000aaf4:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000aaf6:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000aaf8:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000aafa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000aafe:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000ab02:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000ab04:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000ab08:	e7f2      	b.n	9000aaf0 <HAL_MDMA_Abort+0x58>
9000ab0a:	bf00      	nop

9000ab0c <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000ab0c:	4603      	mov	r3, r0
9000ab0e:	b128      	cbz	r0, 9000ab1c <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000ab10:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000ab14:	2a02      	cmp	r2, #2
9000ab16:	d003      	beq.n	9000ab20 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000ab18:	2280      	movs	r2, #128	@ 0x80
9000ab1a:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000ab1c:	2001      	movs	r0, #1
9000ab1e:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000ab20:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ab22:	2104      	movs	r1, #4
  return HAL_OK;
9000ab24:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ab26:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000ab2a:	68d3      	ldr	r3, [r2, #12]
9000ab2c:	f023 0301 	bic.w	r3, r3, #1
9000ab30:	60d3      	str	r3, [r2, #12]
}
9000ab32:	4770      	bx	lr

9000ab34 <HAL_MDMA_IRQHandler>:
{
9000ab34:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000ab36:	2300      	movs	r3, #0
{
9000ab38:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000ab3a:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000ab3e:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000ab40:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000ab42:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000ab44:	4b57      	ldr	r3, [pc, #348]	@ (9000aca4 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000ab46:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000ab48:	4a57      	ldr	r2, [pc, #348]	@ (9000aca8 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000ab4a:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000ab4c:	6823      	ldr	r3, [r4, #0]
9000ab4e:	441a      	add	r2, r3
9000ab50:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000ab54:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000ab58:	4202      	tst	r2, r0
9000ab5a:	f000 80a0 	beq.w	9000ac9e <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000ab5e:	681a      	ldr	r2, [r3, #0]
9000ab60:	07d1      	lsls	r1, r2, #31
9000ab62:	d529      	bpl.n	9000abb8 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000ab64:	68da      	ldr	r2, [r3, #12]
9000ab66:	0792      	lsls	r2, r2, #30
9000ab68:	d526      	bpl.n	9000abb8 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000ab6a:	68da      	ldr	r2, [r3, #12]
9000ab6c:	f022 0202 	bic.w	r2, r2, #2
9000ab70:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000ab72:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000ab74:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000ab76:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000ab78:	bf54      	ite	pl
9000ab7a:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000ab7e:	f041 0102 	orrmi.w	r1, r1, #2
9000ab82:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000ab84:	0591      	lsls	r1, r2, #22
9000ab86:	d503      	bpl.n	9000ab90 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000ab88:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000ab8a:	f041 0104 	orr.w	r1, r1, #4
9000ab8e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000ab90:	05d0      	lsls	r0, r2, #23
9000ab92:	d503      	bpl.n	9000ab9c <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000ab94:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000ab96:	f041 0108 	orr.w	r1, r1, #8
9000ab9a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000ab9c:	0551      	lsls	r1, r2, #21
9000ab9e:	d503      	bpl.n	9000aba8 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000aba0:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000aba2:	f041 0110 	orr.w	r1, r1, #16
9000aba6:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000aba8:	0510      	lsls	r0, r2, #20
9000abaa:	d503      	bpl.n	9000abb4 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000abac:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000abae:	f042 0220 	orr.w	r2, r2, #32
9000abb2:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000abb4:	2201      	movs	r2, #1
9000abb6:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000abb8:	681a      	ldr	r2, [r3, #0]
9000abba:	06d1      	lsls	r1, r2, #27
9000abbc:	d509      	bpl.n	9000abd2 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000abbe:	68da      	ldr	r2, [r3, #12]
9000abc0:	0692      	lsls	r2, r2, #26
9000abc2:	d506      	bpl.n	9000abd2 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000abc4:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000abc6:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000abc8:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000abca:	b112      	cbz	r2, 9000abd2 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000abcc:	4620      	mov	r0, r4
9000abce:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000abd0:	6823      	ldr	r3, [r4, #0]
9000abd2:	681a      	ldr	r2, [r3, #0]
9000abd4:	0710      	lsls	r0, r2, #28
9000abd6:	d509      	bpl.n	9000abec <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000abd8:	68da      	ldr	r2, [r3, #12]
9000abda:	06d1      	lsls	r1, r2, #27
9000abdc:	d506      	bpl.n	9000abec <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000abde:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000abe0:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000abe2:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000abe4:	b112      	cbz	r2, 9000abec <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000abe6:	4620      	mov	r0, r4
9000abe8:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000abea:	6823      	ldr	r3, [r4, #0]
9000abec:	681a      	ldr	r2, [r3, #0]
9000abee:	0752      	lsls	r2, r2, #29
9000abf0:	d509      	bpl.n	9000ac06 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000abf2:	68da      	ldr	r2, [r3, #12]
9000abf4:	0710      	lsls	r0, r2, #28
9000abf6:	d506      	bpl.n	9000ac06 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000abf8:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000abfa:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000abfc:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000abfe:	b112      	cbz	r2, 9000ac06 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000ac00:	4620      	mov	r0, r4
9000ac02:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000ac04:	6823      	ldr	r3, [r4, #0]
9000ac06:	681a      	ldr	r2, [r3, #0]
9000ac08:	0791      	lsls	r1, r2, #30
9000ac0a:	d516      	bpl.n	9000ac3a <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000ac0c:	68da      	ldr	r2, [r3, #12]
9000ac0e:	0752      	lsls	r2, r2, #29
9000ac10:	d513      	bpl.n	9000ac3a <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000ac12:	68da      	ldr	r2, [r3, #12]
9000ac14:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000ac18:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000ac1a:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000ac1e:	2a04      	cmp	r2, #4
9000ac20:	d034      	beq.n	9000ac8c <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ac22:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000ac24:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ac26:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000ac28:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000ac2a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000ac2c:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000ac30:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000ac34:	b10b      	cbz	r3, 9000ac3a <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000ac36:	4620      	mov	r0, r4
9000ac38:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000ac3a:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000ac3c:	2b00      	cmp	r3, #0
9000ac3e:	d02e      	beq.n	9000ac9e <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000ac40:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ac42:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000ac44:	4b19      	ldr	r3, [pc, #100]	@ (9000acac <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ac46:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000ac4a:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000ac4e:	68cb      	ldr	r3, [r1, #12]
9000ac50:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000ac54:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000ac56:	60cb      	str	r3, [r1, #12]
9000ac58:	e002      	b.n	9000ac60 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000ac5a:	68cb      	ldr	r3, [r1, #12]
9000ac5c:	07d8      	lsls	r0, r3, #31
9000ac5e:	d504      	bpl.n	9000ac6a <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000ac60:	9b01      	ldr	r3, [sp, #4]
9000ac62:	3301      	adds	r3, #1
9000ac64:	4293      	cmp	r3, r2
9000ac66:	9301      	str	r3, [sp, #4]
9000ac68:	d9f7      	bls.n	9000ac5a <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000ac6a:	2300      	movs	r3, #0
9000ac6c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000ac70:	68cb      	ldr	r3, [r1, #12]
9000ac72:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000ac74:	bf4c      	ite	mi
9000ac76:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000ac78:	2301      	movpl	r3, #1
9000ac7a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000ac7e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000ac80:	b16b      	cbz	r3, 9000ac9e <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000ac82:	4620      	mov	r0, r4
}
9000ac84:	b003      	add	sp, #12
9000ac86:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000ac8a:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000ac8c:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000ac8e:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000ac90:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000ac92:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000ac96:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000ac9a:	2b00      	cmp	r3, #0
9000ac9c:	d1f1      	bne.n	9000ac82 <HAL_MDMA_IRQHandler+0x14e>
}
9000ac9e:	b003      	add	sp, #12
9000aca0:	bd30      	pop	{r4, r5, pc}
9000aca2:	bf00      	nop
9000aca4:	24000078 	.word	0x24000078
9000aca8:	adffffc0 	.word	0xadffffc0
9000acac:	1b4e81b5 	.word	0x1b4e81b5

9000acb0 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000acb0:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000acb2:	4c10      	ldr	r4, [pc, #64]	@ (9000acf4 <HAL_PWREx_ConfigSupply+0x44>)
9000acb4:	68e3      	ldr	r3, [r4, #12]
9000acb6:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000acba:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000acbc:	d105      	bne.n	9000acca <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000acbe:	f003 0307 	and.w	r3, r3, #7
9000acc2:	1a18      	subs	r0, r3, r0
9000acc4:	bf18      	it	ne
9000acc6:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000acc8:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000acca:	f023 0307 	bic.w	r3, r3, #7
9000acce:	4303      	orrs	r3, r0
9000acd0:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000acd2:	f7fc fee9 	bl	90007aa8 <HAL_GetTick>
9000acd6:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000acd8:	e005      	b.n	9000ace6 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000acda:	f7fc fee5 	bl	90007aa8 <HAL_GetTick>
9000acde:	1b40      	subs	r0, r0, r5
9000ace0:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000ace4:	d804      	bhi.n	9000acf0 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000ace6:	6863      	ldr	r3, [r4, #4]
9000ace8:	049b      	lsls	r3, r3, #18
9000acea:	d5f6      	bpl.n	9000acda <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000acec:	2000      	movs	r0, #0
}
9000acee:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000acf0:	2001      	movs	r0, #1
}
9000acf2:	bd38      	pop	{r3, r4, r5, pc}
9000acf4:	58024800 	.word	0x58024800

9000acf8 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000acf8:	4b33      	ldr	r3, [pc, #204]	@ (9000adc8 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000acfa:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000acfc:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000acfe:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ad00:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000ad02:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ad06:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ad08:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ad0c:	d036      	beq.n	9000ad7c <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ad0e:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ad12:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ad16:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad1a:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ad1e:	fb05 f202 	mul.w	r2, r5, r2
9000ad22:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad24:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000ad28:	ee06 2a90 	vmov	s13, r2
9000ad2c:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000ad30:	d002      	beq.n	9000ad38 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000ad32:	2902      	cmp	r1, #2
9000ad34:	d042      	beq.n	9000adbc <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000ad36:	b319      	cbz	r1, 9000ad80 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad38:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000adcc <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000ad3c:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000ad40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ad42:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ad46:	ee07 3a90 	vmov	s15, r3
9000ad4a:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ad4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ad52:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000ad56:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000ad5a:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000ad5e:	4b1a      	ldr	r3, [pc, #104]	@ (9000adc8 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000ad60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ad62:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ad66:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ad68:	ee07 3a10 	vmov	s14, r3
9000ad6c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000ad70:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000ad74:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000ad78:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000ad7c:	bc30      	pop	{r4, r5}
9000ad7e:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ad80:	681a      	ldr	r2, [r3, #0]
9000ad82:	0692      	lsls	r2, r2, #26
9000ad84:	d51d      	bpl.n	9000adc2 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ad86:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad88:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ad8c:	4a10      	ldr	r2, [pc, #64]	@ (9000add0 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ad90:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad94:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ad98:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad9a:	ee07 3a90 	vmov	s15, r3
9000ad9e:	ee06 2a10 	vmov	s12, r2
9000ada2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ada6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000adaa:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000adae:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000adb2:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000adb6:	ee67 7a87 	vmul.f32	s15, s15, s14
9000adba:	e7d0      	b.n	9000ad5e <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000adbc:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000add4 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000adc0:	e7bc      	b.n	9000ad3c <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000adc2:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000add8 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000adc6:	e7b9      	b.n	9000ad3c <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000adc8:	58024400 	.word	0x58024400
9000adcc:	4a742400 	.word	0x4a742400
9000add0:	03d09000 	.word	0x03d09000
9000add4:	4bbebc20 	.word	0x4bbebc20
9000add8:	4c742400 	.word	0x4c742400

9000addc <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000addc:	2800      	cmp	r0, #0
9000adde:	f000 82e9 	beq.w	9000b3b4 <HAL_RCC_OscConfig+0x5d8>
{
9000ade2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000ade4:	6803      	ldr	r3, [r0, #0]
9000ade6:	4604      	mov	r4, r0
9000ade8:	07d9      	lsls	r1, r3, #31
9000adea:	d52e      	bpl.n	9000ae4a <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000adec:	4997      	ldr	r1, [pc, #604]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000adee:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000adf0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000adf2:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000adf6:	2a10      	cmp	r2, #16
9000adf8:	f000 80ee 	beq.w	9000afd8 <HAL_RCC_OscConfig+0x1fc>
9000adfc:	2a18      	cmp	r2, #24
9000adfe:	f000 80e6 	beq.w	9000afce <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ae02:	6863      	ldr	r3, [r4, #4]
9000ae04:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000ae08:	f000 8111 	beq.w	9000b02e <HAL_RCC_OscConfig+0x252>
9000ae0c:	2b00      	cmp	r3, #0
9000ae0e:	f000 8167 	beq.w	9000b0e0 <HAL_RCC_OscConfig+0x304>
9000ae12:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000ae16:	4b8d      	ldr	r3, [pc, #564]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000ae18:	681a      	ldr	r2, [r3, #0]
9000ae1a:	f000 828a 	beq.w	9000b332 <HAL_RCC_OscConfig+0x556>
9000ae1e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000ae22:	601a      	str	r2, [r3, #0]
9000ae24:	681a      	ldr	r2, [r3, #0]
9000ae26:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000ae2a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000ae2c:	f7fc fe3c 	bl	90007aa8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ae30:	4e86      	ldr	r6, [pc, #536]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000ae32:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ae34:	e005      	b.n	9000ae42 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000ae36:	f7fc fe37 	bl	90007aa8 <HAL_GetTick>
9000ae3a:	1b40      	subs	r0, r0, r5
9000ae3c:	2864      	cmp	r0, #100	@ 0x64
9000ae3e:	f200 814d 	bhi.w	9000b0dc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ae42:	6833      	ldr	r3, [r6, #0]
9000ae44:	039b      	lsls	r3, r3, #14
9000ae46:	d5f6      	bpl.n	9000ae36 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000ae48:	6823      	ldr	r3, [r4, #0]
9000ae4a:	079d      	lsls	r5, r3, #30
9000ae4c:	d470      	bmi.n	9000af30 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ae4e:	06d9      	lsls	r1, r3, #27
9000ae50:	d533      	bpl.n	9000aeba <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ae52:	4a7e      	ldr	r2, [pc, #504]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000ae54:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000ae56:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ae58:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000ae5c:	2b08      	cmp	r3, #8
9000ae5e:	f000 80cb 	beq.w	9000aff8 <HAL_RCC_OscConfig+0x21c>
9000ae62:	2b18      	cmp	r3, #24
9000ae64:	f000 80c3 	beq.w	9000afee <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000ae68:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000ae6a:	4d78      	ldr	r5, [pc, #480]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000ae6c:	2b00      	cmp	r3, #0
9000ae6e:	f000 816f 	beq.w	9000b150 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000ae72:	682b      	ldr	r3, [r5, #0]
9000ae74:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000ae78:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ae7a:	f7fc fe15 	bl	90007aa8 <HAL_GetTick>
9000ae7e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000ae80:	e005      	b.n	9000ae8e <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000ae82:	f7fc fe11 	bl	90007aa8 <HAL_GetTick>
9000ae86:	1b80      	subs	r0, r0, r6
9000ae88:	2802      	cmp	r0, #2
9000ae8a:	f200 8127 	bhi.w	9000b0dc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000ae8e:	682b      	ldr	r3, [r5, #0]
9000ae90:	05db      	lsls	r3, r3, #23
9000ae92:	d5f6      	bpl.n	9000ae82 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ae94:	f7fc fe0e 	bl	90007ab4 <HAL_GetREVID>
9000ae98:	f241 0303 	movw	r3, #4099	@ 0x1003
9000ae9c:	4298      	cmp	r0, r3
9000ae9e:	f200 8269 	bhi.w	9000b374 <HAL_RCC_OscConfig+0x598>
9000aea2:	6a22      	ldr	r2, [r4, #32]
9000aea4:	686b      	ldr	r3, [r5, #4]
9000aea6:	2a20      	cmp	r2, #32
9000aea8:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000aeac:	bf0c      	ite	eq
9000aeae:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000aeb2:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000aeb6:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000aeb8:	6823      	ldr	r3, [r4, #0]
9000aeba:	071d      	lsls	r5, r3, #28
9000aebc:	d516      	bpl.n	9000aeec <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000aebe:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000aec0:	4d62      	ldr	r5, [pc, #392]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000aec2:	2b00      	cmp	r3, #0
9000aec4:	f000 8122 	beq.w	9000b10c <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000aec8:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000aeca:	f043 0301 	orr.w	r3, r3, #1
9000aece:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000aed0:	f7fc fdea 	bl	90007aa8 <HAL_GetTick>
9000aed4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000aed6:	e005      	b.n	9000aee4 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000aed8:	f7fc fde6 	bl	90007aa8 <HAL_GetTick>
9000aedc:	1b80      	subs	r0, r0, r6
9000aede:	2802      	cmp	r0, #2
9000aee0:	f200 80fc 	bhi.w	9000b0dc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000aee4:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000aee6:	0798      	lsls	r0, r3, #30
9000aee8:	d5f6      	bpl.n	9000aed8 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000aeea:	6823      	ldr	r3, [r4, #0]
9000aeec:	069a      	lsls	r2, r3, #26
9000aeee:	d516      	bpl.n	9000af1e <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000aef0:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000aef2:	4d56      	ldr	r5, [pc, #344]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000aef4:	2b00      	cmp	r3, #0
9000aef6:	f000 811a 	beq.w	9000b12e <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000aefa:	682b      	ldr	r3, [r5, #0]
9000aefc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000af00:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000af02:	f7fc fdd1 	bl	90007aa8 <HAL_GetTick>
9000af06:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000af08:	e005      	b.n	9000af16 <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000af0a:	f7fc fdcd 	bl	90007aa8 <HAL_GetTick>
9000af0e:	1b80      	subs	r0, r0, r6
9000af10:	2802      	cmp	r0, #2
9000af12:	f200 80e3 	bhi.w	9000b0dc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000af16:	682b      	ldr	r3, [r5, #0]
9000af18:	049f      	lsls	r7, r3, #18
9000af1a:	d5f6      	bpl.n	9000af0a <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000af1c:	6823      	ldr	r3, [r4, #0]
9000af1e:	0759      	lsls	r1, r3, #29
9000af20:	f100 808b 	bmi.w	9000b03a <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000af24:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000af26:	2b00      	cmp	r3, #0
9000af28:	f040 80bf 	bne.w	9000b0aa <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000af2c:	2000      	movs	r0, #0
}
9000af2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000af30:	4a46      	ldr	r2, [pc, #280]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000af32:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000af34:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000af36:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000af3a:	d12d      	bne.n	9000af98 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000af3c:	4b43      	ldr	r3, [pc, #268]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000af3e:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000af40:	681b      	ldr	r3, [r3, #0]
9000af42:	0759      	lsls	r1, r3, #29
9000af44:	d501      	bpl.n	9000af4a <HAL_RCC_OscConfig+0x16e>
9000af46:	2a00      	cmp	r2, #0
9000af48:	d04f      	beq.n	9000afea <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000af4a:	4d40      	ldr	r5, [pc, #256]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000af4c:	682b      	ldr	r3, [r5, #0]
9000af4e:	f023 0319 	bic.w	r3, r3, #25
9000af52:	4313      	orrs	r3, r2
9000af54:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000af56:	f7fc fda7 	bl	90007aa8 <HAL_GetTick>
9000af5a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000af5c:	e005      	b.n	9000af6a <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000af5e:	f7fc fda3 	bl	90007aa8 <HAL_GetTick>
9000af62:	1b80      	subs	r0, r0, r6
9000af64:	2802      	cmp	r0, #2
9000af66:	f200 80b9 	bhi.w	9000b0dc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000af6a:	682b      	ldr	r3, [r5, #0]
9000af6c:	075b      	lsls	r3, r3, #29
9000af6e:	d5f6      	bpl.n	9000af5e <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000af70:	f7fc fda0 	bl	90007ab4 <HAL_GetREVID>
9000af74:	f241 0303 	movw	r3, #4099	@ 0x1003
9000af78:	4298      	cmp	r0, r3
9000af7a:	f200 8110 	bhi.w	9000b19e <HAL_RCC_OscConfig+0x3c2>
9000af7e:	6922      	ldr	r2, [r4, #16]
9000af80:	686b      	ldr	r3, [r5, #4]
9000af82:	2a40      	cmp	r2, #64	@ 0x40
9000af84:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000af88:	bf0c      	ite	eq
9000af8a:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000af8e:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000af92:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000af94:	6823      	ldr	r3, [r4, #0]
9000af96:	e75a      	b.n	9000ae4e <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000af98:	2b18      	cmp	r3, #24
9000af9a:	f000 80fc 	beq.w	9000b196 <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000af9e:	4d2b      	ldr	r5, [pc, #172]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000afa0:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000afa2:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000afa4:	2a00      	cmp	r2, #0
9000afa6:	f000 80e5 	beq.w	9000b174 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000afaa:	f023 0319 	bic.w	r3, r3, #25
9000afae:	4313      	orrs	r3, r2
9000afb0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000afb2:	f7fc fd79 	bl	90007aa8 <HAL_GetTick>
9000afb6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000afb8:	e005      	b.n	9000afc6 <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000afba:	f7fc fd75 	bl	90007aa8 <HAL_GetTick>
9000afbe:	1b80      	subs	r0, r0, r6
9000afc0:	2802      	cmp	r0, #2
9000afc2:	f200 808b 	bhi.w	9000b0dc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000afc6:	682b      	ldr	r3, [r5, #0]
9000afc8:	075f      	lsls	r7, r3, #29
9000afca:	d5f6      	bpl.n	9000afba <HAL_RCC_OscConfig+0x1de>
9000afcc:	e7d0      	b.n	9000af70 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000afce:	f001 0103 	and.w	r1, r1, #3
9000afd2:	2902      	cmp	r1, #2
9000afd4:	f47f af15 	bne.w	9000ae02 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000afd8:	4a1c      	ldr	r2, [pc, #112]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000afda:	6812      	ldr	r2, [r2, #0]
9000afdc:	0392      	lsls	r2, r2, #14
9000afde:	f57f af34 	bpl.w	9000ae4a <HAL_RCC_OscConfig+0x6e>
9000afe2:	6862      	ldr	r2, [r4, #4]
9000afe4:	2a00      	cmp	r2, #0
9000afe6:	f47f af30 	bne.w	9000ae4a <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000afea:	2001      	movs	r0, #1
}
9000afec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000afee:	f002 0203 	and.w	r2, r2, #3
9000aff2:	2a01      	cmp	r2, #1
9000aff4:	f47f af38 	bne.w	9000ae68 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000aff8:	4b14      	ldr	r3, [pc, #80]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000affa:	681b      	ldr	r3, [r3, #0]
9000affc:	05da      	lsls	r2, r3, #23
9000affe:	d502      	bpl.n	9000b006 <HAL_RCC_OscConfig+0x22a>
9000b000:	69e3      	ldr	r3, [r4, #28]
9000b002:	2b80      	cmp	r3, #128	@ 0x80
9000b004:	d1f1      	bne.n	9000afea <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b006:	f7fc fd55 	bl	90007ab4 <HAL_GetREVID>
9000b00a:	f241 0303 	movw	r3, #4099	@ 0x1003
9000b00e:	4298      	cmp	r0, r3
9000b010:	f200 80ce 	bhi.w	9000b1b0 <HAL_RCC_OscConfig+0x3d4>
9000b014:	6a22      	ldr	r2, [r4, #32]
9000b016:	2a20      	cmp	r2, #32
9000b018:	f000 81bb 	beq.w	9000b392 <HAL_RCC_OscConfig+0x5b6>
9000b01c:	490b      	ldr	r1, [pc, #44]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000b01e:	684b      	ldr	r3, [r1, #4]
9000b020:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b024:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000b028:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b02a:	6823      	ldr	r3, [r4, #0]
9000b02c:	e745      	b.n	9000aeba <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b02e:	4a07      	ldr	r2, [pc, #28]	@ (9000b04c <HAL_RCC_OscConfig+0x270>)
9000b030:	6813      	ldr	r3, [r2, #0]
9000b032:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b036:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000b038:	e6f8      	b.n	9000ae2c <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000b03a:	4d05      	ldr	r5, [pc, #20]	@ (9000b050 <HAL_RCC_OscConfig+0x274>)
9000b03c:	682b      	ldr	r3, [r5, #0]
9000b03e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b042:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000b044:	f7fc fd30 	bl	90007aa8 <HAL_GetTick>
9000b048:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b04a:	e008      	b.n	9000b05e <HAL_RCC_OscConfig+0x282>
9000b04c:	58024400 	.word	0x58024400
9000b050:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000b054:	f7fc fd28 	bl	90007aa8 <HAL_GetTick>
9000b058:	1b80      	subs	r0, r0, r6
9000b05a:	2864      	cmp	r0, #100	@ 0x64
9000b05c:	d83e      	bhi.n	9000b0dc <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b05e:	682b      	ldr	r3, [r5, #0]
9000b060:	05da      	lsls	r2, r3, #23
9000b062:	d5f7      	bpl.n	9000b054 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b064:	68a3      	ldr	r3, [r4, #8]
9000b066:	2b01      	cmp	r3, #1
9000b068:	f000 818d 	beq.w	9000b386 <HAL_RCC_OscConfig+0x5aa>
9000b06c:	2b00      	cmp	r3, #0
9000b06e:	f000 8168 	beq.w	9000b342 <HAL_RCC_OscConfig+0x566>
9000b072:	2b05      	cmp	r3, #5
9000b074:	4b85      	ldr	r3, [pc, #532]	@ (9000b28c <HAL_RCC_OscConfig+0x4b0>)
9000b076:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b078:	f000 8194 	beq.w	9000b3a4 <HAL_RCC_OscConfig+0x5c8>
9000b07c:	f022 0201 	bic.w	r2, r2, #1
9000b080:	671a      	str	r2, [r3, #112]	@ 0x70
9000b082:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b084:	f022 0204 	bic.w	r2, r2, #4
9000b088:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000b08a:	f7fc fd0d 	bl	90007aa8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b08e:	4e7f      	ldr	r6, [pc, #508]	@ (9000b28c <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b090:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000b094:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b096:	e004      	b.n	9000b0a2 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b098:	f7fc fd06 	bl	90007aa8 <HAL_GetTick>
9000b09c:	1b40      	subs	r0, r0, r5
9000b09e:	42b8      	cmp	r0, r7
9000b0a0:	d81c      	bhi.n	9000b0dc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b0a2:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000b0a4:	079b      	lsls	r3, r3, #30
9000b0a6:	d5f7      	bpl.n	9000b098 <HAL_RCC_OscConfig+0x2bc>
9000b0a8:	e73c      	b.n	9000af24 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000b0aa:	4d78      	ldr	r5, [pc, #480]	@ (9000b28c <HAL_RCC_OscConfig+0x4b0>)
9000b0ac:	692a      	ldr	r2, [r5, #16]
9000b0ae:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000b0b2:	2a18      	cmp	r2, #24
9000b0b4:	f000 80f0 	beq.w	9000b298 <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000b0b8:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000b0ba:	682b      	ldr	r3, [r5, #0]
9000b0bc:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000b0c0:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000b0c2:	d07f      	beq.n	9000b1c4 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000b0c4:	f7fc fcf0 	bl	90007aa8 <HAL_GetTick>
9000b0c8:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b0ca:	682b      	ldr	r3, [r5, #0]
9000b0cc:	019b      	lsls	r3, r3, #6
9000b0ce:	f57f af2d 	bpl.w	9000af2c <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b0d2:	f7fc fce9 	bl	90007aa8 <HAL_GetTick>
9000b0d6:	1b00      	subs	r0, r0, r4
9000b0d8:	2802      	cmp	r0, #2
9000b0da:	d9f6      	bls.n	9000b0ca <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000b0dc:	2003      	movs	r0, #3
}
9000b0de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b0e0:	4d6a      	ldr	r5, [pc, #424]	@ (9000b28c <HAL_RCC_OscConfig+0x4b0>)
9000b0e2:	682b      	ldr	r3, [r5, #0]
9000b0e4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000b0e8:	602b      	str	r3, [r5, #0]
9000b0ea:	682b      	ldr	r3, [r5, #0]
9000b0ec:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000b0f0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b0f2:	f7fc fcd9 	bl	90007aa8 <HAL_GetTick>
9000b0f6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b0f8:	e004      	b.n	9000b104 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b0fa:	f7fc fcd5 	bl	90007aa8 <HAL_GetTick>
9000b0fe:	1b80      	subs	r0, r0, r6
9000b100:	2864      	cmp	r0, #100	@ 0x64
9000b102:	d8eb      	bhi.n	9000b0dc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b104:	682b      	ldr	r3, [r5, #0]
9000b106:	039f      	lsls	r7, r3, #14
9000b108:	d4f7      	bmi.n	9000b0fa <HAL_RCC_OscConfig+0x31e>
9000b10a:	e69d      	b.n	9000ae48 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000b10c:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b10e:	f023 0301 	bic.w	r3, r3, #1
9000b112:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000b114:	f7fc fcc8 	bl	90007aa8 <HAL_GetTick>
9000b118:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b11a:	e004      	b.n	9000b126 <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b11c:	f7fc fcc4 	bl	90007aa8 <HAL_GetTick>
9000b120:	1b80      	subs	r0, r0, r6
9000b122:	2802      	cmp	r0, #2
9000b124:	d8da      	bhi.n	9000b0dc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b126:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000b128:	0799      	lsls	r1, r3, #30
9000b12a:	d4f7      	bmi.n	9000b11c <HAL_RCC_OscConfig+0x340>
9000b12c:	e6dd      	b.n	9000aeea <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000b12e:	682b      	ldr	r3, [r5, #0]
9000b130:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000b134:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b136:	f7fc fcb7 	bl	90007aa8 <HAL_GetTick>
9000b13a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b13c:	e004      	b.n	9000b148 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b13e:	f7fc fcb3 	bl	90007aa8 <HAL_GetTick>
9000b142:	1b80      	subs	r0, r0, r6
9000b144:	2802      	cmp	r0, #2
9000b146:	d8c9      	bhi.n	9000b0dc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b148:	682b      	ldr	r3, [r5, #0]
9000b14a:	0498      	lsls	r0, r3, #18
9000b14c:	d4f7      	bmi.n	9000b13e <HAL_RCC_OscConfig+0x362>
9000b14e:	e6e5      	b.n	9000af1c <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000b150:	682b      	ldr	r3, [r5, #0]
9000b152:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000b156:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b158:	f7fc fca6 	bl	90007aa8 <HAL_GetTick>
9000b15c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b15e:	e004      	b.n	9000b16a <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b160:	f7fc fca2 	bl	90007aa8 <HAL_GetTick>
9000b164:	1b80      	subs	r0, r0, r6
9000b166:	2802      	cmp	r0, #2
9000b168:	d8b8      	bhi.n	9000b0dc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b16a:	682b      	ldr	r3, [r5, #0]
9000b16c:	05df      	lsls	r7, r3, #23
9000b16e:	d4f7      	bmi.n	9000b160 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b170:	6823      	ldr	r3, [r4, #0]
9000b172:	e6a2      	b.n	9000aeba <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000b174:	f023 0301 	bic.w	r3, r3, #1
9000b178:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b17a:	f7fc fc95 	bl	90007aa8 <HAL_GetTick>
9000b17e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b180:	e004      	b.n	9000b18c <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b182:	f7fc fc91 	bl	90007aa8 <HAL_GetTick>
9000b186:	1b80      	subs	r0, r0, r6
9000b188:	2802      	cmp	r0, #2
9000b18a:	d8a7      	bhi.n	9000b0dc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b18c:	682b      	ldr	r3, [r5, #0]
9000b18e:	0758      	lsls	r0, r3, #29
9000b190:	d4f7      	bmi.n	9000b182 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b192:	6823      	ldr	r3, [r4, #0]
9000b194:	e65b      	b.n	9000ae4e <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b196:	0790      	lsls	r0, r2, #30
9000b198:	f47f af01 	bne.w	9000af9e <HAL_RCC_OscConfig+0x1c2>
9000b19c:	e6ce      	b.n	9000af3c <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b19e:	686b      	ldr	r3, [r5, #4]
9000b1a0:	6922      	ldr	r2, [r4, #16]
9000b1a2:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000b1a6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b1aa:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b1ac:	6823      	ldr	r3, [r4, #0]
9000b1ae:	e64e      	b.n	9000ae4e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b1b0:	4a36      	ldr	r2, [pc, #216]	@ (9000b28c <HAL_RCC_OscConfig+0x4b0>)
9000b1b2:	6a21      	ldr	r1, [r4, #32]
9000b1b4:	68d3      	ldr	r3, [r2, #12]
9000b1b6:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000b1ba:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000b1be:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b1c0:	6823      	ldr	r3, [r4, #0]
9000b1c2:	e67a      	b.n	9000aeba <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000b1c4:	f7fc fc70 	bl	90007aa8 <HAL_GetTick>
9000b1c8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b1ca:	e004      	b.n	9000b1d6 <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b1cc:	f7fc fc6c 	bl	90007aa8 <HAL_GetTick>
9000b1d0:	1b80      	subs	r0, r0, r6
9000b1d2:	2802      	cmp	r0, #2
9000b1d4:	d882      	bhi.n	9000b0dc <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b1d6:	682b      	ldr	r3, [r5, #0]
9000b1d8:	0199      	lsls	r1, r3, #6
9000b1da:	d4f7      	bmi.n	9000b1cc <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b1dc:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000b1de:	4b2c      	ldr	r3, [pc, #176]	@ (9000b290 <HAL_RCC_OscConfig+0x4b4>)
9000b1e0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000b1e2:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b1e4:	492b      	ldr	r1, [pc, #172]	@ (9000b294 <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b1e6:	4e29      	ldr	r6, [pc, #164]	@ (9000b28c <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b1e8:	4313      	orrs	r3, r2
9000b1ea:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b1ec:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000b1f0:	62ab      	str	r3, [r5, #40]	@ 0x28
9000b1f2:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000b1f6:	3b01      	subs	r3, #1
9000b1f8:	3a01      	subs	r2, #1
9000b1fa:	025b      	lsls	r3, r3, #9
9000b1fc:	0412      	lsls	r2, r2, #16
9000b1fe:	b29b      	uxth	r3, r3
9000b200:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b204:	4313      	orrs	r3, r2
9000b206:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000b208:	3a01      	subs	r2, #1
9000b20a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b20e:	4313      	orrs	r3, r2
9000b210:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000b212:	3a01      	subs	r2, #1
9000b214:	0612      	lsls	r2, r2, #24
9000b216:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b21a:	4313      	orrs	r3, r2
9000b21c:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000b21e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b220:	f023 0301 	bic.w	r3, r3, #1
9000b224:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b226:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000b228:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000b22a:	4011      	ands	r1, r2
9000b22c:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000b230:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000b232:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b234:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000b236:	f023 030c 	bic.w	r3, r3, #12
9000b23a:	4313      	orrs	r3, r2
9000b23c:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000b23e:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b240:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000b242:	f023 0302 	bic.w	r3, r3, #2
9000b246:	4313      	orrs	r3, r2
9000b248:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000b24a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b24c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b250:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b252:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b254:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000b258:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000b25a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b25c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000b260:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000b262:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000b264:	f043 0301 	orr.w	r3, r3, #1
9000b268:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000b26a:	682b      	ldr	r3, [r5, #0]
9000b26c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000b270:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b272:	f7fc fc19 	bl	90007aa8 <HAL_GetTick>
9000b276:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b278:	6833      	ldr	r3, [r6, #0]
9000b27a:	019a      	lsls	r2, r3, #6
9000b27c:	f53f ae56 	bmi.w	9000af2c <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b280:	f7fc fc12 	bl	90007aa8 <HAL_GetTick>
9000b284:	1b00      	subs	r0, r0, r4
9000b286:	2802      	cmp	r0, #2
9000b288:	d9f6      	bls.n	9000b278 <HAL_RCC_OscConfig+0x49c>
9000b28a:	e727      	b.n	9000b0dc <HAL_RCC_OscConfig+0x300>
9000b28c:	58024400 	.word	0x58024400
9000b290:	fffffc0c 	.word	0xfffffc0c
9000b294:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b298:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000b29a:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000b29c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b29e:	f43f aea4 	beq.w	9000afea <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b2a2:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b2a6:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000b2a8:	428b      	cmp	r3, r1
9000b2aa:	f47f ae9e 	bne.w	9000afea <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b2ae:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b2b2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b2b4:	429a      	cmp	r2, r3
9000b2b6:	f47f ae98 	bne.w	9000afea <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b2ba:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000b2bc:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000b2c0:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b2c2:	429a      	cmp	r2, r3
9000b2c4:	f47f ae91 	bne.w	9000afea <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b2c8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000b2ca:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000b2ce:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b2d0:	429a      	cmp	r2, r3
9000b2d2:	f47f ae8a 	bne.w	9000afea <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b2d6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000b2d8:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000b2dc:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b2de:	429a      	cmp	r2, r3
9000b2e0:	f47f ae83 	bne.w	9000afea <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000b2e4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000b2e6:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000b2ea:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b2ec:	4298      	cmp	r0, r3
9000b2ee:	f47f ae7c 	bne.w	9000afea <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b2f2:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b2f4:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b2f6:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b2fa:	429a      	cmp	r2, r3
9000b2fc:	f43f ae16 	beq.w	9000af2c <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000b300:	4a2d      	ldr	r2, [pc, #180]	@ (9000b3b8 <HAL_RCC_OscConfig+0x5dc>)
9000b302:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000b304:	f023 0301 	bic.w	r3, r3, #1
9000b308:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000b30a:	f7fc fbcd 	bl	90007aa8 <HAL_GetTick>
9000b30e:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000b310:	f7fc fbca 	bl	90007aa8 <HAL_GetTick>
9000b314:	42a8      	cmp	r0, r5
9000b316:	d0fb      	beq.n	9000b310 <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b318:	4a27      	ldr	r2, [pc, #156]	@ (9000b3b8 <HAL_RCC_OscConfig+0x5dc>)
9000b31a:	4b28      	ldr	r3, [pc, #160]	@ (9000b3bc <HAL_RCC_OscConfig+0x5e0>)
9000b31c:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000b31e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000b320:	4003      	ands	r3, r0
9000b322:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000b326:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000b328:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000b32a:	f043 0301 	orr.w	r3, r3, #1
9000b32e:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000b330:	e5fc      	b.n	9000af2c <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b332:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000b336:	601a      	str	r2, [r3, #0]
9000b338:	681a      	ldr	r2, [r3, #0]
9000b33a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000b33e:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000b340:	e574      	b.n	9000ae2c <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b342:	4d1d      	ldr	r5, [pc, #116]	@ (9000b3b8 <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b344:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b348:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000b34a:	f023 0301 	bic.w	r3, r3, #1
9000b34e:	672b      	str	r3, [r5, #112]	@ 0x70
9000b350:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000b352:	f023 0304 	bic.w	r3, r3, #4
9000b356:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000b358:	f7fc fba6 	bl	90007aa8 <HAL_GetTick>
9000b35c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b35e:	e005      	b.n	9000b36c <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b360:	f7fc fba2 	bl	90007aa8 <HAL_GetTick>
9000b364:	1b80      	subs	r0, r0, r6
9000b366:	42b8      	cmp	r0, r7
9000b368:	f63f aeb8 	bhi.w	9000b0dc <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b36c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000b36e:	0798      	lsls	r0, r3, #30
9000b370:	d4f6      	bmi.n	9000b360 <HAL_RCC_OscConfig+0x584>
9000b372:	e5d7      	b.n	9000af24 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b374:	68eb      	ldr	r3, [r5, #12]
9000b376:	6a22      	ldr	r2, [r4, #32]
9000b378:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000b37c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b380:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b382:	6823      	ldr	r3, [r4, #0]
9000b384:	e599      	b.n	9000aeba <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b386:	4a0c      	ldr	r2, [pc, #48]	@ (9000b3b8 <HAL_RCC_OscConfig+0x5dc>)
9000b388:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000b38a:	f043 0301 	orr.w	r3, r3, #1
9000b38e:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b390:	e67b      	b.n	9000b08a <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b392:	4a09      	ldr	r2, [pc, #36]	@ (9000b3b8 <HAL_RCC_OscConfig+0x5dc>)
9000b394:	6853      	ldr	r3, [r2, #4]
9000b396:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000b39a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000b39e:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b3a0:	6823      	ldr	r3, [r4, #0]
9000b3a2:	e58a      	b.n	9000aeba <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b3a4:	f042 0204 	orr.w	r2, r2, #4
9000b3a8:	671a      	str	r2, [r3, #112]	@ 0x70
9000b3aa:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000b3ac:	f042 0201 	orr.w	r2, r2, #1
9000b3b0:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b3b2:	e66a      	b.n	9000b08a <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000b3b4:	2001      	movs	r0, #1
}
9000b3b6:	4770      	bx	lr
9000b3b8:	58024400 	.word	0x58024400
9000b3bc:	ffff0007 	.word	0xffff0007

9000b3c0 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b3c0:	4a3f      	ldr	r2, [pc, #252]	@ (9000b4c0 <HAL_RCC_GetSysClockFreq+0x100>)
9000b3c2:	6913      	ldr	r3, [r2, #16]
9000b3c4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b3c8:	2b10      	cmp	r3, #16
9000b3ca:	d004      	beq.n	9000b3d6 <HAL_RCC_GetSysClockFreq+0x16>
9000b3cc:	2b18      	cmp	r3, #24
9000b3ce:	d00d      	beq.n	9000b3ec <HAL_RCC_GetSysClockFreq+0x2c>
9000b3d0:	b11b      	cbz	r3, 9000b3da <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000b3d2:	483c      	ldr	r0, [pc, #240]	@ (9000b4c4 <HAL_RCC_GetSysClockFreq+0x104>)
9000b3d4:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b3d6:	483c      	ldr	r0, [pc, #240]	@ (9000b4c8 <HAL_RCC_GetSysClockFreq+0x108>)
9000b3d8:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b3da:	6813      	ldr	r3, [r2, #0]
9000b3dc:	0699      	lsls	r1, r3, #26
9000b3de:	d548      	bpl.n	9000b472 <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b3e0:	6813      	ldr	r3, [r2, #0]
9000b3e2:	483a      	ldr	r0, [pc, #232]	@ (9000b4cc <HAL_RCC_GetSysClockFreq+0x10c>)
9000b3e4:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b3e8:	40d8      	lsrs	r0, r3
9000b3ea:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b3ec:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000b3ee:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b3f0:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b3f2:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000b3f4:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b3f8:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b3fa:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b3fe:	d036      	beq.n	9000b46e <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b400:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b404:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b408:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b40c:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b410:	fb05 f303 	mul.w	r3, r5, r3
9000b414:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b416:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b41a:	ee06 3a90 	vmov	s13, r3
9000b41e:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000b422:	d002      	beq.n	9000b42a <HAL_RCC_GetSysClockFreq+0x6a>
9000b424:	2902      	cmp	r1, #2
9000b426:	d026      	beq.n	9000b476 <HAL_RCC_GetSysClockFreq+0xb6>
9000b428:	b341      	cbz	r1, 9000b47c <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b42a:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000b4d0 <HAL_RCC_GetSysClockFreq+0x110>
9000b42e:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000b432:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000b434:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b438:	ee07 3a10 	vmov	s14, r3
9000b43c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b440:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000b444:	ee37 7a26 	vadd.f32	s14, s14, s13
9000b448:	ee37 7a25 	vadd.f32	s14, s14, s11
9000b44c:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b450:	4b1b      	ldr	r3, [pc, #108]	@ (9000b4c0 <HAL_RCC_GetSysClockFreq+0x100>)
9000b452:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000b454:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b458:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b45a:	ee07 3a90 	vmov	s15, r3
9000b45e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000b462:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000b466:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000b46a:	ee17 0a90 	vmov	r0, s15
}
9000b46e:	bc30      	pop	{r4, r5}
9000b470:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b472:	4816      	ldr	r0, [pc, #88]	@ (9000b4cc <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000b474:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b476:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000b4d4 <HAL_RCC_GetSysClockFreq+0x114>
9000b47a:	e7d8      	b.n	9000b42e <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b47c:	6813      	ldr	r3, [r2, #0]
9000b47e:	069b      	lsls	r3, r3, #26
9000b480:	d51a      	bpl.n	9000b4b8 <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b482:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b484:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000b488:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b48a:	4910      	ldr	r1, [pc, #64]	@ (9000b4cc <HAL_RCC_GetSysClockFreq+0x10c>)
9000b48c:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b490:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b494:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b496:	ee07 3a10 	vmov	s14, r3
9000b49a:	ee06 1a10 	vmov	s12, r1
9000b49e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000b4a2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b4a6:	ee77 6a26 	vadd.f32	s13, s14, s13
9000b4aa:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000b4ae:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000b4b2:	ee27 7a27 	vmul.f32	s14, s14, s15
9000b4b6:	e7cb      	b.n	9000b450 <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b4b8:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000b4d8 <HAL_RCC_GetSysClockFreq+0x118>
9000b4bc:	e7b7      	b.n	9000b42e <HAL_RCC_GetSysClockFreq+0x6e>
9000b4be:	bf00      	nop
9000b4c0:	58024400 	.word	0x58024400
9000b4c4:	003d0900 	.word	0x003d0900
9000b4c8:	017d7840 	.word	0x017d7840
9000b4cc:	03d09000 	.word	0x03d09000
9000b4d0:	4a742400 	.word	0x4a742400
9000b4d4:	4bbebc20 	.word	0x4bbebc20
9000b4d8:	4c742400 	.word	0x4c742400

9000b4dc <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000b4dc:	2800      	cmp	r0, #0
9000b4de:	f000 810e 	beq.w	9000b6fe <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b4e2:	4a8d      	ldr	r2, [pc, #564]	@ (9000b718 <HAL_RCC_ClockConfig+0x23c>)
9000b4e4:	6813      	ldr	r3, [r2, #0]
9000b4e6:	f003 030f 	and.w	r3, r3, #15
9000b4ea:	428b      	cmp	r3, r1
{
9000b4ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b4f0:	4604      	mov	r4, r0
9000b4f2:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b4f4:	d20c      	bcs.n	9000b510 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b4f6:	6813      	ldr	r3, [r2, #0]
9000b4f8:	f023 030f 	bic.w	r3, r3, #15
9000b4fc:	430b      	orrs	r3, r1
9000b4fe:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b500:	6813      	ldr	r3, [r2, #0]
9000b502:	f003 030f 	and.w	r3, r3, #15
9000b506:	428b      	cmp	r3, r1
9000b508:	d002      	beq.n	9000b510 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000b50a:	2001      	movs	r0, #1
}
9000b50c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b510:	6823      	ldr	r3, [r4, #0]
9000b512:	0758      	lsls	r0, r3, #29
9000b514:	d50b      	bpl.n	9000b52e <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b516:	4981      	ldr	r1, [pc, #516]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b518:	6920      	ldr	r0, [r4, #16]
9000b51a:	698a      	ldr	r2, [r1, #24]
9000b51c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b520:	4290      	cmp	r0, r2
9000b522:	d904      	bls.n	9000b52e <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b524:	698a      	ldr	r2, [r1, #24]
9000b526:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b52a:	4302      	orrs	r2, r0
9000b52c:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b52e:	0719      	lsls	r1, r3, #28
9000b530:	d50b      	bpl.n	9000b54a <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b532:	497a      	ldr	r1, [pc, #488]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b534:	6960      	ldr	r0, [r4, #20]
9000b536:	69ca      	ldr	r2, [r1, #28]
9000b538:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b53c:	4290      	cmp	r0, r2
9000b53e:	d904      	bls.n	9000b54a <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b540:	69ca      	ldr	r2, [r1, #28]
9000b542:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b546:	4302      	orrs	r2, r0
9000b548:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b54a:	06da      	lsls	r2, r3, #27
9000b54c:	d50b      	bpl.n	9000b566 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b54e:	4973      	ldr	r1, [pc, #460]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b550:	69a0      	ldr	r0, [r4, #24]
9000b552:	69ca      	ldr	r2, [r1, #28]
9000b554:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b558:	4290      	cmp	r0, r2
9000b55a:	d904      	bls.n	9000b566 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b55c:	69ca      	ldr	r2, [r1, #28]
9000b55e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000b562:	4302      	orrs	r2, r0
9000b564:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b566:	069f      	lsls	r7, r3, #26
9000b568:	d50b      	bpl.n	9000b582 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b56a:	496c      	ldr	r1, [pc, #432]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b56c:	69e0      	ldr	r0, [r4, #28]
9000b56e:	6a0a      	ldr	r2, [r1, #32]
9000b570:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b574:	4290      	cmp	r0, r2
9000b576:	d904      	bls.n	9000b582 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b578:	6a0a      	ldr	r2, [r1, #32]
9000b57a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b57e:	4302      	orrs	r2, r0
9000b580:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b582:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b584:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b588:	f140 80ab 	bpl.w	9000b6e2 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b58c:	4e63      	ldr	r6, [pc, #396]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b58e:	68e0      	ldr	r0, [r4, #12]
9000b590:	69b1      	ldr	r1, [r6, #24]
9000b592:	f001 010f 	and.w	r1, r1, #15
9000b596:	4288      	cmp	r0, r1
9000b598:	d904      	bls.n	9000b5a4 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b59a:	69b1      	ldr	r1, [r6, #24]
9000b59c:	f021 010f 	bic.w	r1, r1, #15
9000b5a0:	4301      	orrs	r1, r0
9000b5a2:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b5a4:	2a00      	cmp	r2, #0
9000b5a6:	d030      	beq.n	9000b60a <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000b5a8:	4a5c      	ldr	r2, [pc, #368]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b5aa:	68a1      	ldr	r1, [r4, #8]
9000b5ac:	6993      	ldr	r3, [r2, #24]
9000b5ae:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000b5b2:	430b      	orrs	r3, r1
9000b5b4:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b5b6:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b5b8:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b5ba:	2902      	cmp	r1, #2
9000b5bc:	f000 80a1 	beq.w	9000b702 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000b5c0:	2903      	cmp	r1, #3
9000b5c2:	f000 8098 	beq.w	9000b6f6 <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000b5c6:	2901      	cmp	r1, #1
9000b5c8:	f000 80a1 	beq.w	9000b70e <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b5cc:	075f      	lsls	r7, r3, #29
9000b5ce:	d59c      	bpl.n	9000b50a <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b5d0:	4e52      	ldr	r6, [pc, #328]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b5d2:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b5d6:	6933      	ldr	r3, [r6, #16]
9000b5d8:	f023 0307 	bic.w	r3, r3, #7
9000b5dc:	430b      	orrs	r3, r1
9000b5de:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000b5e0:	f7fc fa62 	bl	90007aa8 <HAL_GetTick>
9000b5e4:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b5e6:	e005      	b.n	9000b5f4 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b5e8:	f7fc fa5e 	bl	90007aa8 <HAL_GetTick>
9000b5ec:	1bc0      	subs	r0, r0, r7
9000b5ee:	4540      	cmp	r0, r8
9000b5f0:	f200 808b 	bhi.w	9000b70a <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b5f4:	6933      	ldr	r3, [r6, #16]
9000b5f6:	6862      	ldr	r2, [r4, #4]
9000b5f8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b5fc:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000b600:	d1f2      	bne.n	9000b5e8 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b602:	6823      	ldr	r3, [r4, #0]
9000b604:	079e      	lsls	r6, r3, #30
9000b606:	d506      	bpl.n	9000b616 <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b608:	68e0      	ldr	r0, [r4, #12]
9000b60a:	4944      	ldr	r1, [pc, #272]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b60c:	698a      	ldr	r2, [r1, #24]
9000b60e:	f002 020f 	and.w	r2, r2, #15
9000b612:	4282      	cmp	r2, r0
9000b614:	d869      	bhi.n	9000b6ea <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000b616:	4940      	ldr	r1, [pc, #256]	@ (9000b718 <HAL_RCC_ClockConfig+0x23c>)
9000b618:	680a      	ldr	r2, [r1, #0]
9000b61a:	f002 020f 	and.w	r2, r2, #15
9000b61e:	42aa      	cmp	r2, r5
9000b620:	d90a      	bls.n	9000b638 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b622:	680a      	ldr	r2, [r1, #0]
9000b624:	f022 020f 	bic.w	r2, r2, #15
9000b628:	432a      	orrs	r2, r5
9000b62a:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b62c:	680a      	ldr	r2, [r1, #0]
9000b62e:	f002 020f 	and.w	r2, r2, #15
9000b632:	42aa      	cmp	r2, r5
9000b634:	f47f af69 	bne.w	9000b50a <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b638:	0758      	lsls	r0, r3, #29
9000b63a:	d50b      	bpl.n	9000b654 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b63c:	4937      	ldr	r1, [pc, #220]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b63e:	6920      	ldr	r0, [r4, #16]
9000b640:	698a      	ldr	r2, [r1, #24]
9000b642:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b646:	4290      	cmp	r0, r2
9000b648:	d204      	bcs.n	9000b654 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b64a:	698a      	ldr	r2, [r1, #24]
9000b64c:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b650:	4302      	orrs	r2, r0
9000b652:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b654:	0719      	lsls	r1, r3, #28
9000b656:	d50b      	bpl.n	9000b670 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b658:	4930      	ldr	r1, [pc, #192]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b65a:	6960      	ldr	r0, [r4, #20]
9000b65c:	69ca      	ldr	r2, [r1, #28]
9000b65e:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b662:	4290      	cmp	r0, r2
9000b664:	d204      	bcs.n	9000b670 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b666:	69ca      	ldr	r2, [r1, #28]
9000b668:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000b66c:	4302      	orrs	r2, r0
9000b66e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b670:	06da      	lsls	r2, r3, #27
9000b672:	d50b      	bpl.n	9000b68c <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b674:	4929      	ldr	r1, [pc, #164]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b676:	69a0      	ldr	r0, [r4, #24]
9000b678:	69ca      	ldr	r2, [r1, #28]
9000b67a:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b67e:	4290      	cmp	r0, r2
9000b680:	d204      	bcs.n	9000b68c <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b682:	69ca      	ldr	r2, [r1, #28]
9000b684:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000b688:	4302      	orrs	r2, r0
9000b68a:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b68c:	069b      	lsls	r3, r3, #26
9000b68e:	d50b      	bpl.n	9000b6a8 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b690:	4a22      	ldr	r2, [pc, #136]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b692:	69e1      	ldr	r1, [r4, #28]
9000b694:	6a13      	ldr	r3, [r2, #32]
9000b696:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000b69a:	4299      	cmp	r1, r3
9000b69c:	d204      	bcs.n	9000b6a8 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b69e:	6a13      	ldr	r3, [r2, #32]
9000b6a0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000b6a4:	430b      	orrs	r3, r1
9000b6a6:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b6a8:	f7ff fe8a 	bl	9000b3c0 <HAL_RCC_GetSysClockFreq>
9000b6ac:	4a1b      	ldr	r2, [pc, #108]	@ (9000b71c <HAL_RCC_ClockConfig+0x240>)
9000b6ae:	4603      	mov	r3, r0
9000b6b0:	481b      	ldr	r0, [pc, #108]	@ (9000b720 <HAL_RCC_ClockConfig+0x244>)
9000b6b2:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b6b4:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b6b6:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000b6ba:	4d1a      	ldr	r5, [pc, #104]	@ (9000b724 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b6bc:	f002 020f 	and.w	r2, r2, #15
9000b6c0:	4c19      	ldr	r4, [pc, #100]	@ (9000b728 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b6c2:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b6c4:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b6c6:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000b6ca:	4818      	ldr	r0, [pc, #96]	@ (9000b72c <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b6cc:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b6d0:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000b6d2:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000b6d4:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b6d6:	40d3      	lsrs	r3, r2
9000b6d8:	6023      	str	r3, [r4, #0]
}
9000b6da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000b6de:	f7f8 bcb1 	b.w	90004044 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b6e2:	2a00      	cmp	r2, #0
9000b6e4:	f47f af60 	bne.w	9000b5a8 <HAL_RCC_ClockConfig+0xcc>
9000b6e8:	e795      	b.n	9000b616 <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b6ea:	698a      	ldr	r2, [r1, #24]
9000b6ec:	f022 020f 	bic.w	r2, r2, #15
9000b6f0:	4302      	orrs	r2, r0
9000b6f2:	618a      	str	r2, [r1, #24]
9000b6f4:	e78f      	b.n	9000b616 <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b6f6:	019a      	lsls	r2, r3, #6
9000b6f8:	f53f af6a 	bmi.w	9000b5d0 <HAL_RCC_ClockConfig+0xf4>
9000b6fc:	e705      	b.n	9000b50a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000b6fe:	2001      	movs	r0, #1
}
9000b700:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b702:	0398      	lsls	r0, r3, #14
9000b704:	f53f af64 	bmi.w	9000b5d0 <HAL_RCC_ClockConfig+0xf4>
9000b708:	e6ff      	b.n	9000b50a <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000b70a:	2003      	movs	r0, #3
9000b70c:	e6fe      	b.n	9000b50c <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b70e:	05db      	lsls	r3, r3, #23
9000b710:	f53f af5e 	bmi.w	9000b5d0 <HAL_RCC_ClockConfig+0xf4>
9000b714:	e6f9      	b.n	9000b50a <HAL_RCC_ClockConfig+0x2e>
9000b716:	bf00      	nop
9000b718:	52002000 	.word	0x52002000
9000b71c:	58024400 	.word	0x58024400
9000b720:	9002a1a8 	.word	0x9002a1a8
9000b724:	24000078 	.word	0x24000078
9000b728:	24000074 	.word	0x24000074
9000b72c:	24000080 	.word	0x24000080

9000b730 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b730:	4a1c      	ldr	r2, [pc, #112]	@ (9000b7a4 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000b732:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b734:	6913      	ldr	r3, [r2, #16]
9000b736:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b73a:	2b10      	cmp	r3, #16
9000b73c:	d020      	beq.n	9000b780 <HAL_RCC_GetPCLK1Freq+0x50>
9000b73e:	2b18      	cmp	r3, #24
9000b740:	d029      	beq.n	9000b796 <HAL_RCC_GetPCLK1Freq+0x66>
9000b742:	b1fb      	cbz	r3, 9000b784 <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000b744:	4b18      	ldr	r3, [pc, #96]	@ (9000b7a8 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b746:	4a17      	ldr	r2, [pc, #92]	@ (9000b7a4 <HAL_RCC_GetPCLK1Freq+0x74>)
9000b748:	4918      	ldr	r1, [pc, #96]	@ (9000b7ac <HAL_RCC_GetPCLK1Freq+0x7c>)
9000b74a:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b74c:	4d18      	ldr	r5, [pc, #96]	@ (9000b7b0 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b74e:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b752:	4c18      	ldr	r4, [pc, #96]	@ (9000b7b4 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b754:	5c08      	ldrb	r0, [r1, r0]
9000b756:	f000 001f 	and.w	r0, r0, #31
9000b75a:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b75c:	6990      	ldr	r0, [r2, #24]
9000b75e:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b762:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b764:	5c08      	ldrb	r0, [r1, r0]
9000b766:	f000 001f 	and.w	r0, r0, #31
9000b76a:	40c3      	lsrs	r3, r0
9000b76c:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000b76e:	69d2      	ldr	r2, [r2, #28]
9000b770:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000b774:	5c88      	ldrb	r0, [r1, r2]
9000b776:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000b77a:	fa23 f000 	lsr.w	r0, r3, r0
9000b77e:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b780:	4b0d      	ldr	r3, [pc, #52]	@ (9000b7b8 <HAL_RCC_GetPCLK1Freq+0x88>)
9000b782:	e7e0      	b.n	9000b746 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b784:	6813      	ldr	r3, [r2, #0]
9000b786:	069b      	lsls	r3, r3, #26
9000b788:	d509      	bpl.n	9000b79e <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b78a:	6812      	ldr	r2, [r2, #0]
9000b78c:	4b0b      	ldr	r3, [pc, #44]	@ (9000b7bc <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b78e:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b792:	40d3      	lsrs	r3, r2
9000b794:	e7d7      	b.n	9000b746 <HAL_RCC_GetPCLK1Freq+0x16>
9000b796:	f7ff faaf 	bl	9000acf8 <HAL_RCC_GetSysClockFreq.part.0>
9000b79a:	4603      	mov	r3, r0
9000b79c:	e7d3      	b.n	9000b746 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b79e:	4b07      	ldr	r3, [pc, #28]	@ (9000b7bc <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b7a0:	e7d1      	b.n	9000b746 <HAL_RCC_GetPCLK1Freq+0x16>
9000b7a2:	bf00      	nop
9000b7a4:	58024400 	.word	0x58024400
9000b7a8:	003d0900 	.word	0x003d0900
9000b7ac:	9002a1a8 	.word	0x9002a1a8
9000b7b0:	24000078 	.word	0x24000078
9000b7b4:	24000074 	.word	0x24000074
9000b7b8:	017d7840 	.word	0x017d7840
9000b7bc:	03d09000 	.word	0x03d09000

9000b7c0 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b7c0:	4a1c      	ldr	r2, [pc, #112]	@ (9000b834 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b7c2:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b7c4:	6913      	ldr	r3, [r2, #16]
9000b7c6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b7ca:	2b10      	cmp	r3, #16
9000b7cc:	d020      	beq.n	9000b810 <HAL_RCC_GetPCLK2Freq+0x50>
9000b7ce:	2b18      	cmp	r3, #24
9000b7d0:	d029      	beq.n	9000b826 <HAL_RCC_GetPCLK2Freq+0x66>
9000b7d2:	b1fb      	cbz	r3, 9000b814 <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000b7d4:	4b18      	ldr	r3, [pc, #96]	@ (9000b838 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b7d6:	4a17      	ldr	r2, [pc, #92]	@ (9000b834 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b7d8:	4918      	ldr	r1, [pc, #96]	@ (9000b83c <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b7da:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b7dc:	4d18      	ldr	r5, [pc, #96]	@ (9000b840 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b7de:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b7e2:	4c18      	ldr	r4, [pc, #96]	@ (9000b844 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b7e4:	5c08      	ldrb	r0, [r1, r0]
9000b7e6:	f000 001f 	and.w	r0, r0, #31
9000b7ea:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b7ec:	6990      	ldr	r0, [r2, #24]
9000b7ee:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b7f2:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b7f4:	5c08      	ldrb	r0, [r1, r0]
9000b7f6:	f000 001f 	and.w	r0, r0, #31
9000b7fa:	40c3      	lsrs	r3, r0
9000b7fc:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b7fe:	69d2      	ldr	r2, [r2, #28]
9000b800:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b804:	5c88      	ldrb	r0, [r1, r2]
9000b806:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b80a:	fa23 f000 	lsr.w	r0, r3, r0
9000b80e:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b810:	4b0d      	ldr	r3, [pc, #52]	@ (9000b848 <HAL_RCC_GetPCLK2Freq+0x88>)
9000b812:	e7e0      	b.n	9000b7d6 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b814:	6813      	ldr	r3, [r2, #0]
9000b816:	069b      	lsls	r3, r3, #26
9000b818:	d509      	bpl.n	9000b82e <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b81a:	6812      	ldr	r2, [r2, #0]
9000b81c:	4b0b      	ldr	r3, [pc, #44]	@ (9000b84c <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b81e:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b822:	40d3      	lsrs	r3, r2
9000b824:	e7d7      	b.n	9000b7d6 <HAL_RCC_GetPCLK2Freq+0x16>
9000b826:	f7ff fa67 	bl	9000acf8 <HAL_RCC_GetSysClockFreq.part.0>
9000b82a:	4603      	mov	r3, r0
9000b82c:	e7d3      	b.n	9000b7d6 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b82e:	4b07      	ldr	r3, [pc, #28]	@ (9000b84c <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b830:	e7d1      	b.n	9000b7d6 <HAL_RCC_GetPCLK2Freq+0x16>
9000b832:	bf00      	nop
9000b834:	58024400 	.word	0x58024400
9000b838:	003d0900 	.word	0x003d0900
9000b83c:	9002a1a8 	.word	0x9002a1a8
9000b840:	24000078 	.word	0x24000078
9000b844:	24000074 	.word	0x24000074
9000b848:	017d7840 	.word	0x017d7840
9000b84c:	03d09000 	.word	0x03d09000

9000b850 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b850:	4b13      	ldr	r3, [pc, #76]	@ (9000b8a0 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b852:	223f      	movs	r2, #63	@ 0x3f
9000b854:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b856:	691a      	ldr	r2, [r3, #16]
9000b858:	f002 0207 	and.w	r2, r2, #7
9000b85c:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b85e:	699a      	ldr	r2, [r3, #24]
9000b860:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000b864:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b866:	699a      	ldr	r2, [r3, #24]
9000b868:	f002 020f 	and.w	r2, r2, #15
9000b86c:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b86e:	699a      	ldr	r2, [r3, #24]
9000b870:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b874:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b876:	69da      	ldr	r2, [r3, #28]
9000b878:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b87c:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b87e:	69da      	ldr	r2, [r3, #28]
9000b880:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b884:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b886:	6a1b      	ldr	r3, [r3, #32]
{
9000b888:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b88a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b88e:	4c05      	ldr	r4, [pc, #20]	@ (9000b8a4 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b890:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b892:	6823      	ldr	r3, [r4, #0]
}
9000b894:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b898:	f003 030f 	and.w	r3, r3, #15
9000b89c:	600b      	str	r3, [r1, #0]
}
9000b89e:	4770      	bx	lr
9000b8a0:	58024400 	.word	0x58024400
9000b8a4:	52002000 	.word	0x52002000

9000b8a8 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b8a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b8aa:	4c36      	ldr	r4, [pc, #216]	@ (9000b984 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b8ac:	4606      	mov	r6, r0
9000b8ae:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000b8b0:	6823      	ldr	r3, [r4, #0]
9000b8b2:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000b8b6:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b8b8:	f7fc f8f6 	bl	90007aa8 <HAL_GetTick>
9000b8bc:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b8be:	e004      	b.n	9000b8ca <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b8c0:	f7fc f8f2 	bl	90007aa8 <HAL_GetTick>
9000b8c4:	1b40      	subs	r0, r0, r5
9000b8c6:	2802      	cmp	r0, #2
9000b8c8:	d856      	bhi.n	9000b978 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b8ca:	6823      	ldr	r3, [r4, #0]
9000b8cc:	011a      	lsls	r2, r3, #4
9000b8ce:	d4f7      	bmi.n	9000b8c0 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b8d0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b8d2:	6832      	ldr	r2, [r6, #0]
9000b8d4:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b8d8:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b8dc:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b8de:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b8e2:	3b01      	subs	r3, #1
9000b8e4:	3a01      	subs	r2, #1
9000b8e6:	025b      	lsls	r3, r3, #9
9000b8e8:	0412      	lsls	r2, r2, #16
9000b8ea:	b29b      	uxth	r3, r3
9000b8ec:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b8f0:	4313      	orrs	r3, r2
9000b8f2:	6872      	ldr	r2, [r6, #4]
9000b8f4:	3a01      	subs	r2, #1
9000b8f6:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b8fa:	4313      	orrs	r3, r2
9000b8fc:	6932      	ldr	r2, [r6, #16]
9000b8fe:	3a01      	subs	r2, #1
9000b900:	0612      	lsls	r2, r2, #24
9000b902:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b906:	4313      	orrs	r3, r2
9000b908:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b90a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b90c:	6972      	ldr	r2, [r6, #20]
9000b90e:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000b912:	4313      	orrs	r3, r2
9000b914:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b916:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b918:	69b3      	ldr	r3, [r6, #24]
9000b91a:	f022 0220 	bic.w	r2, r2, #32
9000b91e:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b920:	4b19      	ldr	r3, [pc, #100]	@ (9000b988 <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b922:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b924:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b926:	f022 0210 	bic.w	r2, r2, #16
9000b92a:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b92c:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000b92e:	69f2      	ldr	r2, [r6, #28]
9000b930:	400b      	ands	r3, r1
9000b932:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b936:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b938:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b93a:	f043 0310 	orr.w	r3, r3, #16
9000b93e:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b940:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b942:	b1df      	cbz	r7, 9000b97c <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b944:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000b946:	bf0c      	ite	eq
9000b948:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000b94c:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000b950:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000b952:	4c0c      	ldr	r4, [pc, #48]	@ (9000b984 <RCCEx_PLL2_Config.part.0+0xdc>)
9000b954:	6823      	ldr	r3, [r4, #0]
9000b956:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000b95a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b95c:	f7fc f8a4 	bl	90007aa8 <HAL_GetTick>
9000b960:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b962:	e004      	b.n	9000b96e <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b964:	f7fc f8a0 	bl	90007aa8 <HAL_GetTick>
9000b968:	1b40      	subs	r0, r0, r5
9000b96a:	2802      	cmp	r0, #2
9000b96c:	d804      	bhi.n	9000b978 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b96e:	6823      	ldr	r3, [r4, #0]
9000b970:	011b      	lsls	r3, r3, #4
9000b972:	d5f7      	bpl.n	9000b964 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000b974:	2000      	movs	r0, #0
}
9000b976:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b978:	2003      	movs	r0, #3
}
9000b97a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b97c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000b980:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b982:	e7e6      	b.n	9000b952 <RCCEx_PLL2_Config.part.0+0xaa>
9000b984:	58024400 	.word	0x58024400
9000b988:	ffff0007 	.word	0xffff0007

9000b98c <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b98c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000b98e:	4c36      	ldr	r4, [pc, #216]	@ (9000ba68 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b990:	4606      	mov	r6, r0
9000b992:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000b994:	6823      	ldr	r3, [r4, #0]
9000b996:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000b99a:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b99c:	f7fc f884 	bl	90007aa8 <HAL_GetTick>
9000b9a0:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b9a2:	e004      	b.n	9000b9ae <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b9a4:	f7fc f880 	bl	90007aa8 <HAL_GetTick>
9000b9a8:	1b40      	subs	r0, r0, r5
9000b9aa:	2802      	cmp	r0, #2
9000b9ac:	d856      	bhi.n	9000ba5c <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b9ae:	6823      	ldr	r3, [r4, #0]
9000b9b0:	009a      	lsls	r2, r3, #2
9000b9b2:	d4f7      	bmi.n	9000b9a4 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000b9b4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b9b6:	6832      	ldr	r2, [r6, #0]
9000b9b8:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000b9bc:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000b9c0:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b9c2:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b9c6:	3b01      	subs	r3, #1
9000b9c8:	3a01      	subs	r2, #1
9000b9ca:	025b      	lsls	r3, r3, #9
9000b9cc:	0412      	lsls	r2, r2, #16
9000b9ce:	b29b      	uxth	r3, r3
9000b9d0:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b9d4:	4313      	orrs	r3, r2
9000b9d6:	6872      	ldr	r2, [r6, #4]
9000b9d8:	3a01      	subs	r2, #1
9000b9da:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b9de:	4313      	orrs	r3, r2
9000b9e0:	6932      	ldr	r2, [r6, #16]
9000b9e2:	3a01      	subs	r2, #1
9000b9e4:	0612      	lsls	r2, r2, #24
9000b9e6:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b9ea:	4313      	orrs	r3, r2
9000b9ec:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000b9ee:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b9f0:	6972      	ldr	r2, [r6, #20]
9000b9f2:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000b9f6:	4313      	orrs	r3, r2
9000b9f8:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b9fa:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000b9fc:	69b3      	ldr	r3, [r6, #24]
9000b9fe:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000ba02:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000ba04:	4b19      	ldr	r3, [pc, #100]	@ (9000ba6c <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000ba06:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000ba08:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ba0a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000ba0e:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000ba10:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000ba12:	69f2      	ldr	r2, [r6, #28]
9000ba14:	400b      	ands	r3, r1
9000ba16:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000ba1a:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000ba1c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ba1e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000ba22:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000ba24:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000ba26:	b1df      	cbz	r7, 9000ba60 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000ba28:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000ba2a:	bf0c      	ite	eq
9000ba2c:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000ba30:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000ba34:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000ba36:	4c0c      	ldr	r4, [pc, #48]	@ (9000ba68 <RCCEx_PLL3_Config.part.0+0xdc>)
9000ba38:	6823      	ldr	r3, [r4, #0]
9000ba3a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000ba3e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ba40:	f7fc f832 	bl	90007aa8 <HAL_GetTick>
9000ba44:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000ba46:	e004      	b.n	9000ba52 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000ba48:	f7fc f82e 	bl	90007aa8 <HAL_GetTick>
9000ba4c:	1b40      	subs	r0, r0, r5
9000ba4e:	2802      	cmp	r0, #2
9000ba50:	d804      	bhi.n	9000ba5c <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000ba52:	6823      	ldr	r3, [r4, #0]
9000ba54:	009b      	lsls	r3, r3, #2
9000ba56:	d5f7      	bpl.n	9000ba48 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000ba58:	2000      	movs	r0, #0
}
9000ba5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000ba5c:	2003      	movs	r0, #3
}
9000ba5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000ba60:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000ba64:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000ba66:	e7e6      	b.n	9000ba36 <RCCEx_PLL3_Config.part.0+0xaa>
9000ba68:	58024400 	.word	0x58024400
9000ba6c:	ffff0007 	.word	0xffff0007

9000ba70 <HAL_RCCEx_PeriphCLKConfig>:
{
9000ba70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000ba74:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000ba78:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000ba7a:	011d      	lsls	r5, r3, #4
9000ba7c:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000ba80:	d525      	bpl.n	9000bace <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000ba82:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000ba84:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000ba88:	f000 8660 	beq.w	9000c74c <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000ba8c:	d814      	bhi.n	9000bab8 <HAL_RCCEx_PeriphCLKConfig+0x48>
9000ba8e:	2900      	cmp	r1, #0
9000ba90:	f000 86fa 	beq.w	9000c888 <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000ba94:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000ba98:	f040 8466 	bne.w	9000c368 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba9c:	49ad      	ldr	r1, [pc, #692]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000ba9e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000baa0:	f001 0103 	and.w	r1, r1, #3
9000baa4:	2903      	cmp	r1, #3
9000baa6:	f000 845f 	beq.w	9000c368 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000baaa:	2102      	movs	r1, #2
9000baac:	3008      	adds	r0, #8
9000baae:	f7ff fefb 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bab2:	4606      	mov	r6, r0
        break;
9000bab4:	f000 be56 	b.w	9000c764 <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000bab8:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000babc:	f040 8454 	bne.w	9000c368 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bac0:	4da4      	ldr	r5, [pc, #656]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000bac2:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bac4:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000bac6:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000baca:	4301      	orrs	r1, r0
9000bacc:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000bace:	05d8      	lsls	r0, r3, #23
9000bad0:	d50a      	bpl.n	9000bae8 <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000bad2:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000bad4:	2904      	cmp	r1, #4
9000bad6:	d806      	bhi.n	9000bae6 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000bad8:	e8df f011 	tbh	[pc, r1, lsl #1]
9000badc:	064c04a8 	.word	0x064c04a8
9000bae0:	04ad0661 	.word	0x04ad0661
9000bae4:	04ad      	.short	0x04ad
9000bae6:	2601      	movs	r6, #1
9000bae8:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000baea:	0599      	lsls	r1, r3, #22
9000baec:	d524      	bpl.n	9000bb38 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000baee:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000baf0:	2980      	cmp	r1, #128	@ 0x80
9000baf2:	f000 8664 	beq.w	9000c7be <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000baf6:	f200 8122 	bhi.w	9000bd3e <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000bafa:	2900      	cmp	r1, #0
9000bafc:	f000 84ac 	beq.w	9000c458 <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000bb00:	2940      	cmp	r1, #64	@ 0x40
9000bb02:	f040 8123 	bne.w	9000bd4c <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb06:	4993      	ldr	r1, [pc, #588]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bb08:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb0a:	f001 0103 	and.w	r1, r1, #3
9000bb0e:	2903      	cmp	r1, #3
9000bb10:	f000 811c 	beq.w	9000bd4c <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000bb14:	2100      	movs	r1, #0
9000bb16:	f104 0008 	add.w	r0, r4, #8
9000bb1a:	f7ff fec5 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bb1e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bb20:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb24:	2d00      	cmp	r5, #0
9000bb26:	f040 851b 	bne.w	9000c560 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000bb2a:	4f8a      	ldr	r7, [pc, #552]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bb2c:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000bb2e:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bb30:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000bb34:	4301      	orrs	r1, r0
9000bb36:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bb38:	055f      	lsls	r7, r3, #21
9000bb3a:	d528      	bpl.n	9000bb8e <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000bb3c:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000bb40:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000bb44:	f000 864f 	beq.w	9000c7e6 <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000bb48:	f200 8106 	bhi.w	9000bd58 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000bb4c:	2900      	cmp	r1, #0
9000bb4e:	f000 8463 	beq.w	9000c418 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000bb52:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000bb56:	f040 8107 	bne.w	9000bd68 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb5a:	497e      	ldr	r1, [pc, #504]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bb5c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb5e:	f001 0103 	and.w	r1, r1, #3
9000bb62:	2903      	cmp	r1, #3
9000bb64:	f000 8100 	beq.w	9000bd68 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000bb68:	2100      	movs	r1, #0
9000bb6a:	f104 0008 	add.w	r0, r4, #8
9000bb6e:	f7ff fe9b 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bb72:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bb74:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb78:	2d00      	cmp	r5, #0
9000bb7a:	f040 84f4 	bne.w	9000c566 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000bb7e:	4f75      	ldr	r7, [pc, #468]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bb80:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000bb84:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bb86:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000bb8a:	4301      	orrs	r1, r0
9000bb8c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bb8e:	0518      	lsls	r0, r3, #20
9000bb90:	d528      	bpl.n	9000bbe4 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000bb92:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000bb96:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000bb9a:	f000 85ac 	beq.w	9000c6f6 <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000bb9e:	f200 80e6 	bhi.w	9000bd6e <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000bba2:	2900      	cmp	r1, #0
9000bba4:	f000 8425 	beq.w	9000c3f2 <HAL_RCCEx_PeriphCLKConfig+0x982>
9000bba8:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000bbac:	f040 80e7 	bne.w	9000bd7e <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bbb0:	4968      	ldr	r1, [pc, #416]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bbb2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bbb4:	f001 0103 	and.w	r1, r1, #3
9000bbb8:	2903      	cmp	r1, #3
9000bbba:	f000 80e0 	beq.w	9000bd7e <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000bbbe:	2100      	movs	r1, #0
9000bbc0:	f104 0008 	add.w	r0, r4, #8
9000bbc4:	f7ff fe70 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bbc8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bbca:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bbce:	2d00      	cmp	r5, #0
9000bbd0:	f040 84cc 	bne.w	9000c56c <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000bbd4:	4f5f      	ldr	r7, [pc, #380]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bbd6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000bbda:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bbdc:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000bbe0:	4301      	orrs	r1, r0
9000bbe2:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bbe4:	0199      	lsls	r1, r3, #6
9000bbe6:	d518      	bpl.n	9000bc1a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000bbe8:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000bbea:	2920      	cmp	r1, #32
9000bbec:	f000 84ff 	beq.w	9000c5ee <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000bbf0:	f200 80c8 	bhi.w	9000bd84 <HAL_RCCEx_PeriphCLKConfig+0x314>
9000bbf4:	b139      	cbz	r1, 9000bc06 <HAL_RCCEx_PeriphCLKConfig+0x196>
9000bbf6:	2910      	cmp	r1, #16
9000bbf8:	f040 80c7 	bne.w	9000bd8a <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bbfc:	4855      	ldr	r0, [pc, #340]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bbfe:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bc00:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bc04:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bc06:	2d00      	cmp	r5, #0
9000bc08:	f040 849f 	bne.w	9000c54a <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000bc0c:	4f51      	ldr	r7, [pc, #324]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bc0e:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000bc10:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000bc12:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000bc16:	4301      	orrs	r1, r0
9000bc18:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000bc1a:	04df      	lsls	r7, r3, #19
9000bc1c:	d526      	bpl.n	9000bc6c <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000bc1e:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000bc20:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000bc24:	f000 857b 	beq.w	9000c71e <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000bc28:	f200 80b2 	bhi.w	9000bd90 <HAL_RCCEx_PeriphCLKConfig+0x320>
9000bc2c:	2900      	cmp	r1, #0
9000bc2e:	f000 83ea 	beq.w	9000c406 <HAL_RCCEx_PeriphCLKConfig+0x996>
9000bc32:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000bc36:	f040 80b3 	bne.w	9000bda0 <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc3a:	4946      	ldr	r1, [pc, #280]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bc3c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc3e:	f001 0103 	and.w	r1, r1, #3
9000bc42:	2903      	cmp	r1, #3
9000bc44:	f000 80ac 	beq.w	9000bda0 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000bc48:	2100      	movs	r1, #0
9000bc4a:	f104 0008 	add.w	r0, r4, #8
9000bc4e:	f7ff fe2b 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bc52:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bc54:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc58:	2d00      	cmp	r5, #0
9000bc5a:	f040 848a 	bne.w	9000c572 <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000bc5e:	4f3d      	ldr	r7, [pc, #244]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bc60:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000bc62:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bc64:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000bc68:	4301      	orrs	r1, r0
9000bc6a:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bc6c:	0498      	lsls	r0, r3, #18
9000bc6e:	d524      	bpl.n	9000bcba <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bc70:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000bc72:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000bc76:	f000 8516 	beq.w	9000c6a6 <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000bc7a:	f200 8094 	bhi.w	9000bda6 <HAL_RCCEx_PeriphCLKConfig+0x336>
9000bc7e:	b191      	cbz	r1, 9000bca6 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000bc80:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000bc84:	f040 8099 	bne.w	9000bdba <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc88:	4932      	ldr	r1, [pc, #200]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bc8a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc8c:	f001 0103 	and.w	r1, r1, #3
9000bc90:	2903      	cmp	r1, #3
9000bc92:	f000 8092 	beq.w	9000bdba <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000bc96:	2101      	movs	r1, #1
9000bc98:	f104 0008 	add.w	r0, r4, #8
9000bc9c:	f7ff fe04 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bca0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bca2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bca6:	2d00      	cmp	r5, #0
9000bca8:	f040 8476 	bne.w	9000c598 <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000bcac:	4f29      	ldr	r7, [pc, #164]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bcae:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000bcb0:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bcb2:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000bcb6:	4301      	orrs	r1, r0
9000bcb8:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bcba:	0459      	lsls	r1, r3, #17
9000bcbc:	d523      	bpl.n	9000bd06 <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000bcbe:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000bcc2:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000bcc6:	f000 8502 	beq.w	9000c6ce <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000bcca:	d879      	bhi.n	9000bdc0 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000bccc:	b181      	cbz	r1, 9000bcf0 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000bcce:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000bcd2:	d17d      	bne.n	9000bdd0 <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bcd4:	491f      	ldr	r1, [pc, #124]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bcd6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bcd8:	f001 0103 	and.w	r1, r1, #3
9000bcdc:	2903      	cmp	r1, #3
9000bcde:	d077      	beq.n	9000bdd0 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000bce0:	2101      	movs	r1, #1
9000bce2:	f104 0008 	add.w	r0, r4, #8
9000bce6:	f7ff fddf 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bcea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000bcec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bcf0:	2d00      	cmp	r5, #0
9000bcf2:	f040 8454 	bne.w	9000c59e <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000bcf6:	4f17      	ldr	r7, [pc, #92]	@ (9000bd54 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000bcf8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000bcfc:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bcfe:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000bd02:	4301      	orrs	r1, r0
9000bd04:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000bd06:	041f      	lsls	r7, r3, #16
9000bd08:	d50d      	bpl.n	9000bd26 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000bd0a:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000bd0c:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000bd10:	f000 82e2 	beq.w	9000c2d8 <HAL_RCCEx_PeriphCLKConfig+0x868>
9000bd14:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000bd18:	f000 83f0 	beq.w	9000c4fc <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000bd1c:	2900      	cmp	r1, #0
9000bd1e:	f000 82e0 	beq.w	9000c2e2 <HAL_RCCEx_PeriphCLKConfig+0x872>
9000bd22:	2601      	movs	r6, #1
9000bd24:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000bd26:	01d8      	lsls	r0, r3, #7
9000bd28:	d55e      	bpl.n	9000bde8 <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000bd2a:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000bd2c:	2903      	cmp	r1, #3
9000bd2e:	f200 85cd 	bhi.w	9000c8cc <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000bd32:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bd36:	0055      	.short	0x0055
9000bd38:	04930050 	.word	0x04930050
9000bd3c:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000bd3e:	29c0      	cmp	r1, #192	@ 0xc0
9000bd40:	f43f aef0 	beq.w	9000bb24 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000bd44:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000bd48:	f43f aeec 	beq.w	9000bb24 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000bd4c:	2601      	movs	r6, #1
9000bd4e:	4635      	mov	r5, r6
9000bd50:	e6f2      	b.n	9000bb38 <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000bd52:	bf00      	nop
9000bd54:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000bd58:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000bd5c:	f43f af0c 	beq.w	9000bb78 <HAL_RCCEx_PeriphCLKConfig+0x108>
9000bd60:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000bd64:	f43f af08 	beq.w	9000bb78 <HAL_RCCEx_PeriphCLKConfig+0x108>
9000bd68:	2601      	movs	r6, #1
9000bd6a:	4635      	mov	r5, r6
9000bd6c:	e70f      	b.n	9000bb8e <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000bd6e:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000bd72:	f43f af2c 	beq.w	9000bbce <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000bd76:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000bd7a:	f43f af28 	beq.w	9000bbce <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000bd7e:	2601      	movs	r6, #1
9000bd80:	4635      	mov	r5, r6
9000bd82:	e72f      	b.n	9000bbe4 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000bd84:	2930      	cmp	r1, #48	@ 0x30
9000bd86:	f43f af3e 	beq.w	9000bc06 <HAL_RCCEx_PeriphCLKConfig+0x196>
9000bd8a:	2601      	movs	r6, #1
9000bd8c:	4635      	mov	r5, r6
9000bd8e:	e744      	b.n	9000bc1a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000bd90:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000bd94:	f43f af60 	beq.w	9000bc58 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000bd98:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000bd9c:	f43f af5c 	beq.w	9000bc58 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000bda0:	2601      	movs	r6, #1
9000bda2:	4635      	mov	r5, r6
9000bda4:	e762      	b.n	9000bc6c <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bda6:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000bdaa:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000bdae:	f43f af7a 	beq.w	9000bca6 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000bdb2:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000bdb6:	f43f af76 	beq.w	9000bca6 <HAL_RCCEx_PeriphCLKConfig+0x236>
9000bdba:	2601      	movs	r6, #1
9000bdbc:	4635      	mov	r5, r6
9000bdbe:	e77c      	b.n	9000bcba <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000bdc0:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000bdc4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000bdc8:	d092      	beq.n	9000bcf0 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000bdca:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000bdce:	d08f      	beq.n	9000bcf0 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000bdd0:	2601      	movs	r6, #1
9000bdd2:	4635      	mov	r5, r6
9000bdd4:	e797      	b.n	9000bd06 <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bdd6:	4837      	ldr	r0, [pc, #220]	@ (9000beb4 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000bdd8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bdda:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bdde:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bde0:	2d00      	cmp	r5, #0
9000bde2:	f000 83b5 	beq.w	9000c550 <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000bde6:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000bde8:	0259      	lsls	r1, r3, #9
9000bdea:	f100 82c0 	bmi.w	9000c36e <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bdee:	07df      	lsls	r7, r3, #31
9000bdf0:	d52f      	bpl.n	9000be52 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000bdf2:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000bdf4:	2928      	cmp	r1, #40	@ 0x28
9000bdf6:	d82a      	bhi.n	9000be4e <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000bdf8:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bdfc:	002902ab 	.word	0x002902ab
9000be00:	00290029 	.word	0x00290029
9000be04:	00290029 	.word	0x00290029
9000be08:	00290029 	.word	0x00290029
9000be0c:	0029029c 	.word	0x0029029c
9000be10:	00290029 	.word	0x00290029
9000be14:	00290029 	.word	0x00290029
9000be18:	00290029 	.word	0x00290029
9000be1c:	0029052d 	.word	0x0029052d
9000be20:	00290029 	.word	0x00290029
9000be24:	00290029 	.word	0x00290029
9000be28:	00290029 	.word	0x00290029
9000be2c:	002902ab 	.word	0x002902ab
9000be30:	00290029 	.word	0x00290029
9000be34:	00290029 	.word	0x00290029
9000be38:	00290029 	.word	0x00290029
9000be3c:	002902ab 	.word	0x002902ab
9000be40:	00290029 	.word	0x00290029
9000be44:	00290029 	.word	0x00290029
9000be48:	00290029 	.word	0x00290029
9000be4c:	02ab      	.short	0x02ab
9000be4e:	2601      	movs	r6, #1
9000be50:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000be52:	0798      	lsls	r0, r3, #30
9000be54:	d51e      	bpl.n	9000be94 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000be56:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000be58:	2905      	cmp	r1, #5
9000be5a:	f200 851c 	bhi.w	9000c896 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000be5e:	e8df f011 	tbh	[pc, r1, lsl #1]
9000be62:	0015      	.short	0x0015
9000be64:	04e80006 	.word	0x04e80006
9000be68:	00150015 	.word	0x00150015
9000be6c:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be6e:	4911      	ldr	r1, [pc, #68]	@ (9000beb4 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000be70:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be72:	f001 0103 	and.w	r1, r1, #3
9000be76:	2903      	cmp	r1, #3
9000be78:	f000 850d 	beq.w	9000c896 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000be7c:	2101      	movs	r1, #1
9000be7e:	f104 0008 	add.w	r0, r4, #8
9000be82:	f7ff fd11 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000be86:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000be88:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be8c:	2d00      	cmp	r5, #0
9000be8e:	f000 837b 	beq.w	9000c588 <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000be92:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000be94:	0759      	lsls	r1, r3, #29
9000be96:	d522      	bpl.n	9000bede <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000be98:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000be9c:	2905      	cmp	r1, #5
9000be9e:	f200 84fe 	bhi.w	9000c89e <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000bea2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bea6:	0018      	.short	0x0018
9000bea8:	04b40009 	.word	0x04b40009
9000beac:	00180018 	.word	0x00180018
9000beb0:	0018      	.short	0x0018
9000beb2:	bf00      	nop
9000beb4:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000beb8:	49b0      	ldr	r1, [pc, #704]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000beba:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bebc:	f001 0103 	and.w	r1, r1, #3
9000bec0:	2903      	cmp	r1, #3
9000bec2:	f000 84ec 	beq.w	9000c89e <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000bec6:	2101      	movs	r1, #1
9000bec8:	f104 0008 	add.w	r0, r4, #8
9000becc:	f7ff fcec 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bed0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bed2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bed6:	2d00      	cmp	r5, #0
9000bed8:	f000 8364 	beq.w	9000c5a4 <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000bedc:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bede:	069f      	lsls	r7, r3, #26
9000bee0:	d526      	bpl.n	9000bf30 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bee2:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000bee6:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000beea:	f000 836e 	beq.w	9000c5ca <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000beee:	f200 8194 	bhi.w	9000c21a <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000bef2:	b191      	cbz	r1, 9000bf1a <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000bef4:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000bef8:	f040 8199 	bne.w	9000c22e <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000befc:	499f      	ldr	r1, [pc, #636]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000befe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf00:	f001 0103 	and.w	r1, r1, #3
9000bf04:	2903      	cmp	r1, #3
9000bf06:	f000 8192 	beq.w	9000c22e <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000bf0a:	2100      	movs	r1, #0
9000bf0c:	f104 0008 	add.w	r0, r4, #8
9000bf10:	f7ff fcca 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bf14:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bf16:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf1a:	2d00      	cmp	r5, #0
9000bf1c:	f040 834b 	bne.w	9000c5b6 <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000bf20:	4f96      	ldr	r7, [pc, #600]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bf22:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000bf26:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bf28:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000bf2c:	4301      	orrs	r1, r0
9000bf2e:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bf30:	0658      	lsls	r0, r3, #25
9000bf32:	d526      	bpl.n	9000bf82 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000bf34:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000bf38:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000bf3c:	f000 83a1 	beq.w	9000c682 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000bf40:	f200 8178 	bhi.w	9000c234 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000bf44:	b191      	cbz	r1, 9000bf6c <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000bf46:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000bf4a:	f040 817d 	bne.w	9000c248 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf4e:	498b      	ldr	r1, [pc, #556]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bf50:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf52:	f001 0103 	and.w	r1, r1, #3
9000bf56:	2903      	cmp	r1, #3
9000bf58:	f000 8176 	beq.w	9000c248 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000bf5c:	2100      	movs	r1, #0
9000bf5e:	f104 0008 	add.w	r0, r4, #8
9000bf62:	f7ff fca1 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bf66:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bf68:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf6c:	2d00      	cmp	r5, #0
9000bf6e:	f040 8328 	bne.w	9000c5c2 <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000bf72:	4f82      	ldr	r7, [pc, #520]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bf74:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000bf78:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bf7a:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000bf7e:	4301      	orrs	r1, r0
9000bf80:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bf82:	0619      	lsls	r1, r3, #24
9000bf84:	d526      	bpl.n	9000bfd4 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000bf86:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000bf8a:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000bf8e:	f000 8353 	beq.w	9000c638 <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000bf92:	f200 815c 	bhi.w	9000c24e <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000bf96:	b191      	cbz	r1, 9000bfbe <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000bf98:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000bf9c:	f040 8161 	bne.w	9000c262 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bfa0:	4976      	ldr	r1, [pc, #472]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bfa2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bfa4:	f001 0103 	and.w	r1, r1, #3
9000bfa8:	2903      	cmp	r1, #3
9000bfaa:	f000 815a 	beq.w	9000c262 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000bfae:	2100      	movs	r1, #0
9000bfb0:	f104 0008 	add.w	r0, r4, #8
9000bfb4:	f7ff fc78 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000bfb8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bfba:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfbe:	2d00      	cmp	r5, #0
9000bfc0:	f040 82fb 	bne.w	9000c5ba <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000bfc4:	4f6d      	ldr	r7, [pc, #436]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bfc6:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000bfca:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bfcc:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000bfd0:	4301      	orrs	r1, r0
9000bfd2:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bfd4:	071f      	lsls	r7, r3, #28
9000bfd6:	d50b      	bpl.n	9000bff0 <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000bfd8:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000bfdc:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000bfe0:	f000 8250 	beq.w	9000c484 <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000bfe4:	4f65      	ldr	r7, [pc, #404]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000bfe6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bfe8:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000bfec:	4301      	orrs	r1, r0
9000bfee:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000bff0:	06d8      	lsls	r0, r3, #27
9000bff2:	d50b      	bpl.n	9000c00c <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000bff4:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000bff8:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000bffc:	f000 8257 	beq.w	9000c4ae <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c000:	4f5e      	ldr	r7, [pc, #376]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c002:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c004:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000c008:	4301      	orrs	r1, r0
9000c00a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c00c:	0319      	lsls	r1, r3, #12
9000c00e:	d50e      	bpl.n	9000c02e <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000c010:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000c014:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c018:	f000 816e 	beq.w	9000c2f8 <HAL_RCCEx_PeriphCLKConfig+0x888>
9000c01c:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000c020:	f000 8179 	beq.w	9000c316 <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000c024:	2900      	cmp	r1, #0
9000c026:	f000 827a 	beq.w	9000c51e <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000c02a:	2601      	movs	r6, #1
9000c02c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c02e:	035f      	lsls	r7, r3, #13
9000c030:	d50f      	bpl.n	9000c052 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000c032:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000c036:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000c03a:	f000 82eb 	beq.w	9000c614 <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000c03e:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c042:	f000 813d 	beq.w	9000c2c0 <HAL_RCCEx_PeriphCLKConfig+0x850>
9000c046:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000c04a:	f000 8134 	beq.w	9000c2b6 <HAL_RCCEx_PeriphCLKConfig+0x846>
9000c04e:	2601      	movs	r6, #1
9000c050:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c052:	03d8      	lsls	r0, r3, #15
9000c054:	d520      	bpl.n	9000c098 <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000c056:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000c058:	2900      	cmp	r1, #0
9000c05a:	f000 8245 	beq.w	9000c4e8 <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000c05e:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000c062:	f040 8125 	bne.w	9000c2b0 <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c066:	4945      	ldr	r1, [pc, #276]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c068:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c06a:	f001 0103 	and.w	r1, r1, #3
9000c06e:	2903      	cmp	r1, #3
9000c070:	f000 811e 	beq.w	9000c2b0 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000c074:	2102      	movs	r1, #2
9000c076:	f104 0008 	add.w	r0, r4, #8
9000c07a:	f7ff fc15 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000c07e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c080:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c084:	2d00      	cmp	r5, #0
9000c086:	f040 8237 	bne.w	9000c4f8 <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000c08a:	4f3c      	ldr	r7, [pc, #240]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c08c:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000c08e:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c090:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000c094:	4301      	orrs	r1, r0
9000c096:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c098:	0099      	lsls	r1, r3, #2
9000c09a:	d50e      	bpl.n	9000c0ba <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c09c:	4937      	ldr	r1, [pc, #220]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c09e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c0a0:	f001 0103 	and.w	r1, r1, #3
9000c0a4:	2903      	cmp	r1, #3
9000c0a6:	d007      	beq.n	9000c0b8 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000c0a8:	2102      	movs	r1, #2
9000c0aa:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c0ae:	f7ff fc6d 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c0b2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c0b6:	b100      	cbz	r0, 9000c0ba <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000c0b8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c0ba:	039f      	lsls	r7, r3, #14
9000c0bc:	f140 80e0 	bpl.w	9000c280 <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000c0c0:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000c0c4:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000c0c8:	f000 8205 	beq.w	9000c4d6 <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000c0cc:	f240 80cc 	bls.w	9000c268 <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000c0d0:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000c0d4:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000c0d8:	f000 80c9 	beq.w	9000c26e <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000c0dc:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000c0de:	02d8      	lsls	r0, r3, #11
9000c0e0:	d506      	bpl.n	9000c0f0 <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000c0e2:	4826      	ldr	r0, [pc, #152]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c0e4:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000c0e6:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c0e8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000c0ec:	4331      	orrs	r1, r6
9000c0ee:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000c0f0:	00d9      	lsls	r1, r3, #3
9000c0f2:	d507      	bpl.n	9000c104 <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000c0f4:	4821      	ldr	r0, [pc, #132]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c0f6:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000c0fa:	6901      	ldr	r1, [r0, #16]
9000c0fc:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000c100:	4331      	orrs	r1, r6
9000c102:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000c104:	029f      	lsls	r7, r3, #10
9000c106:	d506      	bpl.n	9000c116 <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000c108:	481c      	ldr	r0, [pc, #112]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c10a:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000c10c:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000c10e:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000c112:	4331      	orrs	r1, r6
9000c114:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000c116:	005e      	lsls	r6, r3, #1
9000c118:	d509      	bpl.n	9000c12e <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000c11a:	4918      	ldr	r1, [pc, #96]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c11c:	6908      	ldr	r0, [r1, #16]
9000c11e:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000c122:	6108      	str	r0, [r1, #16]
9000c124:	6908      	ldr	r0, [r1, #16]
9000c126:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000c12a:	4330      	orrs	r0, r6
9000c12c:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000c12e:	2b00      	cmp	r3, #0
9000c130:	da06      	bge.n	9000c140 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000c132:	4812      	ldr	r0, [pc, #72]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c134:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000c136:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000c138:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000c13c:	4331      	orrs	r1, r6
9000c13e:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000c140:	0218      	lsls	r0, r3, #8
9000c142:	d507      	bpl.n	9000c154 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000c144:	490d      	ldr	r1, [pc, #52]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c146:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000c14a:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000c14c:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000c150:	4303      	orrs	r3, r0
9000c152:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000c154:	07d1      	lsls	r1, r2, #31
9000c156:	d513      	bpl.n	9000c180 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c158:	4b08      	ldr	r3, [pc, #32]	@ (9000c17c <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000c15a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c15c:	f003 0303 	and.w	r3, r3, #3
9000c160:	2b03      	cmp	r3, #3
9000c162:	f000 818d 	beq.w	9000c480 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000c166:	2100      	movs	r1, #0
9000c168:	f104 0008 	add.w	r0, r4, #8
9000c16c:	f7ff fb9c 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c170:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c172:	2800      	cmp	r0, #0
9000c174:	f040 8204 	bne.w	9000c580 <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000c178:	e002      	b.n	9000c180 <HAL_RCCEx_PeriphCLKConfig+0x710>
9000c17a:	bf00      	nop
9000c17c:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c180:	0793      	lsls	r3, r2, #30
9000c182:	d50f      	bpl.n	9000c1a4 <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c184:	4bb2      	ldr	r3, [pc, #712]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c186:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c188:	f003 0303 	and.w	r3, r3, #3
9000c18c:	2b03      	cmp	r3, #3
9000c18e:	f000 816c 	beq.w	9000c46a <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000c192:	2101      	movs	r1, #1
9000c194:	f104 0008 	add.w	r0, r4, #8
9000c198:	f7ff fb86 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c19c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c19e:	2800      	cmp	r0, #0
9000c1a0:	f040 81f0 	bne.w	9000c584 <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c1a4:	0757      	lsls	r7, r2, #29
9000c1a6:	d50f      	bpl.n	9000c1c8 <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c1a8:	4ba9      	ldr	r3, [pc, #676]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c1aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c1ac:	f003 0303 	and.w	r3, r3, #3
9000c1b0:	2b03      	cmp	r3, #3
9000c1b2:	f000 815c 	beq.w	9000c46e <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000c1b6:	2102      	movs	r1, #2
9000c1b8:	f104 0008 	add.w	r0, r4, #8
9000c1bc:	f7ff fb74 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c1c0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c1c2:	2800      	cmp	r0, #0
9000c1c4:	f040 81d8 	bne.w	9000c578 <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c1c8:	0716      	lsls	r6, r2, #28
9000c1ca:	d50f      	bpl.n	9000c1ec <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c1cc:	4ba0      	ldr	r3, [pc, #640]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c1ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c1d0:	f003 0303 	and.w	r3, r3, #3
9000c1d4:	2b03      	cmp	r3, #3
9000c1d6:	f000 814c 	beq.w	9000c472 <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000c1da:	2100      	movs	r1, #0
9000c1dc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c1e0:	f7ff fbd4 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c1e4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c1e6:	2800      	cmp	r0, #0
9000c1e8:	f040 81c8 	bne.w	9000c57c <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c1ec:	06d0      	lsls	r0, r2, #27
9000c1ee:	d54a      	bpl.n	9000c286 <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c1f0:	4b97      	ldr	r3, [pc, #604]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c1f2:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c1f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c1f8:	f003 0303 	and.w	r3, r3, #3
9000c1fc:	2b03      	cmp	r3, #3
9000c1fe:	f000 813a 	beq.w	9000c476 <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000c202:	2101      	movs	r1, #1
9000c204:	4630      	mov	r0, r6
9000c206:	f7ff fbc1 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000c20a:	2800      	cmp	r0, #0
9000c20c:	d03a      	beq.n	9000c284 <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c20e:	6863      	ldr	r3, [r4, #4]
9000c210:	069a      	lsls	r2, r3, #26
9000c212:	f140 808c 	bpl.w	9000c32e <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000c216:	4605      	mov	r5, r0
9000c218:	e039      	b.n	9000c28e <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c21a:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000c21e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000c222:	f43f ae7a 	beq.w	9000bf1a <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000c226:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000c22a:	f43f ae76 	beq.w	9000bf1a <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000c22e:	2601      	movs	r6, #1
9000c230:	4635      	mov	r5, r6
9000c232:	e67d      	b.n	9000bf30 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c234:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000c238:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000c23c:	f43f ae96 	beq.w	9000bf6c <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000c240:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000c244:	f43f ae92 	beq.w	9000bf6c <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000c248:	2601      	movs	r6, #1
9000c24a:	4635      	mov	r5, r6
9000c24c:	e699      	b.n	9000bf82 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c24e:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000c252:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000c256:	f43f aeb2 	beq.w	9000bfbe <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000c25a:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000c25e:	f43f aeae 	beq.w	9000bfbe <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000c262:	2601      	movs	r6, #1
9000c264:	4635      	mov	r5, r6
9000c266:	e6b5      	b.n	9000bfd4 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000c268:	2900      	cmp	r1, #0
9000c26a:	f47f af37 	bne.w	9000c0dc <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000c26e:	2d00      	cmp	r5, #0
9000c270:	f47f af35 	bne.w	9000c0de <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000c274:	4d76      	ldr	r5, [pc, #472]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c276:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000c278:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000c27c:	4301      	orrs	r1, r0
9000c27e:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000c280:	4635      	mov	r5, r6
9000c282:	e72c      	b.n	9000c0de <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c284:	6862      	ldr	r2, [r4, #4]
9000c286:	0693      	lsls	r3, r2, #26
9000c288:	d50d      	bpl.n	9000c2a6 <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c28a:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c28e:	4b70      	ldr	r3, [pc, #448]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c290:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000c292:	f003 0303 	and.w	r3, r3, #3
9000c296:	2b03      	cmp	r3, #3
9000c298:	d049      	beq.n	9000c32e <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000c29a:	2102      	movs	r1, #2
9000c29c:	4630      	mov	r0, r6
9000c29e:	f7ff fb75 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000c2a2:	2800      	cmp	r0, #0
9000c2a4:	d143      	bne.n	9000c32e <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000c2a6:	1e28      	subs	r0, r5, #0
9000c2a8:	bf18      	it	ne
9000c2aa:	2001      	movne	r0, #1
}
9000c2ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000c2b0:	2601      	movs	r6, #1
9000c2b2:	4635      	mov	r5, r6
9000c2b4:	e6f0      	b.n	9000c098 <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c2b6:	4866      	ldr	r0, [pc, #408]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c2b8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c2ba:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c2be:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c2c0:	2d00      	cmp	r5, #0
9000c2c2:	f040 8140 	bne.w	9000c546 <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000c2c6:	4f62      	ldr	r7, [pc, #392]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c2c8:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000c2cc:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c2ce:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000c2d2:	4301      	orrs	r1, r0
9000c2d4:	6579      	str	r1, [r7, #84]	@ 0x54
9000c2d6:	e6bc      	b.n	9000c052 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c2d8:	485d      	ldr	r0, [pc, #372]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c2da:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c2dc:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c2e0:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c2e2:	2d00      	cmp	r5, #0
9000c2e4:	f040 812c 	bne.w	9000c540 <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000c2e8:	4f59      	ldr	r7, [pc, #356]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c2ea:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000c2ec:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c2ee:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000c2f2:	4301      	orrs	r1, r0
9000c2f4:	6539      	str	r1, [r7, #80]	@ 0x50
9000c2f6:	e516      	b.n	9000bd26 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c2f8:	4955      	ldr	r1, [pc, #340]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c2fa:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c2fc:	f001 0103 	and.w	r1, r1, #3
9000c300:	2903      	cmp	r1, #3
9000c302:	f43f ae92 	beq.w	9000c02a <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000c306:	2102      	movs	r1, #2
9000c308:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c30c:	f7ff fb3e 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c310:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c312:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c316:	2d00      	cmp	r5, #0
9000c318:	f040 8151 	bne.w	9000c5be <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000c31c:	4f4c      	ldr	r7, [pc, #304]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c31e:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000c322:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c324:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000c328:	4301      	orrs	r1, r0
9000c32a:	65b9      	str	r1, [r7, #88]	@ 0x58
9000c32c:	e67f      	b.n	9000c02e <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000c32e:	2001      	movs	r0, #1
}
9000c330:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c334:	4946      	ldr	r1, [pc, #280]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c336:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c338:	f001 0103 	and.w	r1, r1, #3
9000c33c:	2903      	cmp	r1, #3
9000c33e:	f43f ad86 	beq.w	9000be4e <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000c342:	2101      	movs	r1, #1
9000c344:	f104 0008 	add.w	r0, r4, #8
9000c348:	f7ff faae 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000c34c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c34e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c352:	2d00      	cmp	r5, #0
9000c354:	f040 8137 	bne.w	9000c5c6 <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000c358:	4f3d      	ldr	r7, [pc, #244]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c35a:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000c35c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c35e:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000c362:	4301      	orrs	r1, r0
9000c364:	6579      	str	r1, [r7, #84]	@ 0x54
9000c366:	e574      	b.n	9000be52 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000c368:	2601      	movs	r6, #1
9000c36a:	f7ff bbb0 	b.w	9000bace <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000c36e:	4f39      	ldr	r7, [pc, #228]	@ (9000c454 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000c370:	683b      	ldr	r3, [r7, #0]
9000c372:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000c376:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000c378:	f7fb fb96 	bl	90007aa8 <HAL_GetTick>
9000c37c:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c37e:	e006      	b.n	9000c38e <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c380:	f7fb fb92 	bl	90007aa8 <HAL_GetTick>
9000c384:	eba0 0008 	sub.w	r0, r0, r8
9000c388:	2864      	cmp	r0, #100	@ 0x64
9000c38a:	f200 8277 	bhi.w	9000c87c <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c38e:	683b      	ldr	r3, [r7, #0]
9000c390:	05da      	lsls	r2, r3, #23
9000c392:	d5f5      	bpl.n	9000c380 <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000c394:	2d00      	cmp	r5, #0
9000c396:	f040 8272 	bne.w	9000c87e <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000c39a:	4a2d      	ldr	r2, [pc, #180]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c39c:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c3a0:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000c3a2:	4059      	eors	r1, r3
9000c3a4:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000c3a8:	d00b      	beq.n	9000c3c2 <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c3aa:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000c3ac:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c3ae:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000c3b2:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000c3b6:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000c3b8:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000c3ba:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000c3be:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000c3c0:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000c3c2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000c3c6:	f000 8285 	beq.w	9000c8d4 <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c3ca:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000c3ce:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000c3d2:	f000 8293 	beq.w	9000c8fc <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000c3d6:	491e      	ldr	r1, [pc, #120]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c3d8:	690a      	ldr	r2, [r1, #16]
9000c3da:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000c3de:	610a      	str	r2, [r1, #16]
9000c3e0:	481b      	ldr	r0, [pc, #108]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c3e2:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000c3e6:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000c3e8:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c3ea:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c3ee:	6701      	str	r1, [r0, #112]	@ 0x70
9000c3f0:	e4fd      	b.n	9000bdee <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c3f2:	4817      	ldr	r0, [pc, #92]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c3f4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c3f6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c3fa:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c3fc:	2d00      	cmp	r5, #0
9000c3fe:	f040 80b5 	bne.w	9000c56c <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000c402:	f7ff bbe7 	b.w	9000bbd4 <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c406:	4812      	ldr	r0, [pc, #72]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c408:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c40a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c40e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c410:	2d00      	cmp	r5, #0
9000c412:	f040 80ae 	bne.w	9000c572 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000c416:	e422      	b.n	9000bc5e <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c418:	480d      	ldr	r0, [pc, #52]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c41a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c41c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c420:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c422:	2d00      	cmp	r5, #0
9000c424:	f040 809f 	bne.w	9000c566 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000c428:	f7ff bba9 	b.w	9000bb7e <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c42c:	4808      	ldr	r0, [pc, #32]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c42e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c430:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c434:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000c436:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000c438:	2d00      	cmp	r5, #0
9000c43a:	f040 81ad 	bne.w	9000c798 <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000c43e:	4f04      	ldr	r7, [pc, #16]	@ (9000c450 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000c440:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000c442:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000c444:	f021 0107 	bic.w	r1, r1, #7
9000c448:	4301      	orrs	r1, r0
9000c44a:	6539      	str	r1, [r7, #80]	@ 0x50
9000c44c:	f7ff bb4d 	b.w	9000baea <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000c450:	58024400 	.word	0x58024400
9000c454:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c458:	48bb      	ldr	r0, [pc, #748]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c45a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c45c:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c460:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c462:	2d00      	cmp	r5, #0
9000c464:	d17c      	bne.n	9000c560 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000c466:	f7ff bb60 	b.w	9000bb2a <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000c46a:	2501      	movs	r5, #1
9000c46c:	e69a      	b.n	9000c1a4 <HAL_RCCEx_PeriphCLKConfig+0x734>
9000c46e:	2501      	movs	r5, #1
9000c470:	e6aa      	b.n	9000c1c8 <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000c472:	2501      	movs	r5, #1
9000c474:	e6ba      	b.n	9000c1ec <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c476:	0691      	lsls	r1, r2, #26
9000c478:	f57f af59 	bpl.w	9000c32e <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000c47c:	2501      	movs	r5, #1
9000c47e:	e706      	b.n	9000c28e <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000c480:	2501      	movs	r5, #1
9000c482:	e67d      	b.n	9000c180 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c484:	49b0      	ldr	r1, [pc, #704]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c486:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c488:	f001 0103 	and.w	r1, r1, #3
9000c48c:	2903      	cmp	r1, #3
9000c48e:	f000 820a 	beq.w	9000c8a6 <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000c492:	2102      	movs	r1, #2
9000c494:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c498:	f7ff fa78 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c49c:	2800      	cmp	r0, #0
9000c49e:	f000 820f 	beq.w	9000c8c0 <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c4a2:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000c4a6:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c4a8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c4ac:	e59a      	b.n	9000bfe4 <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c4ae:	49a6      	ldr	r1, [pc, #664]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c4b0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c4b2:	f001 0103 	and.w	r1, r1, #3
9000c4b6:	2903      	cmp	r1, #3
9000c4b8:	f000 81f8 	beq.w	9000c8ac <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000c4bc:	2102      	movs	r1, #2
9000c4be:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c4c2:	f7ff fa63 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c4c6:	2800      	cmp	r0, #0
9000c4c8:	f040 81f3 	bne.w	9000c8b2 <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c4cc:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c4d0:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c4d4:	e594      	b.n	9000c000 <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4d6:	4f9c      	ldr	r7, [pc, #624]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c4d8:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000c4da:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000c4de:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c4e0:	2d00      	cmp	r5, #0
9000c4e2:	f47f adfc 	bne.w	9000c0de <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000c4e6:	e6c5      	b.n	9000c274 <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4e8:	4897      	ldr	r0, [pc, #604]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c4ea:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000c4ec:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000c4f0:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c4f2:	2d00      	cmp	r5, #0
9000c4f4:	f43f adc9 	beq.w	9000c08a <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000c4f8:	462e      	mov	r6, r5
9000c4fa:	e5cd      	b.n	9000c098 <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c4fc:	4992      	ldr	r1, [pc, #584]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c4fe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c500:	f001 0103 	and.w	r1, r1, #3
9000c504:	2903      	cmp	r1, #3
9000c506:	f43f ac0c 	beq.w	9000bd22 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000c50a:	2101      	movs	r1, #1
9000c50c:	f104 0008 	add.w	r0, r4, #8
9000c510:	f7ff f9ca 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000c514:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c516:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c51a:	b98d      	cbnz	r5, 9000c540 <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000c51c:	e6e4      	b.n	9000c2e8 <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c51e:	488a      	ldr	r0, [pc, #552]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c520:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000c522:	f000 0003 	and.w	r0, r0, #3
9000c526:	2803      	cmp	r0, #3
9000c528:	f43f ad7f 	beq.w	9000c02a <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000c52c:	f104 0008 	add.w	r0, r4, #8
9000c530:	f7ff f9ba 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000c534:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c536:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c53a:	2d00      	cmp	r5, #0
9000c53c:	d13f      	bne.n	9000c5be <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000c53e:	e6ed      	b.n	9000c31c <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000c540:	462e      	mov	r6, r5
9000c542:	f7ff bbf0 	b.w	9000bd26 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000c546:	462e      	mov	r6, r5
9000c548:	e583      	b.n	9000c052 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000c54a:	462e      	mov	r6, r5
9000c54c:	f7ff bb65 	b.w	9000bc1a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000c550:	4f7d      	ldr	r7, [pc, #500]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c552:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000c554:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000c556:	f021 0103 	bic.w	r1, r1, #3
9000c55a:	4301      	orrs	r1, r0
9000c55c:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000c55e:	e443      	b.n	9000bde8 <HAL_RCCEx_PeriphCLKConfig+0x378>
9000c560:	462e      	mov	r6, r5
9000c562:	f7ff bae9 	b.w	9000bb38 <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000c566:	462e      	mov	r6, r5
9000c568:	f7ff bb11 	b.w	9000bb8e <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000c56c:	462e      	mov	r6, r5
9000c56e:	f7ff bb39 	b.w	9000bbe4 <HAL_RCCEx_PeriphCLKConfig+0x174>
9000c572:	462e      	mov	r6, r5
9000c574:	f7ff bb7a 	b.w	9000bc6c <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c578:	4605      	mov	r5, r0
9000c57a:	e625      	b.n	9000c1c8 <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c57c:	4605      	mov	r5, r0
9000c57e:	e635      	b.n	9000c1ec <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c580:	4605      	mov	r5, r0
9000c582:	e5fd      	b.n	9000c180 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c584:	4605      	mov	r5, r0
9000c586:	e60d      	b.n	9000c1a4 <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000c588:	4f6f      	ldr	r7, [pc, #444]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c58a:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000c58c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000c58e:	f021 0107 	bic.w	r1, r1, #7
9000c592:	4301      	orrs	r1, r0
9000c594:	6579      	str	r1, [r7, #84]	@ 0x54
9000c596:	e47d      	b.n	9000be94 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000c598:	462e      	mov	r6, r5
9000c59a:	f7ff bb8e 	b.w	9000bcba <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000c59e:	462e      	mov	r6, r5
9000c5a0:	f7ff bbb1 	b.w	9000bd06 <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000c5a4:	4f68      	ldr	r7, [pc, #416]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c5a6:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000c5aa:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000c5ac:	f021 0107 	bic.w	r1, r1, #7
9000c5b0:	4301      	orrs	r1, r0
9000c5b2:	65b9      	str	r1, [r7, #88]	@ 0x58
9000c5b4:	e493      	b.n	9000bede <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000c5b6:	462e      	mov	r6, r5
9000c5b8:	e4ba      	b.n	9000bf30 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000c5ba:	462e      	mov	r6, r5
9000c5bc:	e50a      	b.n	9000bfd4 <HAL_RCCEx_PeriphCLKConfig+0x564>
9000c5be:	462e      	mov	r6, r5
9000c5c0:	e535      	b.n	9000c02e <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000c5c2:	462e      	mov	r6, r5
9000c5c4:	e4dd      	b.n	9000bf82 <HAL_RCCEx_PeriphCLKConfig+0x512>
9000c5c6:	462e      	mov	r6, r5
9000c5c8:	e443      	b.n	9000be52 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c5ca:	495f      	ldr	r1, [pc, #380]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c5cc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c5ce:	f001 0103 	and.w	r1, r1, #3
9000c5d2:	2903      	cmp	r1, #3
9000c5d4:	f43f ae2b 	beq.w	9000c22e <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000c5d8:	2102      	movs	r1, #2
9000c5da:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c5de:	f7ff f9d5 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c5e2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c5e4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c5e8:	2d00      	cmp	r5, #0
9000c5ea:	d1e4      	bne.n	9000c5b6 <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000c5ec:	e498      	b.n	9000bf20 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c5ee:	4956      	ldr	r1, [pc, #344]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c5f0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c5f2:	f001 0103 	and.w	r1, r1, #3
9000c5f6:	2903      	cmp	r1, #3
9000c5f8:	f43f abc7 	beq.w	9000bd8a <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000c5fc:	2102      	movs	r1, #2
9000c5fe:	f104 0008 	add.w	r0, r4, #8
9000c602:	f7ff f951 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000c606:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c608:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c60c:	2d00      	cmp	r5, #0
9000c60e:	d19c      	bne.n	9000c54a <HAL_RCCEx_PeriphCLKConfig+0xada>
9000c610:	f7ff bafc 	b.w	9000bc0c <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c614:	494c      	ldr	r1, [pc, #304]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c616:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c618:	f001 0103 	and.w	r1, r1, #3
9000c61c:	2903      	cmp	r1, #3
9000c61e:	f43f ad16 	beq.w	9000c04e <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000c622:	2101      	movs	r1, #1
9000c624:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c628:	f7ff f9b0 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c62c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c62e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c632:	2d00      	cmp	r5, #0
9000c634:	d187      	bne.n	9000c546 <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000c636:	e646      	b.n	9000c2c6 <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c638:	4943      	ldr	r1, [pc, #268]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c63a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c63c:	f001 0103 	and.w	r1, r1, #3
9000c640:	2903      	cmp	r1, #3
9000c642:	f43f ae0e 	beq.w	9000c262 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000c646:	2102      	movs	r1, #2
9000c648:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c64c:	f7ff f99e 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c650:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c652:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c656:	2d00      	cmp	r5, #0
9000c658:	d1af      	bne.n	9000c5ba <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000c65a:	e4b3      	b.n	9000bfc4 <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c65c:	493a      	ldr	r1, [pc, #232]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c65e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c660:	f001 0103 	and.w	r1, r1, #3
9000c664:	2903      	cmp	r1, #3
9000c666:	f000 8131 	beq.w	9000c8cc <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000c66a:	2102      	movs	r1, #2
9000c66c:	f104 0008 	add.w	r0, r4, #8
9000c670:	f7ff f91a 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000c674:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c676:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c67a:	2d00      	cmp	r5, #0
9000c67c:	f47f abb3 	bne.w	9000bde6 <HAL_RCCEx_PeriphCLKConfig+0x376>
9000c680:	e766      	b.n	9000c550 <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c682:	4931      	ldr	r1, [pc, #196]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c684:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c686:	f001 0103 	and.w	r1, r1, #3
9000c68a:	2903      	cmp	r1, #3
9000c68c:	f43f addc 	beq.w	9000c248 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000c690:	2102      	movs	r1, #2
9000c692:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c696:	f7ff f979 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c69a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c69c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c6a0:	2d00      	cmp	r5, #0
9000c6a2:	d18e      	bne.n	9000c5c2 <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000c6a4:	e465      	b.n	9000bf72 <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c6a6:	4928      	ldr	r1, [pc, #160]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c6a8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c6aa:	f001 0103 	and.w	r1, r1, #3
9000c6ae:	2903      	cmp	r1, #3
9000c6b0:	f43f ab83 	beq.w	9000bdba <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000c6b4:	2101      	movs	r1, #1
9000c6b6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c6ba:	f7ff f967 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c6be:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c6c0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c6c4:	2d00      	cmp	r5, #0
9000c6c6:	f47f af67 	bne.w	9000c598 <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000c6ca:	f7ff baef 	b.w	9000bcac <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c6ce:	491e      	ldr	r1, [pc, #120]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c6d0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c6d2:	f001 0103 	and.w	r1, r1, #3
9000c6d6:	2903      	cmp	r1, #3
9000c6d8:	f43f ab7a 	beq.w	9000bdd0 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000c6dc:	2101      	movs	r1, #1
9000c6de:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c6e2:	f7ff f953 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c6e6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c6e8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c6ec:	2d00      	cmp	r5, #0
9000c6ee:	f47f af56 	bne.w	9000c59e <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000c6f2:	f7ff bb00 	b.w	9000bcf6 <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c6f6:	4914      	ldr	r1, [pc, #80]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c6f8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c6fa:	f001 0103 	and.w	r1, r1, #3
9000c6fe:	2903      	cmp	r1, #3
9000c700:	f43f ab3d 	beq.w	9000bd7e <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000c704:	2100      	movs	r1, #0
9000c706:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c70a:	f7ff f93f 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c70e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c710:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c714:	2d00      	cmp	r5, #0
9000c716:	f47f af29 	bne.w	9000c56c <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000c71a:	f7ff ba5b 	b.w	9000bbd4 <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c71e:	490a      	ldr	r1, [pc, #40]	@ (9000c748 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000c720:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c722:	f001 0103 	and.w	r1, r1, #3
9000c726:	2903      	cmp	r1, #3
9000c728:	f43f ab3a 	beq.w	9000bda0 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000c72c:	2100      	movs	r1, #0
9000c72e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c732:	f7ff f92b 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c736:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c738:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c73c:	2d00      	cmp	r5, #0
9000c73e:	f47f af18 	bne.w	9000c572 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000c742:	f7ff ba8c 	b.w	9000bc5e <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9000c746:	bf00      	nop
9000c748:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c74c:	4973      	ldr	r1, [pc, #460]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c74e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c750:	f001 0103 	and.w	r1, r1, #3
9000c754:	2903      	cmp	r1, #3
9000c756:	f43f ae07 	beq.w	9000c368 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000c75a:	2102      	movs	r1, #2
9000c75c:	3028      	adds	r0, #40	@ 0x28
9000c75e:	f7ff f915 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c762:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c764:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c768:	2e00      	cmp	r6, #0
9000c76a:	f47f a9b0 	bne.w	9000bace <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000c76e:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000c770:	f7ff b9a6 	b.w	9000bac0 <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c774:	4969      	ldr	r1, [pc, #420]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c776:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c778:	f001 0103 	and.w	r1, r1, #3
9000c77c:	2903      	cmp	r1, #3
9000c77e:	f43f a9b2 	beq.w	9000bae6 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c782:	2100      	movs	r1, #0
9000c784:	f104 0008 	add.w	r0, r4, #8
9000c788:	f7ff f88e 	bl	9000b8a8 <RCCEx_PLL2_Config.part.0>
9000c78c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c78e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c792:	2d00      	cmp	r5, #0
9000c794:	f43f ae53 	beq.w	9000c43e <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9000c798:	462e      	mov	r6, r5
9000c79a:	f7ff b9a6 	b.w	9000baea <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c79e:	495f      	ldr	r1, [pc, #380]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c7a0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c7a2:	f001 0103 	and.w	r1, r1, #3
9000c7a6:	2903      	cmp	r1, #3
9000c7a8:	f43f a99d 	beq.w	9000bae6 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c7ac:	2100      	movs	r1, #0
9000c7ae:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c7b2:	f7ff f8eb 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c7b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c7b8:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c7bc:	e63c      	b.n	9000c438 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c7be:	4957      	ldr	r1, [pc, #348]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c7c0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c7c2:	f001 0103 	and.w	r1, r1, #3
9000c7c6:	2903      	cmp	r1, #3
9000c7c8:	f43f aac0 	beq.w	9000bd4c <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000c7cc:	2100      	movs	r1, #0
9000c7ce:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c7d2:	f7ff f8db 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c7d6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c7d8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c7dc:	2d00      	cmp	r5, #0
9000c7de:	f47f aebf 	bne.w	9000c560 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000c7e2:	f7ff b9a2 	b.w	9000bb2a <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c7e6:	494d      	ldr	r1, [pc, #308]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c7e8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c7ea:	f001 0103 	and.w	r1, r1, #3
9000c7ee:	2903      	cmp	r1, #3
9000c7f0:	f43f aaba 	beq.w	9000bd68 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000c7f4:	2100      	movs	r1, #0
9000c7f6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c7fa:	f7ff f8c7 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c7fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c800:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c804:	2d00      	cmp	r5, #0
9000c806:	f47f aeae 	bne.w	9000c566 <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000c80a:	f7ff b9b8 	b.w	9000bb7e <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c80e:	4943      	ldr	r1, [pc, #268]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c810:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c812:	f001 0103 	and.w	r1, r1, #3
9000c816:	2903      	cmp	r1, #3
9000c818:	d041      	beq.n	9000c89e <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000c81a:	2101      	movs	r1, #1
9000c81c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c820:	f7ff f8b4 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c824:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c826:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c82a:	2d00      	cmp	r5, #0
9000c82c:	f47f ab56 	bne.w	9000bedc <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000c830:	e6b8      	b.n	9000c5a4 <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c832:	493a      	ldr	r1, [pc, #232]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c834:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c836:	f001 0103 	and.w	r1, r1, #3
9000c83a:	2903      	cmp	r1, #3
9000c83c:	d02b      	beq.n	9000c896 <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000c83e:	2101      	movs	r1, #1
9000c840:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c844:	f7ff f8a2 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c848:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c84a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c84e:	2d00      	cmp	r5, #0
9000c850:	f47f ab1f 	bne.w	9000be92 <HAL_RCCEx_PeriphCLKConfig+0x422>
9000c854:	e698      	b.n	9000c588 <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c856:	4931      	ldr	r1, [pc, #196]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c858:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c85a:	f001 0103 	and.w	r1, r1, #3
9000c85e:	2903      	cmp	r1, #3
9000c860:	f43f aaf5 	beq.w	9000be4e <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000c864:	2101      	movs	r1, #1
9000c866:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000c86a:	f7ff f88f 	bl	9000b98c <RCCEx_PLL3_Config.part.0>
9000c86e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c870:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c874:	2d00      	cmp	r5, #0
9000c876:	f47f aea6 	bne.w	9000c5c6 <HAL_RCCEx_PeriphCLKConfig+0xb56>
9000c87a:	e56d      	b.n	9000c358 <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
9000c87c:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c87e:	462e      	mov	r6, r5
9000c880:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c884:	f7ff bab3 	b.w	9000bdee <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c888:	4d24      	ldr	r5, [pc, #144]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c88a:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000c88c:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000c890:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000c892:	f7ff b915 	b.w	9000bac0 <HAL_RCCEx_PeriphCLKConfig+0x50>
9000c896:	2601      	movs	r6, #1
9000c898:	4635      	mov	r5, r6
9000c89a:	f7ff bafb 	b.w	9000be94 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000c89e:	2601      	movs	r6, #1
9000c8a0:	4635      	mov	r5, r6
9000c8a2:	f7ff bb1c 	b.w	9000bede <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9000c8a6:	2601      	movs	r6, #1
9000c8a8:	f7ff bb9c 	b.w	9000bfe4 <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
9000c8ac:	2601      	movs	r6, #1
9000c8ae:	f7ff bba7 	b.w	9000c000 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c8b2:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000c8b6:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c8b8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c8bc:	f7ff bba0 	b.w	9000c000 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c8c0:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c8c4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c8c8:	f7ff bb8c 	b.w	9000bfe4 <HAL_RCCEx_PeriphCLKConfig+0x574>
9000c8cc:	2601      	movs	r6, #1
9000c8ce:	4635      	mov	r5, r6
9000c8d0:	f7ff ba8a 	b.w	9000bde8 <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
9000c8d4:	f7fb f8e8 	bl	90007aa8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c8d8:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
9000c8dc:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c8de:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c8e2:	e004      	b.n	9000c8ee <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c8e4:	f7fb f8e0 	bl	90007aa8 <HAL_GetTick>
9000c8e8:	1bc0      	subs	r0, r0, r7
9000c8ea:	4548      	cmp	r0, r9
9000c8ec:	d810      	bhi.n	9000c910 <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c8ee:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000c8f2:	079b      	lsls	r3, r3, #30
9000c8f4:	d5f6      	bpl.n	9000c8e4 <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c8f6:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c8fa:	e566      	b.n	9000c3ca <HAL_RCCEx_PeriphCLKConfig+0x95a>
9000c8fc:	4807      	ldr	r0, [pc, #28]	@ (9000c91c <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000c8fe:	4a08      	ldr	r2, [pc, #32]	@ (9000c920 <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
9000c900:	6901      	ldr	r1, [r0, #16]
9000c902:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c906:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000c90a:	430a      	orrs	r2, r1
9000c90c:	6102      	str	r2, [r0, #16]
9000c90e:	e567      	b.n	9000c3e0 <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
9000c910:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c912:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c916:	4635      	mov	r5, r6
9000c918:	f7ff ba69 	b.w	9000bdee <HAL_RCCEx_PeriphCLKConfig+0x37e>
9000c91c:	58024400 	.word	0x58024400
9000c920:	00ffffcf 	.word	0x00ffffcf

9000c924 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c924:	b318      	cbz	r0, 9000c96e <HAL_SDRAM_Init+0x4a>
{
9000c926:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c928:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000c92c:	4604      	mov	r4, r0
9000c92e:	460d      	mov	r5, r1
9000c930:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c934:	b1b3      	cbz	r3, 9000c964 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c936:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c938:	2302      	movs	r3, #2
9000c93a:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c93e:	f851 0b04 	ldr.w	r0, [r1], #4
9000c942:	f000 fa17 	bl	9000cd74 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c946:	6862      	ldr	r2, [r4, #4]
9000c948:	4629      	mov	r1, r5
9000c94a:	6820      	ldr	r0, [r4, #0]
9000c94c:	f000 fa4a 	bl	9000cde4 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c950:	4a08      	ldr	r2, [pc, #32]	@ (9000c974 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c952:	2101      	movs	r1, #1

  return HAL_OK;
9000c954:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c956:	6813      	ldr	r3, [r2, #0]
9000c958:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000c95c:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c95e:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000c962:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c964:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c968:	f7f7 faba 	bl	90003ee0 <HAL_SDRAM_MspInit>
9000c96c:	e7e3      	b.n	9000c936 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c96e:	2001      	movs	r0, #1
}
9000c970:	4770      	bx	lr
9000c972:	bf00      	nop
9000c974:	52004000 	.word	0x52004000

9000c978 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c978:	b510      	push	{r4, lr}
9000c97a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c97c:	f7f7 fb2c 	bl	90003fd8 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c980:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c984:	f000 fa6c 	bl	9000ce60 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c988:	2000      	movs	r0, #0
9000c98a:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c98e:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000c992:	bd10      	pop	{r4, pc}

9000c994 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c994:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c996:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c99a:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c99c:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c99e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c9a0:	d004      	beq.n	9000c9ac <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c9a2:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000c9a6:	2c01      	cmp	r4, #1
9000c9a8:	d001      	beq.n	9000c9ae <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c9aa:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c9ac:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c9ae:	2302      	movs	r3, #2
9000c9b0:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c9b2:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c9b4:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c9b8:	f000 fa66 	bl	9000ce88 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c9bc:	6833      	ldr	r3, [r6, #0]
9000c9be:	2b02      	cmp	r3, #2
9000c9c0:	d003      	beq.n	9000c9ca <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c9c2:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000c9c6:	2000      	movs	r0, #0
}
9000c9c8:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c9ca:	2305      	movs	r3, #5
9000c9cc:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000c9d0:	e7f9      	b.n	9000c9c6 <HAL_SDRAM_SendCommand+0x32>
9000c9d2:	bf00      	nop

9000c9d4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c9d4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c9d6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c9da:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c9dc:	2b02      	cmp	r3, #2
9000c9de:	b2d8      	uxtb	r0, r3
9000c9e0:	d005      	beq.n	9000c9ee <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c9e2:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000c9e6:	2b01      	cmp	r3, #1
9000c9e8:	b2dd      	uxtb	r5, r3
9000c9ea:	d001      	beq.n	9000c9f0 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c9ec:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c9ee:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c9f0:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c9f2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c9f4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c9f8:	f000 fa5e 	bl	9000ceb8 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c9fc:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c9fe:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000ca02:	bd38      	pop	{r3, r4, r5, pc}

9000ca04 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000ca04:	4770      	bx	lr
9000ca06:	bf00      	nop

9000ca08 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000ca08:	2800      	cmp	r0, #0
9000ca0a:	f000 808c 	beq.w	9000cb26 <HAL_TIM_Base_Init+0x11e>
{
9000ca0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000ca10:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000ca14:	4604      	mov	r4, r0
9000ca16:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000ca1a:	2b00      	cmp	r3, #0
9000ca1c:	d073      	beq.n	9000cb06 <HAL_TIM_Base_Init+0xfe>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000ca1e:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000ca20:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000ca22:	4942      	ldr	r1, [pc, #264]	@ (9000cb2c <HAL_TIM_Base_Init+0x124>)
9000ca24:	4842      	ldr	r0, [pc, #264]	@ (9000cb30 <HAL_TIM_Base_Init+0x128>)
9000ca26:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000ca2a:	eba2 0101 	sub.w	r1, r2, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000ca2e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000ca32:	eba2 0e00 	sub.w	lr, r2, r0
  tmpcr1 = TIMx->CR1;
9000ca36:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000ca38:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000ca3c:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000ca3e:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000ca42:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000ca44:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000ca48:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000ca4a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000ca4e:	d020      	beq.n	9000ca92 <HAL_TIM_Base_Init+0x8a>
9000ca50:	b9f9      	cbnz	r1, 9000ca92 <HAL_TIM_Base_Init+0x8a>
9000ca52:	f8df c0ec 	ldr.w	ip, [pc, #236]	@ 9000cb40 <HAL_TIM_Base_Init+0x138>
9000ca56:	4562      	cmp	r2, ip
9000ca58:	d01b      	beq.n	9000ca92 <HAL_TIM_Base_Init+0x8a>
9000ca5a:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000ca5e:	4562      	cmp	r2, ip
9000ca60:	d017      	beq.n	9000ca92 <HAL_TIM_Base_Init+0x8a>
9000ca62:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000ca66:	4562      	cmp	r2, ip
9000ca68:	d013      	beq.n	9000ca92 <HAL_TIM_Base_Init+0x8a>
9000ca6a:	f1be 0f00 	cmp.w	lr, #0
9000ca6e:	d110      	bne.n	9000ca92 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000ca70:	4830      	ldr	r0, [pc, #192]	@ (9000cb34 <HAL_TIM_Base_Init+0x12c>)
9000ca72:	4931      	ldr	r1, [pc, #196]	@ (9000cb38 <HAL_TIM_Base_Init+0x130>)
9000ca74:	428a      	cmp	r2, r1
9000ca76:	bf18      	it	ne
9000ca78:	4282      	cmpne	r2, r0
9000ca7a:	d049      	beq.n	9000cb10 <HAL_TIM_Base_Init+0x108>
9000ca7c:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000ca80:	428a      	cmp	r2, r1
9000ca82:	d045      	beq.n	9000cb10 <HAL_TIM_Base_Init+0x108>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000ca84:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000ca88:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000ca8a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000ca8c:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000ca8e:	6295      	str	r5, [r2, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000ca90:	e01d      	b.n	9000cace <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000ca92:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000ca94:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000ca98:	4303      	orrs	r3, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000ca9a:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000ca9c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000caa0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000caa2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000caa6:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000caa8:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000caaa:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000caac:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000caae:	b961      	cbnz	r1, 9000caca <HAL_TIM_Base_Init+0xc2>
9000cab0:	f1be 0f00 	cmp.w	lr, #0
9000cab4:	d109      	bne.n	9000caca <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000cab6:	4921      	ldr	r1, [pc, #132]	@ (9000cb3c <HAL_TIM_Base_Init+0x134>)
9000cab8:	4b1e      	ldr	r3, [pc, #120]	@ (9000cb34 <HAL_TIM_Base_Init+0x12c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000caba:	429a      	cmp	r2, r3
9000cabc:	bf18      	it	ne
9000cabe:	428a      	cmpne	r2, r1
9000cac0:	d003      	beq.n	9000caca <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000cac2:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000cac6:	429a      	cmp	r2, r3
9000cac8:	d101      	bne.n	9000cace <HAL_TIM_Base_Init+0xc6>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000caca:	6963      	ldr	r3, [r4, #20]
9000cacc:	6313      	str	r3, [r2, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000cace:	2301      	movs	r3, #1
  return HAL_OK;
9000cad0:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000cad2:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000cad4:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000cad8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000cadc:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000cae0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000cae4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
9000cae8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000caec:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000caf0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000caf4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000caf8:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000cafc:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000cb00:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
9000cb04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000cb06:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000cb0a:	f7ff ff7b 	bl	9000ca04 <HAL_TIM_Base_MspInit>
9000cb0e:	e786      	b.n	9000ca1e <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000cb10:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000cb12:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000cb16:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000cb18:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000cb1c:	433b      	orrs	r3, r7
  TIMx->CR1 = tmpcr1;
9000cb1e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000cb20:	62d6      	str	r6, [r2, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000cb22:	6295      	str	r5, [r2, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000cb24:	e7c7      	b.n	9000cab6 <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
9000cb26:	2001      	movs	r0, #1
}
9000cb28:	4770      	bx	lr
9000cb2a:	bf00      	nop
9000cb2c:	40010000 	.word	0x40010000
9000cb30:	40010400 	.word	0x40010400
9000cb34:	40014000 	.word	0x40014000
9000cb38:	40014400 	.word	0x40014400
9000cb3c:	40014800 	.word	0x40014800
9000cb40:	40000400 	.word	0x40000400

9000cb44 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000cb44:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000cb48:	2b01      	cmp	r3, #1
9000cb4a:	d13d      	bne.n	9000cbc8 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000cb4c:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000cb4e:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000cb50:	4b1e      	ldr	r3, [pc, #120]	@ (9000cbcc <HAL_TIM_Base_Start_IT+0x88>)
9000cb52:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000cb56:	bf18      	it	ne
9000cb58:	429a      	cmpne	r2, r3
{
9000cb5a:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000cb5c:	bf0c      	ite	eq
9000cb5e:	2301      	moveq	r3, #1
9000cb60:	2300      	movne	r3, #0
9000cb62:	4d1b      	ldr	r5, [pc, #108]	@ (9000cbd0 <HAL_TIM_Base_Start_IT+0x8c>)
9000cb64:	4c1b      	ldr	r4, [pc, #108]	@ (9000cbd4 <HAL_TIM_Base_Start_IT+0x90>)
9000cb66:	42aa      	cmp	r2, r5
9000cb68:	bf08      	it	eq
9000cb6a:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000cb6e:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000cb72:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000cb74:	42a2      	cmp	r2, r4
9000cb76:	bf08      	it	eq
9000cb78:	f043 0301 	orreq.w	r3, r3, #1
9000cb7c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000cb80:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000cb84:	4814      	ldr	r0, [pc, #80]	@ (9000cbd8 <HAL_TIM_Base_Start_IT+0x94>)
9000cb86:	42a2      	cmp	r2, r4
9000cb88:	bf08      	it	eq
9000cb8a:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000cb8e:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000cb90:	4282      	cmp	r2, r0
9000cb92:	bf08      	it	eq
9000cb94:	f043 0301 	orreq.w	r3, r3, #1
9000cb98:	4910      	ldr	r1, [pc, #64]	@ (9000cbdc <HAL_TIM_Base_Start_IT+0x98>)
9000cb9a:	428a      	cmp	r2, r1
9000cb9c:	bf08      	it	eq
9000cb9e:	f043 0301 	orreq.w	r3, r3, #1
9000cba2:	b913      	cbnz	r3, 9000cbaa <HAL_TIM_Base_Start_IT+0x66>
9000cba4:	4b0e      	ldr	r3, [pc, #56]	@ (9000cbe0 <HAL_TIM_Base_Start_IT+0x9c>)
9000cba6:	429a      	cmp	r2, r3
9000cba8:	d107      	bne.n	9000cbba <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000cbaa:	6891      	ldr	r1, [r2, #8]
9000cbac:	4b0d      	ldr	r3, [pc, #52]	@ (9000cbe4 <HAL_TIM_Base_Start_IT+0xa0>)
9000cbae:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000cbb0:	2b06      	cmp	r3, #6
9000cbb2:	d006      	beq.n	9000cbc2 <HAL_TIM_Base_Start_IT+0x7e>
9000cbb4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000cbb8:	d003      	beq.n	9000cbc2 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000cbba:	6813      	ldr	r3, [r2, #0]
9000cbbc:	f043 0301 	orr.w	r3, r3, #1
9000cbc0:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000cbc2:	2000      	movs	r0, #0
}
9000cbc4:	bc30      	pop	{r4, r5}
9000cbc6:	4770      	bx	lr
    return HAL_ERROR;
9000cbc8:	2001      	movs	r0, #1
}
9000cbca:	4770      	bx	lr
9000cbcc:	40010000 	.word	0x40010000
9000cbd0:	40000400 	.word	0x40000400
9000cbd4:	40000800 	.word	0x40000800
9000cbd8:	40010400 	.word	0x40010400
9000cbdc:	40001800 	.word	0x40001800
9000cbe0:	40014000 	.word	0x40014000
9000cbe4:	00010007 	.word	0x00010007

9000cbe8 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000cbe8:	4770      	bx	lr
9000cbea:	bf00      	nop

9000cbec <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000cbec:	4770      	bx	lr
9000cbee:	bf00      	nop

9000cbf0 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000cbf0:	4770      	bx	lr
9000cbf2:	bf00      	nop

9000cbf4 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000cbf4:	4770      	bx	lr
9000cbf6:	bf00      	nop

9000cbf8 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000cbf8:	6803      	ldr	r3, [r0, #0]
9000cbfa:	691a      	ldr	r2, [r3, #16]
9000cbfc:	0791      	lsls	r1, r2, #30
{
9000cbfe:	b510      	push	{r4, lr}
9000cc00:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000cc02:	d502      	bpl.n	9000cc0a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000cc04:	68da      	ldr	r2, [r3, #12]
9000cc06:	0792      	lsls	r2, r2, #30
9000cc08:	d468      	bmi.n	9000ccdc <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000cc0a:	691a      	ldr	r2, [r3, #16]
9000cc0c:	0752      	lsls	r2, r2, #29
9000cc0e:	d502      	bpl.n	9000cc16 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000cc10:	68da      	ldr	r2, [r3, #12]
9000cc12:	0750      	lsls	r0, r2, #29
9000cc14:	d44f      	bmi.n	9000ccb6 <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000cc16:	691a      	ldr	r2, [r3, #16]
9000cc18:	0711      	lsls	r1, r2, #28
9000cc1a:	d502      	bpl.n	9000cc22 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000cc1c:	68da      	ldr	r2, [r3, #12]
9000cc1e:	0712      	lsls	r2, r2, #28
9000cc20:	d437      	bmi.n	9000cc92 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000cc22:	691a      	ldr	r2, [r3, #16]
9000cc24:	06d0      	lsls	r0, r2, #27
9000cc26:	d502      	bpl.n	9000cc2e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000cc28:	68da      	ldr	r2, [r3, #12]
9000cc2a:	06d1      	lsls	r1, r2, #27
9000cc2c:	d41e      	bmi.n	9000cc6c <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000cc2e:	691a      	ldr	r2, [r3, #16]
9000cc30:	07d2      	lsls	r2, r2, #31
9000cc32:	d502      	bpl.n	9000cc3a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000cc34:	68da      	ldr	r2, [r3, #12]
9000cc36:	07d0      	lsls	r0, r2, #31
9000cc38:	d469      	bmi.n	9000cd0e <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000cc3a:	691a      	ldr	r2, [r3, #16]
9000cc3c:	0611      	lsls	r1, r2, #24
9000cc3e:	d502      	bpl.n	9000cc46 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000cc40:	68da      	ldr	r2, [r3, #12]
9000cc42:	0612      	lsls	r2, r2, #24
9000cc44:	d46b      	bmi.n	9000cd1e <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000cc46:	691a      	ldr	r2, [r3, #16]
9000cc48:	05d0      	lsls	r0, r2, #23
9000cc4a:	d502      	bpl.n	9000cc52 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000cc4c:	68da      	ldr	r2, [r3, #12]
9000cc4e:	0611      	lsls	r1, r2, #24
9000cc50:	d46d      	bmi.n	9000cd2e <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000cc52:	691a      	ldr	r2, [r3, #16]
9000cc54:	0652      	lsls	r2, r2, #25
9000cc56:	d502      	bpl.n	9000cc5e <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000cc58:	68da      	ldr	r2, [r3, #12]
9000cc5a:	0650      	lsls	r0, r2, #25
9000cc5c:	d46f      	bmi.n	9000cd3e <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000cc5e:	691a      	ldr	r2, [r3, #16]
9000cc60:	0691      	lsls	r1, r2, #26
9000cc62:	d502      	bpl.n	9000cc6a <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000cc64:	68da      	ldr	r2, [r3, #12]
9000cc66:	0692      	lsls	r2, r2, #26
9000cc68:	d449      	bmi.n	9000ccfe <HAL_TIM_IRQHandler+0x106>
}
9000cc6a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000cc6c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000cc70:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000cc72:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000cc74:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000cc76:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000cc78:	69db      	ldr	r3, [r3, #28]
9000cc7a:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000cc7e:	d16f      	bne.n	9000cd60 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cc80:	f7ff ffb2 	bl	9000cbe8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cc84:	4620      	mov	r0, r4
9000cc86:	f7ff ffb3 	bl	9000cbf0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cc8a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000cc8c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cc8e:	7722      	strb	r2, [r4, #28]
9000cc90:	e7cd      	b.n	9000cc2e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000cc92:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000cc96:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000cc98:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000cc9a:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000cc9c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000cc9e:	69db      	ldr	r3, [r3, #28]
9000cca0:	079b      	lsls	r3, r3, #30
9000cca2:	d15a      	bne.n	9000cd5a <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cca4:	f7ff ffa0 	bl	9000cbe8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cca8:	4620      	mov	r0, r4
9000ccaa:	f7ff ffa1 	bl	9000cbf0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ccae:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000ccb0:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ccb2:	7722      	strb	r2, [r4, #28]
9000ccb4:	e7b5      	b.n	9000cc22 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000ccb6:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000ccba:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000ccbc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000ccbe:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000ccc0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000ccc2:	699b      	ldr	r3, [r3, #24]
9000ccc4:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000ccc8:	d144      	bne.n	9000cd54 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000ccca:	f7ff ff8d 	bl	9000cbe8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000ccce:	4620      	mov	r0, r4
9000ccd0:	f7ff ff8e 	bl	9000cbf0 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ccd4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000ccd6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ccd8:	7722      	strb	r2, [r4, #28]
9000ccda:	e79c      	b.n	9000cc16 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000ccdc:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000cce0:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000cce2:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000cce4:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000cce6:	699b      	ldr	r3, [r3, #24]
9000cce8:	0799      	lsls	r1, r3, #30
9000ccea:	d130      	bne.n	9000cd4e <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000ccec:	f7ff ff7c 	bl	9000cbe8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000ccf0:	4620      	mov	r0, r4
9000ccf2:	f7ff ff7d 	bl	9000cbf0 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ccf6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000ccf8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000ccfa:	7722      	strb	r2, [r4, #28]
9000ccfc:	e785      	b.n	9000cc0a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000ccfe:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000cd02:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000cd04:	611a      	str	r2, [r3, #16]
}
9000cd06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000cd0a:	f000 b82d 	b.w	9000cd68 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000cd0e:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000cd12:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000cd14:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000cd16:	f7f6 ff47 	bl	90003ba8 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000cd1a:	6823      	ldr	r3, [r4, #0]
9000cd1c:	e78d      	b.n	9000cc3a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000cd1e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
      HAL_TIMEx_BreakCallback(htim);
9000cd22:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000cd24:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000cd26:	f000 f821 	bl	9000cd6c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000cd2a:	6823      	ldr	r3, [r4, #0]
9000cd2c:	e78b      	b.n	9000cc46 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000cd2e:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000cd32:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000cd34:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000cd36:	f000 f81b 	bl	9000cd70 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000cd3a:	6823      	ldr	r3, [r4, #0]
9000cd3c:	e789      	b.n	9000cc52 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000cd3e:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000cd42:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000cd44:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000cd46:	f7ff ff55 	bl	9000cbf4 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000cd4a:	6823      	ldr	r3, [r4, #0]
9000cd4c:	e787      	b.n	9000cc5e <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000cd4e:	f7ff ff4d 	bl	9000cbec <HAL_TIM_IC_CaptureCallback>
9000cd52:	e7d0      	b.n	9000ccf6 <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000cd54:	f7ff ff4a 	bl	9000cbec <HAL_TIM_IC_CaptureCallback>
9000cd58:	e7bc      	b.n	9000ccd4 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000cd5a:	f7ff ff47 	bl	9000cbec <HAL_TIM_IC_CaptureCallback>
9000cd5e:	e7a6      	b.n	9000ccae <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000cd60:	f7ff ff44 	bl	9000cbec <HAL_TIM_IC_CaptureCallback>
9000cd64:	e791      	b.n	9000cc8a <HAL_TIM_IRQHandler+0x92>
9000cd66:	bf00      	nop

9000cd68 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000cd68:	4770      	bx	lr
9000cd6a:	bf00      	nop

9000cd6c <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000cd6c:	4770      	bx	lr
9000cd6e:	bf00      	nop

9000cd70 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000cd70:	4770      	bx	lr
9000cd72:	bf00      	nop

9000cd74 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
9000cd74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cd78:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000cd7c:	e9d1 8200 	ldrd	r8, r2, [r1]
9000cd80:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000cd82:	ea43 030e 	orr.w	r3, r3, lr
9000cd86:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000cd8a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000cd8e:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000cd90:	f1b8 0f00 	cmp.w	r8, #0
9000cd94:	d10f      	bne.n	9000cdb6 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cd96:	433b      	orrs	r3, r7
9000cd98:	4313      	orrs	r3, r2
9000cd9a:	4a11      	ldr	r2, [pc, #68]	@ (9000cde0 <FMC_SDRAM_Init+0x6c>)
9000cd9c:	ea43 030c 	orr.w	r3, r3, ip
9000cda0:	4333      	orrs	r3, r6
9000cda2:	432b      	orrs	r3, r5
9000cda4:	4323      	orrs	r3, r4
9000cda6:	430b      	orrs	r3, r1
9000cda8:	6801      	ldr	r1, [r0, #0]
9000cdaa:	400a      	ands	r2, r1
9000cdac:	4313      	orrs	r3, r2
9000cdae:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000cdb0:	2000      	movs	r0, #0
9000cdb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cdb6:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cdba:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cdbc:	4332      	orrs	r2, r6
9000cdbe:	432a      	orrs	r2, r5
9000cdc0:	4322      	orrs	r2, r4
9000cdc2:	4c07      	ldr	r4, [pc, #28]	@ (9000cde0 <FMC_SDRAM_Init+0x6c>)
9000cdc4:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cdc6:	6801      	ldr	r1, [r0, #0]
9000cdc8:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000cdcc:	430b      	orrs	r3, r1
9000cdce:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cdd0:	6843      	ldr	r3, [r0, #4]
9000cdd2:	401c      	ands	r4, r3
9000cdd4:	4322      	orrs	r2, r4
9000cdd6:	6042      	str	r2, [r0, #4]
}
9000cdd8:	2000      	movs	r0, #0
9000cdda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000cdde:	bf00      	nop
9000cde0:	ffff8000 	.word	0xffff8000

9000cde4 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000cde4:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cde6:	68cc      	ldr	r4, [r1, #12]
9000cde8:	694b      	ldr	r3, [r1, #20]
9000cdea:	3c01      	subs	r4, #1
9000cdec:	688d      	ldr	r5, [r1, #8]
9000cdee:	698f      	ldr	r7, [r1, #24]
9000cdf0:	3b01      	subs	r3, #1
9000cdf2:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000cdf6:	684c      	ldr	r4, [r1, #4]
9000cdf8:	680e      	ldr	r6, [r1, #0]
9000cdfa:	3d01      	subs	r5, #1
9000cdfc:	3c01      	subs	r4, #1
9000cdfe:	051b      	lsls	r3, r3, #20
9000ce00:	022d      	lsls	r5, r5, #8
9000ce02:	3e01      	subs	r6, #1
9000ce04:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000ce08:	690c      	ldr	r4, [r1, #16]
9000ce0a:	1e79      	subs	r1, r7, #1
9000ce0c:	3c01      	subs	r4, #1
9000ce0e:	0609      	lsls	r1, r1, #24
9000ce10:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000ce12:	b972      	cbnz	r2, 9000ce32 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ce14:	ea4e 0303 	orr.w	r3, lr, r3
9000ce18:	6882      	ldr	r2, [r0, #8]
9000ce1a:	4333      	orrs	r3, r6
9000ce1c:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000ce20:	ea43 030c 	orr.w	r3, r3, ip
9000ce24:	432b      	orrs	r3, r5
9000ce26:	4323      	orrs	r3, r4
9000ce28:	430b      	orrs	r3, r1
9000ce2a:	4313      	orrs	r3, r2
9000ce2c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000ce2e:	2000      	movs	r0, #0
9000ce30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ce32:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ce36:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ce3a:	4a08      	ldr	r2, [pc, #32]	@ (9000ce5c <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ce3c:	4333      	orrs	r3, r6
9000ce3e:	4323      	orrs	r3, r4
9000ce40:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ce42:	6881      	ldr	r1, [r0, #8]
9000ce44:	400a      	ands	r2, r1
9000ce46:	ea42 020e 	orr.w	r2, r2, lr
9000ce4a:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ce4c:	68c2      	ldr	r2, [r0, #12]
9000ce4e:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000ce52:	4313      	orrs	r3, r2
9000ce54:	60c3      	str	r3, [r0, #12]
}
9000ce56:	2000      	movs	r0, #0
9000ce58:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000ce5a:	bf00      	nop
9000ce5c:	ff0f0fff 	.word	0xff0f0fff

9000ce60 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000ce60:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000ce62:	2200      	movs	r2, #0
{
9000ce64:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000ce66:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000ce6a:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000ce6e:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000ce72:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000ce76:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000ce78:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000ce7c:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000ce7e:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000ce80:	619a      	str	r2, [r3, #24]
}
9000ce82:	bc30      	pop	{r4, r5}
9000ce84:	4770      	bx	lr
9000ce86:	bf00      	nop

9000ce88 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000ce88:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ce8a:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000ce8e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ce90:	6900      	ldr	r0, [r0, #16]
9000ce92:	4323      	orrs	r3, r4
9000ce94:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000ce98:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000ce9c:	4c05      	ldr	r4, [pc, #20]	@ (9000ceb4 <FMC_SDRAM_SendCommand+0x2c>)
9000ce9e:	3901      	subs	r1, #1
9000cea0:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000cea2:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cea4:	4323      	orrs	r3, r4
}
9000cea6:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000ceaa:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000ceae:	6113      	str	r3, [r2, #16]
}
9000ceb0:	4770      	bx	lr
9000ceb2:	bf00      	nop
9000ceb4:	ffc00000 	.word	0xffc00000

9000ceb8 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000ceb8:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000ceba:	4b05      	ldr	r3, [pc, #20]	@ (9000ced0 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000cebc:	2000      	movs	r0, #0
{
9000cebe:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cec0:	6954      	ldr	r4, [r2, #20]
9000cec2:	4023      	ands	r3, r4
}
9000cec4:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cec8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000cecc:	6153      	str	r3, [r2, #20]
}
9000cece:	4770      	bx	lr
9000ced0:	ffffc001 	.word	0xffffc001

9000ced4 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000ced4:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000ced6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ceda:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000cedc:	f002 fb4c 	bl	9000f578 <xTaskGetSchedulerState>
9000cee0:	2801      	cmp	r0, #1
9000cee2:	d100      	bne.n	9000cee6 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000cee4:	bd08      	pop	{r3, pc}
9000cee6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000ceea:	f000 bc33 	b.w	9000d754 <xPortSysTickHandler>
9000ceee:	bf00      	nop

9000cef0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000cef0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000cef4:	b92b      	cbnz	r3, 9000cf02 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000cef6:	4b06      	ldr	r3, [pc, #24]	@ (9000cf10 <osKernelInitialize+0x20>)
9000cef8:	6818      	ldr	r0, [r3, #0]
9000cefa:	b928      	cbnz	r0, 9000cf08 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000cefc:	2201      	movs	r2, #1
9000cefe:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000cf00:	4770      	bx	lr
    stat = osErrorISR;
9000cf02:	f06f 0005 	mvn.w	r0, #5
9000cf06:	4770      	bx	lr
    } else {
      stat = osError;
9000cf08:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000cf0c:	4770      	bx	lr
9000cf0e:	bf00      	nop
9000cf10:	24008f1c 	.word	0x24008f1c

9000cf14 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000cf14:	b510      	push	{r4, lr}
9000cf16:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000cf1a:	b974      	cbnz	r4, 9000cf3a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000cf1c:	4b08      	ldr	r3, [pc, #32]	@ (9000cf40 <osKernelStart+0x2c>)
9000cf1e:	681a      	ldr	r2, [r3, #0]
9000cf20:	2a01      	cmp	r2, #1
9000cf22:	d107      	bne.n	9000cf34 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000cf24:	4907      	ldr	r1, [pc, #28]	@ (9000cf44 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000cf26:	2202      	movs	r2, #2
9000cf28:	77cc      	strb	r4, [r1, #31]
9000cf2a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000cf2c:	f002 f8c2 	bl	9000f0b4 <vTaskStartScheduler>
      stat = osOK;
9000cf30:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000cf32:	bd10      	pop	{r4, pc}
      stat = osError;
9000cf34:	f04f 30ff 	mov.w	r0, #4294967295
}
9000cf38:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cf3a:	f06f 0005 	mvn.w	r0, #5
}
9000cf3e:	bd10      	pop	{r4, pc}
9000cf40:	24008f1c 	.word	0x24008f1c
9000cf44:	e000ed00 	.word	0xe000ed00

9000cf48 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000cf48:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000cf4a:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000cf4c:	b087      	sub	sp, #28
  hTask = NULL;
9000cf4e:	9505      	str	r5, [sp, #20]
9000cf50:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000cf54:	b300      	cbz	r0, 9000cf98 <osThreadNew+0x50>
9000cf56:	b9fb      	cbnz	r3, 9000cf98 <osThreadNew+0x50>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000cf58:	4614      	mov	r4, r2
9000cf5a:	b302      	cbz	r2, 9000cf9e <osThreadNew+0x56>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000cf5c:	6996      	ldr	r6, [r2, #24]
9000cf5e:	b9c6      	cbnz	r6, 9000cf92 <osThreadNew+0x4a>
9000cf60:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000cf62:	6863      	ldr	r3, [r4, #4]
9000cf64:	07db      	lsls	r3, r3, #31
9000cf66:	d417      	bmi.n	9000cf98 <osThreadNew+0x50>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000cf68:	6963      	ldr	r3, [r4, #20]
9000cf6a:	b32b      	cbz	r3, 9000cfb8 <osThreadNew+0x70>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000cf6c:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000cf6e:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000cf70:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000cf74:	68e7      	ldr	r7, [r4, #12]
9000cf76:	b30d      	cbz	r5, 9000cfbc <osThreadNew+0x74>
9000cf78:	2f5f      	cmp	r7, #95	@ 0x5f
9000cf7a:	d90d      	bls.n	9000cf98 <osThreadNew+0x50>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000cf7c:	6924      	ldr	r4, [r4, #16]
9000cf7e:	b15b      	cbz	r3, 9000cf98 <osThreadNew+0x50>
9000cf80:	b154      	cbz	r4, 9000cf98 <osThreadNew+0x50>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000cf82:	460b      	mov	r3, r1
9000cf84:	9600      	str	r6, [sp, #0]
9000cf86:	4661      	mov	r1, ip
9000cf88:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000cf8c:	f001 ff00 	bl	9000ed90 <xTaskCreateStatic>
9000cf90:	e003      	b.n	9000cf9a <osThreadNew+0x52>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000cf92:	1e72      	subs	r2, r6, #1
9000cf94:	2a37      	cmp	r2, #55	@ 0x37
9000cf96:	d9e4      	bls.n	9000cf62 <osThreadNew+0x1a>
        return (NULL);
9000cf98:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000cf9a:	b007      	add	sp, #28
9000cf9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000cf9e:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000cfa0:	2618      	movs	r6, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000cfa2:	460b      	mov	r3, r1
9000cfa4:	4621      	mov	r1, r4
9000cfa6:	ac05      	add	r4, sp, #20
9000cfa8:	9600      	str	r6, [sp, #0]
9000cfaa:	9401      	str	r4, [sp, #4]
9000cfac:	f001 ff9a 	bl	9000eee4 <xTaskCreate>
9000cfb0:	2801      	cmp	r0, #1
9000cfb2:	d1f1      	bne.n	9000cf98 <osThreadNew+0x50>
  return ((osThreadId_t)hTask);
9000cfb4:	9805      	ldr	r0, [sp, #20]
9000cfb6:	e7f0      	b.n	9000cf9a <osThreadNew+0x52>
    stack = configMINIMAL_STACK_SIZE;
9000cfb8:	2280      	movs	r2, #128	@ 0x80
9000cfba:	e7d8      	b.n	9000cf6e <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000cfbc:	2f00      	cmp	r7, #0
9000cfbe:	d1eb      	bne.n	9000cf98 <osThreadNew+0x50>
9000cfc0:	6923      	ldr	r3, [r4, #16]
9000cfc2:	2b00      	cmp	r3, #0
9000cfc4:	d1e8      	bne.n	9000cf98 <osThreadNew+0x50>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000cfc6:	b292      	uxth	r2, r2
9000cfc8:	4664      	mov	r4, ip
9000cfca:	e7ea      	b.n	9000cfa2 <osThreadNew+0x5a>

9000cfcc <osDelay>:
9000cfcc:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000cfd0:	b93a      	cbnz	r2, 9000cfe2 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000cfd2:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000cfd4:	b908      	cbnz	r0, 9000cfda <osDelay+0xe>
    stat = osOK;
9000cfd6:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000cfd8:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000cfda:	f002 f815 	bl	9000f008 <vTaskDelay>
    stat = osOK;
9000cfde:	2000      	movs	r0, #0
}
9000cfe0:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000cfe2:	f06f 0005 	mvn.w	r0, #5
}
9000cfe6:	4770      	bx	lr

9000cfe8 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000cfe8:	b5f0      	push	{r4, r5, r6, r7, lr}
9000cfea:	b083      	sub	sp, #12
9000cfec:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000cff0:	b98e      	cbnz	r6, 9000d016 <osSemaphoreNew+0x2e>
9000cff2:	4605      	mov	r5, r0
9000cff4:	b178      	cbz	r0, 9000d016 <osSemaphoreNew+0x2e>
9000cff6:	4288      	cmp	r0, r1
9000cff8:	460f      	mov	r7, r1
9000cffa:	d30c      	bcc.n	9000d016 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000cffc:	4614      	mov	r4, r2
9000cffe:	b172      	cbz	r2, 9000d01e <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000d000:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000d004:	b14a      	cbz	r2, 9000d01a <osSemaphoreNew+0x32>
9000d006:	2b4f      	cmp	r3, #79	@ 0x4f
9000d008:	d905      	bls.n	9000d016 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000d00a:	2801      	cmp	r0, #1
9000d00c:	d02f      	beq.n	9000d06e <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000d00e:	f000 fd7f 	bl	9000db10 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000d012:	4605      	mov	r5, r0
9000d014:	b968      	cbnz	r0, 9000d032 <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000d016:	2500      	movs	r5, #0
9000d018:	e010      	b.n	9000d03c <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000d01a:	2b00      	cmp	r3, #0
9000d01c:	d1fb      	bne.n	9000d016 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000d01e:	2d01      	cmp	r5, #1
9000d020:	d00f      	beq.n	9000d042 <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000d022:	4628      	mov	r0, r5
9000d024:	4639      	mov	r1, r7
9000d026:	f000 fdd3 	bl	9000dbd0 <xQueueCreateCountingSemaphore>
9000d02a:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000d02c:	2d00      	cmp	r5, #0
9000d02e:	d0f2      	beq.n	9000d016 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000d030:	b104      	cbz	r4, 9000d034 <osSemaphoreNew+0x4c>
          name = attr->name;
9000d032:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000d034:	4621      	mov	r1, r4
9000d036:	4628      	mov	r0, r5
9000d038:	f001 fc04 	bl	9000e844 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000d03c:	4628      	mov	r0, r5
9000d03e:	b003      	add	sp, #12
9000d040:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000d042:	4628      	mov	r0, r5
9000d044:	2203      	movs	r2, #3
9000d046:	2100      	movs	r1, #0
9000d048:	f000 fd20 	bl	9000da8c <xQueueGenericCreate>
9000d04c:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000d04e:	2d00      	cmp	r5, #0
9000d050:	d0e1      	beq.n	9000d016 <osSemaphoreNew+0x2e>
9000d052:	2f00      	cmp	r7, #0
9000d054:	d0ea      	beq.n	9000d02c <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d056:	2300      	movs	r3, #0
9000d058:	4628      	mov	r0, r5
9000d05a:	461a      	mov	r2, r3
9000d05c:	4619      	mov	r1, r3
9000d05e:	f000 fdfd 	bl	9000dc5c <xQueueGenericSend>
9000d062:	2801      	cmp	r0, #1
9000d064:	d0e4      	beq.n	9000d030 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000d066:	4628      	mov	r0, r5
9000d068:	f001 fba6 	bl	9000e7b8 <vQueueDelete>
      if (hSemaphore != NULL) {
9000d06c:	e7d3      	b.n	9000d016 <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000d06e:	4613      	mov	r3, r2
9000d070:	2203      	movs	r2, #3
9000d072:	4631      	mov	r1, r6
9000d074:	9200      	str	r2, [sp, #0]
9000d076:	4632      	mov	r2, r6
9000d078:	f000 fc9c 	bl	9000d9b4 <xQueueGenericCreateStatic>
9000d07c:	4605      	mov	r5, r0
9000d07e:	e7e6      	b.n	9000d04e <osSemaphoreNew+0x66>

9000d080 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d080:	b360      	cbz	r0, 9000d0dc <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000d082:	b510      	push	{r4, lr}
9000d084:	460c      	mov	r4, r1
9000d086:	b082      	sub	sp, #8
9000d088:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d08c:	b1b3      	cbz	r3, 9000d0bc <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000d08e:	bb11      	cbnz	r1, 9000d0d6 <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d090:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d092:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d094:	f001 fb32 	bl	9000e6fc <xQueueReceiveFromISR>
9000d098:	2801      	cmp	r0, #1
9000d09a:	d118      	bne.n	9000d0ce <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d09c:	9b01      	ldr	r3, [sp, #4]
9000d09e:	b913      	cbnz	r3, 9000d0a6 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000d0a0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d0a2:	b002      	add	sp, #8
9000d0a4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000d0a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d0aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d0ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d0b2:	f3bf 8f4f 	dsb	sy
9000d0b6:	f3bf 8f6f 	isb	sy
9000d0ba:	e7f1      	b.n	9000d0a0 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000d0bc:	f001 f992 	bl	9000e3e4 <xQueueSemaphoreTake>
9000d0c0:	2801      	cmp	r0, #1
9000d0c2:	d0ed      	beq.n	9000d0a0 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000d0c4:	b11c      	cbz	r4, 9000d0ce <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000d0c6:	f06f 0001 	mvn.w	r0, #1
}
9000d0ca:	b002      	add	sp, #8
9000d0cc:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000d0ce:	f06f 0002 	mvn.w	r0, #2
}
9000d0d2:	b002      	add	sp, #8
9000d0d4:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000d0d6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d0da:	e7e2      	b.n	9000d0a2 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000d0dc:	f06f 0003 	mvn.w	r0, #3
}
9000d0e0:	4770      	bx	lr
9000d0e2:	bf00      	nop

9000d0e4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d0e4:	b328      	cbz	r0, 9000d132 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000d0e6:	b500      	push	{lr}
9000d0e8:	b083      	sub	sp, #12
9000d0ea:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d0ee:	b19b      	cbz	r3, 9000d118 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000d0f0:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d0f2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000d0f4:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d0f6:	f000 ff99 	bl	9000e02c <xQueueGiveFromISR>
9000d0fa:	2801      	cmp	r0, #1
9000d0fc:	d116      	bne.n	9000d12c <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000d0fe:	9b01      	ldr	r3, [sp, #4]
9000d100:	b183      	cbz	r3, 9000d124 <osSemaphoreRelease+0x40>
9000d102:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d106:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d10a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d10e:	f3bf 8f4f 	dsb	sy
9000d112:	f3bf 8f6f 	isb	sy
9000d116:	e005      	b.n	9000d124 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d118:	461a      	mov	r2, r3
9000d11a:	4619      	mov	r1, r3
9000d11c:	f000 fd9e 	bl	9000dc5c <xQueueGenericSend>
9000d120:	2801      	cmp	r0, #1
9000d122:	d103      	bne.n	9000d12c <osSemaphoreRelease+0x48>
  stat = osOK;
9000d124:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000d126:	b003      	add	sp, #12
9000d128:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000d12c:	f06f 0002 	mvn.w	r0, #2
9000d130:	e7f9      	b.n	9000d126 <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000d132:	f06f 0003 	mvn.w	r0, #3
}
9000d136:	4770      	bx	lr

9000d138 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000d138:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d13a:	b083      	sub	sp, #12
9000d13c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000d140:	b987      	cbnz	r7, 9000d164 <osMessageQueueNew+0x2c>
9000d142:	4605      	mov	r5, r0
9000d144:	b170      	cbz	r0, 9000d164 <osMessageQueueNew+0x2c>
9000d146:	b169      	cbz	r1, 9000d164 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000d148:	4614      	mov	r4, r2
9000d14a:	b17a      	cbz	r2, 9000d16c <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d14c:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000d150:	b1c3      	cbz	r3, 9000d184 <osMessageQueueNew+0x4c>
9000d152:	2a4f      	cmp	r2, #79	@ 0x4f
9000d154:	d906      	bls.n	9000d164 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d156:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d158:	b122      	cbz	r2, 9000d164 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d15a:	fb01 f505 	mul.w	r5, r1, r5
9000d15e:	6966      	ldr	r6, [r4, #20]
9000d160:	42ae      	cmp	r6, r5
9000d162:	d21e      	bcs.n	9000d1a2 <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000d164:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000d166:	4628      	mov	r0, r5
9000d168:	b003      	add	sp, #12
9000d16a:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000d16c:	f000 fc8e 	bl	9000da8c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d170:	4605      	mov	r5, r0
9000d172:	2800      	cmp	r0, #0
9000d174:	d0f6      	beq.n	9000d164 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000d176:	4628      	mov	r0, r5
9000d178:	4621      	mov	r1, r4
9000d17a:	f001 fb63 	bl	9000e844 <vQueueAddToRegistry>
}
9000d17e:	4628      	mov	r0, r5
9000d180:	b003      	add	sp, #12
9000d182:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000d184:	2a00      	cmp	r2, #0
9000d186:	d1ed      	bne.n	9000d164 <osMessageQueueNew+0x2c>
9000d188:	6923      	ldr	r3, [r4, #16]
9000d18a:	2b00      	cmp	r3, #0
9000d18c:	d1ea      	bne.n	9000d164 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000d18e:	6962      	ldr	r2, [r4, #20]
9000d190:	2a00      	cmp	r2, #0
9000d192:	d1e7      	bne.n	9000d164 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000d194:	f000 fc7a 	bl	9000da8c <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d198:	4605      	mov	r5, r0
9000d19a:	2800      	cmp	r0, #0
9000d19c:	d0e2      	beq.n	9000d164 <osMessageQueueNew+0x2c>
        name = attr->name;
9000d19e:	6824      	ldr	r4, [r4, #0]
9000d1a0:	e7e9      	b.n	9000d176 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000d1a2:	9700      	str	r7, [sp, #0]
9000d1a4:	f000 fc06 	bl	9000d9b4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000d1a8:	4605      	mov	r5, r0
9000d1aa:	2800      	cmp	r0, #0
9000d1ac:	d1f7      	bne.n	9000d19e <osMessageQueueNew+0x66>
9000d1ae:	e7d9      	b.n	9000d164 <osMessageQueueNew+0x2c>

9000d1b0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000d1b0:	b560      	push	{r5, r6, lr}
9000d1b2:	461e      	mov	r6, r3
9000d1b4:	b083      	sub	sp, #12
9000d1b6:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d1ba:	fab0 f580 	clz	r5, r0
9000d1be:	fab1 f381 	clz	r3, r1
9000d1c2:	096d      	lsrs	r5, r5, #5
9000d1c4:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000d1c6:	b1da      	cbz	r2, 9000d200 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d1c8:	2e00      	cmp	r6, #0
9000d1ca:	bf18      	it	ne
9000d1cc:	f043 0301 	orrne.w	r3, r3, #1
9000d1d0:	bb33      	cbnz	r3, 9000d220 <osMessageQueuePut+0x70>
9000d1d2:	bb2d      	cbnz	r5, 9000d220 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d1d4:	462b      	mov	r3, r5
9000d1d6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d1d8:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d1da:	f000 fec1 	bl	9000df60 <xQueueGenericSendFromISR>
9000d1de:	2801      	cmp	r0, #1
9000d1e0:	d11a      	bne.n	9000d218 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d1e2:	9b01      	ldr	r3, [sp, #4]
9000d1e4:	b14b      	cbz	r3, 9000d1fa <osMessageQueuePut+0x4a>
9000d1e6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d1ea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d1ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d1f2:	f3bf 8f4f 	dsb	sy
9000d1f6:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d1fa:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d1fc:	b003      	add	sp, #12
9000d1fe:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d200:	b975      	cbnz	r5, 9000d220 <osMessageQueuePut+0x70>
9000d202:	b96b      	cbnz	r3, 9000d220 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d204:	4632      	mov	r2, r6
9000d206:	f000 fd29 	bl	9000dc5c <xQueueGenericSend>
9000d20a:	2801      	cmp	r0, #1
9000d20c:	d0f5      	beq.n	9000d1fa <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000d20e:	b11e      	cbz	r6, 9000d218 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000d210:	f06f 0001 	mvn.w	r0, #1
}
9000d214:	b003      	add	sp, #12
9000d216:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000d218:	f06f 0002 	mvn.w	r0, #2
}
9000d21c:	b003      	add	sp, #12
9000d21e:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000d220:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d224:	e7ea      	b.n	9000d1fc <osMessageQueuePut+0x4c>
9000d226:	bf00      	nop

9000d228 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000d228:	b570      	push	{r4, r5, r6, lr}
9000d22a:	461e      	mov	r6, r3
9000d22c:	b082      	sub	sp, #8
9000d22e:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d232:	fab0 f580 	clz	r5, r0
9000d236:	fab1 f481 	clz	r4, r1
9000d23a:	096d      	lsrs	r5, r5, #5
9000d23c:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000d23e:	b1d3      	cbz	r3, 9000d276 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d240:	2e00      	cmp	r6, #0
9000d242:	bf18      	it	ne
9000d244:	f044 0401 	orrne.w	r4, r4, #1
9000d248:	bb2c      	cbnz	r4, 9000d296 <osMessageQueueGet+0x6e>
9000d24a:	bb25      	cbnz	r5, 9000d296 <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d24c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d24e:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d250:	f001 fa54 	bl	9000e6fc <xQueueReceiveFromISR>
9000d254:	2801      	cmp	r0, #1
9000d256:	d11a      	bne.n	9000d28e <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d258:	9b01      	ldr	r3, [sp, #4]
9000d25a:	b14b      	cbz	r3, 9000d270 <osMessageQueueGet+0x48>
9000d25c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d260:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d264:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d268:	f3bf 8f4f 	dsb	sy
9000d26c:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d270:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d272:	b002      	add	sp, #8
9000d274:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d276:	b975      	cbnz	r5, 9000d296 <osMessageQueueGet+0x6e>
9000d278:	b96c      	cbnz	r4, 9000d296 <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d27a:	4632      	mov	r2, r6
9000d27c:	f000 ff2c 	bl	9000e0d8 <xQueueReceive>
9000d280:	2801      	cmp	r0, #1
9000d282:	d0f5      	beq.n	9000d270 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000d284:	b11e      	cbz	r6, 9000d28e <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000d286:	f06f 0001 	mvn.w	r0, #1
}
9000d28a:	b002      	add	sp, #8
9000d28c:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000d28e:	f06f 0002 	mvn.w	r0, #2
}
9000d292:	b002      	add	sp, #8
9000d294:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000d296:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d29a:	e7ea      	b.n	9000d272 <osMessageQueueGet+0x4a>

9000d29c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d29c:	4b04      	ldr	r3, [pc, #16]	@ (9000d2b0 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000d29e:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d2a0:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d2a2:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000d2a4:	4c03      	ldr	r4, [pc, #12]	@ (9000d2b4 <vApplicationGetIdleTaskMemory+0x18>)
9000d2a6:	600c      	str	r4, [r1, #0]
}
9000d2a8:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d2ac:	6013      	str	r3, [r2, #0]
}
9000d2ae:	4770      	bx	lr
9000d2b0:	24008ebc 	.word	0x24008ebc
9000d2b4:	24008cbc 	.word	0x24008cbc

9000d2b8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d2b8:	4b05      	ldr	r3, [pc, #20]	@ (9000d2d0 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000d2ba:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d2bc:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d2be:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000d2c2:	4c04      	ldr	r4, [pc, #16]	@ (9000d2d4 <vApplicationGetTimerTaskMemory+0x1c>)
9000d2c4:	600c      	str	r4, [r1, #0]
}
9000d2c6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d2ca:	6013      	str	r3, [r2, #0]
}
9000d2cc:	4770      	bx	lr
9000d2ce:	bf00      	nop
9000d2d0:	24008c5c 	.word	0x24008c5c
9000d2d4:	2400885c 	.word	0x2400885c

9000d2d8 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000d2d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000d2dc:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000d2de:	f001 ff85 	bl	9000f1ec <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000d2e2:	4a53      	ldr	r2, [pc, #332]	@ (9000d430 <pvPortMalloc+0x158>)
9000d2e4:	6815      	ldr	r5, [r2, #0]
9000d2e6:	2d00      	cmp	r5, #0
9000d2e8:	d035      	beq.n	9000d356 <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000d2ea:	4b52      	ldr	r3, [pc, #328]	@ (9000d434 <pvPortMalloc+0x15c>)
9000d2ec:	681e      	ldr	r6, [r3, #0]
9000d2ee:	4234      	tst	r4, r6
9000d2f0:	d12b      	bne.n	9000d34a <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000d2f2:	b354      	cbz	r4, 9000d34a <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000d2f4:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000d2f8:	0764      	lsls	r4, r4, #29
9000d2fa:	d002      	beq.n	9000d302 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000d2fc:	f020 0007 	bic.w	r0, r0, #7
9000d300:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000d302:	b310      	cbz	r0, 9000d34a <pvPortMalloc+0x72>
9000d304:	f8df e140 	ldr.w	lr, [pc, #320]	@ 9000d448 <pvPortMalloc+0x170>
9000d308:	f8de c000 	ldr.w	ip, [lr]
9000d30c:	4584      	cmp	ip, r0
9000d30e:	d31c      	bcc.n	9000d34a <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000d310:	4c49      	ldr	r4, [pc, #292]	@ (9000d438 <pvPortMalloc+0x160>)
9000d312:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d314:	e003      	b.n	9000d31e <pvPortMalloc+0x46>
9000d316:	681a      	ldr	r2, [r3, #0]
9000d318:	b122      	cbz	r2, 9000d324 <pvPortMalloc+0x4c>
9000d31a:	461c      	mov	r4, r3
9000d31c:	4613      	mov	r3, r2
9000d31e:	6859      	ldr	r1, [r3, #4]
9000d320:	4281      	cmp	r1, r0
9000d322:	d3f8      	bcc.n	9000d316 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000d324:	42ab      	cmp	r3, r5
9000d326:	d010      	beq.n	9000d34a <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d328:	681a      	ldr	r2, [r3, #0]
9000d32a:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d32c:	1a0a      	subs	r2, r1, r0
9000d32e:	2a10      	cmp	r2, #16
9000d330:	d947      	bls.n	9000d3c2 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000d332:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000d334:	0761      	lsls	r1, r4, #29
9000d336:	d02d      	beq.n	9000d394 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000d338:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d33c:	f383 8811 	msr	BASEPRI, r3
9000d340:	f3bf 8f6f 	isb	sy
9000d344:	f3bf 8f4f 	dsb	sy
9000d348:	e7fe      	b.n	9000d348 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000d34a:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000d34c:	f001 ff56 	bl	9000f1fc <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000d350:	4620      	mov	r0, r4
9000d352:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000d356:	4b39      	ldr	r3, [pc, #228]	@ (9000d43c <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d358:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d35c:	4e36      	ldr	r6, [pc, #216]	@ (9000d438 <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000d35e:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000d360:	4d37      	ldr	r5, [pc, #220]	@ (9000d440 <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000d362:	bf18      	it	ne
9000d364:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d366:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d36a:	bf18      	it	ne
9000d36c:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000d370:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000d372:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d374:	6033      	str	r3, [r6, #0]
9000d376:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000d378:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000d37a:	1aeb      	subs	r3, r5, r3
}
9000d37c:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000d37e:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d382:	4a30      	ldr	r2, [pc, #192]	@ (9000d444 <pvPortMalloc+0x16c>)
9000d384:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d386:	4a30      	ldr	r2, [pc, #192]	@ (9000d448 <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000d388:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d38c:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d38e:	4b29      	ldr	r3, [pc, #164]	@ (9000d434 <pvPortMalloc+0x15c>)
9000d390:	6018      	str	r0, [r3, #0]
}
9000d392:	e7ac      	b.n	9000d2ee <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000d394:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d396:	4a28      	ldr	r2, [pc, #160]	@ (9000d438 <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
9000d398:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d39a:	4617      	mov	r7, r2
9000d39c:	6812      	ldr	r2, [r2, #0]
9000d39e:	4294      	cmp	r4, r2
9000d3a0:	d8fb      	bhi.n	9000d39a <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d3a2:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d3a4:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d3a8:	eb07 0901 	add.w	r9, r7, r1
9000d3ac:	454c      	cmp	r4, r9
9000d3ae:	d028      	beq.n	9000d402 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d3b0:	eb04 0108 	add.w	r1, r4, r8
9000d3b4:	428a      	cmp	r2, r1
9000d3b6:	d02e      	beq.n	9000d416 <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000d3b8:	4601      	mov	r1, r0
9000d3ba:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000d3bc:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d3be:	bf18      	it	ne
9000d3c0:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d3c2:	4820      	ldr	r0, [pc, #128]	@ (9000d444 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d3c4:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
9000d3c8:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d3ca:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d3cc:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d3ce:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d3d2:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000d3d4:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d3d8:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000d3da:	bf38      	it	cc
9000d3dc:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000d3de:	481b      	ldr	r0, [pc, #108]	@ (9000d44c <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
9000d3e0:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000d3e2:	6802      	ldr	r2, [r0, #0]
9000d3e4:	3201      	adds	r2, #1
9000d3e6:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000d3e8:	f001 ff08 	bl	9000f1fc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000d3ec:	0763      	lsls	r3, r4, #29
9000d3ee:	d0af      	beq.n	9000d350 <pvPortMalloc+0x78>
9000d3f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d3f4:	f383 8811 	msr	BASEPRI, r3
9000d3f8:	f3bf 8f6f 	isb	sy
9000d3fc:	f3bf 8f4f 	dsb	sy
9000d400:	e7fe      	b.n	9000d400 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d402:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d404:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d408:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d40c:	428a      	cmp	r2, r1
9000d40e:	d001      	beq.n	9000d414 <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d410:	6859      	ldr	r1, [r3, #4]
9000d412:	e7d6      	b.n	9000d3c2 <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d414:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d416:	42aa      	cmp	r2, r5
9000d418:	d006      	beq.n	9000d428 <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d41a:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d41c:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d41e:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d420:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d422:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d424:	6859      	ldr	r1, [r3, #4]
9000d426:	e7c9      	b.n	9000d3bc <pvPortMalloc+0xe4>
9000d428:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000d42a:	6022      	str	r2, [r4, #0]
9000d42c:	e7c6      	b.n	9000d3bc <pvPortMalloc+0xe4>
9000d42e:	bf00      	nop
9000d430:	24008f34 	.word	0x24008f34
9000d434:	24008f20 	.word	0x24008f20
9000d438:	24008f38 	.word	0x24008f38
9000d43c:	24008f40 	.word	0x24008f40
9000d440:	240215d8 	.word	0x240215d8
9000d444:	24008f2c 	.word	0x24008f2c
9000d448:	24008f30 	.word	0x24008f30
9000d44c:	24008f28 	.word	0x24008f28

9000d450 <vPortFree>:
	if( pv != NULL )
9000d450:	b1d0      	cbz	r0, 9000d488 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d452:	4a2d      	ldr	r2, [pc, #180]	@ (9000d508 <vPortFree+0xb8>)
9000d454:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000d458:	6812      	ldr	r2, [r2, #0]
9000d45a:	4213      	tst	r3, r2
9000d45c:	d00b      	beq.n	9000d476 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000d45e:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000d462:	b191      	cbz	r1, 9000d48a <vPortFree+0x3a>
9000d464:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d468:	f383 8811 	msr	BASEPRI, r3
9000d46c:	f3bf 8f6f 	isb	sy
9000d470:	f3bf 8f4f 	dsb	sy
9000d474:	e7fe      	b.n	9000d474 <vPortFree+0x24>
9000d476:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d47a:	f383 8811 	msr	BASEPRI, r3
9000d47e:	f3bf 8f6f 	isb	sy
9000d482:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d486:	e7fe      	b.n	9000d486 <vPortFree+0x36>
9000d488:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d48a:	ea23 0302 	bic.w	r3, r3, r2
{
9000d48e:	b530      	push	{r4, r5, lr}
9000d490:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d492:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000d496:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d49a:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000d49c:	f001 fea6 	bl	9000f1ec <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d4a0:	4a1a      	ldr	r2, [pc, #104]	@ (9000d50c <vPortFree+0xbc>)
9000d4a2:	9801      	ldr	r0, [sp, #4]
9000d4a4:	6813      	ldr	r3, [r2, #0]
9000d4a6:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000d4aa:	440b      	add	r3, r1
9000d4ac:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d4ae:	4b18      	ldr	r3, [pc, #96]	@ (9000d510 <vPortFree+0xc0>)
9000d4b0:	461a      	mov	r2, r3
9000d4b2:	681b      	ldr	r3, [r3, #0]
9000d4b4:	429c      	cmp	r4, r3
9000d4b6:	d8fb      	bhi.n	9000d4b0 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d4b8:	6855      	ldr	r5, [r2, #4]
9000d4ba:	eb02 0e05 	add.w	lr, r2, r5
9000d4be:	4574      	cmp	r4, lr
9000d4c0:	d011      	beq.n	9000d4e6 <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4c2:	eb04 0c01 	add.w	ip, r4, r1
9000d4c6:	4563      	cmp	r3, ip
9000d4c8:	d013      	beq.n	9000d4f2 <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000d4ca:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000d4ce:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d4d0:	bf18      	it	ne
9000d4d2:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000d4d4:	4a0f      	ldr	r2, [pc, #60]	@ (9000d514 <vPortFree+0xc4>)
9000d4d6:	6813      	ldr	r3, [r2, #0]
9000d4d8:	3301      	adds	r3, #1
9000d4da:	6013      	str	r3, [r2, #0]
}
9000d4dc:	b003      	add	sp, #12
9000d4de:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000d4e2:	f001 be8b 	b.w	9000f1fc <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d4e6:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4e8:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d4ea:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4ec:	4283      	cmp	r3, r0
9000d4ee:	d1f1      	bne.n	9000d4d4 <vPortFree+0x84>
9000d4f0:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d4f2:	4809      	ldr	r0, [pc, #36]	@ (9000d518 <vPortFree+0xc8>)
9000d4f4:	6800      	ldr	r0, [r0, #0]
9000d4f6:	4283      	cmp	r3, r0
9000d4f8:	d003      	beq.n	9000d502 <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d4fa:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d4fe:	4429      	add	r1, r5
9000d500:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d502:	6020      	str	r0, [r4, #0]
9000d504:	e7e3      	b.n	9000d4ce <vPortFree+0x7e>
9000d506:	bf00      	nop
9000d508:	24008f20 	.word	0x24008f20
9000d50c:	24008f30 	.word	0x24008f30
9000d510:	24008f38 	.word	0x24008f38
9000d514:	24008f24 	.word	0x24008f24
9000d518:	24008f34 	.word	0x24008f34

9000d51c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d51c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d520:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d524:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d526:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d528:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d52a:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d52c:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000d530:	4770      	bx	lr
9000d532:	bf00      	nop

9000d534 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000d534:	2300      	movs	r3, #0
9000d536:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000d538:	4770      	bx	lr
9000d53a:	bf00      	nop

9000d53c <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d53c:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000d53e:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000d540:	3301      	adds	r3, #1
{
9000d542:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d544:	6894      	ldr	r4, [r2, #8]
9000d546:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000d54a:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000d54c:	6091      	str	r1, [r2, #8]
}
9000d54e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000d552:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d554:	6003      	str	r3, [r0, #0]
}
9000d556:	4770      	bx	lr

9000d558 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000d558:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000d55a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000d55c:	1c6b      	adds	r3, r5, #1
9000d55e:	d010      	beq.n	9000d582 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000d560:	f100 0308 	add.w	r3, r0, #8
9000d564:	461c      	mov	r4, r3
9000d566:	685b      	ldr	r3, [r3, #4]
9000d568:	681a      	ldr	r2, [r3, #0]
9000d56a:	42aa      	cmp	r2, r5
9000d56c:	d9fa      	bls.n	9000d564 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d56e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d570:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000d572:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000d574:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000d576:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000d578:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000d57a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d57c:	6002      	str	r2, [r0, #0]
}
9000d57e:	bc30      	pop	{r4, r5}
9000d580:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000d582:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d584:	6863      	ldr	r3, [r4, #4]
9000d586:	e7f2      	b.n	9000d56e <vListInsert+0x16>

9000d588 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000d588:	6903      	ldr	r3, [r0, #16]
{
9000d58a:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000d58c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d58e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000d592:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000d594:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d598:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000d59a:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000d59c:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000d5a0:	bf08      	it	eq
9000d5a2:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000d5a4:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000d5a6:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000d5a8:	3a01      	subs	r2, #1
9000d5aa:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000d5ac:	6818      	ldr	r0, [r3, #0]
}
9000d5ae:	4770      	bx	lr

9000d5b0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000d5b0:	4808      	ldr	r0, [pc, #32]	@ (9000d5d4 <prvPortStartFirstTask+0x24>)
9000d5b2:	6800      	ldr	r0, [r0, #0]
9000d5b4:	6800      	ldr	r0, [r0, #0]
9000d5b6:	f380 8808 	msr	MSP, r0
9000d5ba:	f04f 0000 	mov.w	r0, #0
9000d5be:	f380 8814 	msr	CONTROL, r0
9000d5c2:	b662      	cpsie	i
9000d5c4:	b661      	cpsie	f
9000d5c6:	f3bf 8f4f 	dsb	sy
9000d5ca:	f3bf 8f6f 	isb	sy
9000d5ce:	df00      	svc	0
9000d5d0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000d5d2:	0000      	.short	0x0000
9000d5d4:	e000ed08 	.word	0xe000ed08

9000d5d8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000d5d8:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000d5e8 <vPortEnableVFP+0x10>
9000d5dc:	6801      	ldr	r1, [r0, #0]
9000d5de:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000d5e2:	6001      	str	r1, [r0, #0]
9000d5e4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000d5e6:	0000      	.short	0x0000
9000d5e8:	e000ed88 	.word	0xe000ed88

9000d5ec <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000d5ec:	4b0e      	ldr	r3, [pc, #56]	@ (9000d628 <prvTaskExitError+0x3c>)
{
9000d5ee:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000d5f0:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000d5f2:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000d5f4:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000d5f6:	3301      	adds	r3, #1
9000d5f8:	d008      	beq.n	9000d60c <prvTaskExitError+0x20>
9000d5fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d5fe:	f383 8811 	msr	BASEPRI, r3
9000d602:	f3bf 8f6f 	isb	sy
9000d606:	f3bf 8f4f 	dsb	sy
9000d60a:	e7fe      	b.n	9000d60a <prvTaskExitError+0x1e>
9000d60c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d610:	f383 8811 	msr	BASEPRI, r3
9000d614:	f3bf 8f6f 	isb	sy
9000d618:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d61c:	9b01      	ldr	r3, [sp, #4]
9000d61e:	2b00      	cmp	r3, #0
9000d620:	d0fc      	beq.n	9000d61c <prvTaskExitError+0x30>
}
9000d622:	b002      	add	sp, #8
9000d624:	4770      	bx	lr
9000d626:	bf00      	nop
9000d628:	24000084 	.word	0x24000084

9000d62c <pxPortInitialiseStack>:
{
9000d62c:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d62e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d632:	4809      	ldr	r0, [pc, #36]	@ (9000d658 <pxPortInitialiseStack+0x2c>)
{
9000d634:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000d636:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d63a:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000d63e:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000d642:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d646:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d64a:	f06f 0102 	mvn.w	r1, #2
}
9000d64e:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d652:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000d656:	4770      	bx	lr
9000d658:	9000d5ed 	.word	0x9000d5ed
9000d65c:	00000000 	.word	0x00000000

9000d660 <SVC_Handler>:
	__asm volatile (
9000d660:	4b07      	ldr	r3, [pc, #28]	@ (9000d680 <pxCurrentTCBConst2>)
9000d662:	6819      	ldr	r1, [r3, #0]
9000d664:	6808      	ldr	r0, [r1, #0]
9000d666:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d66a:	f380 8809 	msr	PSP, r0
9000d66e:	f3bf 8f6f 	isb	sy
9000d672:	f04f 0000 	mov.w	r0, #0
9000d676:	f380 8811 	msr	BASEPRI, r0
9000d67a:	4770      	bx	lr
9000d67c:	f3af 8000 	nop.w

9000d680 <pxCurrentTCBConst2>:
9000d680:	24021b20 	.word	0x24021b20

9000d684 <vPortEnterCritical>:
9000d684:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d688:	f383 8811 	msr	BASEPRI, r3
9000d68c:	f3bf 8f6f 	isb	sy
9000d690:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000d694:	4a0b      	ldr	r2, [pc, #44]	@ (9000d6c4 <vPortEnterCritical+0x40>)
9000d696:	6813      	ldr	r3, [r2, #0]
9000d698:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000d69a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000d69c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000d69e:	d000      	beq.n	9000d6a2 <vPortEnterCritical+0x1e>
}
9000d6a0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000d6a2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d6a6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000d6aa:	b2db      	uxtb	r3, r3
9000d6ac:	2b00      	cmp	r3, #0
9000d6ae:	d0f7      	beq.n	9000d6a0 <vPortEnterCritical+0x1c>
9000d6b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d6b4:	f383 8811 	msr	BASEPRI, r3
9000d6b8:	f3bf 8f6f 	isb	sy
9000d6bc:	f3bf 8f4f 	dsb	sy
9000d6c0:	e7fe      	b.n	9000d6c0 <vPortEnterCritical+0x3c>
9000d6c2:	bf00      	nop
9000d6c4:	24000084 	.word	0x24000084

9000d6c8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000d6c8:	4a08      	ldr	r2, [pc, #32]	@ (9000d6ec <vPortExitCritical+0x24>)
9000d6ca:	6813      	ldr	r3, [r2, #0]
9000d6cc:	b943      	cbnz	r3, 9000d6e0 <vPortExitCritical+0x18>
9000d6ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d6d2:	f383 8811 	msr	BASEPRI, r3
9000d6d6:	f3bf 8f6f 	isb	sy
9000d6da:	f3bf 8f4f 	dsb	sy
9000d6de:	e7fe      	b.n	9000d6de <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000d6e0:	3b01      	subs	r3, #1
9000d6e2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000d6e4:	b90b      	cbnz	r3, 9000d6ea <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000d6e6:	f383 8811 	msr	BASEPRI, r3
}
9000d6ea:	4770      	bx	lr
9000d6ec:	24000084 	.word	0x24000084

9000d6f0 <PendSV_Handler>:
	__asm volatile
9000d6f0:	f3ef 8009 	mrs	r0, PSP
9000d6f4:	f3bf 8f6f 	isb	sy
9000d6f8:	4b15      	ldr	r3, [pc, #84]	@ (9000d750 <pxCurrentTCBConst>)
9000d6fa:	681a      	ldr	r2, [r3, #0]
9000d6fc:	f01e 0f10 	tst.w	lr, #16
9000d700:	bf08      	it	eq
9000d702:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000d706:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d70a:	6010      	str	r0, [r2, #0]
9000d70c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000d710:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000d714:	f380 8811 	msr	BASEPRI, r0
9000d718:	f3bf 8f4f 	dsb	sy
9000d71c:	f3bf 8f6f 	isb	sy
9000d720:	f001 fda8 	bl	9000f274 <vTaskSwitchContext>
9000d724:	f04f 0000 	mov.w	r0, #0
9000d728:	f380 8811 	msr	BASEPRI, r0
9000d72c:	bc09      	pop	{r0, r3}
9000d72e:	6819      	ldr	r1, [r3, #0]
9000d730:	6808      	ldr	r0, [r1, #0]
9000d732:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d736:	f01e 0f10 	tst.w	lr, #16
9000d73a:	bf08      	it	eq
9000d73c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000d740:	f380 8809 	msr	PSP, r0
9000d744:	f3bf 8f6f 	isb	sy
9000d748:	4770      	bx	lr
9000d74a:	bf00      	nop
9000d74c:	f3af 8000 	nop.w

9000d750 <pxCurrentTCBConst>:
9000d750:	24021b20 	.word	0x24021b20

9000d754 <xPortSysTickHandler>:
{
9000d754:	b508      	push	{r3, lr}
	__asm volatile
9000d756:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d75a:	f383 8811 	msr	BASEPRI, r3
9000d75e:	f3bf 8f6f 	isb	sy
9000d762:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000d766:	f001 fd5f 	bl	9000f228 <xTaskIncrementTick>
9000d76a:	b128      	cbz	r0, 9000d778 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000d76c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d770:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d774:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000d778:	2300      	movs	r3, #0
9000d77a:	f383 8811 	msr	BASEPRI, r3
}
9000d77e:	bd08      	pop	{r3, pc}

9000d780 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d780:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000d784:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d786:	4806      	ldr	r0, [pc, #24]	@ (9000d7a0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d788:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d78a:	4906      	ldr	r1, [pc, #24]	@ (9000d7a4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000d78c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d78e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d790:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d792:	fba1 1303 	umull	r1, r3, r1, r3
9000d796:	099b      	lsrs	r3, r3, #6
9000d798:	3b01      	subs	r3, #1
9000d79a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d79c:	6110      	str	r0, [r2, #16]
}
9000d79e:	4770      	bx	lr
9000d7a0:	24000078 	.word	0x24000078
9000d7a4:	10624dd3 	.word	0x10624dd3

9000d7a8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d7a8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d7ac:	4a48      	ldr	r2, [pc, #288]	@ (9000d8d0 <xPortStartScheduler+0x128>)
9000d7ae:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000d7b2:	4291      	cmp	r1, r2
9000d7b4:	d041      	beq.n	9000d83a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d7b6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000d7ba:	4b46      	ldr	r3, [pc, #280]	@ (9000d8d4 <xPortStartScheduler+0x12c>)
9000d7bc:	429a      	cmp	r2, r3
9000d7be:	d033      	beq.n	9000d828 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d7c0:	4b45      	ldr	r3, [pc, #276]	@ (9000d8d8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d7c2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d7c6:	4845      	ldr	r0, [pc, #276]	@ (9000d8dc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d7c8:	4945      	ldr	r1, [pc, #276]	@ (9000d8e0 <xPortStartScheduler+0x138>)
{
9000d7ca:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d7cc:	781a      	ldrb	r2, [r3, #0]
{
9000d7ce:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d7d0:	b2d2      	uxtb	r2, r2
9000d7d2:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d7d4:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d7d6:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d7da:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d7dc:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d7de:	b2db      	uxtb	r3, r3
9000d7e0:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d7e4:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7e8:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d7ec:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7f0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d7f2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7f4:	d50f      	bpl.n	9000d816 <xPortStartScheduler+0x6e>
9000d7f6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d7f8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d7fc:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7fe:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d800:	005b      	lsls	r3, r3, #1
9000d802:	b2db      	uxtb	r3, r3
9000d804:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d808:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d80c:	061b      	lsls	r3, r3, #24
9000d80e:	d4f3      	bmi.n	9000d7f8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000d810:	2903      	cmp	r1, #3
9000d812:	d01b      	beq.n	9000d84c <xPortStartScheduler+0xa4>
9000d814:	6001      	str	r1, [r0, #0]
	__asm volatile
9000d816:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d81a:	f383 8811 	msr	BASEPRI, r3
9000d81e:	f3bf 8f6f 	isb	sy
9000d822:	f3bf 8f4f 	dsb	sy
9000d826:	e7fe      	b.n	9000d826 <xPortStartScheduler+0x7e>
9000d828:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d82c:	f383 8811 	msr	BASEPRI, r3
9000d830:	f3bf 8f6f 	isb	sy
9000d834:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d838:	e7fe      	b.n	9000d838 <xPortStartScheduler+0x90>
9000d83a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d83e:	f383 8811 	msr	BASEPRI, r3
9000d842:	f3bf 8f6f 	isb	sy
9000d846:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d84a:	e7fe      	b.n	9000d84a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d84c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d84e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d852:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d856:	4a20      	ldr	r2, [pc, #128]	@ (9000d8d8 <xPortStartScheduler+0x130>)
9000d858:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000d85a:	4e22      	ldr	r6, [pc, #136]	@ (9000d8e4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d85c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000d85e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d860:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d862:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000d866:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000d86a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000d86e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000d872:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000d876:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000d87a:	f7ff ff81 	bl	9000d780 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000d87e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000d880:	f7ff feaa 	bl	9000d5d8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000d884:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000d888:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000d88c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000d890:	f7ff fe8e 	bl	9000d5b0 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000d894:	f001 fcee 	bl	9000f274 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000d898:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000d89a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000d89c:	3301      	adds	r3, #1
9000d89e:	d008      	beq.n	9000d8b2 <xPortStartScheduler+0x10a>
9000d8a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d8a4:	f383 8811 	msr	BASEPRI, r3
9000d8a8:	f3bf 8f6f 	isb	sy
9000d8ac:	f3bf 8f4f 	dsb	sy
9000d8b0:	e7fe      	b.n	9000d8b0 <xPortStartScheduler+0x108>
9000d8b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d8b6:	f383 8811 	msr	BASEPRI, r3
9000d8ba:	f3bf 8f6f 	isb	sy
9000d8be:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d8c2:	9b03      	ldr	r3, [sp, #12]
9000d8c4:	2b00      	cmp	r3, #0
9000d8c6:	d0fc      	beq.n	9000d8c2 <xPortStartScheduler+0x11a>
}
9000d8c8:	2000      	movs	r0, #0
9000d8ca:	b004      	add	sp, #16
9000d8cc:	bd70      	pop	{r4, r5, r6, pc}
9000d8ce:	bf00      	nop
9000d8d0:	410fc271 	.word	0x410fc271
9000d8d4:	410fc270 	.word	0x410fc270
9000d8d8:	e000e400 	.word	0xe000e400
9000d8dc:	240215e0 	.word	0x240215e0
9000d8e0:	240215e4 	.word	0x240215e4
9000d8e4:	24000084 	.word	0x24000084

9000d8e8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000d8e8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000d8ec:	2b0f      	cmp	r3, #15
9000d8ee:	d90e      	bls.n	9000d90e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d8f0:	4911      	ldr	r1, [pc, #68]	@ (9000d938 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d8f2:	4a12      	ldr	r2, [pc, #72]	@ (9000d93c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d8f4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d8f6:	7812      	ldrb	r2, [r2, #0]
9000d8f8:	429a      	cmp	r2, r3
9000d8fa:	d908      	bls.n	9000d90e <vPortValidateInterruptPriority+0x26>
9000d8fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d900:	f383 8811 	msr	BASEPRI, r3
9000d904:	f3bf 8f6f 	isb	sy
9000d908:	f3bf 8f4f 	dsb	sy
9000d90c:	e7fe      	b.n	9000d90c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000d90e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d912:	4a0b      	ldr	r2, [pc, #44]	@ (9000d940 <vPortValidateInterruptPriority+0x58>)
9000d914:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000d918:	6812      	ldr	r2, [r2, #0]
9000d91a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000d91e:	4293      	cmp	r3, r2
9000d920:	d908      	bls.n	9000d934 <vPortValidateInterruptPriority+0x4c>
9000d922:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d926:	f383 8811 	msr	BASEPRI, r3
9000d92a:	f3bf 8f6f 	isb	sy
9000d92e:	f3bf 8f4f 	dsb	sy
9000d932:	e7fe      	b.n	9000d932 <vPortValidateInterruptPriority+0x4a>
	}
9000d934:	4770      	bx	lr
9000d936:	bf00      	nop
9000d938:	e000e3f0 	.word	0xe000e3f0
9000d93c:	240215e4 	.word	0x240215e4
9000d940:	240215e0 	.word	0x240215e0

9000d944 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000d944:	b570      	push	{r4, r5, r6, lr}
9000d946:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d948:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000d94a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d94c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d94e:	b92a      	cbnz	r2, 9000d95c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000d950:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d952:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000d954:	b34e      	cbz	r6, 9000d9aa <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
9000d956:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d958:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000d95a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000d95c:	b97e      	cbnz	r6, 9000d97e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000d95e:	6840      	ldr	r0, [r0, #4]
9000d960:	f019 fdc7 	bl	900274f2 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d964:	6863      	ldr	r3, [r4, #4]
9000d966:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d968:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d96a:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d96c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d96e:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000d970:	bf24      	itt	cs
9000d972:	6823      	ldrcs	r3, [r4, #0]
9000d974:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d976:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
9000d978:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d97a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000d97c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000d97e:	68c0      	ldr	r0, [r0, #12]
9000d980:	f019 fdb7 	bl	900274f2 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d984:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000d986:	68e3      	ldr	r3, [r4, #12]
9000d988:	4251      	negs	r1, r2
9000d98a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d98c:	6822      	ldr	r2, [r4, #0]
9000d98e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d990:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d992:	d202      	bcs.n	9000d99a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000d994:	68a3      	ldr	r3, [r4, #8]
9000d996:	440b      	add	r3, r1
9000d998:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000d99a:	2e02      	cmp	r6, #2
9000d99c:	d1eb      	bne.n	9000d976 <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000d99e:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000d9a0:	f04f 0000 	mov.w	r0, #0
9000d9a4:	bf38      	it	cc
9000d9a6:	2501      	movcc	r5, #1
9000d9a8:	e7d6      	b.n	9000d958 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000d9aa:	6880      	ldr	r0, [r0, #8]
9000d9ac:	f001 fe34 	bl	9000f618 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000d9b0:	60a6      	str	r6, [r4, #8]
9000d9b2:	e7d1      	b.n	9000d958 <prvCopyDataToQueue+0x14>

9000d9b4 <xQueueGenericCreateStatic>:
	{
9000d9b4:	b530      	push	{r4, r5, lr}
9000d9b6:	b083      	sub	sp, #12
9000d9b8:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000d9bc:	b940      	cbnz	r0, 9000d9d0 <xQueueGenericCreateStatic+0x1c>
9000d9be:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9c2:	f383 8811 	msr	BASEPRI, r3
9000d9c6:	f3bf 8f6f 	isb	sy
9000d9ca:	f3bf 8f4f 	dsb	sy
9000d9ce:	e7fe      	b.n	9000d9ce <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000d9d0:	461c      	mov	r4, r3
9000d9d2:	b153      	cbz	r3, 9000d9ea <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000d9d4:	b30a      	cbz	r2, 9000da1a <xQueueGenericCreateStatic+0x66>
9000d9d6:	b989      	cbnz	r1, 9000d9fc <xQueueGenericCreateStatic+0x48>
9000d9d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9dc:	f383 8811 	msr	BASEPRI, r3
9000d9e0:	f3bf 8f6f 	isb	sy
9000d9e4:	f3bf 8f4f 	dsb	sy
9000d9e8:	e7fe      	b.n	9000d9e8 <xQueueGenericCreateStatic+0x34>
9000d9ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9ee:	f383 8811 	msr	BASEPRI, r3
9000d9f2:	f3bf 8f6f 	isb	sy
9000d9f6:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000d9fa:	e7fe      	b.n	9000d9fa <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000d9fc:	b16a      	cbz	r2, 9000da1a <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000d9fe:	2350      	movs	r3, #80	@ 0x50
9000da00:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000da02:	9b01      	ldr	r3, [sp, #4]
9000da04:	2b50      	cmp	r3, #80	@ 0x50
9000da06:	d013      	beq.n	9000da30 <xQueueGenericCreateStatic+0x7c>
9000da08:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da0c:	f383 8811 	msr	BASEPRI, r3
9000da10:	f3bf 8f6f 	isb	sy
9000da14:	f3bf 8f4f 	dsb	sy
9000da18:	e7fe      	b.n	9000da18 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000da1a:	2900      	cmp	r1, #0
9000da1c:	d0ef      	beq.n	9000d9fe <xQueueGenericCreateStatic+0x4a>
9000da1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da22:	f383 8811 	msr	BASEPRI, r3
9000da26:	f3bf 8f6f 	isb	sy
9000da2a:	f3bf 8f4f 	dsb	sy
9000da2e:	e7fe      	b.n	9000da2e <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000da30:	2900      	cmp	r1, #0
9000da32:	bf08      	it	eq
9000da34:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000da36:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000da38:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000da3a:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000da3c:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000da3e:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000da40:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000da44:	f7ff fe1e 	bl	9000d684 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da48:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000da4a:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000da4e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da50:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000da54:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da58:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da5a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da5c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da5e:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000da60:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000da62:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da64:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000da66:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000da68:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000da6c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000da70:	f7ff fd54 	bl	9000d51c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000da74:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000da78:	f7ff fd50 	bl	9000d51c <vListInitialise>
	taskEXIT_CRITICAL();
9000da7c:	f7ff fe24 	bl	9000d6c8 <vPortExitCritical>
	}
9000da80:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000da82:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000da86:	b003      	add	sp, #12
9000da88:	bd30      	pop	{r4, r5, pc}
9000da8a:	bf00      	nop

9000da8c <xQueueGenericCreate>:
	{
9000da8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000da8e:	b940      	cbnz	r0, 9000daa2 <xQueueGenericCreate+0x16>
9000da90:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da94:	f383 8811 	msr	BASEPRI, r3
9000da98:	f3bf 8f6f 	isb	sy
9000da9c:	f3bf 8f4f 	dsb	sy
9000daa0:	e7fe      	b.n	9000daa0 <xQueueGenericCreate+0x14>
9000daa2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000daa4:	fb01 f000 	mul.w	r0, r1, r0
9000daa8:	460e      	mov	r6, r1
9000daaa:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000daac:	3050      	adds	r0, #80	@ 0x50
9000daae:	f7ff fc13 	bl	9000d2d8 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dab2:	4604      	mov	r4, r0
9000dab4:	b340      	cbz	r0, 9000db08 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dab6:	2300      	movs	r3, #0
9000dab8:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000dabc:	b336      	cbz	r6, 9000db0c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dabe:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000dac2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000dac4:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000dac8:	f7ff fddc 	bl	9000d684 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dacc:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dace:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dad2:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dad4:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000dad8:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dadc:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dade:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dae0:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dae2:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dae4:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000dae6:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dae8:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000daea:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000daec:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000daf0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000daf4:	f7ff fd12 	bl	9000d51c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000daf8:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000dafc:	f7ff fd0e 	bl	9000d51c <vListInitialise>
	taskEXIT_CRITICAL();
9000db00:	f7ff fde2 	bl	9000d6c8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000db04:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000db08:	4620      	mov	r0, r4
9000db0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000db0c:	4603      	mov	r3, r0
9000db0e:	e7d8      	b.n	9000dac2 <xQueueGenericCreate+0x36>

9000db10 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000db10:	b940      	cbnz	r0, 9000db24 <xQueueCreateCountingSemaphoreStatic+0x14>
9000db12:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db16:	f383 8811 	msr	BASEPRI, r3
9000db1a:	f3bf 8f6f 	isb	sy
9000db1e:	f3bf 8f4f 	dsb	sy
9000db22:	e7fe      	b.n	9000db22 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000db24:	4288      	cmp	r0, r1
9000db26:	d208      	bcs.n	9000db3a <xQueueCreateCountingSemaphoreStatic+0x2a>
9000db28:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db2c:	f383 8811 	msr	BASEPRI, r3
9000db30:	f3bf 8f6f 	isb	sy
9000db34:	f3bf 8f4f 	dsb	sy
9000db38:	e7fe      	b.n	9000db38 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000db3a:	b530      	push	{r4, r5, lr}
9000db3c:	4614      	mov	r4, r2
9000db3e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000db40:	2a00      	cmp	r2, #0
9000db42:	d03b      	beq.n	9000dbbc <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000db44:	2350      	movs	r3, #80	@ 0x50
9000db46:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000db48:	9b03      	ldr	r3, [sp, #12]
9000db4a:	2b50      	cmp	r3, #80	@ 0x50
9000db4c:	d008      	beq.n	9000db60 <xQueueCreateCountingSemaphoreStatic+0x50>
9000db4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db52:	f383 8811 	msr	BASEPRI, r3
9000db56:	f3bf 8f6f 	isb	sy
9000db5a:	f3bf 8f4f 	dsb	sy
9000db5e:	e7fe      	b.n	9000db5e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000db60:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000db62:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000db64:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000db66:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000db68:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000db6c:	6415      	str	r5, [r2, #64]	@ 0x40
9000db6e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000db70:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000db72:	f7ff fd87 	bl	9000d684 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db76:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000db78:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000db7a:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db7c:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000db80:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db84:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db86:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db88:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db8a:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000db8c:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db8e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db92:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000db94:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000db98:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db9c:	f7ff fcbe 	bl	9000d51c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dba0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000dba4:	f7ff fcba 	bl	9000d51c <vListInitialise>
	taskEXIT_CRITICAL();
9000dba8:	f7ff fd8e 	bl	9000d6c8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dbac:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dbae:	9901      	ldr	r1, [sp, #4]
	}
9000dbb0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000dbb2:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dbb6:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000dbb8:	b005      	add	sp, #20
9000dbba:	bd30      	pop	{r4, r5, pc}
9000dbbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dbc0:	f383 8811 	msr	BASEPRI, r3
9000dbc4:	f3bf 8f6f 	isb	sy
9000dbc8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000dbcc:	e7fe      	b.n	9000dbcc <xQueueCreateCountingSemaphoreStatic+0xbc>
9000dbce:	bf00      	nop

9000dbd0 <xQueueCreateCountingSemaphore>:
	{
9000dbd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000dbd2:	b940      	cbnz	r0, 9000dbe6 <xQueueCreateCountingSemaphore+0x16>
9000dbd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dbd8:	f383 8811 	msr	BASEPRI, r3
9000dbdc:	f3bf 8f6f 	isb	sy
9000dbe0:	f3bf 8f4f 	dsb	sy
9000dbe4:	e7fe      	b.n	9000dbe4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000dbe6:	4288      	cmp	r0, r1
9000dbe8:	4604      	mov	r4, r0
9000dbea:	460e      	mov	r6, r1
9000dbec:	d208      	bcs.n	9000dc00 <xQueueCreateCountingSemaphore+0x30>
9000dbee:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dbf2:	f383 8811 	msr	BASEPRI, r3
9000dbf6:	f3bf 8f6f 	isb	sy
9000dbfa:	f3bf 8f4f 	dsb	sy
9000dbfe:	e7fe      	b.n	9000dbfe <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dc00:	2050      	movs	r0, #80	@ 0x50
9000dc02:	f7ff fb69 	bl	9000d2d8 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dc06:	4605      	mov	r5, r0
9000dc08:	b330      	cbz	r0, 9000dc58 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dc0a:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dc0c:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000dc0e:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dc10:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000dc14:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000dc16:	f7ff fd35 	bl	9000d684 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc1a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dc1c:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc1e:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dc22:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc24:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000dc28:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc2c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc2e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc30:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc32:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000dc34:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc36:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000dc38:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dc3c:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc40:	f7ff fc6c 	bl	9000d51c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dc44:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000dc48:	f7ff fc68 	bl	9000d51c <vListInitialise>
	taskEXIT_CRITICAL();
9000dc4c:	f7ff fd3c 	bl	9000d6c8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dc50:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dc52:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000dc54:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000dc58:	4628      	mov	r0, r5
9000dc5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000dc5c <xQueueGenericSend>:
{
9000dc5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000dc60:	b084      	sub	sp, #16
9000dc62:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000dc64:	2800      	cmp	r0, #0
9000dc66:	f000 8103 	beq.w	9000de70 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dc6a:	4688      	mov	r8, r1
9000dc6c:	4604      	mov	r4, r0
9000dc6e:	461f      	mov	r7, r3
9000dc70:	2900      	cmp	r1, #0
9000dc72:	f000 8097 	beq.w	9000dda4 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000dc76:	2f02      	cmp	r7, #2
9000dc78:	d10b      	bne.n	9000dc92 <xQueueGenericSend+0x36>
9000dc7a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000dc7c:	2b01      	cmp	r3, #1
9000dc7e:	d008      	beq.n	9000dc92 <xQueueGenericSend+0x36>
9000dc80:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc84:	f383 8811 	msr	BASEPRI, r3
9000dc88:	f3bf 8f6f 	isb	sy
9000dc8c:	f3bf 8f4f 	dsb	sy
9000dc90:	e7fe      	b.n	9000dc90 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000dc92:	f001 fc71 	bl	9000f578 <xTaskGetSchedulerState>
9000dc96:	2800      	cmp	r0, #0
9000dc98:	f000 80f3 	beq.w	9000de82 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dc9c:	f1a7 0902 	sub.w	r9, r7, #2
9000dca0:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dca2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dca6:	fab9 f989 	clz	r9, r9
9000dcaa:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000dcae:	f7ff fce9 	bl	9000d684 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dcb2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000dcb4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000dcb6:	429a      	cmp	r2, r3
9000dcb8:	f0c0 80f0 	bcc.w	9000de9c <xQueueGenericSend+0x240>
9000dcbc:	f1b9 0f00 	cmp.w	r9, #0
9000dcc0:	f040 80ec 	bne.w	9000de9c <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000dcc4:	9b01      	ldr	r3, [sp, #4]
9000dcc6:	2b00      	cmp	r3, #0
9000dcc8:	f000 8101 	beq.w	9000dece <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000dccc:	2d00      	cmp	r5, #0
9000dcce:	f000 80cb 	beq.w	9000de68 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000dcd2:	f7ff fcf9 	bl	9000d6c8 <vPortExitCritical>
		vTaskSuspendAll();
9000dcd6:	f001 fa89 	bl	9000f1ec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000dcda:	f7ff fcd3 	bl	9000d684 <vPortEnterCritical>
9000dcde:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000dce2:	2bff      	cmp	r3, #255	@ 0xff
9000dce4:	d102      	bne.n	9000dcec <xQueueGenericSend+0x90>
9000dce6:	2300      	movs	r3, #0
9000dce8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000dcec:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000dcf0:	2bff      	cmp	r3, #255	@ 0xff
9000dcf2:	d102      	bne.n	9000dcfa <xQueueGenericSend+0x9e>
9000dcf4:	2300      	movs	r3, #0
9000dcf6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000dcfa:	f7ff fce5 	bl	9000d6c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000dcfe:	a901      	add	r1, sp, #4
9000dd00:	a802      	add	r0, sp, #8
9000dd02:	f001 fbf1 	bl	9000f4e8 <xTaskCheckForTimeOut>
9000dd06:	2800      	cmp	r0, #0
9000dd08:	f040 80e5 	bne.w	9000ded6 <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000dd0c:	f7ff fcba 	bl	9000d684 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000dd10:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000dd12:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000dd14:	429a      	cmp	r2, r3
9000dd16:	d052      	beq.n	9000ddbe <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000dd18:	f7ff fcd6 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dd1c:	f7ff fcb2 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dd20:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000dd24:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd26:	2d00      	cmp	r5, #0
9000dd28:	dc04      	bgt.n	9000dd34 <xQueueGenericSend+0xd8>
9000dd2a:	e011      	b.n	9000dd50 <xQueueGenericSend+0xf4>
			--cTxLock;
9000dd2c:	1e6a      	subs	r2, r5, #1
9000dd2e:	b2d3      	uxtb	r3, r2
9000dd30:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd32:	b16b      	cbz	r3, 9000dd50 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd34:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd36:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd38:	b153      	cbz	r3, 9000dd50 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd3a:	f001 fb83 	bl	9000f444 <xTaskRemoveFromEventList>
9000dd3e:	2800      	cmp	r0, #0
9000dd40:	d0f4      	beq.n	9000dd2c <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000dd42:	f001 fc13 	bl	9000f56c <vTaskMissedYield>
			--cTxLock;
9000dd46:	1e6a      	subs	r2, r5, #1
9000dd48:	b2d3      	uxtb	r3, r2
9000dd4a:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd4c:	2b00      	cmp	r3, #0
9000dd4e:	d1f1      	bne.n	9000dd34 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000dd50:	23ff      	movs	r3, #255	@ 0xff
9000dd52:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000dd56:	f7ff fcb7 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dd5a:	f7ff fc93 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dd5e:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000dd62:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd64:	2d00      	cmp	r5, #0
9000dd66:	dd14      	ble.n	9000dd92 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd68:	f104 0a10 	add.w	sl, r4, #16
9000dd6c:	e003      	b.n	9000dd76 <xQueueGenericSend+0x11a>
				--cRxLock;
9000dd6e:	1e6a      	subs	r2, r5, #1
9000dd70:	b2d3      	uxtb	r3, r2
9000dd72:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd74:	b16b      	cbz	r3, 9000dd92 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dd76:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd78:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dd7a:	b153      	cbz	r3, 9000dd92 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd7c:	f001 fb62 	bl	9000f444 <xTaskRemoveFromEventList>
9000dd80:	2800      	cmp	r0, #0
9000dd82:	d0f4      	beq.n	9000dd6e <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000dd84:	f001 fbf2 	bl	9000f56c <vTaskMissedYield>
				--cRxLock;
9000dd88:	1e6a      	subs	r2, r5, #1
9000dd8a:	b2d3      	uxtb	r3, r2
9000dd8c:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd8e:	2b00      	cmp	r3, #0
9000dd90:	d1f1      	bne.n	9000dd76 <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000dd92:	23ff      	movs	r3, #255	@ 0xff
9000dd94:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000dd98:	f7ff fc96 	bl	9000d6c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000dd9c:	f001 fa2e 	bl	9000f1fc <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dda0:	2501      	movs	r5, #1
9000dda2:	e784      	b.n	9000dcae <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dda4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000dda6:	2b00      	cmp	r3, #0
9000dda8:	f43f af65 	beq.w	9000dc76 <xQueueGenericSend+0x1a>
9000ddac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ddb0:	f383 8811 	msr	BASEPRI, r3
9000ddb4:	f3bf 8f6f 	isb	sy
9000ddb8:	f3bf 8f4f 	dsb	sy
9000ddbc:	e7fe      	b.n	9000ddbc <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ddbe:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000ddc2:	f7ff fc81 	bl	9000d6c8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ddc6:	9901      	ldr	r1, [sp, #4]
9000ddc8:	4650      	mov	r0, sl
9000ddca:	f001 faad 	bl	9000f328 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000ddce:	f7ff fc59 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ddd2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000ddd6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ddd8:	2d00      	cmp	r5, #0
9000ddda:	dc04      	bgt.n	9000dde6 <xQueueGenericSend+0x18a>
9000dddc:	e011      	b.n	9000de02 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000ddde:	1e6b      	subs	r3, r5, #1
9000dde0:	b2da      	uxtb	r2, r3
9000dde2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dde4:	b16a      	cbz	r2, 9000de02 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dde6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dde8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ddea:	b153      	cbz	r3, 9000de02 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ddec:	f001 fb2a 	bl	9000f444 <xTaskRemoveFromEventList>
9000ddf0:	2800      	cmp	r0, #0
9000ddf2:	d0f4      	beq.n	9000ddde <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000ddf4:	f001 fbba 	bl	9000f56c <vTaskMissedYield>
			--cTxLock;
9000ddf8:	1e6b      	subs	r3, r5, #1
9000ddfa:	b2da      	uxtb	r2, r3
9000ddfc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ddfe:	2a00      	cmp	r2, #0
9000de00:	d1f1      	bne.n	9000dde6 <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000de02:	23ff      	movs	r3, #255	@ 0xff
9000de04:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000de08:	f7ff fc5e 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000de0c:	f7ff fc3a 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000de10:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000de14:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de16:	2d00      	cmp	r5, #0
9000de18:	dc04      	bgt.n	9000de24 <xQueueGenericSend+0x1c8>
9000de1a:	e011      	b.n	9000de40 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000de1c:	1e6b      	subs	r3, r5, #1
9000de1e:	b2da      	uxtb	r2, r3
9000de20:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de22:	b16a      	cbz	r2, 9000de40 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de24:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de26:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de28:	b153      	cbz	r3, 9000de40 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de2a:	f001 fb0b 	bl	9000f444 <xTaskRemoveFromEventList>
9000de2e:	2800      	cmp	r0, #0
9000de30:	d0f4      	beq.n	9000de1c <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000de32:	f001 fb9b 	bl	9000f56c <vTaskMissedYield>
				--cRxLock;
9000de36:	1e6b      	subs	r3, r5, #1
9000de38:	b2da      	uxtb	r2, r3
9000de3a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de3c:	2a00      	cmp	r2, #0
9000de3e:	d1f1      	bne.n	9000de24 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000de40:	23ff      	movs	r3, #255	@ 0xff
9000de42:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000de46:	f7ff fc3f 	bl	9000d6c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000de4a:	f001 f9d7 	bl	9000f1fc <xTaskResumeAll>
9000de4e:	2800      	cmp	r0, #0
9000de50:	d1a6      	bne.n	9000dda0 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000de52:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000de56:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000de5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000de5e:	f3bf 8f4f 	dsb	sy
9000de62:	f3bf 8f6f 	isb	sy
9000de66:	e79b      	b.n	9000dda0 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000de68:	a802      	add	r0, sp, #8
9000de6a:	f001 fb31 	bl	9000f4d0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000de6e:	e730      	b.n	9000dcd2 <xQueueGenericSend+0x76>
9000de70:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de74:	f383 8811 	msr	BASEPRI, r3
9000de78:	f3bf 8f6f 	isb	sy
9000de7c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000de80:	e7fe      	b.n	9000de80 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000de82:	9b01      	ldr	r3, [sp, #4]
9000de84:	2b00      	cmp	r3, #0
9000de86:	f43f af09 	beq.w	9000dc9c <xQueueGenericSend+0x40>
9000de8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de8e:	f383 8811 	msr	BASEPRI, r3
9000de92:	f3bf 8f6f 	isb	sy
9000de96:	f3bf 8f4f 	dsb	sy
9000de9a:	e7fe      	b.n	9000de9a <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000de9c:	463a      	mov	r2, r7
9000de9e:	4641      	mov	r1, r8
9000dea0:	4620      	mov	r0, r4
9000dea2:	f7ff fd4f 	bl	9000d944 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dea6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000dea8:	2b00      	cmp	r3, #0
9000deaa:	d151      	bne.n	9000df50 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000deac:	b148      	cbz	r0, 9000dec2 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000deae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000deb2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000deb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000deba:	f3bf 8f4f 	dsb	sy
9000debe:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000dec2:	f7ff fc01 	bl	9000d6c8 <vPortExitCritical>
				return pdPASS;
9000dec6:	2001      	movs	r0, #1
}
9000dec8:	b004      	add	sp, #16
9000deca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000dece:	f7ff fbfb 	bl	9000d6c8 <vPortExitCritical>
					return errQUEUE_FULL;
9000ded2:	2000      	movs	r0, #0
9000ded4:	e7f8      	b.n	9000dec8 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000ded6:	f7ff fbd5 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000deda:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000dede:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dee0:	2d00      	cmp	r5, #0
9000dee2:	dd10      	ble.n	9000df06 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dee4:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000dee8:	e003      	b.n	9000def2 <xQueueGenericSend+0x296>
			--cTxLock;
9000deea:	1e6b      	subs	r3, r5, #1
9000deec:	b2da      	uxtb	r2, r3
9000deee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000def0:	b14a      	cbz	r2, 9000df06 <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000def2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000def4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000def6:	b133      	cbz	r3, 9000df06 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000def8:	f001 faa4 	bl	9000f444 <xTaskRemoveFromEventList>
9000defc:	2800      	cmp	r0, #0
9000defe:	d0f4      	beq.n	9000deea <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000df00:	f001 fb34 	bl	9000f56c <vTaskMissedYield>
9000df04:	e7f1      	b.n	9000deea <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000df06:	23ff      	movs	r3, #255	@ 0xff
9000df08:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000df0c:	f7ff fbdc 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000df10:	f7ff fbb8 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000df14:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000df18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df1a:	2d00      	cmp	r5, #0
9000df1c:	dd10      	ble.n	9000df40 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df1e:	f104 0610 	add.w	r6, r4, #16
9000df22:	e003      	b.n	9000df2c <xQueueGenericSend+0x2d0>
				--cRxLock;
9000df24:	1e6b      	subs	r3, r5, #1
9000df26:	b2da      	uxtb	r2, r3
9000df28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df2a:	b14a      	cbz	r2, 9000df40 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df2c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df2e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df30:	b133      	cbz	r3, 9000df40 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df32:	f001 fa87 	bl	9000f444 <xTaskRemoveFromEventList>
9000df36:	2800      	cmp	r0, #0
9000df38:	d0f4      	beq.n	9000df24 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000df3a:	f001 fb17 	bl	9000f56c <vTaskMissedYield>
9000df3e:	e7f1      	b.n	9000df24 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000df40:	23ff      	movs	r3, #255	@ 0xff
9000df42:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000df46:	f7ff fbbf 	bl	9000d6c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000df4a:	f001 f957 	bl	9000f1fc <xTaskResumeAll>
			return errQUEUE_FULL;
9000df4e:	e7c0      	b.n	9000ded2 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000df50:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000df54:	f001 fa76 	bl	9000f444 <xTaskRemoveFromEventList>
9000df58:	2800      	cmp	r0, #0
9000df5a:	d0b2      	beq.n	9000dec2 <xQueueGenericSend+0x266>
9000df5c:	e7a7      	b.n	9000deae <xQueueGenericSend+0x252>
9000df5e:	bf00      	nop

9000df60 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000df60:	2800      	cmp	r0, #0
9000df62:	d04b      	beq.n	9000dffc <xQueueGenericSendFromISR+0x9c>
{
9000df64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000df68:	460e      	mov	r6, r1
9000df6a:	4604      	mov	r4, r0
9000df6c:	4617      	mov	r7, r2
9000df6e:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000df70:	b339      	cbz	r1, 9000dfc2 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000df72:	2d02      	cmp	r5, #2
9000df74:	d10b      	bne.n	9000df8e <xQueueGenericSendFromISR+0x2e>
9000df76:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000df78:	2b01      	cmp	r3, #1
9000df7a:	d008      	beq.n	9000df8e <xQueueGenericSendFromISR+0x2e>
9000df7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df80:	f383 8811 	msr	BASEPRI, r3
9000df84:	f3bf 8f6f 	isb	sy
9000df88:	f3bf 8f4f 	dsb	sy
9000df8c:	e7fe      	b.n	9000df8c <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000df8e:	f7ff fcab 	bl	9000d8e8 <vPortValidateInterruptPriority>
	__asm volatile
9000df92:	f3ef 8811 	mrs	r8, BASEPRI
9000df96:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df9a:	f383 8811 	msr	BASEPRI, r3
9000df9e:	f3bf 8f6f 	isb	sy
9000dfa2:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dfa6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000dfa8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000dfaa:	429a      	cmp	r2, r3
9000dfac:	d315      	bcc.n	9000dfda <xQueueGenericSendFromISR+0x7a>
9000dfae:	f1a5 0002 	sub.w	r0, r5, #2
9000dfb2:	fab0 f080 	clz	r0, r0
9000dfb6:	0940      	lsrs	r0, r0, #5
9000dfb8:	b978      	cbnz	r0, 9000dfda <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000dfba:	f388 8811 	msr	BASEPRI, r8
}
9000dfbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dfc2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000dfc4:	2b00      	cmp	r3, #0
9000dfc6:	d0d4      	beq.n	9000df72 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000dfc8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dfcc:	f383 8811 	msr	BASEPRI, r3
9000dfd0:	f3bf 8f6f 	isb	sy
9000dfd4:	f3bf 8f4f 	dsb	sy
9000dfd8:	e7fe      	b.n	9000dfd8 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dfda:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000dfdc:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dfe0:	4631      	mov	r1, r6
9000dfe2:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000dfe4:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000dfe6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dfe8:	f7ff fcac 	bl	9000d944 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000dfec:	1c6b      	adds	r3, r5, #1
9000dfee:	d00e      	beq.n	9000e00e <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000dff0:	1c6b      	adds	r3, r5, #1
9000dff2:	b25b      	sxtb	r3, r3
9000dff4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000dff8:	2001      	movs	r0, #1
9000dffa:	e7de      	b.n	9000dfba <xQueueGenericSendFromISR+0x5a>
9000dffc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e000:	f383 8811 	msr	BASEPRI, r3
9000e004:	f3bf 8f6f 	isb	sy
9000e008:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e00c:	e7fe      	b.n	9000e00c <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e00e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e010:	2b00      	cmp	r3, #0
9000e012:	d0f1      	beq.n	9000dff8 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e014:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e018:	f001 fa14 	bl	9000f444 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e01c:	2800      	cmp	r0, #0
9000e01e:	d0eb      	beq.n	9000dff8 <xQueueGenericSendFromISR+0x98>
9000e020:	2f00      	cmp	r7, #0
9000e022:	d0e9      	beq.n	9000dff8 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e024:	2301      	movs	r3, #1
9000e026:	603b      	str	r3, [r7, #0]
9000e028:	e7e6      	b.n	9000dff8 <xQueueGenericSendFromISR+0x98>
9000e02a:	bf00      	nop

9000e02c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000e02c:	b360      	cbz	r0, 9000e088 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e02e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000e030:	b570      	push	{r4, r5, r6, lr}
9000e032:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000e034:	b143      	cbz	r3, 9000e048 <xQueueGiveFromISR+0x1c>
9000e036:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e03a:	f383 8811 	msr	BASEPRI, r3
9000e03e:	f3bf 8f6f 	isb	sy
9000e042:	f3bf 8f4f 	dsb	sy
9000e046:	e7fe      	b.n	9000e046 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e048:	6803      	ldr	r3, [r0, #0]
9000e04a:	460d      	mov	r5, r1
9000e04c:	b32b      	cbz	r3, 9000e09a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e04e:	f7ff fc4b 	bl	9000d8e8 <vPortValidateInterruptPriority>
	__asm volatile
9000e052:	f3ef 8611 	mrs	r6, BASEPRI
9000e056:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e05a:	f383 8811 	msr	BASEPRI, r3
9000e05e:	f3bf 8f6f 	isb	sy
9000e062:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e066:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000e068:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000e06a:	429a      	cmp	r2, r3
9000e06c:	d921      	bls.n	9000e0b2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000e06e:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e072:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000e074:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e076:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000e078:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000e07a:	d01e      	beq.n	9000e0ba <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e07c:	3301      	adds	r3, #1
9000e07e:	b25b      	sxtb	r3, r3
9000e080:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e084:	2001      	movs	r0, #1
9000e086:	e015      	b.n	9000e0b4 <xQueueGiveFromISR+0x88>
	__asm volatile
9000e088:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e08c:	f383 8811 	msr	BASEPRI, r3
9000e090:	f3bf 8f6f 	isb	sy
9000e094:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e098:	e7fe      	b.n	9000e098 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e09a:	6883      	ldr	r3, [r0, #8]
9000e09c:	2b00      	cmp	r3, #0
9000e09e:	d0d6      	beq.n	9000e04e <xQueueGiveFromISR+0x22>
9000e0a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e0a4:	f383 8811 	msr	BASEPRI, r3
9000e0a8:	f3bf 8f6f 	isb	sy
9000e0ac:	f3bf 8f4f 	dsb	sy
9000e0b0:	e7fe      	b.n	9000e0b0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000e0b2:	2000      	movs	r0, #0
	__asm volatile
9000e0b4:	f386 8811 	msr	BASEPRI, r6
}
9000e0b8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e0ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e0bc:	2b00      	cmp	r3, #0
9000e0be:	d0e1      	beq.n	9000e084 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e0c0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e0c4:	f001 f9be 	bl	9000f444 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e0c8:	2d00      	cmp	r5, #0
9000e0ca:	d0db      	beq.n	9000e084 <xQueueGiveFromISR+0x58>
9000e0cc:	2800      	cmp	r0, #0
9000e0ce:	d0d9      	beq.n	9000e084 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e0d0:	2301      	movs	r3, #1
9000e0d2:	602b      	str	r3, [r5, #0]
9000e0d4:	e7d6      	b.n	9000e084 <xQueueGiveFromISR+0x58>
9000e0d6:	bf00      	nop

9000e0d8 <xQueueReceive>:
{
9000e0d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e0dc:	b085      	sub	sp, #20
9000e0de:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e0e0:	2800      	cmp	r0, #0
9000e0e2:	f000 8164 	beq.w	9000e3ae <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e0e6:	460f      	mov	r7, r1
9000e0e8:	4604      	mov	r4, r0
9000e0ea:	2900      	cmp	r1, #0
9000e0ec:	f000 8097 	beq.w	9000e21e <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e0f0:	f001 fa42 	bl	9000f578 <xTaskGetSchedulerState>
9000e0f4:	2800      	cmp	r0, #0
9000e0f6:	f000 809f 	beq.w	9000e238 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
9000e0fa:	f7ff fac3 	bl	9000d684 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e0fe:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e100:	2d00      	cmp	r5, #0
9000e102:	d175      	bne.n	9000e1f0 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e104:	9b01      	ldr	r3, [sp, #4]
9000e106:	2b00      	cmp	r3, #0
9000e108:	f000 80f4 	beq.w	9000e2f4 <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
9000e10c:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e10e:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e112:	a802      	add	r0, sp, #8
9000e114:	f001 f9dc 	bl	9000f4d0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e118:	f7ff fad6 	bl	9000d6c8 <vPortExitCritical>
		vTaskSuspendAll();
9000e11c:	f001 f866 	bl	9000f1ec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e120:	f7ff fab0 	bl	9000d684 <vPortEnterCritical>
9000e124:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e128:	2bff      	cmp	r3, #255	@ 0xff
9000e12a:	d101      	bne.n	9000e130 <xQueueReceive+0x58>
9000e12c:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000e130:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e134:	2bff      	cmp	r3, #255	@ 0xff
9000e136:	d101      	bne.n	9000e13c <xQueueReceive+0x64>
9000e138:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000e13c:	f7ff fac4 	bl	9000d6c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e140:	a901      	add	r1, sp, #4
9000e142:	a802      	add	r0, sp, #8
9000e144:	f001 f9d0 	bl	9000f4e8 <xTaskCheckForTimeOut>
9000e148:	2800      	cmp	r0, #0
9000e14a:	f040 8082 	bne.w	9000e252 <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
9000e14e:	f7ff fa99 	bl	9000d684 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e152:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e154:	2b00      	cmp	r3, #0
9000e156:	f000 80d3 	beq.w	9000e300 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
9000e15a:	f7ff fab5 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e15e:	f7ff fa91 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e162:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e166:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e168:	2d00      	cmp	r5, #0
9000e16a:	dd14      	ble.n	9000e196 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e16c:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e170:	e003      	b.n	9000e17a <xQueueReceive+0xa2>
			--cTxLock;
9000e172:	1e6b      	subs	r3, r5, #1
9000e174:	b2da      	uxtb	r2, r3
9000e176:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e178:	b16a      	cbz	r2, 9000e196 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e17a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e17c:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e17e:	b153      	cbz	r3, 9000e196 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e180:	f001 f960 	bl	9000f444 <xTaskRemoveFromEventList>
9000e184:	2800      	cmp	r0, #0
9000e186:	d0f4      	beq.n	9000e172 <xQueueReceive+0x9a>
						vTaskMissedYield();
9000e188:	f001 f9f0 	bl	9000f56c <vTaskMissedYield>
			--cTxLock;
9000e18c:	1e6b      	subs	r3, r5, #1
9000e18e:	b2da      	uxtb	r2, r3
9000e190:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e192:	2a00      	cmp	r2, #0
9000e194:	d1f1      	bne.n	9000e17a <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
9000e196:	23ff      	movs	r3, #255	@ 0xff
9000e198:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e19c:	f7ff fa94 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e1a0:	f7ff fa70 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e1a4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e1a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e1aa:	2d00      	cmp	r5, #0
9000e1ac:	dd14      	ble.n	9000e1d8 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e1ae:	f104 0910 	add.w	r9, r4, #16
9000e1b2:	e003      	b.n	9000e1bc <xQueueReceive+0xe4>
				--cRxLock;
9000e1b4:	1e6b      	subs	r3, r5, #1
9000e1b6:	b2da      	uxtb	r2, r3
9000e1b8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e1ba:	b16a      	cbz	r2, 9000e1d8 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e1bc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e1be:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e1c0:	b153      	cbz	r3, 9000e1d8 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e1c2:	f001 f93f 	bl	9000f444 <xTaskRemoveFromEventList>
9000e1c6:	2800      	cmp	r0, #0
9000e1c8:	d0f4      	beq.n	9000e1b4 <xQueueReceive+0xdc>
					vTaskMissedYield();
9000e1ca:	f001 f9cf 	bl	9000f56c <vTaskMissedYield>
				--cRxLock;
9000e1ce:	1e6b      	subs	r3, r5, #1
9000e1d0:	b2da      	uxtb	r2, r3
9000e1d2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e1d4:	2a00      	cmp	r2, #0
9000e1d6:	d1f1      	bne.n	9000e1bc <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
9000e1d8:	23ff      	movs	r3, #255	@ 0xff
9000e1da:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e1de:	f7ff fa73 	bl	9000d6c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e1e2:	f001 f80b 	bl	9000f1fc <xTaskResumeAll>
		taskENTER_CRITICAL();
9000e1e6:	f7ff fa4d 	bl	9000d684 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e1ea:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e1ec:	2d00      	cmp	r5, #0
9000e1ee:	d07d      	beq.n	9000e2ec <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e1f0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000e1f2:	b152      	cbz	r2, 9000e20a <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e1f4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e1f6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e1f8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e1fa:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e1fc:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e1fe:	d301      	bcc.n	9000e204 <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e200:	6821      	ldr	r1, [r4, #0]
9000e202:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e204:	4638      	mov	r0, r7
9000e206:	f019 f974 	bl	900274f2 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e20a:	3d01      	subs	r5, #1
9000e20c:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e20e:	6923      	ldr	r3, [r4, #16]
9000e210:	2b00      	cmp	r3, #0
9000e212:	f040 80d5 	bne.w	9000e3c0 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
9000e216:	f7ff fa57 	bl	9000d6c8 <vPortExitCritical>
				return pdPASS;
9000e21a:	2001      	movs	r0, #1
9000e21c:	e06d      	b.n	9000e2fa <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e21e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e220:	2b00      	cmp	r3, #0
9000e222:	f43f af65 	beq.w	9000e0f0 <xQueueReceive+0x18>
	__asm volatile
9000e226:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e22a:	f383 8811 	msr	BASEPRI, r3
9000e22e:	f3bf 8f6f 	isb	sy
9000e232:	f3bf 8f4f 	dsb	sy
9000e236:	e7fe      	b.n	9000e236 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e238:	9b01      	ldr	r3, [sp, #4]
9000e23a:	2b00      	cmp	r3, #0
9000e23c:	f43f af5d 	beq.w	9000e0fa <xQueueReceive+0x22>
9000e240:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e244:	f383 8811 	msr	BASEPRI, r3
9000e248:	f3bf 8f6f 	isb	sy
9000e24c:	f3bf 8f4f 	dsb	sy
9000e250:	e7fe      	b.n	9000e250 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
9000e252:	f7ff fa17 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e256:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e25a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e25c:	2d00      	cmp	r5, #0
9000e25e:	dc04      	bgt.n	9000e26a <xQueueReceive+0x192>
9000e260:	e011      	b.n	9000e286 <xQueueReceive+0x1ae>
			--cTxLock;
9000e262:	1e6b      	subs	r3, r5, #1
9000e264:	b2da      	uxtb	r2, r3
9000e266:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e268:	b16a      	cbz	r2, 9000e286 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e26a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e26c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e26e:	b153      	cbz	r3, 9000e286 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e270:	f001 f8e8 	bl	9000f444 <xTaskRemoveFromEventList>
9000e274:	2800      	cmp	r0, #0
9000e276:	d0f4      	beq.n	9000e262 <xQueueReceive+0x18a>
						vTaskMissedYield();
9000e278:	f001 f978 	bl	9000f56c <vTaskMissedYield>
			--cTxLock;
9000e27c:	1e6b      	subs	r3, r5, #1
9000e27e:	b2da      	uxtb	r2, r3
9000e280:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e282:	2a00      	cmp	r2, #0
9000e284:	d1f1      	bne.n	9000e26a <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
9000e286:	23ff      	movs	r3, #255	@ 0xff
9000e288:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e28c:	f7ff fa1c 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e290:	f7ff f9f8 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e294:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e298:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e29a:	2d00      	cmp	r5, #0
9000e29c:	dd14      	ble.n	9000e2c8 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e29e:	f104 0910 	add.w	r9, r4, #16
9000e2a2:	e003      	b.n	9000e2ac <xQueueReceive+0x1d4>
				--cRxLock;
9000e2a4:	1e6b      	subs	r3, r5, #1
9000e2a6:	b2da      	uxtb	r2, r3
9000e2a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e2aa:	b16a      	cbz	r2, 9000e2c8 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e2ac:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2ae:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e2b0:	b153      	cbz	r3, 9000e2c8 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e2b2:	f001 f8c7 	bl	9000f444 <xTaskRemoveFromEventList>
9000e2b6:	2800      	cmp	r0, #0
9000e2b8:	d0f4      	beq.n	9000e2a4 <xQueueReceive+0x1cc>
					vTaskMissedYield();
9000e2ba:	f001 f957 	bl	9000f56c <vTaskMissedYield>
				--cRxLock;
9000e2be:	1e6b      	subs	r3, r5, #1
9000e2c0:	b2da      	uxtb	r2, r3
9000e2c2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e2c4:	2a00      	cmp	r2, #0
9000e2c6:	d1f1      	bne.n	9000e2ac <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
9000e2c8:	23ff      	movs	r3, #255	@ 0xff
9000e2ca:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e2ce:	f7ff f9fb 	bl	9000d6c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e2d2:	f000 ff93 	bl	9000f1fc <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e2d6:	f7ff f9d5 	bl	9000d684 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e2da:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e2dc:	b153      	cbz	r3, 9000e2f4 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
9000e2de:	f7ff f9f3 	bl	9000d6c8 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e2e2:	f7ff f9cf 	bl	9000d684 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e2e6:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e2e8:	2d00      	cmp	r5, #0
9000e2ea:	d181      	bne.n	9000e1f0 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e2ec:	9b01      	ldr	r3, [sp, #4]
9000e2ee:	2b00      	cmp	r3, #0
9000e2f0:	f47f af12 	bne.w	9000e118 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000e2f4:	f7ff f9e8 	bl	9000d6c8 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000e2f8:	2000      	movs	r0, #0
}
9000e2fa:	b005      	add	sp, #20
9000e2fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e300:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000e304:	f7ff f9e0 	bl	9000d6c8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e308:	9901      	ldr	r1, [sp, #4]
9000e30a:	4648      	mov	r0, r9
9000e30c:	f001 f80c 	bl	9000f328 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e310:	f7ff f9b8 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e314:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e318:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e31a:	2d00      	cmp	r5, #0
9000e31c:	dc04      	bgt.n	9000e328 <xQueueReceive+0x250>
9000e31e:	e011      	b.n	9000e344 <xQueueReceive+0x26c>
			--cTxLock;
9000e320:	1e6b      	subs	r3, r5, #1
9000e322:	b2da      	uxtb	r2, r3
9000e324:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e326:	b16a      	cbz	r2, 9000e344 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e328:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e32a:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e32c:	b153      	cbz	r3, 9000e344 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e32e:	f001 f889 	bl	9000f444 <xTaskRemoveFromEventList>
9000e332:	2800      	cmp	r0, #0
9000e334:	d0f4      	beq.n	9000e320 <xQueueReceive+0x248>
						vTaskMissedYield();
9000e336:	f001 f919 	bl	9000f56c <vTaskMissedYield>
			--cTxLock;
9000e33a:	1e6b      	subs	r3, r5, #1
9000e33c:	b2da      	uxtb	r2, r3
9000e33e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e340:	2a00      	cmp	r2, #0
9000e342:	d1f1      	bne.n	9000e328 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
9000e344:	23ff      	movs	r3, #255	@ 0xff
9000e346:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e34a:	f7ff f9bd 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e34e:	f7ff f999 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e352:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e356:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e358:	2d00      	cmp	r5, #0
9000e35a:	dd14      	ble.n	9000e386 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e35c:	f104 0910 	add.w	r9, r4, #16
9000e360:	e003      	b.n	9000e36a <xQueueReceive+0x292>
				--cRxLock;
9000e362:	1e6b      	subs	r3, r5, #1
9000e364:	b2da      	uxtb	r2, r3
9000e366:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e368:	b16a      	cbz	r2, 9000e386 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e36a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e36c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e36e:	b153      	cbz	r3, 9000e386 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e370:	f001 f868 	bl	9000f444 <xTaskRemoveFromEventList>
9000e374:	2800      	cmp	r0, #0
9000e376:	d0f4      	beq.n	9000e362 <xQueueReceive+0x28a>
					vTaskMissedYield();
9000e378:	f001 f8f8 	bl	9000f56c <vTaskMissedYield>
				--cRxLock;
9000e37c:	1e6b      	subs	r3, r5, #1
9000e37e:	b2da      	uxtb	r2, r3
9000e380:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e382:	2a00      	cmp	r2, #0
9000e384:	d1f1      	bne.n	9000e36a <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
9000e386:	23ff      	movs	r3, #255	@ 0xff
9000e388:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e38c:	f7ff f99c 	bl	9000d6c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e390:	f000 ff34 	bl	9000f1fc <xTaskResumeAll>
9000e394:	2800      	cmp	r0, #0
9000e396:	d1a4      	bne.n	9000e2e2 <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
9000e398:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e39c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e3a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e3a4:	f3bf 8f4f 	dsb	sy
9000e3a8:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000e3ac:	e799      	b.n	9000e2e2 <xQueueReceive+0x20a>
9000e3ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e3b2:	f383 8811 	msr	BASEPRI, r3
9000e3b6:	f3bf 8f6f 	isb	sy
9000e3ba:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e3be:	e7fe      	b.n	9000e3be <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3c0:	f104 0010 	add.w	r0, r4, #16
9000e3c4:	f001 f83e 	bl	9000f444 <xTaskRemoveFromEventList>
9000e3c8:	2800      	cmp	r0, #0
9000e3ca:	f43f af24 	beq.w	9000e216 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
9000e3ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e3d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e3d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e3da:	f3bf 8f4f 	dsb	sy
9000e3de:	f3bf 8f6f 	isb	sy
9000e3e2:	e718      	b.n	9000e216 <xQueueReceive+0x13e>

9000e3e4 <xQueueSemaphoreTake>:
{
9000e3e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e3e8:	b084      	sub	sp, #16
9000e3ea:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e3ec:	2800      	cmp	r0, #0
9000e3ee:	d05e      	beq.n	9000e4ae <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e3f0:	6c07      	ldr	r7, [r0, #64]	@ 0x40
9000e3f2:	4604      	mov	r4, r0
9000e3f4:	b147      	cbz	r7, 9000e408 <xQueueSemaphoreTake+0x24>
9000e3f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e3fa:	f383 8811 	msr	BASEPRI, r3
9000e3fe:	f3bf 8f6f 	isb	sy
9000e402:	f3bf 8f4f 	dsb	sy
9000e406:	e7fe      	b.n	9000e406 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e408:	f001 f8b6 	bl	9000f578 <xTaskGetSchedulerState>
9000e40c:	4605      	mov	r5, r0
9000e40e:	2800      	cmp	r0, #0
9000e410:	d056      	beq.n	9000e4c0 <xQueueSemaphoreTake+0xdc>
9000e412:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e414:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
9000e418:	f7ff f934 	bl	9000d684 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e41c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e41e:	2b00      	cmp	r3, #0
9000e420:	f040 814d 	bne.w	9000e6be <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e424:	9b01      	ldr	r3, [sp, #4]
9000e426:	2b00      	cmp	r3, #0
9000e428:	f000 813e 	beq.w	9000e6a8 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
9000e42c:	2d00      	cmp	r5, #0
9000e42e:	f000 80a3 	beq.w	9000e578 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
9000e432:	f7ff f949 	bl	9000d6c8 <vPortExitCritical>
		vTaskSuspendAll();
9000e436:	f000 fed9 	bl	9000f1ec <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e43a:	f7ff f923 	bl	9000d684 <vPortEnterCritical>
9000e43e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e442:	2bff      	cmp	r3, #255	@ 0xff
9000e444:	d102      	bne.n	9000e44c <xQueueSemaphoreTake+0x68>
9000e446:	2300      	movs	r3, #0
9000e448:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000e44c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e450:	2bff      	cmp	r3, #255	@ 0xff
9000e452:	d102      	bne.n	9000e45a <xQueueSemaphoreTake+0x76>
9000e454:	2300      	movs	r3, #0
9000e456:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000e45a:	f7ff f935 	bl	9000d6c8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e45e:	a901      	add	r1, sp, #4
9000e460:	a802      	add	r0, sp, #8
9000e462:	f001 f841 	bl	9000f4e8 <xTaskCheckForTimeOut>
9000e466:	2800      	cmp	r0, #0
9000e468:	d137      	bne.n	9000e4da <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000e46a:	f7ff f90b 	bl	9000d684 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e46e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e470:	2b00      	cmp	r3, #0
9000e472:	f000 80ae 	beq.w	9000e5d2 <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
9000e476:	f7ff f927 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e47a:	f7ff f903 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e47e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e482:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e484:	2d00      	cmp	r5, #0
9000e486:	dd7f      	ble.n	9000e588 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e488:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000e48c:	e004      	b.n	9000e498 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000e48e:	1e6b      	subs	r3, r5, #1
9000e490:	b2da      	uxtb	r2, r3
9000e492:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e494:	2a00      	cmp	r2, #0
9000e496:	d077      	beq.n	9000e588 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e498:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e49a:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e49c:	2b00      	cmp	r3, #0
9000e49e:	d073      	beq.n	9000e588 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4a0:	f000 ffd0 	bl	9000f444 <xTaskRemoveFromEventList>
9000e4a4:	2800      	cmp	r0, #0
9000e4a6:	d0f2      	beq.n	9000e48e <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
9000e4a8:	f001 f860 	bl	9000f56c <vTaskMissedYield>
9000e4ac:	e7ef      	b.n	9000e48e <xQueueSemaphoreTake+0xaa>
9000e4ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e4b2:	f383 8811 	msr	BASEPRI, r3
9000e4b6:	f3bf 8f6f 	isb	sy
9000e4ba:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e4be:	e7fe      	b.n	9000e4be <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e4c0:	9b01      	ldr	r3, [sp, #4]
9000e4c2:	2b00      	cmp	r3, #0
9000e4c4:	f000 80d7 	beq.w	9000e676 <xQueueSemaphoreTake+0x292>
9000e4c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e4cc:	f383 8811 	msr	BASEPRI, r3
9000e4d0:	f3bf 8f6f 	isb	sy
9000e4d4:	f3bf 8f4f 	dsb	sy
9000e4d8:	e7fe      	b.n	9000e4d8 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000e4da:	f7ff f8d3 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e4de:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e4e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4e4:	2d00      	cmp	r5, #0
9000e4e6:	dc04      	bgt.n	9000e4f2 <xQueueSemaphoreTake+0x10e>
9000e4e8:	e011      	b.n	9000e50e <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000e4ea:	1e6b      	subs	r3, r5, #1
9000e4ec:	b2da      	uxtb	r2, r3
9000e4ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4f0:	b16a      	cbz	r2, 9000e50e <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e4f2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e4f6:	b153      	cbz	r3, 9000e50e <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4f8:	f000 ffa4 	bl	9000f444 <xTaskRemoveFromEventList>
9000e4fc:	2800      	cmp	r0, #0
9000e4fe:	d0f4      	beq.n	9000e4ea <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000e500:	f001 f834 	bl	9000f56c <vTaskMissedYield>
			--cTxLock;
9000e504:	1e6b      	subs	r3, r5, #1
9000e506:	b2da      	uxtb	r2, r3
9000e508:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e50a:	2a00      	cmp	r2, #0
9000e50c:	d1f1      	bne.n	9000e4f2 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e50e:	23ff      	movs	r3, #255	@ 0xff
9000e510:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e514:	f7ff f8d8 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e518:	f7ff f8b4 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e51c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e520:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e522:	2d00      	cmp	r5, #0
9000e524:	dd14      	ble.n	9000e550 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e526:	f104 0810 	add.w	r8, r4, #16
9000e52a:	e003      	b.n	9000e534 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000e52c:	1e6b      	subs	r3, r5, #1
9000e52e:	b2da      	uxtb	r2, r3
9000e530:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e532:	b16a      	cbz	r2, 9000e550 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e534:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e536:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e538:	b153      	cbz	r3, 9000e550 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e53a:	f000 ff83 	bl	9000f444 <xTaskRemoveFromEventList>
9000e53e:	2800      	cmp	r0, #0
9000e540:	d0f4      	beq.n	9000e52c <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000e542:	f001 f813 	bl	9000f56c <vTaskMissedYield>
				--cRxLock;
9000e546:	1e6b      	subs	r3, r5, #1
9000e548:	b2da      	uxtb	r2, r3
9000e54a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e54c:	2a00      	cmp	r2, #0
9000e54e:	d1f1      	bne.n	9000e534 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000e550:	23ff      	movs	r3, #255	@ 0xff
9000e552:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e556:	f7ff f8b7 	bl	9000d6c8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e55a:	f000 fe4f 	bl	9000f1fc <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e55e:	f7ff f891 	bl	9000d684 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e562:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e564:	b963      	cbnz	r3, 9000e580 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
9000e566:	f7ff f8af 	bl	9000d6c8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000e56a:	2f00      	cmp	r7, #0
9000e56c:	f040 8085 	bne.w	9000e67a <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
9000e570:	2000      	movs	r0, #0
}
9000e572:	b004      	add	sp, #16
9000e574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e578:	a802      	add	r0, sp, #8
9000e57a:	f000 ffa9 	bl	9000f4d0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e57e:	e758      	b.n	9000e432 <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
9000e580:	f7ff f8a2 	bl	9000d6c8 <vPortExitCritical>
	return xReturn;
9000e584:	2501      	movs	r5, #1
9000e586:	e747      	b.n	9000e418 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
9000e588:	23ff      	movs	r3, #255	@ 0xff
9000e58a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e58e:	f7ff f89b 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e592:	f7ff f877 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e596:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e59a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e59c:	2d00      	cmp	r5, #0
9000e59e:	dd10      	ble.n	9000e5c2 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e5a0:	f104 0810 	add.w	r8, r4, #16
9000e5a4:	e003      	b.n	9000e5ae <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
9000e5a6:	1e6b      	subs	r3, r5, #1
9000e5a8:	b2da      	uxtb	r2, r3
9000e5aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e5ac:	b14a      	cbz	r2, 9000e5c2 <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e5ae:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e5b0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e5b2:	b133      	cbz	r3, 9000e5c2 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e5b4:	f000 ff46 	bl	9000f444 <xTaskRemoveFromEventList>
9000e5b8:	2800      	cmp	r0, #0
9000e5ba:	d0f4      	beq.n	9000e5a6 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
9000e5bc:	f000 ffd6 	bl	9000f56c <vTaskMissedYield>
9000e5c0:	e7f1      	b.n	9000e5a6 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
9000e5c2:	23ff      	movs	r3, #255	@ 0xff
9000e5c4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e5c8:	f7ff f87e 	bl	9000d6c8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e5cc:	f000 fe16 	bl	9000f1fc <xTaskResumeAll>
9000e5d0:	e7d8      	b.n	9000e584 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
9000e5d2:	f7ff f879 	bl	9000d6c8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e5d6:	6823      	ldr	r3, [r4, #0]
9000e5d8:	2b00      	cmp	r3, #0
9000e5da:	d05c      	beq.n	9000e696 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e5dc:	f104 0824 	add.w	r8, r4, #36	@ 0x24
9000e5e0:	9901      	ldr	r1, [sp, #4]
9000e5e2:	4640      	mov	r0, r8
9000e5e4:	f000 fea0 	bl	9000f328 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e5e8:	f7ff f84c 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e5ec:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e5f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5f2:	2d00      	cmp	r5, #0
9000e5f4:	dc04      	bgt.n	9000e600 <xQueueSemaphoreTake+0x21c>
9000e5f6:	e00d      	b.n	9000e614 <xQueueSemaphoreTake+0x230>
			--cTxLock;
9000e5f8:	1e6b      	subs	r3, r5, #1
9000e5fa:	b2da      	uxtb	r2, r3
9000e5fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5fe:	b14a      	cbz	r2, 9000e614 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e600:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e602:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e604:	b133      	cbz	r3, 9000e614 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e606:	f000 ff1d 	bl	9000f444 <xTaskRemoveFromEventList>
9000e60a:	2800      	cmp	r0, #0
9000e60c:	d0f4      	beq.n	9000e5f8 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
9000e60e:	f000 ffad 	bl	9000f56c <vTaskMissedYield>
9000e612:	e7f1      	b.n	9000e5f8 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
9000e614:	23ff      	movs	r3, #255	@ 0xff
9000e616:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e61a:	f7ff f855 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e61e:	f7ff f831 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e622:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e626:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e628:	2d00      	cmp	r5, #0
9000e62a:	dd10      	ble.n	9000e64e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e62c:	f104 0810 	add.w	r8, r4, #16
9000e630:	e003      	b.n	9000e63a <xQueueSemaphoreTake+0x256>
				--cRxLock;
9000e632:	1e6b      	subs	r3, r5, #1
9000e634:	b2da      	uxtb	r2, r3
9000e636:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e638:	b14a      	cbz	r2, 9000e64e <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e63a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e63c:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e63e:	b133      	cbz	r3, 9000e64e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e640:	f000 ff00 	bl	9000f444 <xTaskRemoveFromEventList>
9000e644:	2800      	cmp	r0, #0
9000e646:	d0f4      	beq.n	9000e632 <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
9000e648:	f000 ff90 	bl	9000f56c <vTaskMissedYield>
9000e64c:	e7f1      	b.n	9000e632 <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
9000e64e:	23ff      	movs	r3, #255	@ 0xff
9000e650:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e654:	f7ff f838 	bl	9000d6c8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e658:	f000 fdd0 	bl	9000f1fc <xTaskResumeAll>
9000e65c:	2800      	cmp	r0, #0
9000e65e:	d191      	bne.n	9000e584 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
9000e660:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e664:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e668:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e66c:	f3bf 8f4f 	dsb	sy
9000e670:	f3bf 8f6f 	isb	sy
9000e674:	e786      	b.n	9000e584 <xQueueSemaphoreTake+0x1a0>
9000e676:	462f      	mov	r7, r5
9000e678:	e6cc      	b.n	9000e414 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000e67a:	f7ff f803 	bl	9000d684 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000e67e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000e680:	b119      	cbz	r1, 9000e68a <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000e682:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000e684:	6819      	ldr	r1, [r3, #0]
9000e686:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e68a:	68a0      	ldr	r0, [r4, #8]
9000e68c:	f001 f808 	bl	9000f6a0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000e690:	f7ff f81a 	bl	9000d6c8 <vPortExitCritical>
9000e694:	e76c      	b.n	9000e570 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000e696:	f7fe fff5 	bl	9000d684 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e69a:	68a0      	ldr	r0, [r4, #8]
9000e69c:	f000 ff7c 	bl	9000f598 <xTaskPriorityInherit>
9000e6a0:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000e6a2:	f7ff f811 	bl	9000d6c8 <vPortExitCritical>
9000e6a6:	e799      	b.n	9000e5dc <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000e6a8:	2f00      	cmp	r7, #0
9000e6aa:	d0f1      	beq.n	9000e690 <xQueueSemaphoreTake+0x2ac>
9000e6ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e6b0:	f383 8811 	msr	BASEPRI, r3
9000e6b4:	f3bf 8f6f 	isb	sy
9000e6b8:	f3bf 8f4f 	dsb	sy
9000e6bc:	e7fe      	b.n	9000e6bc <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e6be:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e6c0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e6c2:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e6c4:	b12a      	cbz	r2, 9000e6d2 <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6c6:	6923      	ldr	r3, [r4, #16]
9000e6c8:	b93b      	cbnz	r3, 9000e6da <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
9000e6ca:	f7fe fffd 	bl	9000d6c8 <vPortExitCritical>
				return pdPASS;
9000e6ce:	2001      	movs	r0, #1
9000e6d0:	e74f      	b.n	9000e572 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000e6d2:	f001 f835 	bl	9000f740 <pvTaskIncrementMutexHeldCount>
9000e6d6:	60a0      	str	r0, [r4, #8]
9000e6d8:	e7f5      	b.n	9000e6c6 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6da:	f104 0010 	add.w	r0, r4, #16
9000e6de:	f000 feb1 	bl	9000f444 <xTaskRemoveFromEventList>
9000e6e2:	2800      	cmp	r0, #0
9000e6e4:	d0f1      	beq.n	9000e6ca <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
9000e6e6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e6ea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e6ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e6f2:	f3bf 8f4f 	dsb	sy
9000e6f6:	f3bf 8f6f 	isb	sy
9000e6fa:	e7e6      	b.n	9000e6ca <xQueueSemaphoreTake+0x2e6>

9000e6fc <xQueueReceiveFromISR>:
{
9000e6fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000e700:	b310      	cbz	r0, 9000e748 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e702:	460f      	mov	r7, r1
9000e704:	4604      	mov	r4, r0
9000e706:	4616      	mov	r6, r2
9000e708:	b191      	cbz	r1, 9000e730 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e70a:	f7ff f8ed 	bl	9000d8e8 <vPortValidateInterruptPriority>
	__asm volatile
9000e70e:	f3ef 8911 	mrs	r9, BASEPRI
9000e712:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e716:	f383 8811 	msr	BASEPRI, r3
9000e71a:	f3bf 8f6f 	isb	sy
9000e71e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e722:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e724:	b9cd      	cbnz	r5, 9000e75a <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000e726:	4628      	mov	r0, r5
	__asm volatile
9000e728:	f389 8811 	msr	BASEPRI, r9
}
9000e72c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e730:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e732:	2b00      	cmp	r3, #0
9000e734:	d0e9      	beq.n	9000e70a <xQueueReceiveFromISR+0xe>
	__asm volatile
9000e736:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e73a:	f383 8811 	msr	BASEPRI, r3
9000e73e:	f3bf 8f6f 	isb	sy
9000e742:	f3bf 8f4f 	dsb	sy
9000e746:	e7fe      	b.n	9000e746 <xQueueReceiveFromISR+0x4a>
9000e748:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e74c:	f383 8811 	msr	BASEPRI, r3
9000e750:	f3bf 8f6f 	isb	sy
9000e754:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e758:	e7fe      	b.n	9000e758 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000e75a:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e75e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000e760:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e764:	b142      	cbz	r2, 9000e778 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e766:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e768:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e76a:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e76c:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e76e:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e770:	d21c      	bcs.n	9000e7ac <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e772:	4638      	mov	r0, r7
9000e774:	f018 febd 	bl	900274f2 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e778:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000e77a:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e77e:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000e780:	d006      	beq.n	9000e790 <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e782:	f108 0301 	add.w	r3, r8, #1
9000e786:	b25b      	sxtb	r3, r3
9000e788:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000e78c:	2001      	movs	r0, #1
9000e78e:	e7cb      	b.n	9000e728 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e790:	6923      	ldr	r3, [r4, #16]
9000e792:	2b00      	cmp	r3, #0
9000e794:	d0fa      	beq.n	9000e78c <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e796:	f104 0010 	add.w	r0, r4, #16
9000e79a:	f000 fe53 	bl	9000f444 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000e79e:	2e00      	cmp	r6, #0
9000e7a0:	d0f4      	beq.n	9000e78c <xQueueReceiveFromISR+0x90>
9000e7a2:	2800      	cmp	r0, #0
9000e7a4:	d0f2      	beq.n	9000e78c <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e7a6:	2301      	movs	r3, #1
9000e7a8:	6033      	str	r3, [r6, #0]
9000e7aa:	e7ef      	b.n	9000e78c <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e7ac:	6821      	ldr	r1, [r4, #0]
9000e7ae:	60e1      	str	r1, [r4, #12]
9000e7b0:	e7df      	b.n	9000e772 <xQueueReceiveFromISR+0x76>
9000e7b2:	bf00      	nop
9000e7b4:	0000      	movs	r0, r0
	...

9000e7b8 <vQueueDelete>:
	configASSERT( pxQueue );
9000e7b8:	b1e0      	cbz	r0, 9000e7f4 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000e7ba:	4b21      	ldr	r3, [pc, #132]	@ (9000e840 <vQueueDelete+0x88>)
9000e7bc:	685a      	ldr	r2, [r3, #4]
9000e7be:	4290      	cmp	r0, r2
9000e7c0:	d02b      	beq.n	9000e81a <vQueueDelete+0x62>
9000e7c2:	68da      	ldr	r2, [r3, #12]
9000e7c4:	4290      	cmp	r0, r2
9000e7c6:	d02a      	beq.n	9000e81e <vQueueDelete+0x66>
9000e7c8:	695a      	ldr	r2, [r3, #20]
9000e7ca:	4290      	cmp	r0, r2
9000e7cc:	d029      	beq.n	9000e822 <vQueueDelete+0x6a>
9000e7ce:	69da      	ldr	r2, [r3, #28]
9000e7d0:	4290      	cmp	r0, r2
9000e7d2:	d028      	beq.n	9000e826 <vQueueDelete+0x6e>
9000e7d4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000e7d6:	4290      	cmp	r0, r2
9000e7d8:	d027      	beq.n	9000e82a <vQueueDelete+0x72>
9000e7da:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000e7dc:	4290      	cmp	r0, r2
9000e7de:	d014      	beq.n	9000e80a <vQueueDelete+0x52>
9000e7e0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000e7e2:	4290      	cmp	r0, r2
9000e7e4:	d023      	beq.n	9000e82e <vQueueDelete+0x76>
9000e7e6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000e7e8:	4290      	cmp	r0, r2
9000e7ea:	d022      	beq.n	9000e832 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000e7ec:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000e7f0:	b14b      	cbz	r3, 9000e806 <vQueueDelete+0x4e>
}
9000e7f2:	4770      	bx	lr
9000e7f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7f8:	f383 8811 	msr	BASEPRI, r3
9000e7fc:	f3bf 8f6f 	isb	sy
9000e800:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e804:	e7fe      	b.n	9000e804 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000e806:	f7fe be23 	b.w	9000d450 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e80a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000e80c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000e810:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000e838 <vQueueDelete+0x80>
9000e814:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000e818:	e7e8      	b.n	9000e7ec <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e81a:	2200      	movs	r2, #0
9000e81c:	e7f6      	b.n	9000e80c <vQueueDelete+0x54>
9000e81e:	2201      	movs	r2, #1
9000e820:	e7f4      	b.n	9000e80c <vQueueDelete+0x54>
9000e822:	2202      	movs	r2, #2
9000e824:	e7f2      	b.n	9000e80c <vQueueDelete+0x54>
9000e826:	2203      	movs	r2, #3
9000e828:	e7f0      	b.n	9000e80c <vQueueDelete+0x54>
9000e82a:	2204      	movs	r2, #4
9000e82c:	e7ee      	b.n	9000e80c <vQueueDelete+0x54>
9000e82e:	2206      	movs	r2, #6
9000e830:	e7ec      	b.n	9000e80c <vQueueDelete+0x54>
9000e832:	2207      	movs	r2, #7
9000e834:	e7ea      	b.n	9000e80c <vQueueDelete+0x54>
9000e836:	bf00      	nop
	...
9000e840:	240215e8 	.word	0x240215e8

9000e844 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000e844:	4b12      	ldr	r3, [pc, #72]	@ (9000e890 <vQueueAddToRegistry+0x4c>)
9000e846:	681a      	ldr	r2, [r3, #0]
9000e848:	b17a      	cbz	r2, 9000e86a <vQueueAddToRegistry+0x26>
9000e84a:	689a      	ldr	r2, [r3, #8]
9000e84c:	b162      	cbz	r2, 9000e868 <vQueueAddToRegistry+0x24>
9000e84e:	691a      	ldr	r2, [r3, #16]
9000e850:	b192      	cbz	r2, 9000e878 <vQueueAddToRegistry+0x34>
9000e852:	699a      	ldr	r2, [r3, #24]
9000e854:	b192      	cbz	r2, 9000e87c <vQueueAddToRegistry+0x38>
9000e856:	6a1a      	ldr	r2, [r3, #32]
9000e858:	b192      	cbz	r2, 9000e880 <vQueueAddToRegistry+0x3c>
9000e85a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000e85c:	b192      	cbz	r2, 9000e884 <vQueueAddToRegistry+0x40>
9000e85e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000e860:	b192      	cbz	r2, 9000e888 <vQueueAddToRegistry+0x44>
9000e862:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000e864:	b192      	cbz	r2, 9000e88c <vQueueAddToRegistry+0x48>
	}
9000e866:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e868:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e86a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000e86e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e872:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000e876:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e878:	2202      	movs	r2, #2
9000e87a:	e7f6      	b.n	9000e86a <vQueueAddToRegistry+0x26>
9000e87c:	2203      	movs	r2, #3
9000e87e:	e7f4      	b.n	9000e86a <vQueueAddToRegistry+0x26>
9000e880:	2204      	movs	r2, #4
9000e882:	e7f2      	b.n	9000e86a <vQueueAddToRegistry+0x26>
9000e884:	2205      	movs	r2, #5
9000e886:	e7f0      	b.n	9000e86a <vQueueAddToRegistry+0x26>
9000e888:	2206      	movs	r2, #6
9000e88a:	e7ee      	b.n	9000e86a <vQueueAddToRegistry+0x26>
9000e88c:	2207      	movs	r2, #7
9000e88e:	e7ec      	b.n	9000e86a <vQueueAddToRegistry+0x26>
9000e890:	240215e8 	.word	0x240215e8

9000e894 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000e894:	b570      	push	{r4, r5, r6, lr}
9000e896:	4605      	mov	r5, r0
9000e898:	460e      	mov	r6, r1
9000e89a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000e89c:	f7fe fef2 	bl	9000d684 <vPortEnterCritical>
9000e8a0:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000e8a4:	2bff      	cmp	r3, #255	@ 0xff
9000e8a6:	d102      	bne.n	9000e8ae <vQueueWaitForMessageRestricted+0x1a>
9000e8a8:	2300      	movs	r3, #0
9000e8aa:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000e8ae:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000e8b2:	2bff      	cmp	r3, #255	@ 0xff
9000e8b4:	d102      	bne.n	9000e8bc <vQueueWaitForMessageRestricted+0x28>
9000e8b6:	2300      	movs	r3, #0
9000e8b8:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000e8bc:	f7fe ff04 	bl	9000d6c8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000e8c0:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000e8c2:	2b00      	cmp	r3, #0
9000e8c4:	d043      	beq.n	9000e94e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000e8c6:	f7fe fedd 	bl	9000d684 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e8ca:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000e8ce:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e8d0:	2c00      	cmp	r4, #0
9000e8d2:	dd14      	ble.n	9000e8fe <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e8d4:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000e8d8:	e003      	b.n	9000e8e2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000e8da:	1e63      	subs	r3, r4, #1
9000e8dc:	b2da      	uxtb	r2, r3
9000e8de:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e8e0:	b16a      	cbz	r2, 9000e8fe <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e8e2:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e8e4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e8e6:	b153      	cbz	r3, 9000e8fe <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e8e8:	f000 fdac 	bl	9000f444 <xTaskRemoveFromEventList>
9000e8ec:	2800      	cmp	r0, #0
9000e8ee:	d0f4      	beq.n	9000e8da <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000e8f0:	f000 fe3c 	bl	9000f56c <vTaskMissedYield>
			--cTxLock;
9000e8f4:	1e63      	subs	r3, r4, #1
9000e8f6:	b2da      	uxtb	r2, r3
9000e8f8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e8fa:	2a00      	cmp	r2, #0
9000e8fc:	d1f1      	bne.n	9000e8e2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e8fe:	23ff      	movs	r3, #255	@ 0xff
9000e900:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e904:	f7fe fee0 	bl	9000d6c8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e908:	f7fe febc 	bl	9000d684 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e90c:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000e910:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e912:	2c00      	cmp	r4, #0
9000e914:	dd14      	ble.n	9000e940 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e916:	f105 0610 	add.w	r6, r5, #16
9000e91a:	e003      	b.n	9000e924 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000e91c:	1e63      	subs	r3, r4, #1
9000e91e:	b2da      	uxtb	r2, r3
9000e920:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e922:	b16a      	cbz	r2, 9000e940 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e924:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e926:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e928:	b153      	cbz	r3, 9000e940 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e92a:	f000 fd8b 	bl	9000f444 <xTaskRemoveFromEventList>
9000e92e:	2800      	cmp	r0, #0
9000e930:	d0f4      	beq.n	9000e91c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000e932:	f000 fe1b 	bl	9000f56c <vTaskMissedYield>
				--cRxLock;
9000e936:	1e63      	subs	r3, r4, #1
9000e938:	b2da      	uxtb	r2, r3
9000e93a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e93c:	2a00      	cmp	r2, #0
9000e93e:	d1f1      	bne.n	9000e924 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000e940:	23ff      	movs	r3, #255	@ 0xff
9000e942:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000e946:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000e94a:	f7fe bebd 	b.w	9000d6c8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000e94e:	4622      	mov	r2, r4
9000e950:	4631      	mov	r1, r6
9000e952:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000e956:	f000 fd2b 	bl	9000f3b0 <vTaskPlaceOnEventListRestricted>
9000e95a:	e7b4      	b.n	9000e8c6 <vQueueWaitForMessageRestricted+0x32>

9000e95c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000e95c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000e960:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000e962:	f7fe fe8f 	bl	9000d684 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000e966:	4a34      	ldr	r2, [pc, #208]	@ (9000ea38 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000e968:	4e34      	ldr	r6, [pc, #208]	@ (9000ea3c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000e96a:	6813      	ldr	r3, [r2, #0]
9000e96c:	3301      	adds	r3, #1
9000e96e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000e970:	6833      	ldr	r3, [r6, #0]
9000e972:	2b00      	cmp	r3, #0
9000e974:	d031      	beq.n	9000e9da <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000e976:	4c32      	ldr	r4, [pc, #200]	@ (9000ea40 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e978:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000e97a:	6823      	ldr	r3, [r4, #0]
9000e97c:	b333      	cbz	r3, 9000e9cc <prvAddNewTaskToReadyList+0x70>
9000e97e:	4f31      	ldr	r7, [pc, #196]	@ (9000ea44 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000e980:	4a31      	ldr	r2, [pc, #196]	@ (9000ea48 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000e982:	4932      	ldr	r1, [pc, #200]	@ (9000ea4c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000e984:	6813      	ldr	r3, [r2, #0]
9000e986:	3301      	adds	r3, #1
9000e988:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000e98a:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000e98c:	680b      	ldr	r3, [r1, #0]
9000e98e:	4283      	cmp	r3, r0
9000e990:	d200      	bcs.n	9000e994 <prvAddNewTaskToReadyList+0x38>
9000e992:	6008      	str	r0, [r1, #0]
9000e994:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000e998:	1d29      	adds	r1, r5, #4
9000e99a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000e99e:	f7fe fdcd 	bl	9000d53c <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000e9a2:	f7fe fe91 	bl	9000d6c8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000e9a6:	6823      	ldr	r3, [r4, #0]
9000e9a8:	b173      	cbz	r3, 9000e9c8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000e9aa:	6832      	ldr	r2, [r6, #0]
9000e9ac:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000e9ae:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000e9b0:	429a      	cmp	r2, r3
9000e9b2:	d209      	bcs.n	9000e9c8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000e9b4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e9b8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e9bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e9c0:	f3bf 8f4f 	dsb	sy
9000e9c4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000e9c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e9cc:	6833      	ldr	r3, [r6, #0]
9000e9ce:	4f1d      	ldr	r7, [pc, #116]	@ (9000ea44 <prvAddNewTaskToReadyList+0xe8>)
9000e9d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000e9d2:	4283      	cmp	r3, r0
9000e9d4:	d8d4      	bhi.n	9000e980 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000e9d6:	6035      	str	r5, [r6, #0]
9000e9d8:	e7d2      	b.n	9000e980 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000e9da:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000e9dc:	6813      	ldr	r3, [r2, #0]
9000e9de:	2b01      	cmp	r3, #1
9000e9e0:	d003      	beq.n	9000e9ea <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e9e2:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000e9e4:	4f17      	ldr	r7, [pc, #92]	@ (9000ea44 <prvAddNewTaskToReadyList+0xe8>)
9000e9e6:	4c16      	ldr	r4, [pc, #88]	@ (9000ea40 <prvAddNewTaskToReadyList+0xe4>)
9000e9e8:	e7ca      	b.n	9000e980 <prvAddNewTaskToReadyList+0x24>
9000e9ea:	4f16      	ldr	r7, [pc, #88]	@ (9000ea44 <prvAddNewTaskToReadyList+0xe8>)
9000e9ec:	463c      	mov	r4, r7
9000e9ee:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000e9f2:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000e9f4:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000e9f6:	f7fe fd91 	bl	9000d51c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000e9fa:	45a0      	cmp	r8, r4
9000e9fc:	d1f9      	bne.n	9000e9f2 <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000e9fe:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 9000ea64 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000ea02:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000ea68 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000ea06:	4648      	mov	r0, r9
9000ea08:	4c0d      	ldr	r4, [pc, #52]	@ (9000ea40 <prvAddNewTaskToReadyList+0xe4>)
9000ea0a:	f7fe fd87 	bl	9000d51c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000ea0e:	4640      	mov	r0, r8
9000ea10:	f7fe fd84 	bl	9000d51c <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000ea14:	480e      	ldr	r0, [pc, #56]	@ (9000ea50 <prvAddNewTaskToReadyList+0xf4>)
9000ea16:	f7fe fd81 	bl	9000d51c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000ea1a:	480e      	ldr	r0, [pc, #56]	@ (9000ea54 <prvAddNewTaskToReadyList+0xf8>)
9000ea1c:	f7fe fd7e 	bl	9000d51c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000ea20:	480d      	ldr	r0, [pc, #52]	@ (9000ea58 <prvAddNewTaskToReadyList+0xfc>)
9000ea22:	f7fe fd7b 	bl	9000d51c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000ea26:	4b0d      	ldr	r3, [pc, #52]	@ (9000ea5c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000ea28:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000ea2a:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000ea2e:	4b0c      	ldr	r3, [pc, #48]	@ (9000ea60 <prvAddNewTaskToReadyList+0x104>)
9000ea30:	f8c3 8000 	str.w	r8, [r3]
}
9000ea34:	e7a4      	b.n	9000e980 <prvAddNewTaskToReadyList+0x24>
9000ea36:	bf00      	nop
9000ea38:	2402164c 	.word	0x2402164c
9000ea3c:	24021b20 	.word	0x24021b20
9000ea40:	24021640 	.word	0x24021640
9000ea44:	240216c0 	.word	0x240216c0
9000ea48:	24021630 	.word	0x24021630
9000ea4c:	24021644 	.word	0x24021644
9000ea50:	2402167c 	.word	0x2402167c
9000ea54:	24021668 	.word	0x24021668
9000ea58:	24021650 	.word	0x24021650
9000ea5c:	24021694 	.word	0x24021694
9000ea60:	24021690 	.word	0x24021690
9000ea64:	240216ac 	.word	0x240216ac
9000ea68:	24021698 	.word	0x24021698

9000ea6c <prvIdleTask>:
{
9000ea6c:	b580      	push	{r7, lr}
9000ea6e:	4c22      	ldr	r4, [pc, #136]	@ (9000eaf8 <prvIdleTask+0x8c>)
9000ea70:	4e22      	ldr	r6, [pc, #136]	@ (9000eafc <prvIdleTask+0x90>)
9000ea72:	4d23      	ldr	r5, [pc, #140]	@ (9000eb00 <prvIdleTask+0x94>)
9000ea74:	4f23      	ldr	r7, [pc, #140]	@ (9000eb04 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ea76:	6823      	ldr	r3, [r4, #0]
9000ea78:	b353      	cbz	r3, 9000ead0 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
9000ea7a:	f7fe fe03 	bl	9000d684 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ea7e:	68f3      	ldr	r3, [r6, #12]
9000ea80:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ea84:	f108 0004 	add.w	r0, r8, #4
9000ea88:	f7fe fd7e 	bl	9000d588 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000ea8c:	682b      	ldr	r3, [r5, #0]
9000ea8e:	3b01      	subs	r3, #1
9000ea90:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000ea92:	6823      	ldr	r3, [r4, #0]
9000ea94:	3b01      	subs	r3, #1
9000ea96:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000ea98:	f7fe fe16 	bl	9000d6c8 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ea9c:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
9000eaa0:	b163      	cbz	r3, 9000eabc <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000eaa2:	2b01      	cmp	r3, #1
9000eaa4:	d024      	beq.n	9000eaf0 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000eaa6:	2b02      	cmp	r3, #2
9000eaa8:	d0e5      	beq.n	9000ea76 <prvIdleTask+0xa>
9000eaaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eaae:	f383 8811 	msr	BASEPRI, r3
9000eab2:	f3bf 8f6f 	isb	sy
9000eab6:	f3bf 8f4f 	dsb	sy
9000eaba:	e7fe      	b.n	9000eaba <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
9000eabc:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
9000eac0:	f7fe fcc6 	bl	9000d450 <vPortFree>
				vPortFree( pxTCB );
9000eac4:	4640      	mov	r0, r8
9000eac6:	f7fe fcc3 	bl	9000d450 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000eaca:	6823      	ldr	r3, [r4, #0]
9000eacc:	2b00      	cmp	r3, #0
9000eace:	d1d4      	bne.n	9000ea7a <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000ead0:	683b      	ldr	r3, [r7, #0]
9000ead2:	2b01      	cmp	r3, #1
9000ead4:	d909      	bls.n	9000eaea <prvIdleTask+0x7e>
				taskYIELD();
9000ead6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eada:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000eade:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000eae2:	f3bf 8f4f 	dsb	sy
9000eae6:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000eaea:	f7f4 fd99 	bl	90003620 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000eaee:	e7c2      	b.n	9000ea76 <prvIdleTask+0xa>
				vPortFree( pxTCB );
9000eaf0:	4640      	mov	r0, r8
9000eaf2:	f7fe fcad 	bl	9000d450 <vPortFree>
9000eaf6:	e7be      	b.n	9000ea76 <prvIdleTask+0xa>
9000eaf8:	24021664 	.word	0x24021664
9000eafc:	24021668 	.word	0x24021668
9000eb00:	2402164c 	.word	0x2402164c
9000eb04:	240216c0 	.word	0x240216c0

9000eb08 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eb08:	4b49      	ldr	r3, [pc, #292]	@ (9000ec30 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000eb0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eb0e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000eb10:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eb12:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000eb14:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000eb16:	2e00      	cmp	r6, #0
9000eb18:	d03e      	beq.n	9000eb98 <xTaskIncrementTick.part.0+0x90>
9000eb1a:	4b46      	ldr	r3, [pc, #280]	@ (9000ec34 <xTaskIncrementTick.part.0+0x12c>)
9000eb1c:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000eb1e:	681b      	ldr	r3, [r3, #0]
9000eb20:	429e      	cmp	r6, r3
9000eb22:	d346      	bcc.n	9000ebb2 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eb24:	4f44      	ldr	r7, [pc, #272]	@ (9000ec38 <xTaskIncrementTick.part.0+0x130>)
9000eb26:	683b      	ldr	r3, [r7, #0]
9000eb28:	681d      	ldr	r5, [r3, #0]
9000eb2a:	2d00      	cmp	r5, #0
9000eb2c:	d077      	beq.n	9000ec1e <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000eb2e:	2500      	movs	r5, #0
9000eb30:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9000ec48 <xTaskIncrementTick.part.0+0x140>
9000eb34:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9000ec4c <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000eb38:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 9000ec50 <xTaskIncrementTick.part.0+0x148>
9000eb3c:	e020      	b.n	9000eb80 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000eb3e:	f7fe fd23 	bl	9000d588 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000eb42:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000eb44:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000eb48:	b10b      	cbz	r3, 9000eb4e <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000eb4a:	f7fe fd1d 	bl	9000d588 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000eb4e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000eb50:	4659      	mov	r1, fp
9000eb52:	f8d8 2000 	ldr.w	r2, [r8]
9000eb56:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000eb5a:	4293      	cmp	r3, r2
9000eb5c:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000eb60:	d901      	bls.n	9000eb66 <xTaskIncrementTick.part.0+0x5e>
9000eb62:	f8c8 3000 	str.w	r3, [r8]
9000eb66:	f7fe fce9 	bl	9000d53c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000eb6a:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eb6e:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000eb70:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000eb72:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eb74:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000eb76:	4291      	cmp	r1, r2
9000eb78:	bf28      	it	cs
9000eb7a:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eb7c:	2b00      	cmp	r3, #0
9000eb7e:	d052      	beq.n	9000ec26 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000eb80:	683b      	ldr	r3, [r7, #0]
9000eb82:	68db      	ldr	r3, [r3, #12]
9000eb84:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000eb86:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000eb88:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9000eb8c:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000eb8e:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9000eb90:	d2d5      	bcs.n	9000eb3e <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9000eb92:	9a01      	ldr	r2, [sp, #4]
9000eb94:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000eb96:	e011      	b.n	9000ebbc <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9000eb98:	4b27      	ldr	r3, [pc, #156]	@ (9000ec38 <xTaskIncrementTick.part.0+0x130>)
9000eb9a:	681a      	ldr	r2, [r3, #0]
9000eb9c:	6812      	ldr	r2, [r2, #0]
9000eb9e:	b30a      	cbz	r2, 9000ebe4 <xTaskIncrementTick.part.0+0xdc>
9000eba0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eba4:	f383 8811 	msr	BASEPRI, r3
9000eba8:	f3bf 8f6f 	isb	sy
9000ebac:	f3bf 8f4f 	dsb	sy
9000ebb0:	e7fe      	b.n	9000ebb0 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9000ebb2:	2500      	movs	r5, #0
9000ebb4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9000ec48 <xTaskIncrementTick.part.0+0x140>
9000ebb8:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9000ec4c <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ebbc:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000ebc0:	491e      	ldr	r1, [pc, #120]	@ (9000ec3c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ebc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000ebc4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000ebc8:	009b      	lsls	r3, r3, #2
9000ebca:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000ebce:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000ebd0:	2a02      	cmp	r2, #2
9000ebd2:	bf28      	it	cs
9000ebd4:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000ebd6:	2b00      	cmp	r3, #0
}
9000ebd8:	bf0c      	ite	eq
9000ebda:	4628      	moveq	r0, r5
9000ebdc:	2001      	movne	r0, #1
9000ebde:	b003      	add	sp, #12
9000ebe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000ebe4:	4a16      	ldr	r2, [pc, #88]	@ (9000ec40 <xTaskIncrementTick.part.0+0x138>)
9000ebe6:	6818      	ldr	r0, [r3, #0]
9000ebe8:	6811      	ldr	r1, [r2, #0]
9000ebea:	6019      	str	r1, [r3, #0]
9000ebec:	4915      	ldr	r1, [pc, #84]	@ (9000ec44 <xTaskIncrementTick.part.0+0x13c>)
9000ebee:	6010      	str	r0, [r2, #0]
9000ebf0:	680a      	ldr	r2, [r1, #0]
9000ebf2:	3201      	adds	r2, #1
9000ebf4:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ebf6:	681a      	ldr	r2, [r3, #0]
9000ebf8:	6812      	ldr	r2, [r2, #0]
9000ebfa:	b93a      	cbnz	r2, 9000ec0c <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000ebfc:	4b0d      	ldr	r3, [pc, #52]	@ (9000ec34 <xTaskIncrementTick.part.0+0x12c>)
9000ebfe:	461a      	mov	r2, r3
9000ec00:	9301      	str	r3, [sp, #4]
9000ec02:	f04f 33ff 	mov.w	r3, #4294967295
9000ec06:	6013      	str	r3, [r2, #0]
9000ec08:	4613      	mov	r3, r2
9000ec0a:	e788      	b.n	9000eb1e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ec0c:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ec0e:	4a09      	ldr	r2, [pc, #36]	@ (9000ec34 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ec10:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ec12:	9201      	str	r2, [sp, #4]
9000ec14:	68db      	ldr	r3, [r3, #12]
9000ec16:	685b      	ldr	r3, [r3, #4]
9000ec18:	6013      	str	r3, [r2, #0]
9000ec1a:	4613      	mov	r3, r2
	}
}
9000ec1c:	e77f      	b.n	9000eb1e <xTaskIncrementTick.part.0+0x16>
9000ec1e:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9000ec48 <xTaskIncrementTick.part.0+0x140>
9000ec22:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000ec4c <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ec26:	f04f 33ff 	mov.w	r3, #4294967295
9000ec2a:	9a01      	ldr	r2, [sp, #4]
9000ec2c:	6013      	str	r3, [r2, #0]
					break;
9000ec2e:	e7c5      	b.n	9000ebbc <xTaskIncrementTick.part.0+0xb4>
9000ec30:	24021648 	.word	0x24021648
9000ec34:	2402162c 	.word	0x2402162c
9000ec38:	24021694 	.word	0x24021694
9000ec3c:	24021638 	.word	0x24021638
9000ec40:	24021690 	.word	0x24021690
9000ec44:	24021634 	.word	0x24021634
9000ec48:	240216c0 	.word	0x240216c0
9000ec4c:	24021b20 	.word	0x24021b20
9000ec50:	24021644 	.word	0x24021644

9000ec54 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000ec54:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000ec58:	4d43      	ldr	r5, [pc, #268]	@ (9000ed68 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
9000ec5a:	f7fe fd13 	bl	9000d684 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000ec5e:	682b      	ldr	r3, [r5, #0]
9000ec60:	3b01      	subs	r3, #1
9000ec62:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ec64:	682b      	ldr	r3, [r5, #0]
9000ec66:	2b00      	cmp	r3, #0
9000ec68:	d168      	bne.n	9000ed3c <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000ec6a:	4b40      	ldr	r3, [pc, #256]	@ (9000ed6c <xTaskResumeAll.part.0+0x118>)
9000ec6c:	681b      	ldr	r3, [r3, #0]
9000ec6e:	2b00      	cmp	r3, #0
9000ec70:	d064      	beq.n	9000ed3c <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ec72:	4e3f      	ldr	r6, [pc, #252]	@ (9000ed70 <xTaskResumeAll.part.0+0x11c>)
9000ec74:	6833      	ldr	r3, [r6, #0]
9000ec76:	2b00      	cmp	r3, #0
9000ec78:	d073      	beq.n	9000ed62 <xTaskResumeAll.part.0+0x10e>
9000ec7a:	4f3e      	ldr	r7, [pc, #248]	@ (9000ed74 <xTaskResumeAll.part.0+0x120>)
9000ec7c:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 9000ed84 <xTaskResumeAll.part.0+0x130>
9000ec80:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 9000ed88 <xTaskResumeAll.part.0+0x134>
9000ec84:	f8df a104 	ldr.w	sl, [pc, #260]	@ 9000ed8c <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ec88:	68f3      	ldr	r3, [r6, #12]
9000ec8a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ec8e:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ec92:	f10b 0018 	add.w	r0, fp, #24
9000ec96:	f7fe fc77 	bl	9000d588 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ec9a:	4620      	mov	r0, r4
9000ec9c:	f7fe fc74 	bl	9000d588 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000eca0:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000eca4:	4621      	mov	r1, r4
9000eca6:	683c      	ldr	r4, [r7, #0]
9000eca8:	eb02 0082 	add.w	r0, r2, r2, lsl #2
9000ecac:	42a2      	cmp	r2, r4
9000ecae:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ecb2:	d900      	bls.n	9000ecb6 <xTaskResumeAll.part.0+0x62>
9000ecb4:	603a      	str	r2, [r7, #0]
9000ecb6:	f7fe fc41 	bl	9000d53c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ecba:	f8d8 1000 	ldr.w	r1, [r8]
9000ecbe:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
9000ecc2:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
9000ecc4:	429a      	cmp	r2, r3
9000ecc6:	d33f      	bcc.n	9000ed48 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
9000ecc8:	2301      	movs	r3, #1
9000ecca:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ecce:	6833      	ldr	r3, [r6, #0]
9000ecd0:	2b00      	cmp	r3, #0
9000ecd2:	d1d9      	bne.n	9000ec88 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ecd4:	4b28      	ldr	r3, [pc, #160]	@ (9000ed78 <xTaskResumeAll.part.0+0x124>)
9000ecd6:	681a      	ldr	r2, [r3, #0]
9000ecd8:	6812      	ldr	r2, [r2, #0]
9000ecda:	2a00      	cmp	r2, #0
9000ecdc:	d03c      	beq.n	9000ed58 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ecde:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ece0:	4b26      	ldr	r3, [pc, #152]	@ (9000ed7c <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ece2:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ece4:	68d2      	ldr	r2, [r2, #12]
9000ece6:	6852      	ldr	r2, [r2, #4]
9000ece8:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000ecea:	4e25      	ldr	r6, [pc, #148]	@ (9000ed80 <xTaskResumeAll.part.0+0x12c>)
9000ecec:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000ecee:	b194      	cbz	r4, 9000ed16 <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
9000ecf0:	2701      	movs	r7, #1
9000ecf2:	e006      	b.n	9000ed02 <xTaskResumeAll.part.0+0xae>
9000ecf4:	f7ff ff08 	bl	9000eb08 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000ecf8:	b108      	cbz	r0, 9000ecfe <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
9000ecfa:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ecfe:	3c01      	subs	r4, #1
9000ed00:	d008      	beq.n	9000ed14 <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ed02:	682b      	ldr	r3, [r5, #0]
9000ed04:	2b00      	cmp	r3, #0
9000ed06:	d0f5      	beq.n	9000ecf4 <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
9000ed08:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ed0a:	3c01      	subs	r4, #1
		++xPendedTicks;
9000ed0c:	f103 0301 	add.w	r3, r3, #1
9000ed10:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ed12:	d1f6      	bne.n	9000ed02 <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
9000ed14:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000ed16:	f8da 3000 	ldr.w	r3, [sl]
9000ed1a:	b17b      	cbz	r3, 9000ed3c <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
9000ed1c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ed20:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ed24:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000ed28:	f3bf 8f4f 	dsb	sy
9000ed2c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000ed30:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000ed32:	f7fe fcc9 	bl	9000d6c8 <vPortExitCritical>
}
9000ed36:	4620      	mov	r0, r4
9000ed38:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9000ed3c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000ed3e:	f7fe fcc3 	bl	9000d6c8 <vPortExitCritical>
}
9000ed42:	4620      	mov	r0, r4
9000ed44:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ed48:	6833      	ldr	r3, [r6, #0]
9000ed4a:	2b00      	cmp	r3, #0
9000ed4c:	d19c      	bne.n	9000ec88 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ed4e:	4b0a      	ldr	r3, [pc, #40]	@ (9000ed78 <xTaskResumeAll.part.0+0x124>)
9000ed50:	681a      	ldr	r2, [r3, #0]
9000ed52:	6812      	ldr	r2, [r2, #0]
9000ed54:	2a00      	cmp	r2, #0
9000ed56:	d1c2      	bne.n	9000ecde <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
9000ed58:	4b08      	ldr	r3, [pc, #32]	@ (9000ed7c <xTaskResumeAll.part.0+0x128>)
9000ed5a:	f04f 32ff 	mov.w	r2, #4294967295
9000ed5e:	601a      	str	r2, [r3, #0]
9000ed60:	e7c3      	b.n	9000ecea <xTaskResumeAll.part.0+0x96>
9000ed62:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000ed8c <xTaskResumeAll.part.0+0x138>
9000ed66:	e7c0      	b.n	9000ecea <xTaskResumeAll.part.0+0x96>
9000ed68:	24021628 	.word	0x24021628
9000ed6c:	2402164c 	.word	0x2402164c
9000ed70:	2402167c 	.word	0x2402167c
9000ed74:	24021644 	.word	0x24021644
9000ed78:	24021694 	.word	0x24021694
9000ed7c:	2402162c 	.word	0x2402162c
9000ed80:	2402163c 	.word	0x2402163c
9000ed84:	240216c0 	.word	0x240216c0
9000ed88:	24021b20 	.word	0x24021b20
9000ed8c:	24021638 	.word	0x24021638

9000ed90 <xTaskCreateStatic>:
	{
9000ed90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000ed94:	b083      	sub	sp, #12
9000ed96:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000ed98:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
9000ed9c:	b1bb      	cbz	r3, 9000edce <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000ed9e:	b16c      	cbz	r4, 9000edbc <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000eda0:	2360      	movs	r3, #96	@ 0x60
9000eda2:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000eda4:	9b01      	ldr	r3, [sp, #4]
9000eda6:	2b60      	cmp	r3, #96	@ 0x60
9000eda8:	d01a      	beq.n	9000ede0 <xTaskCreateStatic+0x50>
9000edaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edae:	f383 8811 	msr	BASEPRI, r3
9000edb2:	f3bf 8f6f 	isb	sy
9000edb6:	f3bf 8f4f 	dsb	sy
9000edba:	e7fe      	b.n	9000edba <xTaskCreateStatic+0x2a>
9000edbc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edc0:	f383 8811 	msr	BASEPRI, r3
9000edc4:	f3bf 8f6f 	isb	sy
9000edc8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000edcc:	e7fe      	b.n	9000edcc <xTaskCreateStatic+0x3c>
9000edce:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000edd2:	f383 8811 	msr	BASEPRI, r3
9000edd6:	f3bf 8f6f 	isb	sy
9000edda:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000edde:	e7fe      	b.n	9000edde <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000ede0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ede2:	0096      	lsls	r6, r2, #2
9000ede4:	4607      	mov	r7, r0
9000ede6:	460d      	mov	r5, r1
9000ede8:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000edea:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000edec:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000edee:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000edf0:	4632      	mov	r2, r6
9000edf2:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000edf4:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000edf8:	f018 fa9a 	bl	90027330 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000edfc:	1f32      	subs	r2, r6, #4
9000edfe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ee00:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000ee02:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
9000ee06:	2d00      	cmp	r5, #0
9000ee08:	d068      	beq.n	9000eedc <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee0a:	782b      	ldrb	r3, [r5, #0]
9000ee0c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000ee10:	2b00      	cmp	r3, #0
9000ee12:	d036      	beq.n	9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee14:	786b      	ldrb	r3, [r5, #1]
9000ee16:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000ee1a:	b393      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee1c:	78ab      	ldrb	r3, [r5, #2]
9000ee1e:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000ee22:	b373      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee24:	78eb      	ldrb	r3, [r5, #3]
9000ee26:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000ee2a:	b353      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee2c:	792b      	ldrb	r3, [r5, #4]
9000ee2e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000ee32:	b333      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee34:	796b      	ldrb	r3, [r5, #5]
9000ee36:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000ee3a:	b313      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee3c:	79ab      	ldrb	r3, [r5, #6]
9000ee3e:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000ee42:	b1f3      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee44:	79eb      	ldrb	r3, [r5, #7]
9000ee46:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000ee4a:	b1d3      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee4c:	7a2b      	ldrb	r3, [r5, #8]
9000ee4e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000ee52:	b1b3      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee54:	7a6b      	ldrb	r3, [r5, #9]
9000ee56:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000ee5a:	b193      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee5c:	7aab      	ldrb	r3, [r5, #10]
9000ee5e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000ee62:	b173      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee64:	7aeb      	ldrb	r3, [r5, #11]
9000ee66:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000ee6a:	b153      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee6c:	7b2b      	ldrb	r3, [r5, #12]
9000ee6e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000ee72:	b133      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee74:	7b6b      	ldrb	r3, [r5, #13]
9000ee76:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000ee7a:	b113      	cbz	r3, 9000ee82 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee7c:	7bab      	ldrb	r3, [r5, #14]
9000ee7e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000ee82:	2300      	movs	r3, #0
9000ee84:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000ee88:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000ee8a:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ee8e:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000ee90:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000ee92:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000ee96:	bf28      	it	cs
9000ee98:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000ee9a:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000ee9c:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ee9e:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000eea2:	f7fe fb47 	bl	9000d534 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000eea6:	f104 0018 	add.w	r0, r4, #24
9000eeaa:	f7fe fb43 	bl	9000d534 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000eeae:	4642      	mov	r2, r8
9000eeb0:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000eeb2:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000eeb6:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000eeb8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000eeba:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000eebc:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000eebe:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000eec2:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000eec6:	f7fe fbb1 	bl	9000d62c <pxPortInitialiseStack>
9000eeca:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000eecc:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000eece:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000eed0:	f7ff fd44 	bl	9000e95c <prvAddNewTaskToReadyList>
	}
9000eed4:	4620      	mov	r0, r4
9000eed6:	b003      	add	sp, #12
9000eed8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000eedc:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000eee0:	e7d2      	b.n	9000ee88 <xTaskCreateStatic+0xf8>
9000eee2:	bf00      	nop

9000eee4 <xTaskCreate>:
	{
9000eee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000eee8:	0096      	lsls	r6, r2, #2
	{
9000eeea:	4680      	mov	r8, r0
9000eeec:	460d      	mov	r5, r1
9000eeee:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000eef0:	4630      	mov	r0, r6
9000eef2:	f7fe f9f1 	bl	9000d2d8 <pvPortMalloc>
			if( pxStack != NULL )
9000eef6:	2800      	cmp	r0, #0
9000eef8:	d07f      	beq.n	9000effa <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000eefa:	4607      	mov	r7, r0
9000eefc:	2060      	movs	r0, #96	@ 0x60
9000eefe:	f7fe f9eb 	bl	9000d2d8 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000ef02:	4604      	mov	r4, r0
9000ef04:	2800      	cmp	r0, #0
9000ef06:	d075      	beq.n	9000eff4 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000ef08:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000ef0a:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef0c:	4632      	mov	r2, r6
9000ef0e:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000ef10:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef14:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ef16:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef18:	f018 fa0a 	bl	90027330 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ef1c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000ef1e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000ef20:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000ef24:	2d00      	cmp	r5, #0
9000ef26:	d06c      	beq.n	9000f002 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef28:	782b      	ldrb	r3, [r5, #0]
9000ef2a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000ef2e:	2b00      	cmp	r3, #0
9000ef30:	d036      	beq.n	9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef32:	786b      	ldrb	r3, [r5, #1]
9000ef34:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000ef38:	b393      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef3a:	78ab      	ldrb	r3, [r5, #2]
9000ef3c:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000ef40:	b373      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef42:	78eb      	ldrb	r3, [r5, #3]
9000ef44:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000ef48:	b353      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef4a:	792b      	ldrb	r3, [r5, #4]
9000ef4c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000ef50:	b333      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef52:	796b      	ldrb	r3, [r5, #5]
9000ef54:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000ef58:	b313      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef5a:	79ab      	ldrb	r3, [r5, #6]
9000ef5c:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000ef60:	b1f3      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef62:	79eb      	ldrb	r3, [r5, #7]
9000ef64:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000ef68:	b1d3      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef6a:	7a2b      	ldrb	r3, [r5, #8]
9000ef6c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000ef70:	b1b3      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef72:	7a6b      	ldrb	r3, [r5, #9]
9000ef74:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000ef78:	b193      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef7a:	7aab      	ldrb	r3, [r5, #10]
9000ef7c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000ef80:	b173      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef82:	7aeb      	ldrb	r3, [r5, #11]
9000ef84:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000ef88:	b153      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef8a:	7b2b      	ldrb	r3, [r5, #12]
9000ef8c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000ef90:	b133      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef92:	7b6b      	ldrb	r3, [r5, #13]
9000ef94:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000ef98:	b113      	cbz	r3, 9000efa0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef9a:	7bab      	ldrb	r3, [r5, #14]
9000ef9c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000efa0:	2300      	movs	r3, #0
9000efa2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000efa6:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000efa8:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000efaa:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000efac:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000efae:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000efb0:	bf28      	it	cs
9000efb2:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000efb4:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000efb6:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000efb8:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000efbc:	f7fe faba 	bl	9000d534 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000efc0:	f104 0018 	add.w	r0, r4, #24
9000efc4:	f7fe fab6 	bl	9000d534 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9000efc8:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efca:	464a      	mov	r2, r9
9000efcc:	4641      	mov	r1, r8
9000efce:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000efd0:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000efd2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000efd4:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000efd6:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000efd8:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efdc:	f7fe fb26 	bl	9000d62c <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000efe0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000efe2:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000efe4:	b103      	cbz	r3, 9000efe8 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000efe6:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000efe8:	4620      	mov	r0, r4
9000efea:	f7ff fcb7 	bl	9000e95c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000efee:	2001      	movs	r0, #1
	}
9000eff0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000eff4:	4638      	mov	r0, r7
9000eff6:	f7fe fa2b 	bl	9000d450 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000effa:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000effe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f002:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000f006:	e7ce      	b.n	9000efa6 <xTaskCreate+0xc2>

9000f008 <vTaskDelay>:
	{
9000f008:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000f00a:	b950      	cbnz	r0, 9000f022 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000f00c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f010:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f014:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f018:	f3bf 8f4f 	dsb	sy
9000f01c:	f3bf 8f6f 	isb	sy
	}
9000f020:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000f022:	4d1e      	ldr	r5, [pc, #120]	@ (9000f09c <vTaskDelay+0x94>)
9000f024:	682b      	ldr	r3, [r5, #0]
9000f026:	b143      	cbz	r3, 9000f03a <vTaskDelay+0x32>
9000f028:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f02c:	f383 8811 	msr	BASEPRI, r3
9000f030:	f3bf 8f6f 	isb	sy
9000f034:	f3bf 8f4f 	dsb	sy
9000f038:	e7fe      	b.n	9000f038 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000f03a:	682b      	ldr	r3, [r5, #0]
9000f03c:	4604      	mov	r4, r0
9000f03e:	3301      	adds	r3, #1
9000f040:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000f042:	4b17      	ldr	r3, [pc, #92]	@ (9000f0a0 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f044:	4e17      	ldr	r6, [pc, #92]	@ (9000f0a4 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000f046:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f048:	6830      	ldr	r0, [r6, #0]
9000f04a:	3004      	adds	r0, #4
9000f04c:	f7fe fa9c 	bl	9000d588 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f050:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f052:	6833      	ldr	r3, [r6, #0]
9000f054:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000f056:	d315      	bcc.n	9000f084 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f058:	4b13      	ldr	r3, [pc, #76]	@ (9000f0a8 <vTaskDelay+0xa0>)
9000f05a:	6818      	ldr	r0, [r3, #0]
9000f05c:	6831      	ldr	r1, [r6, #0]
9000f05e:	3104      	adds	r1, #4
9000f060:	f7fe fa7a 	bl	9000d558 <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000f064:	682b      	ldr	r3, [r5, #0]
9000f066:	b943      	cbnz	r3, 9000f07a <vTaskDelay+0x72>
9000f068:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f06c:	f383 8811 	msr	BASEPRI, r3
9000f070:	f3bf 8f6f 	isb	sy
9000f074:	f3bf 8f4f 	dsb	sy
9000f078:	e7fe      	b.n	9000f078 <vTaskDelay+0x70>
9000f07a:	f7ff fdeb 	bl	9000ec54 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000f07e:	2800      	cmp	r0, #0
9000f080:	d0c4      	beq.n	9000f00c <vTaskDelay+0x4>
	}
9000f082:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f084:	4b09      	ldr	r3, [pc, #36]	@ (9000f0ac <vTaskDelay+0xa4>)
9000f086:	6818      	ldr	r0, [r3, #0]
9000f088:	6831      	ldr	r1, [r6, #0]
9000f08a:	3104      	adds	r1, #4
9000f08c:	f7fe fa64 	bl	9000d558 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000f090:	4b07      	ldr	r3, [pc, #28]	@ (9000f0b0 <vTaskDelay+0xa8>)
9000f092:	681a      	ldr	r2, [r3, #0]
9000f094:	4294      	cmp	r4, r2
9000f096:	d2e5      	bcs.n	9000f064 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000f098:	601c      	str	r4, [r3, #0]
9000f09a:	e7e3      	b.n	9000f064 <vTaskDelay+0x5c>
9000f09c:	24021628 	.word	0x24021628
9000f0a0:	24021648 	.word	0x24021648
9000f0a4:	24021b20 	.word	0x24021b20
9000f0a8:	24021690 	.word	0x24021690
9000f0ac:	24021694 	.word	0x24021694
9000f0b0:	2402162c 	.word	0x2402162c

9000f0b4 <vTaskStartScheduler>:
{
9000f0b4:	b570      	push	{r4, r5, r6, lr}
9000f0b6:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000f0b8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f0ba:	4668      	mov	r0, sp
9000f0bc:	aa02      	add	r2, sp, #8
9000f0be:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000f0c0:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f0c4:	f7fe f8ea 	bl	9000d29c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000f0c8:	9d00      	ldr	r5, [sp, #0]
9000f0ca:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000f0ce:	b1b8      	cbz	r0, 9000f100 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000f0d0:	b16d      	cbz	r5, 9000f0ee <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f0d2:	2260      	movs	r2, #96	@ 0x60
9000f0d4:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f0d6:	9a03      	ldr	r2, [sp, #12]
9000f0d8:	2a60      	cmp	r2, #96	@ 0x60
9000f0da:	d01a      	beq.n	9000f112 <vTaskStartScheduler+0x5e>
9000f0dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f0e0:	f383 8811 	msr	BASEPRI, r3
9000f0e4:	f3bf 8f6f 	isb	sy
9000f0e8:	f3bf 8f4f 	dsb	sy
9000f0ec:	e7fe      	b.n	9000f0ec <vTaskStartScheduler+0x38>
9000f0ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f0f2:	f383 8811 	msr	BASEPRI, r3
9000f0f6:	f3bf 8f6f 	isb	sy
9000f0fa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f0fe:	e7fe      	b.n	9000f0fe <vTaskStartScheduler+0x4a>
9000f100:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f104:	f383 8811 	msr	BASEPRI, r3
9000f108:	f3bf 8f6f 	isb	sy
9000f10c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f110:	e7fe      	b.n	9000f110 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f112:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f114:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f116:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f118:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f11a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f11c:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f120:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f122:	f018 f905 	bl	90027330 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f126:	1f33      	subs	r3, r6, #4
9000f128:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f12a:	492a      	ldr	r1, [pc, #168]	@ (9000f1d4 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f12c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f12e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f130:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
9000f134:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f136:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f13a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000f13e:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000f140:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f144:	f7fe f9f6 	bl	9000d534 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f148:	f105 0018 	add.w	r0, r5, #24
9000f14c:	f7fe f9f2 	bl	9000d534 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f150:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f152:	4622      	mov	r2, r4
9000f154:	4920      	ldr	r1, [pc, #128]	@ (9000f1d8 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000f156:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f158:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f15a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f15c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f15e:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f160:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f162:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f166:	f7fe fa61 	bl	9000d62c <pxPortInitialiseStack>
9000f16a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f16c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f16e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f170:	f7ff fbf4 	bl	9000e95c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000f174:	f000 fc86 	bl	9000fa84 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000f178:	2801      	cmp	r0, #1
9000f17a:	d00c      	beq.n	9000f196 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f17c:	3001      	adds	r0, #1
9000f17e:	d001      	beq.n	9000f184 <vTaskStartScheduler+0xd0>
}
9000f180:	b004      	add	sp, #16
9000f182:	bd70      	pop	{r4, r5, r6, pc}
9000f184:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f188:	f383 8811 	msr	BASEPRI, r3
9000f18c:	f3bf 8f6f 	isb	sy
9000f190:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f194:	e7fe      	b.n	9000f194 <vTaskStartScheduler+0xe0>
9000f196:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f19a:	f383 8811 	msr	BASEPRI, r3
9000f19e:	f3bf 8f6f 	isb	sy
9000f1a2:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000f1a6:	4b0d      	ldr	r3, [pc, #52]	@ (9000f1dc <vTaskStartScheduler+0x128>)
9000f1a8:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000f1ac:	490c      	ldr	r1, [pc, #48]	@ (9000f1e0 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000f1ae:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f1b0:	4b0c      	ldr	r3, [pc, #48]	@ (9000f1e4 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000f1b2:	4a0d      	ldr	r2, [pc, #52]	@ (9000f1e8 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f1b4:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f1b6:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f1b8:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f1ba:	b143      	cbz	r3, 9000f1ce <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f1bc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f1be:	b10b      	cbz	r3, 9000f1c4 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f1c0:	2000      	movs	r0, #0
9000f1c2:	4798      	blx	r3
}
9000f1c4:	b004      	add	sp, #16
9000f1c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f1ca:	f7fe baed 	b.w	9000d7a8 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f1ce:	6813      	ldr	r3, [r2, #0]
9000f1d0:	e7f4      	b.n	9000f1bc <vTaskStartScheduler+0x108>
9000f1d2:	bf00      	nop
9000f1d4:	454c4449 	.word	0x454c4449
9000f1d8:	9000ea6d 	.word	0x9000ea6d
9000f1dc:	2402162c 	.word	0x2402162c
9000f1e0:	24021640 	.word	0x24021640
9000f1e4:	24021648 	.word	0x24021648
9000f1e8:	24021b20 	.word	0x24021b20

9000f1ec <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f1ec:	4a02      	ldr	r2, [pc, #8]	@ (9000f1f8 <vTaskSuspendAll+0xc>)
9000f1ee:	6813      	ldr	r3, [r2, #0]
9000f1f0:	3301      	adds	r3, #1
9000f1f2:	6013      	str	r3, [r2, #0]
}
9000f1f4:	4770      	bx	lr
9000f1f6:	bf00      	nop
9000f1f8:	24021628 	.word	0x24021628

9000f1fc <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f1fc:	4b06      	ldr	r3, [pc, #24]	@ (9000f218 <xTaskResumeAll+0x1c>)
9000f1fe:	681b      	ldr	r3, [r3, #0]
9000f200:	b943      	cbnz	r3, 9000f214 <xTaskResumeAll+0x18>
9000f202:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f206:	f383 8811 	msr	BASEPRI, r3
9000f20a:	f3bf 8f6f 	isb	sy
9000f20e:	f3bf 8f4f 	dsb	sy
9000f212:	e7fe      	b.n	9000f212 <xTaskResumeAll+0x16>
9000f214:	f7ff bd1e 	b.w	9000ec54 <xTaskResumeAll.part.0>
9000f218:	24021628 	.word	0x24021628

9000f21c <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f21c:	4b01      	ldr	r3, [pc, #4]	@ (9000f224 <xTaskGetTickCount+0x8>)
9000f21e:	6818      	ldr	r0, [r3, #0]
}
9000f220:	4770      	bx	lr
9000f222:	bf00      	nop
9000f224:	24021648 	.word	0x24021648

9000f228 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f228:	4b05      	ldr	r3, [pc, #20]	@ (9000f240 <xTaskIncrementTick+0x18>)
9000f22a:	681b      	ldr	r3, [r3, #0]
9000f22c:	b90b      	cbnz	r3, 9000f232 <xTaskIncrementTick+0xa>
9000f22e:	f7ff bc6b 	b.w	9000eb08 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f232:	4a04      	ldr	r2, [pc, #16]	@ (9000f244 <xTaskIncrementTick+0x1c>)
}
9000f234:	2000      	movs	r0, #0
		++xPendedTicks;
9000f236:	6813      	ldr	r3, [r2, #0]
9000f238:	3301      	adds	r3, #1
9000f23a:	6013      	str	r3, [r2, #0]
}
9000f23c:	4770      	bx	lr
9000f23e:	bf00      	nop
9000f240:	24021628 	.word	0x24021628
9000f244:	2402163c 	.word	0x2402163c

9000f248 <vTaskSetApplicationTaskTag>:
	{
9000f248:	b538      	push	{r3, r4, r5, lr}
9000f24a:	460d      	mov	r5, r1
		if( xTask == NULL )
9000f24c:	b138      	cbz	r0, 9000f25e <vTaskSetApplicationTaskTag+0x16>
9000f24e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000f250:	f7fe fa18 	bl	9000d684 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f254:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000f256:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f25a:	f7fe ba35 	b.w	9000d6c8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000f25e:	4b04      	ldr	r3, [pc, #16]	@ (9000f270 <vTaskSetApplicationTaskTag+0x28>)
9000f260:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000f262:	f7fe fa0f 	bl	9000d684 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f266:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000f268:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f26c:	f7fe ba2c 	b.w	9000d6c8 <vPortExitCritical>
9000f270:	24021b20 	.word	0x24021b20

9000f274 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000f274:	4b27      	ldr	r3, [pc, #156]	@ (9000f314 <vTaskSwitchContext+0xa0>)
9000f276:	681b      	ldr	r3, [r3, #0]
9000f278:	b11b      	cbz	r3, 9000f282 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000f27a:	4b27      	ldr	r3, [pc, #156]	@ (9000f318 <vTaskSwitchContext+0xa4>)
9000f27c:	2201      	movs	r2, #1
9000f27e:	601a      	str	r2, [r3, #0]
9000f280:	4770      	bx	lr
{
9000f282:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000f284:	4a24      	ldr	r2, [pc, #144]	@ (9000f318 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000f286:	4c25      	ldr	r4, [pc, #148]	@ (9000f31c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000f288:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000f28a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f28c:	2b00      	cmp	r3, #0
9000f28e:	d036      	beq.n	9000f2fe <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000f290:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f292:	b10b      	cbz	r3, 9000f298 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f294:	2001      	movs	r0, #1
9000f296:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f298:	4d21      	ldr	r5, [pc, #132]	@ (9000f320 <vTaskSwitchContext+0xac>)
9000f29a:	4922      	ldr	r1, [pc, #136]	@ (9000f324 <vTaskSwitchContext+0xb0>)
9000f29c:	682b      	ldr	r3, [r5, #0]
9000f29e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f2a2:	0098      	lsls	r0, r3, #2
9000f2a4:	0092      	lsls	r2, r2, #2
9000f2a6:	588a      	ldr	r2, [r1, r2]
9000f2a8:	b942      	cbnz	r2, 9000f2bc <vTaskSwitchContext+0x48>
9000f2aa:	b1fb      	cbz	r3, 9000f2ec <vTaskSwitchContext+0x78>
9000f2ac:	3b01      	subs	r3, #1
9000f2ae:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f2b2:	0098      	lsls	r0, r3, #2
9000f2b4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000f2b8:	2a00      	cmp	r2, #0
9000f2ba:	d0f6      	beq.n	9000f2aa <vTaskSwitchContext+0x36>
9000f2bc:	4418      	add	r0, r3
9000f2be:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000f2c2:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000f2c6:	4662      	mov	r2, ip
9000f2c8:	6849      	ldr	r1, [r1, #4]
9000f2ca:	3208      	adds	r2, #8
9000f2cc:	4291      	cmp	r1, r2
9000f2ce:	f8cc 1004 	str.w	r1, [ip, #4]
9000f2d2:	d01b      	beq.n	9000f30c <vTaskSwitchContext+0x98>
9000f2d4:	68ca      	ldr	r2, [r1, #12]
9000f2d6:	6022      	str	r2, [r4, #0]
9000f2d8:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000f2da:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f2dc:	b1a3      	cbz	r3, 9000f308 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000f2de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f2e0:	b11b      	cbz	r3, 9000f2ea <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f2e2:	2000      	movs	r0, #0
}
9000f2e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f2e8:	4718      	bx	r3
}
9000f2ea:	bd70      	pop	{r4, r5, r6, pc}
9000f2ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f2f0:	f383 8811 	msr	BASEPRI, r3
9000f2f4:	f3bf 8f6f 	isb	sy
9000f2f8:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f2fc:	e7fe      	b.n	9000f2fc <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000f2fe:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000f300:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f302:	2b00      	cmp	r3, #0
9000f304:	d1c6      	bne.n	9000f294 <vTaskSwitchContext+0x20>
9000f306:	e7c7      	b.n	9000f298 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000f308:	6823      	ldr	r3, [r4, #0]
9000f30a:	e7e8      	b.n	9000f2de <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f30c:	6849      	ldr	r1, [r1, #4]
9000f30e:	f8cc 1004 	str.w	r1, [ip, #4]
9000f312:	e7df      	b.n	9000f2d4 <vTaskSwitchContext+0x60>
9000f314:	24021628 	.word	0x24021628
9000f318:	24021638 	.word	0x24021638
9000f31c:	24021b20 	.word	0x24021b20
9000f320:	24021644 	.word	0x24021644
9000f324:	240216c0 	.word	0x240216c0

9000f328 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000f328:	b1f0      	cbz	r0, 9000f368 <vTaskPlaceOnEventList+0x40>
{
9000f32a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f32c:	4d1a      	ldr	r5, [pc, #104]	@ (9000f398 <vTaskPlaceOnEventList+0x70>)
9000f32e:	460c      	mov	r4, r1
9000f330:	6829      	ldr	r1, [r5, #0]
9000f332:	3118      	adds	r1, #24
9000f334:	f7fe f910 	bl	9000d558 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000f338:	4b18      	ldr	r3, [pc, #96]	@ (9000f39c <vTaskPlaceOnEventList+0x74>)
9000f33a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f33c:	6828      	ldr	r0, [r5, #0]
9000f33e:	3004      	adds	r0, #4
9000f340:	f7fe f922 	bl	9000d588 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000f344:	1c63      	adds	r3, r4, #1
9000f346:	d020      	beq.n	9000f38a <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f348:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f34a:	682b      	ldr	r3, [r5, #0]
9000f34c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f34e:	d214      	bcs.n	9000f37a <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f350:	4b13      	ldr	r3, [pc, #76]	@ (9000f3a0 <vTaskPlaceOnEventList+0x78>)
9000f352:	6818      	ldr	r0, [r3, #0]
9000f354:	6829      	ldr	r1, [r5, #0]
9000f356:	3104      	adds	r1, #4
9000f358:	f7fe f8fe 	bl	9000d558 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f35c:	4b11      	ldr	r3, [pc, #68]	@ (9000f3a4 <vTaskPlaceOnEventList+0x7c>)
9000f35e:	681a      	ldr	r2, [r3, #0]
9000f360:	4294      	cmp	r4, r2
9000f362:	d200      	bcs.n	9000f366 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000f364:	601c      	str	r4, [r3, #0]
}
9000f366:	bd70      	pop	{r4, r5, r6, pc}
9000f368:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f36c:	f383 8811 	msr	BASEPRI, r3
9000f370:	f3bf 8f6f 	isb	sy
9000f374:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000f378:	e7fe      	b.n	9000f378 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f37a:	4b0b      	ldr	r3, [pc, #44]	@ (9000f3a8 <vTaskPlaceOnEventList+0x80>)
9000f37c:	6818      	ldr	r0, [r3, #0]
9000f37e:	6829      	ldr	r1, [r5, #0]
}
9000f380:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f384:	3104      	adds	r1, #4
9000f386:	f7fe b8e7 	b.w	9000d558 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f38a:	6829      	ldr	r1, [r5, #0]
9000f38c:	4807      	ldr	r0, [pc, #28]	@ (9000f3ac <vTaskPlaceOnEventList+0x84>)
9000f38e:	3104      	adds	r1, #4
}
9000f390:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f394:	f7fe b8d2 	b.w	9000d53c <vListInsertEnd>
9000f398:	24021b20 	.word	0x24021b20
9000f39c:	24021648 	.word	0x24021648
9000f3a0:	24021694 	.word	0x24021694
9000f3a4:	2402162c 	.word	0x2402162c
9000f3a8:	24021690 	.word	0x24021690
9000f3ac:	24021650 	.word	0x24021650

9000f3b0 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000f3b0:	b358      	cbz	r0, 9000f40a <vTaskPlaceOnEventListRestricted+0x5a>
	{
9000f3b2:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f3b4:	4e1d      	ldr	r6, [pc, #116]	@ (9000f42c <vTaskPlaceOnEventListRestricted+0x7c>)
9000f3b6:	460c      	mov	r4, r1
9000f3b8:	4615      	mov	r5, r2
9000f3ba:	6831      	ldr	r1, [r6, #0]
9000f3bc:	3118      	adds	r1, #24
9000f3be:	f7fe f8bd 	bl	9000d53c <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9000f3c2:	b165      	cbz	r5, 9000f3de <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000f3c4:	4b1a      	ldr	r3, [pc, #104]	@ (9000f430 <vTaskPlaceOnEventListRestricted+0x80>)
9000f3c6:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f3c8:	6830      	ldr	r0, [r6, #0]
9000f3ca:	3004      	adds	r0, #4
9000f3cc:	f7fe f8dc 	bl	9000d588 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f3d0:	6831      	ldr	r1, [r6, #0]
9000f3d2:	4818      	ldr	r0, [pc, #96]	@ (9000f434 <vTaskPlaceOnEventListRestricted+0x84>)
9000f3d4:	3104      	adds	r1, #4
	}
9000f3d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f3da:	f7fe b8af 	b.w	9000d53c <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f3de:	4b14      	ldr	r3, [pc, #80]	@ (9000f430 <vTaskPlaceOnEventListRestricted+0x80>)
9000f3e0:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f3e2:	6830      	ldr	r0, [r6, #0]
9000f3e4:	3004      	adds	r0, #4
9000f3e6:	f7fe f8cf 	bl	9000d588 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f3ea:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f3ec:	6833      	ldr	r3, [r6, #0]
9000f3ee:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f3f0:	d214      	bcs.n	9000f41c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f3f2:	4b11      	ldr	r3, [pc, #68]	@ (9000f438 <vTaskPlaceOnEventListRestricted+0x88>)
9000f3f4:	6818      	ldr	r0, [r3, #0]
9000f3f6:	6831      	ldr	r1, [r6, #0]
9000f3f8:	3104      	adds	r1, #4
9000f3fa:	f7fe f8ad 	bl	9000d558 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f3fe:	4b0f      	ldr	r3, [pc, #60]	@ (9000f43c <vTaskPlaceOnEventListRestricted+0x8c>)
9000f400:	681a      	ldr	r2, [r3, #0]
9000f402:	4294      	cmp	r4, r2
9000f404:	d200      	bcs.n	9000f408 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000f406:	601c      	str	r4, [r3, #0]
	}
9000f408:	bd70      	pop	{r4, r5, r6, pc}
9000f40a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f40e:	f383 8811 	msr	BASEPRI, r3
9000f412:	f3bf 8f6f 	isb	sy
9000f416:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000f41a:	e7fe      	b.n	9000f41a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f41c:	4b08      	ldr	r3, [pc, #32]	@ (9000f440 <vTaskPlaceOnEventListRestricted+0x90>)
9000f41e:	6818      	ldr	r0, [r3, #0]
9000f420:	6831      	ldr	r1, [r6, #0]
	}
9000f422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f426:	3104      	adds	r1, #4
9000f428:	f7fe b896 	b.w	9000d558 <vListInsert>
9000f42c:	24021b20 	.word	0x24021b20
9000f430:	24021648 	.word	0x24021648
9000f434:	24021650 	.word	0x24021650
9000f438:	24021694 	.word	0x24021694
9000f43c:	2402162c 	.word	0x2402162c
9000f440:	24021690 	.word	0x24021690

9000f444 <xTaskRemoveFromEventList>:
{
9000f444:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f446:	68c3      	ldr	r3, [r0, #12]
9000f448:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
9000f44a:	b34c      	cbz	r4, 9000f4a0 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000f44c:	f104 0518 	add.w	r5, r4, #24
9000f450:	4628      	mov	r0, r5
9000f452:	f7fe f899 	bl	9000d588 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f456:	4b18      	ldr	r3, [pc, #96]	@ (9000f4b8 <xTaskRemoveFromEventList+0x74>)
9000f458:	681b      	ldr	r3, [r3, #0]
9000f45a:	b173      	cbz	r3, 9000f47a <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000f45c:	4629      	mov	r1, r5
9000f45e:	4817      	ldr	r0, [pc, #92]	@ (9000f4bc <xTaskRemoveFromEventList+0x78>)
9000f460:	f7fe f86c 	bl	9000d53c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000f464:	4b16      	ldr	r3, [pc, #88]	@ (9000f4c0 <xTaskRemoveFromEventList+0x7c>)
9000f466:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f468:	681b      	ldr	r3, [r3, #0]
9000f46a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f46c:	429a      	cmp	r2, r3
9000f46e:	d920      	bls.n	9000f4b2 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9000f470:	2301      	movs	r3, #1
9000f472:	4a14      	ldr	r2, [pc, #80]	@ (9000f4c4 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
9000f474:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000f476:	6013      	str	r3, [r2, #0]
}
9000f478:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000f47a:	1d25      	adds	r5, r4, #4
9000f47c:	4628      	mov	r0, r5
9000f47e:	f7fe f883 	bl	9000d588 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000f482:	4b11      	ldr	r3, [pc, #68]	@ (9000f4c8 <xTaskRemoveFromEventList+0x84>)
9000f484:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000f486:	681a      	ldr	r2, [r3, #0]
9000f488:	4290      	cmp	r0, r2
9000f48a:	d900      	bls.n	9000f48e <xTaskRemoveFromEventList+0x4a>
9000f48c:	6018      	str	r0, [r3, #0]
9000f48e:	4b0f      	ldr	r3, [pc, #60]	@ (9000f4cc <xTaskRemoveFromEventList+0x88>)
9000f490:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f494:	4629      	mov	r1, r5
9000f496:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f49a:	f7fe f84f 	bl	9000d53c <vListInsertEnd>
9000f49e:	e7e1      	b.n	9000f464 <xTaskRemoveFromEventList+0x20>
9000f4a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4a4:	f383 8811 	msr	BASEPRI, r3
9000f4a8:	f3bf 8f6f 	isb	sy
9000f4ac:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000f4b0:	e7fe      	b.n	9000f4b0 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9000f4b2:	2000      	movs	r0, #0
}
9000f4b4:	bd38      	pop	{r3, r4, r5, pc}
9000f4b6:	bf00      	nop
9000f4b8:	24021628 	.word	0x24021628
9000f4bc:	2402167c 	.word	0x2402167c
9000f4c0:	24021b20 	.word	0x24021b20
9000f4c4:	24021638 	.word	0x24021638
9000f4c8:	24021644 	.word	0x24021644
9000f4cc:	240216c0 	.word	0x240216c0

9000f4d0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f4d0:	4a03      	ldr	r2, [pc, #12]	@ (9000f4e0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f4d2:	4b04      	ldr	r3, [pc, #16]	@ (9000f4e4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f4d4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f4d6:	681b      	ldr	r3, [r3, #0]
9000f4d8:	e9c0 2300 	strd	r2, r3, [r0]
}
9000f4dc:	4770      	bx	lr
9000f4de:	bf00      	nop
9000f4e0:	24021634 	.word	0x24021634
9000f4e4:	24021648 	.word	0x24021648

9000f4e8 <xTaskCheckForTimeOut>:
{
9000f4e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
9000f4ea:	b308      	cbz	r0, 9000f530 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
9000f4ec:	460d      	mov	r5, r1
9000f4ee:	b1b1      	cbz	r1, 9000f51e <xTaskCheckForTimeOut+0x36>
9000f4f0:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000f4f2:	f7fe f8c7 	bl	9000d684 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000f4f6:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000f4f8:	4a1a      	ldr	r2, [pc, #104]	@ (9000f564 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
9000f4fa:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000f4fc:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000f4fe:	d02c      	beq.n	9000f55a <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f500:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9000f568 <xTaskCheckForTimeOut+0x80>
9000f504:	6826      	ldr	r6, [r4, #0]
9000f506:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f50a:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f50c:	42be      	cmp	r6, r7
9000f50e:	d018      	beq.n	9000f542 <xTaskCheckForTimeOut+0x5a>
9000f510:	4288      	cmp	r0, r1
9000f512:	d816      	bhi.n	9000f542 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
9000f514:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000f516:	f7fe f8d7 	bl	9000d6c8 <vPortExitCritical>
}
9000f51a:	4620      	mov	r0, r4
9000f51c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000f51e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f522:	f383 8811 	msr	BASEPRI, r3
9000f526:	f3bf 8f6f 	isb	sy
9000f52a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000f52e:	e7fe      	b.n	9000f52e <xTaskCheckForTimeOut+0x46>
9000f530:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f534:	f383 8811 	msr	BASEPRI, r3
9000f538:	f3bf 8f6f 	isb	sy
9000f53c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000f540:	e7fe      	b.n	9000f540 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f542:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000f546:	4573      	cmp	r3, lr
9000f548:	d909      	bls.n	9000f55e <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
9000f54a:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f54c:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f550:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000f552:	4403      	add	r3, r0
9000f554:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f556:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
9000f55a:	2400      	movs	r4, #0
9000f55c:	e7db      	b.n	9000f516 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9000f55e:	2300      	movs	r3, #0
9000f560:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000f562:	e7d7      	b.n	9000f514 <xTaskCheckForTimeOut+0x2c>
9000f564:	24021648 	.word	0x24021648
9000f568:	24021634 	.word	0x24021634

9000f56c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000f56c:	4b01      	ldr	r3, [pc, #4]	@ (9000f574 <vTaskMissedYield+0x8>)
9000f56e:	2201      	movs	r2, #1
9000f570:	601a      	str	r2, [r3, #0]
}
9000f572:	4770      	bx	lr
9000f574:	24021638 	.word	0x24021638

9000f578 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000f578:	4b05      	ldr	r3, [pc, #20]	@ (9000f590 <xTaskGetSchedulerState+0x18>)
9000f57a:	681b      	ldr	r3, [r3, #0]
9000f57c:	b133      	cbz	r3, 9000f58c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f57e:	4b05      	ldr	r3, [pc, #20]	@ (9000f594 <xTaskGetSchedulerState+0x1c>)
9000f580:	6818      	ldr	r0, [r3, #0]
9000f582:	fab0 f080 	clz	r0, r0
9000f586:	0940      	lsrs	r0, r0, #5
9000f588:	0040      	lsls	r0, r0, #1
9000f58a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000f58c:	2001      	movs	r0, #1
	}
9000f58e:	4770      	bx	lr
9000f590:	24021640 	.word	0x24021640
9000f594:	24021628 	.word	0x24021628

9000f598 <xTaskPriorityInherit>:
	{
9000f598:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
9000f59a:	4604      	mov	r4, r0
9000f59c:	b1c8      	cbz	r0, 9000f5d2 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000f59e:	4d1b      	ldr	r5, [pc, #108]	@ (9000f60c <xTaskPriorityInherit+0x74>)
9000f5a0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9000f5a2:	682a      	ldr	r2, [r5, #0]
9000f5a4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f5a6:	4293      	cmp	r3, r2
9000f5a8:	d214      	bcs.n	9000f5d4 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f5aa:	6982      	ldr	r2, [r0, #24]
9000f5ac:	2a00      	cmp	r2, #0
9000f5ae:	db04      	blt.n	9000f5ba <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f5b0:	682a      	ldr	r2, [r5, #0]
9000f5b2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f5b4:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
9000f5b8:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000f5ba:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f5be:	4e14      	ldr	r6, [pc, #80]	@ (9000f610 <xTaskPriorityInherit+0x78>)
9000f5c0:	6962      	ldr	r2, [r4, #20]
9000f5c2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000f5c6:	429a      	cmp	r2, r3
9000f5c8:	d00c      	beq.n	9000f5e4 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f5ca:	682b      	ldr	r3, [r5, #0]
9000f5cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f5ce:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
9000f5d0:	2001      	movs	r0, #1
	}
9000f5d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000f5d4:	682b      	ldr	r3, [r5, #0]
9000f5d6:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000f5d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f5da:	4298      	cmp	r0, r3
9000f5dc:	bf2c      	ite	cs
9000f5de:	2000      	movcs	r0, #0
9000f5e0:	2001      	movcc	r0, #1
	}
9000f5e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f5e4:	1d27      	adds	r7, r4, #4
9000f5e6:	4638      	mov	r0, r7
9000f5e8:	f7fd ffce 	bl	9000d588 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f5ec:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f5ee:	4b09      	ldr	r3, [pc, #36]	@ (9000f614 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f5f0:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f5f2:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f5f4:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f5f6:	4290      	cmp	r0, r2
9000f5f8:	d900      	bls.n	9000f5fc <xTaskPriorityInherit+0x64>
9000f5fa:	6018      	str	r0, [r3, #0]
9000f5fc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f600:	4639      	mov	r1, r7
9000f602:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000f606:	f7fd ff99 	bl	9000d53c <vListInsertEnd>
9000f60a:	e7e1      	b.n	9000f5d0 <xTaskPriorityInherit+0x38>
9000f60c:	24021b20 	.word	0x24021b20
9000f610:	240216c0 	.word	0x240216c0
9000f614:	24021644 	.word	0x24021644

9000f618 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000f618:	b308      	cbz	r0, 9000f65e <xTaskPriorityDisinherit+0x46>
	{
9000f61a:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000f61c:	4b1d      	ldr	r3, [pc, #116]	@ (9000f694 <xTaskPriorityDisinherit+0x7c>)
9000f61e:	681c      	ldr	r4, [r3, #0]
9000f620:	4284      	cmp	r4, r0
9000f622:	d008      	beq.n	9000f636 <xTaskPriorityDisinherit+0x1e>
9000f624:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f628:	f383 8811 	msr	BASEPRI, r3
9000f62c:	f3bf 8f6f 	isb	sy
9000f630:	f3bf 8f4f 	dsb	sy
9000f634:	e7fe      	b.n	9000f634 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9000f636:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000f638:	b143      	cbz	r3, 9000f64c <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f63a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
9000f63c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f63e:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
9000f640:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000f642:	4291      	cmp	r1, r2
9000f644:	d000      	beq.n	9000f648 <xTaskPriorityDisinherit+0x30>
9000f646:	b163      	cbz	r3, 9000f662 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
9000f648:	2000      	movs	r0, #0
	}
9000f64a:	bd38      	pop	{r3, r4, r5, pc}
9000f64c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f650:	f383 8811 	msr	BASEPRI, r3
9000f654:	f3bf 8f6f 	isb	sy
9000f658:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f65c:	e7fe      	b.n	9000f65c <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
9000f65e:	2000      	movs	r0, #0
	}
9000f660:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f662:	1d25      	adds	r5, r4, #4
9000f664:	4628      	mov	r0, r5
9000f666:	f7fd ff8f 	bl	9000d588 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f66a:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
9000f66c:	4b0a      	ldr	r3, [pc, #40]	@ (9000f698 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f66e:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f672:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f674:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000f676:	681a      	ldr	r2, [r3, #0]
9000f678:	4290      	cmp	r0, r2
9000f67a:	d900      	bls.n	9000f67e <xTaskPriorityDisinherit+0x66>
9000f67c:	6018      	str	r0, [r3, #0]
9000f67e:	4b07      	ldr	r3, [pc, #28]	@ (9000f69c <xTaskPriorityDisinherit+0x84>)
9000f680:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f684:	4629      	mov	r1, r5
9000f686:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f68a:	f7fd ff57 	bl	9000d53c <vListInsertEnd>
					xReturn = pdTRUE;
9000f68e:	2001      	movs	r0, #1
	}
9000f690:	bd38      	pop	{r3, r4, r5, pc}
9000f692:	bf00      	nop
9000f694:	24021b20 	.word	0x24021b20
9000f698:	24021644 	.word	0x24021644
9000f69c:	240216c0 	.word	0x240216c0

9000f6a0 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000f6a0:	2800      	cmp	r0, #0
9000f6a2:	d03c      	beq.n	9000f71e <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
9000f6a4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
9000f6a6:	b570      	push	{r4, r5, r6, lr}
9000f6a8:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
9000f6aa:	b14b      	cbz	r3, 9000f6c0 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000f6ac:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000f6ae:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f6b0:	4281      	cmp	r1, r0
9000f6b2:	bf38      	it	cc
9000f6b4:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000f6b6:	2b01      	cmp	r3, #1
9000f6b8:	d101      	bne.n	9000f6be <vTaskPriorityDisinheritAfterTimeout+0x1e>
9000f6ba:	428a      	cmp	r2, r1
9000f6bc:	d109      	bne.n	9000f6d2 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
9000f6be:	bd70      	pop	{r4, r5, r6, pc}
9000f6c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6c4:	f383 8811 	msr	BASEPRI, r3
9000f6c8:	f3bf 8f6f 	isb	sy
9000f6cc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f6d0:	e7fe      	b.n	9000f6d0 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
9000f6d2:	4b18      	ldr	r3, [pc, #96]	@ (9000f734 <vTaskPriorityDisinheritAfterTimeout+0x94>)
9000f6d4:	681b      	ldr	r3, [r3, #0]
9000f6d6:	42a3      	cmp	r3, r4
9000f6d8:	d022      	beq.n	9000f720 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f6da:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000f6dc:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f6de:	2b00      	cmp	r3, #0
9000f6e0:	db02      	blt.n	9000f6e8 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f6e2:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
9000f6e6:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000f6e8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000f6ec:	4d12      	ldr	r5, [pc, #72]	@ (9000f738 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9000f6ee:	6961      	ldr	r1, [r4, #20]
9000f6f0:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000f6f4:	4299      	cmp	r1, r3
9000f6f6:	d1e2      	bne.n	9000f6be <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f6f8:	1d26      	adds	r6, r4, #4
9000f6fa:	4630      	mov	r0, r6
9000f6fc:	f7fd ff44 	bl	9000d588 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000f700:	4b0e      	ldr	r3, [pc, #56]	@ (9000f73c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000f702:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000f704:	681a      	ldr	r2, [r3, #0]
9000f706:	4290      	cmp	r0, r2
9000f708:	d900      	bls.n	9000f70c <vTaskPriorityDisinheritAfterTimeout+0x6c>
9000f70a:	6018      	str	r0, [r3, #0]
9000f70c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f710:	4631      	mov	r1, r6
9000f712:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000f716:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
9000f71a:	f7fd bf0f 	b.w	9000d53c <vListInsertEnd>
9000f71e:	4770      	bx	lr
9000f720:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f724:	f383 8811 	msr	BASEPRI, r3
9000f728:	f3bf 8f6f 	isb	sy
9000f72c:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000f730:	e7fe      	b.n	9000f730 <vTaskPriorityDisinheritAfterTimeout+0x90>
9000f732:	bf00      	nop
9000f734:	24021b20 	.word	0x24021b20
9000f738:	240216c0 	.word	0x240216c0
9000f73c:	24021644 	.word	0x24021644

9000f740 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000f740:	4b04      	ldr	r3, [pc, #16]	@ (9000f754 <pvTaskIncrementMutexHeldCount+0x14>)
9000f742:	681a      	ldr	r2, [r3, #0]
9000f744:	b11a      	cbz	r2, 9000f74e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000f746:	6819      	ldr	r1, [r3, #0]
9000f748:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
9000f74a:	3201      	adds	r2, #1
9000f74c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
9000f74e:	6818      	ldr	r0, [r3, #0]
	}
9000f750:	4770      	bx	lr
9000f752:	bf00      	nop
9000f754:	24021b20 	.word	0x24021b20

9000f758 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000f758:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f75c:	4e21      	ldr	r6, [pc, #132]	@ (9000f7e4 <prvSwitchTimerLists+0x8c>)
9000f75e:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f760:	e00d      	b.n	9000f77e <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f762:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f764:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f766:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f768:	1d25      	adds	r5, r4, #4
9000f76a:	4628      	mov	r0, r5
9000f76c:	f7fd ff0c 	bl	9000d588 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f770:	6a23      	ldr	r3, [r4, #32]
9000f772:	4620      	mov	r0, r4
9000f774:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f776:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
9000f77a:	075b      	lsls	r3, r3, #29
9000f77c:	d40a      	bmi.n	9000f794 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f77e:	6833      	ldr	r3, [r6, #0]
9000f780:	681a      	ldr	r2, [r3, #0]
9000f782:	2a00      	cmp	r2, #0
9000f784:	d1ed      	bne.n	9000f762 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000f786:	4a18      	ldr	r2, [pc, #96]	@ (9000f7e8 <prvSwitchTimerLists+0x90>)
9000f788:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000f78a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000f78c:	6031      	str	r1, [r6, #0]
}
9000f78e:	b004      	add	sp, #16
9000f790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f794:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f796:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
9000f798:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 9000f7ec <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f79c:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000f79e:	429f      	cmp	r7, r3
9000f7a0:	d205      	bcs.n	9000f7ae <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f7a2:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000f7a4:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f7a6:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f7a8:	f7fd fed6 	bl	9000d558 <vListInsert>
9000f7ac:	e7e7      	b.n	9000f77e <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
9000f7ae:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
9000f7b2:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
9000f7b4:	b16b      	cbz	r3, 9000f7d2 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000f7b6:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
9000f7b8:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f7bc:	f7ff fedc 	bl	9000f578 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f7c0:	462b      	mov	r3, r5
9000f7c2:	462a      	mov	r2, r5
9000f7c4:	4669      	mov	r1, sp
9000f7c6:	f8d8 0000 	ldr.w	r0, [r8]
9000f7ca:	f7fe fa47 	bl	9000dc5c <xQueueGenericSend>
				configASSERT( xResult );
9000f7ce:	2800      	cmp	r0, #0
9000f7d0:	d1d5      	bne.n	9000f77e <prvSwitchTimerLists+0x26>
9000f7d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f7d6:	f383 8811 	msr	BASEPRI, r3
9000f7da:	f3bf 8f6f 	isb	sy
9000f7de:	f3bf 8f4f 	dsb	sy
9000f7e2:	e7fe      	b.n	9000f7e2 <prvSwitchTimerLists+0x8a>
9000f7e4:	24021c24 	.word	0x24021c24
9000f7e8:	24021c20 	.word	0x24021c20
9000f7ec:	24021c1c 	.word	0x24021c1c

9000f7f0 <prvTimerTask>:
{
9000f7f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f7f4:	4e9f      	ldr	r6, [pc, #636]	@ (9000fa74 <prvTimerTask+0x284>)
9000f7f6:	b089      	sub	sp, #36	@ 0x24
9000f7f8:	4d9f      	ldr	r5, [pc, #636]	@ (9000fa78 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000f7fa:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9000f7fe:	4c9f      	ldr	r4, [pc, #636]	@ (9000fa7c <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000f800:	6833      	ldr	r3, [r6, #0]
9000f802:	681f      	ldr	r7, [r3, #0]
9000f804:	2f00      	cmp	r7, #0
9000f806:	f000 80b2 	beq.w	9000f96e <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f80a:	68db      	ldr	r3, [r3, #12]
9000f80c:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000f80e:	f7ff fced 	bl	9000f1ec <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000f812:	f7ff fd03 	bl	9000f21c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f816:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f818:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000f81a:	4298      	cmp	r0, r3
9000f81c:	f0c0 80af 	bcc.w	9000f97e <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000f820:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000f822:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000f824:	f200 80d0 	bhi.w	9000f9c8 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000f828:	f7ff fce8 	bl	9000f1fc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f82c:	6833      	ldr	r3, [r6, #0]
9000f82e:	68db      	ldr	r3, [r3, #12]
9000f830:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f834:	f10b 0804 	add.w	r8, fp, #4
9000f838:	4640      	mov	r0, r8
9000f83a:	f7fd fea5 	bl	9000d588 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f83e:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
9000f842:	0758      	lsls	r0, r3, #29
9000f844:	f100 80d0 	bmi.w	9000f9e8 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f848:	f023 0301 	bic.w	r3, r3, #1
9000f84c:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f850:	f8db 3020 	ldr.w	r3, [fp, #32]
9000f854:	4658      	mov	r0, fp
9000f856:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000f858:	2200      	movs	r2, #0
9000f85a:	4669      	mov	r1, sp
9000f85c:	6820      	ldr	r0, [r4, #0]
9000f85e:	f7fe fc3b 	bl	9000e0d8 <xQueueReceive>
9000f862:	2800      	cmp	r0, #0
9000f864:	d0cc      	beq.n	9000f800 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000f866:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000f868:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000f86a:	2b00      	cmp	r3, #0
9000f86c:	db77      	blt.n	9000f95e <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000f86e:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000f870:	697b      	ldr	r3, [r7, #20]
9000f872:	b113      	cbz	r3, 9000f87a <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f874:	1d38      	adds	r0, r7, #4
9000f876:	f7fd fe87 	bl	9000d588 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000f87a:	f7ff fccf 	bl	9000f21c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f87e:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f880:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
9000f882:	4298      	cmp	r0, r3
9000f884:	f0c0 8082 	bcc.w	9000f98c <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000f888:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000f88a:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
9000f88e:	2b09      	cmp	r3, #9
9000f890:	d8e2      	bhi.n	9000f858 <prvTimerTask+0x68>
9000f892:	e8df f003 	tbb	[pc, r3]
9000f896:	0505      	.short	0x0505
9000f898:	5b3e5405 	.word	0x5b3e5405
9000f89c:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f8a0:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f8a4:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f8a6:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f8aa:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f8ac:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f8b0:	69ba      	ldr	r2, [r7, #24]
9000f8b2:	1899      	adds	r1, r3, r2
9000f8b4:	bf2c      	ite	cs
9000f8b6:	2001      	movcs	r0, #1
9000f8b8:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000f8ba:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f8bc:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f8be:	f200 8085 	bhi.w	9000f9cc <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f8c2:	ebab 0303 	sub.w	r3, fp, r3
9000f8c6:	429a      	cmp	r2, r3
9000f8c8:	f200 80be 	bhi.w	9000fa48 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f8cc:	6a3b      	ldr	r3, [r7, #32]
9000f8ce:	4638      	mov	r0, r7
9000f8d0:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f8d2:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000f8d6:	0759      	lsls	r1, r3, #29
9000f8d8:	d5be      	bpl.n	9000f858 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000f8da:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f8dc:	9b01      	ldr	r3, [sp, #4]
9000f8de:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
9000f8e0:	b171      	cbz	r1, 9000f900 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f8e2:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f8e4:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000f8e8:	2700      	movs	r7, #0
9000f8ea:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f8ec:	f7ff fe44 	bl	9000f578 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f8f0:	463b      	mov	r3, r7
9000f8f2:	463a      	mov	r2, r7
9000f8f4:	a904      	add	r1, sp, #16
9000f8f6:	6820      	ldr	r0, [r4, #0]
9000f8f8:	f7fe f9b0 	bl	9000dc5c <xQueueGenericSend>
							configASSERT( xResult );
9000f8fc:	2800      	cmp	r0, #0
9000f8fe:	d1ab      	bne.n	9000f858 <prvTimerTask+0x68>
9000f900:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f904:	f383 8811 	msr	BASEPRI, r3
9000f908:	f3bf 8f6f 	isb	sy
9000f90c:	f3bf 8f4f 	dsb	sy
9000f910:	e7fe      	b.n	9000f910 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f912:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000f916:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f918:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000f91c:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f91e:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000f922:	2b00      	cmp	r3, #0
9000f924:	f000 809c 	beq.w	9000fa60 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000f928:	445b      	add	r3, fp
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f92a:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f92c:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000f92e:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f930:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f932:	d855      	bhi.n	9000f9e0 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f934:	4b52      	ldr	r3, [pc, #328]	@ (9000fa80 <prvTimerTask+0x290>)
9000f936:	6818      	ldr	r0, [r3, #0]
9000f938:	f7fd fe0e 	bl	9000d558 <vListInsert>
9000f93c:	e78c      	b.n	9000f858 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f93e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000f942:	f023 0301 	bic.w	r3, r3, #1
9000f946:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
9000f94a:	e785      	b.n	9000f858 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000f94c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000f950:	079a      	lsls	r2, r3, #30
9000f952:	d570      	bpl.n	9000fa36 <prvTimerTask+0x246>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f954:	f023 0301 	bic.w	r3, r3, #1
9000f958:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
9000f95c:	e77c      	b.n	9000f858 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000f95e:	9b01      	ldr	r3, [sp, #4]
9000f960:	9903      	ldr	r1, [sp, #12]
9000f962:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000f964:	9b00      	ldr	r3, [sp, #0]
9000f966:	2b00      	cmp	r3, #0
9000f968:	f6ff af76 	blt.w	9000f858 <prvTimerTask+0x68>
9000f96c:	e77f      	b.n	9000f86e <prvTimerTask+0x7e>
	vTaskSuspendAll();
9000f96e:	f7ff fc3d 	bl	9000f1ec <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000f972:	f7ff fc53 	bl	9000f21c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f976:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f978:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000f97a:	4298      	cmp	r0, r3
9000f97c:	d209      	bcs.n	9000f992 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000f97e:	f7ff feeb 	bl	9000f758 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000f982:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000f986:	f7ff fc39 	bl	9000f1fc <xTaskResumeAll>
9000f98a:	e765      	b.n	9000f858 <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000f98c:	f7ff fee4 	bl	9000f758 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000f990:	e77a      	b.n	9000f888 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000f992:	4b3b      	ldr	r3, [pc, #236]	@ (9000fa80 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000f994:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000f998:	681b      	ldr	r3, [r3, #0]
9000f99a:	681a      	ldr	r2, [r3, #0]
9000f99c:	fab2 f282 	clz	r2, r2
9000f9a0:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000f9a2:	eba7 010a 	sub.w	r1, r7, sl
9000f9a6:	6820      	ldr	r0, [r4, #0]
9000f9a8:	f7fe ff74 	bl	9000e894 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000f9ac:	f7ff fc26 	bl	9000f1fc <xTaskResumeAll>
9000f9b0:	2800      	cmp	r0, #0
9000f9b2:	f47f af51 	bne.w	9000f858 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000f9b6:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
9000f9ba:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
9000f9be:	f3bf 8f4f 	dsb	sy
9000f9c2:	f3bf 8f6f 	isb	sy
9000f9c6:	e747      	b.n	9000f858 <prvTimerTask+0x68>
9000f9c8:	2200      	movs	r2, #0
9000f9ca:	e7ea      	b.n	9000f9a2 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000f9cc:	455b      	cmp	r3, fp
9000f9ce:	d902      	bls.n	9000f9d6 <prvTimerTask+0x1e6>
9000f9d0:	2800      	cmp	r0, #0
9000f9d2:	f43f af7b 	beq.w	9000f8cc <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f9d6:	1d39      	adds	r1, r7, #4
9000f9d8:	6830      	ldr	r0, [r6, #0]
9000f9da:	f7fd fdbd 	bl	9000d558 <vListInsert>
	return xProcessTimerNow;
9000f9de:	e73b      	b.n	9000f858 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f9e0:	6830      	ldr	r0, [r6, #0]
9000f9e2:	f7fd fdb9 	bl	9000d558 <vListInsert>
9000f9e6:	e737      	b.n	9000f858 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000f9e8:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f9ec:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000f9f0:	183b      	adds	r3, r7, r0
	if( xNextExpiryTime <= xTimeNow )
9000f9f2:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f9f4:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f9f8:	d321      	bcc.n	9000fa3e <prvTimerTask+0x24e>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f9fa:	ebaa 0a07 	sub.w	sl, sl, r7
9000f9fe:	4550      	cmp	r0, sl
9000fa00:	d828      	bhi.n	9000fa54 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
9000fa02:	6823      	ldr	r3, [r4, #0]
9000fa04:	b173      	cbz	r3, 9000fa24 <prvTimerTask+0x234>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fa06:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000fa0a:	2700      	movs	r7, #0
9000fa0c:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fa0e:	f7ff fdb3 	bl	9000f578 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fa12:	463b      	mov	r3, r7
9000fa14:	463a      	mov	r2, r7
9000fa16:	a904      	add	r1, sp, #16
9000fa18:	6820      	ldr	r0, [r4, #0]
9000fa1a:	f7fe f91f 	bl	9000dc5c <xQueueGenericSend>
			configASSERT( xResult );
9000fa1e:	2800      	cmp	r0, #0
9000fa20:	f47f af16 	bne.w	9000f850 <prvTimerTask+0x60>
9000fa24:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa28:	f383 8811 	msr	BASEPRI, r3
9000fa2c:	f3bf 8f6f 	isb	sy
9000fa30:	f3bf 8f4f 	dsb	sy
9000fa34:	e7fe      	b.n	9000fa34 <prvTimerTask+0x244>
							vPortFree( pxTimer );
9000fa36:	4638      	mov	r0, r7
9000fa38:	f7fd fd0a 	bl	9000d450 <vPortFree>
9000fa3c:	e70c      	b.n	9000f858 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa3e:	4641      	mov	r1, r8
9000fa40:	6830      	ldr	r0, [r6, #0]
9000fa42:	f7fd fd89 	bl	9000d558 <vListInsert>
	return xProcessTimerNow;
9000fa46:	e703      	b.n	9000f850 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fa48:	4b0d      	ldr	r3, [pc, #52]	@ (9000fa80 <prvTimerTask+0x290>)
9000fa4a:	1d39      	adds	r1, r7, #4
9000fa4c:	6818      	ldr	r0, [r3, #0]
9000fa4e:	f7fd fd83 	bl	9000d558 <vListInsert>
	return xProcessTimerNow;
9000fa52:	e701      	b.n	9000f858 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fa54:	4b0a      	ldr	r3, [pc, #40]	@ (9000fa80 <prvTimerTask+0x290>)
9000fa56:	4641      	mov	r1, r8
9000fa58:	6818      	ldr	r0, [r3, #0]
9000fa5a:	f7fd fd7d 	bl	9000d558 <vListInsert>
	return xProcessTimerNow;
9000fa5e:	e6f7      	b.n	9000f850 <prvTimerTask+0x60>
9000fa60:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa64:	f383 8811 	msr	BASEPRI, r3
9000fa68:	f3bf 8f6f 	isb	sy
9000fa6c:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fa70:	e7fe      	b.n	9000fa70 <prvTimerTask+0x280>
9000fa72:	bf00      	nop
9000fa74:	24021c24 	.word	0x24021c24
9000fa78:	24021c14 	.word	0x24021c14
9000fa7c:	24021c1c 	.word	0x24021c1c
9000fa80:	24021c20 	.word	0x24021c20

9000fa84 <xTimerCreateTimerTask>:
{
9000fa84:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000fa86:	4c23      	ldr	r4, [pc, #140]	@ (9000fb14 <xTimerCreateTimerTask+0x90>)
{
9000fa88:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
9000fa8a:	f7fd fdfb 	bl	9000d684 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000fa8e:	6825      	ldr	r5, [r4, #0]
9000fa90:	b335      	cbz	r5, 9000fae0 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000fa92:	f7fd fe19 	bl	9000d6c8 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000fa96:	6823      	ldr	r3, [r4, #0]
9000fa98:	b1cb      	cbz	r3, 9000face <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000fa9a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fa9c:	aa07      	add	r2, sp, #28
9000fa9e:	a906      	add	r1, sp, #24
9000faa0:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000faa2:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000faa4:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000faa8:	f7fd fc06 	bl	9000d2b8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000faac:	4623      	mov	r3, r4
9000faae:	9a07      	ldr	r2, [sp, #28]
9000fab0:	9500      	str	r5, [sp, #0]
9000fab2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000fab6:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000faba:	4917      	ldr	r1, [pc, #92]	@ (9000fb18 <xTimerCreateTimerTask+0x94>)
9000fabc:	4817      	ldr	r0, [pc, #92]	@ (9000fb1c <xTimerCreateTimerTask+0x98>)
9000fabe:	f7ff f967 	bl	9000ed90 <xTaskCreateStatic>
9000fac2:	4b17      	ldr	r3, [pc, #92]	@ (9000fb20 <xTimerCreateTimerTask+0x9c>)
9000fac4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000fac6:	b110      	cbz	r0, 9000face <xTimerCreateTimerTask+0x4a>
}
9000fac8:	2001      	movs	r0, #1
9000faca:	b009      	add	sp, #36	@ 0x24
9000facc:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000face:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fad2:	f383 8811 	msr	BASEPRI, r3
9000fad6:	f3bf 8f6f 	isb	sy
9000fada:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000fade:	e7fe      	b.n	9000fade <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000fae0:	4f10      	ldr	r7, [pc, #64]	@ (9000fb24 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000fae2:	4e11      	ldr	r6, [pc, #68]	@ (9000fb28 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000fae4:	4638      	mov	r0, r7
9000fae6:	f7fd fd19 	bl	9000d51c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000faea:	4630      	mov	r0, r6
9000faec:	f7fd fd16 	bl	9000d51c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000faf0:	4a0e      	ldr	r2, [pc, #56]	@ (9000fb2c <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000faf2:	9500      	str	r5, [sp, #0]
9000faf4:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000faf6:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000faf8:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000fafa:	4a0d      	ldr	r2, [pc, #52]	@ (9000fb30 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fafc:	4b0d      	ldr	r3, [pc, #52]	@ (9000fb34 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000fafe:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fb00:	4a0d      	ldr	r2, [pc, #52]	@ (9000fb38 <xTimerCreateTimerTask+0xb4>)
9000fb02:	f7fd ff57 	bl	9000d9b4 <xQueueGenericCreateStatic>
9000fb06:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000fb08:	2800      	cmp	r0, #0
9000fb0a:	d0c2      	beq.n	9000fa92 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000fb0c:	490b      	ldr	r1, [pc, #44]	@ (9000fb3c <xTimerCreateTimerTask+0xb8>)
9000fb0e:	f7fe fe99 	bl	9000e844 <vQueueAddToRegistry>
9000fb12:	e7be      	b.n	9000fa92 <xTimerCreateTimerTask+0xe>
9000fb14:	24021c1c 	.word	0x24021c1c
9000fb18:	9002a420 	.word	0x9002a420
9000fb1c:	9000f7f1 	.word	0x9000f7f1
9000fb20:	24021c18 	.word	0x24021c18
9000fb24:	24021c3c 	.word	0x24021c3c
9000fb28:	24021c28 	.word	0x24021c28
9000fb2c:	24021c24 	.word	0x24021c24
9000fb30:	24021c20 	.word	0x24021c20
9000fb34:	24021b24 	.word	0x24021b24
9000fb38:	24021b74 	.word	0x24021b74
9000fb3c:	9002a418 	.word	0x9002a418

9000fb40 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000fb40:	8880      	ldrh	r0, [r0, #4]
9000fb42:	4770      	bx	lr

9000fb44 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000fb44:	b570      	push	{r4, r5, r6, lr}
9000fb46:	6803      	ldr	r3, [r0, #0]
9000fb48:	460c      	mov	r4, r1
9000fb4a:	2100      	movs	r1, #0
9000fb4c:	4605      	mov	r5, r0
9000fb4e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fb50:	4798      	blx	r3
9000fb52:	4606      	mov	r6, r0
9000fb54:	682b      	ldr	r3, [r5, #0]
9000fb56:	4628      	mov	r0, r5
9000fb58:	1ba4      	subs	r4, r4, r6
9000fb5a:	6a1b      	ldr	r3, [r3, #32]
9000fb5c:	b2a4      	uxth	r4, r4
9000fb5e:	4798      	blx	r3
9000fb60:	fbb4 f0f0 	udiv	r0, r4, r0
9000fb64:	bd70      	pop	{r4, r5, r6, pc}

9000fb66 <_ZN8touchgfx17AbstractPartition5clearEv>:
9000fb66:	2300      	movs	r3, #0
9000fb68:	8083      	strh	r3, [r0, #4]
9000fb6a:	4770      	bx	lr

9000fb6c <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000fb6c:	b510      	push	{r4, lr}
9000fb6e:	6803      	ldr	r3, [r0, #0]
9000fb70:	4604      	mov	r4, r0
9000fb72:	8881      	ldrh	r1, [r0, #4]
9000fb74:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fb76:	4798      	blx	r3
9000fb78:	88a3      	ldrh	r3, [r4, #4]
9000fb7a:	3301      	adds	r3, #1
9000fb7c:	80a3      	strh	r3, [r4, #4]
9000fb7e:	bd10      	pop	{r4, pc}

9000fb80 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000fb80:	6803      	ldr	r3, [r0, #0]
9000fb82:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fb84:	4718      	bx	r3

9000fb86 <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000fb86:	4770      	bx	lr

9000fb88 <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000fb88:	4a02      	ldr	r2, [pc, #8]	@ (9000fb94 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000fb8a:	6002      	str	r2, [r0, #0]
9000fb8c:	2200      	movs	r2, #0
9000fb8e:	8082      	strh	r2, [r0, #4]
9000fb90:	4770      	bx	lr
9000fb92:	bf00      	nop
9000fb94:	9002a430 	.word	0x9002a430

9000fb98 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000fb98:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fb9a:	2000      	movs	r0, #0
9000fb9c:	b12b      	cbz	r3, 9000fbaa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fb9e:	b920      	cbnz	r0, 9000fbaa <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fba0:	1a5a      	subs	r2, r3, r1
9000fba2:	699b      	ldr	r3, [r3, #24]
9000fba4:	4250      	negs	r0, r2
9000fba6:	4150      	adcs	r0, r2
9000fba8:	e7f8      	b.n	9000fb9c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000fbaa:	4770      	bx	lr

9000fbac <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000fbac:	2300      	movs	r3, #0
9000fbae:	6148      	str	r0, [r1, #20]
9000fbb0:	618b      	str	r3, [r1, #24]
9000fbb2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fbb4:	b913      	cbnz	r3, 9000fbbc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000fbb6:	6281      	str	r1, [r0, #40]	@ 0x28
9000fbb8:	4770      	bx	lr
9000fbba:	4613      	mov	r3, r2
9000fbbc:	699a      	ldr	r2, [r3, #24]
9000fbbe:	2a00      	cmp	r2, #0
9000fbc0:	d1fb      	bne.n	9000fbba <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000fbc2:	6199      	str	r1, [r3, #24]
9000fbc4:	4770      	bx	lr

9000fbc6 <_ZN8touchgfx9Container9removeAllEv>:
9000fbc6:	2200      	movs	r2, #0
9000fbc8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fbca:	b123      	cbz	r3, 9000fbd6 <_ZN8touchgfx9Container9removeAllEv+0x10>
9000fbcc:	6999      	ldr	r1, [r3, #24]
9000fbce:	6281      	str	r1, [r0, #40]	@ 0x28
9000fbd0:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000fbd4:	e7f8      	b.n	9000fbc8 <_ZN8touchgfx9Container9removeAllEv+0x2>
9000fbd6:	4770      	bx	lr

9000fbd8 <_ZN8touchgfx9Container6unlinkEv>:
9000fbd8:	2300      	movs	r3, #0
9000fbda:	6283      	str	r3, [r0, #40]	@ 0x28
9000fbdc:	4770      	bx	lr

9000fbde <_ZNK8touchgfx9Container12getSolidRectEv>:
9000fbde:	2200      	movs	r2, #0
9000fbe0:	8002      	strh	r2, [r0, #0]
9000fbe2:	8042      	strh	r2, [r0, #2]
9000fbe4:	8082      	strh	r2, [r0, #4]
9000fbe6:	80c2      	strh	r2, [r0, #6]
9000fbe8:	4770      	bx	lr

9000fbea <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000fbea:	b570      	push	{r4, r5, r6, lr}
9000fbec:	460d      	mov	r5, r1
9000fbee:	4616      	mov	r6, r2
9000fbf0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fbf2:	b13c      	cbz	r4, 9000fc04 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000fbf4:	6823      	ldr	r3, [r4, #0]
9000fbf6:	4620      	mov	r0, r4
9000fbf8:	4632      	mov	r2, r6
9000fbfa:	4629      	mov	r1, r5
9000fbfc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000fbfe:	4798      	blx	r3
9000fc00:	69a4      	ldr	r4, [r4, #24]
9000fc02:	e7f6      	b.n	9000fbf2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000fc04:	bd70      	pop	{r4, r5, r6, pc}

9000fc06 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000fc06:	b538      	push	{r3, r4, r5, lr}
9000fc08:	460d      	mov	r5, r1
9000fc0a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fc0c:	b134      	cbz	r4, 9000fc1c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000fc0e:	682b      	ldr	r3, [r5, #0]
9000fc10:	4621      	mov	r1, r4
9000fc12:	4628      	mov	r0, r5
9000fc14:	689b      	ldr	r3, [r3, #8]
9000fc16:	4798      	blx	r3
9000fc18:	69a4      	ldr	r4, [r4, #24]
9000fc1a:	e7f7      	b.n	9000fc0c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000fc1c:	bd38      	pop	{r3, r4, r5, pc}

9000fc1e <_ZN8touchgfx9ContainerD1Ev>:
9000fc1e:	4770      	bx	lr

9000fc20 <_ZN8touchgfx9ContainerD0Ev>:
9000fc20:	b510      	push	{r4, lr}
9000fc22:	4604      	mov	r4, r0
9000fc24:	212c      	movs	r1, #44	@ 0x2c
9000fc26:	f016 fd6f 	bl	90026708 <_ZdlPvj>
9000fc2a:	4620      	mov	r0, r4
9000fc2c:	bd10      	pop	{r4, pc}

9000fc2e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000fc2e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fc30:	b19b      	cbz	r3, 9000fc5a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fc32:	428b      	cmp	r3, r1
9000fc34:	d109      	bne.n	9000fc4a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000fc36:	699a      	ldr	r2, [r3, #24]
9000fc38:	2100      	movs	r1, #0
9000fc3a:	6159      	str	r1, [r3, #20]
9000fc3c:	6282      	str	r2, [r0, #40]	@ 0x28
9000fc3e:	b902      	cbnz	r2, 9000fc42 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000fc40:	4770      	bx	lr
9000fc42:	6199      	str	r1, [r3, #24]
9000fc44:	4770      	bx	lr
9000fc46:	4613      	mov	r3, r2
9000fc48:	b13a      	cbz	r2, 9000fc5a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fc4a:	699a      	ldr	r2, [r3, #24]
9000fc4c:	428a      	cmp	r2, r1
9000fc4e:	d1fa      	bne.n	9000fc46 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000fc50:	698a      	ldr	r2, [r1, #24]
9000fc52:	619a      	str	r2, [r3, #24]
9000fc54:	2300      	movs	r3, #0
9000fc56:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000fc5a:	4770      	bx	lr

9000fc5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000fc5c:	b410      	push	{r4}
9000fc5e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fc60:	4604      	mov	r4, r0
9000fc62:	b92b      	cbnz	r3, 9000fc70 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000fc64:	6803      	ldr	r3, [r0, #0]
9000fc66:	4611      	mov	r1, r2
9000fc68:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fc6c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9000fc6e:	4718      	bx	r3
9000fc70:	b941      	cbnz	r1, 9000fc84 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000fc72:	6193      	str	r3, [r2, #24]
9000fc74:	6282      	str	r2, [r0, #40]	@ 0x28
9000fc76:	6154      	str	r4, [r2, #20]
9000fc78:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fc7c:	4770      	bx	lr
9000fc7e:	4603      	mov	r3, r0
9000fc80:	2800      	cmp	r0, #0
9000fc82:	d0f9      	beq.n	9000fc78 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000fc84:	4299      	cmp	r1, r3
9000fc86:	6998      	ldr	r0, [r3, #24]
9000fc88:	d1f9      	bne.n	9000fc7e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000fc8a:	6190      	str	r0, [r2, #24]
9000fc8c:	618a      	str	r2, [r1, #24]
9000fc8e:	e7f2      	b.n	9000fc76 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9000fc90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000fc90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fc94:	461f      	mov	r7, r3
9000fc96:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9000fc9a:	460d      	mov	r5, r1
9000fc9c:	4616      	mov	r6, r2
9000fc9e:	b103      	cbz	r3, 9000fca2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000fca0:	6038      	str	r0, [r7, #0]
9000fca2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fca4:	b314      	cbz	r4, 9000fcec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000fca6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9000fcaa:	b1eb      	cbz	r3, 9000fce8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fcac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000fcb0:	428d      	cmp	r5, r1
9000fcb2:	db19      	blt.n	9000fce8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fcb4:	b289      	uxth	r1, r1
9000fcb6:	8923      	ldrh	r3, [r4, #8]
9000fcb8:	440b      	add	r3, r1
9000fcba:	b21b      	sxth	r3, r3
9000fcbc:	429d      	cmp	r5, r3
9000fcbe:	da13      	bge.n	9000fce8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fcc0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000fcc4:	4296      	cmp	r6, r2
9000fcc6:	db0f      	blt.n	9000fce8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fcc8:	b292      	uxth	r2, r2
9000fcca:	8963      	ldrh	r3, [r4, #10]
9000fccc:	4413      	add	r3, r2
9000fcce:	b21b      	sxth	r3, r3
9000fcd0:	429e      	cmp	r6, r3
9000fcd2:	da09      	bge.n	9000fce8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fcd4:	6823      	ldr	r3, [r4, #0]
9000fcd6:	1ab2      	subs	r2, r6, r2
9000fcd8:	1a69      	subs	r1, r5, r1
9000fcda:	4620      	mov	r0, r4
9000fcdc:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
9000fce0:	b212      	sxth	r2, r2
9000fce2:	463b      	mov	r3, r7
9000fce4:	b209      	sxth	r1, r1
9000fce6:	47c0      	blx	r8
9000fce8:	69a4      	ldr	r4, [r4, #24]
9000fcea:	e7db      	b.n	9000fca4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000fcec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000fcf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9000fcf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fcf4:	4c6d      	ldr	r4, [pc, #436]	@ (9000feac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9000fcf6:	b0a1      	sub	sp, #132	@ 0x84
9000fcf8:	4606      	mov	r6, r0
9000fcfa:	6824      	ldr	r4, [r4, #0]
9000fcfc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
9000fcfe:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
9000fd02:	2400      	movs	r4, #0
9000fd04:	9303      	str	r3, [sp, #12]
9000fd06:	802c      	strh	r4, [r5, #0]
9000fd08:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
9000fd0a:	802c      	strh	r4, [r5, #0]
9000fd0c:	601c      	str	r4, [r3, #0]
9000fd0e:	e9cd 1201 	strd	r1, r2, [sp, #4]
9000fd12:	f7ff ffbd 	bl	9000fc90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000fd16:	f1b9 0f03 	cmp.w	r9, #3
9000fd1a:	f340 80c1 	ble.w	9000fea0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9000fd1e:	4631      	mov	r1, r6
9000fd20:	a80c      	add	r0, sp, #48	@ 0x30
9000fd22:	f006 fc5d 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fd26:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9000fd2a:	9306      	str	r3, [sp, #24]
9000fd2c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9000fd30:	9307      	str	r3, [sp, #28]
9000fd32:	9b03      	ldr	r3, [sp, #12]
9000fd34:	f8d3 a000 	ldr.w	sl, [r3]
9000fd38:	f1ba 0f00 	cmp.w	sl, #0
9000fd3c:	f000 80b3 	beq.w	9000fea6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
9000fd40:	4651      	mov	r1, sl
9000fd42:	a810      	add	r0, sp, #64	@ 0x40
9000fd44:	f006 fc4c 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fd48:	2002      	movs	r0, #2
9000fd4a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
9000fd4e:	9b01      	ldr	r3, [sp, #4]
9000fd50:	9a06      	ldr	r2, [sp, #24]
9000fd52:	fb91 f1f0 	sdiv	r1, r1, r0
9000fd56:	189d      	adds	r5, r3, r2
9000fd58:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
9000fd5c:	9a07      	ldr	r2, [sp, #28]
9000fd5e:	4419      	add	r1, r3
9000fd60:	9b02      	ldr	r3, [sp, #8]
9000fd62:	4413      	add	r3, r2
9000fd64:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
9000fd68:	1a6d      	subs	r5, r5, r1
9000fd6a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
9000fd6e:	fb92 f2f0 	sdiv	r2, r2, r0
9000fd72:	440a      	add	r2, r1
9000fd74:	1a9b      	subs	r3, r3, r2
9000fd76:	435b      	muls	r3, r3
9000fd78:	fb05 3505 	mla	r5, r5, r5, r3
9000fd7c:	4f4c      	ldr	r7, [pc, #304]	@ (9000feb0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9000fd7e:	ac10      	add	r4, sp, #64	@ 0x40
9000fd80:	f1b9 0f0c 	cmp.w	r9, #12
9000fd84:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fd86:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fd88:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fd8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fd8c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fd8e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fd90:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9000fd94:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000fd98:	f04f 0303 	mov.w	r3, #3
9000fd9c:	bfd8      	it	le
9000fd9e:	f109 32ff 	addle.w	r2, r9, #4294967295
9000fda2:	f04f 0400 	mov.w	r4, #0
9000fda6:	f8cd 9000 	str.w	r9, [sp]
9000fdaa:	bfcc      	ite	gt
9000fdac:	4698      	movgt	r8, r3
9000fdae:	fb92 f8f3 	sdivle	r8, r2, r3
9000fdb2:	1c63      	adds	r3, r4, #1
9000fdb4:	aa10      	add	r2, sp, #64	@ 0x40
9000fdb6:	f004 0401 	and.w	r4, r4, #1
9000fdba:	f04f 0b00 	mov.w	fp, #0
9000fdbe:	9308      	str	r3, [sp, #32]
9000fdc0:	9b00      	ldr	r3, [sp, #0]
9000fdc2:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9000fdc6:	fb93 f3f8 	sdiv	r3, r3, r8
9000fdca:	3404      	adds	r4, #4
9000fdcc:	b29b      	uxth	r3, r3
9000fdce:	9304      	str	r3, [sp, #16]
9000fdd0:	9a04      	ldr	r2, [sp, #16]
9000fdd2:	f854 3c04 	ldr.w	r3, [r4, #-4]
9000fdd6:	fb13 f302 	smulbb	r3, r3, r2
9000fdda:	9a01      	ldr	r2, [sp, #4]
9000fddc:	b29b      	uxth	r3, r3
9000fdde:	1899      	adds	r1, r3, r2
9000fde0:	9305      	str	r3, [sp, #20]
9000fde2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9000fde6:	b209      	sxth	r1, r1
9000fde8:	4299      	cmp	r1, r3
9000fdea:	db4d      	blt.n	9000fe88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fdec:	8932      	ldrh	r2, [r6, #8]
9000fdee:	4413      	add	r3, r2
9000fdf0:	b21b      	sxth	r3, r3
9000fdf2:	4299      	cmp	r1, r3
9000fdf4:	da48      	bge.n	9000fe88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fdf6:	9b04      	ldr	r3, [sp, #16]
9000fdf8:	6827      	ldr	r7, [r4, #0]
9000fdfa:	fb17 f703 	smulbb	r7, r7, r3
9000fdfe:	9b02      	ldr	r3, [sp, #8]
9000fe00:	b2bf      	uxth	r7, r7
9000fe02:	18fa      	adds	r2, r7, r3
9000fe04:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
9000fe08:	b212      	sxth	r2, r2
9000fe0a:	429a      	cmp	r2, r3
9000fe0c:	db3c      	blt.n	9000fe88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fe0e:	8970      	ldrh	r0, [r6, #10]
9000fe10:	4403      	add	r3, r0
9000fe12:	b21b      	sxth	r3, r3
9000fe14:	429a      	cmp	r2, r3
9000fe16:	da37      	bge.n	9000fe88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fe18:	2300      	movs	r3, #0
9000fe1a:	4630      	mov	r0, r6
9000fe1c:	930b      	str	r3, [sp, #44]	@ 0x2c
9000fe1e:	ab0b      	add	r3, sp, #44	@ 0x2c
9000fe20:	f7ff ff36 	bl	9000fc90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000fe24:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9000fe26:	b37a      	cbz	r2, 9000fe88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fe28:	4552      	cmp	r2, sl
9000fe2a:	d02d      	beq.n	9000fe88 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fe2c:	4611      	mov	r1, r2
9000fe2e:	a80e      	add	r0, sp, #56	@ 0x38
9000fe30:	9209      	str	r2, [sp, #36]	@ 0x24
9000fe32:	f006 fbd5 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fe36:	f04f 0e02 	mov.w	lr, #2
9000fe3a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
9000fe3e:	9a06      	ldr	r2, [sp, #24]
9000fe40:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
9000fe44:	9b01      	ldr	r3, [sp, #4]
9000fe46:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9000fe4a:	4413      	add	r3, r2
9000fe4c:	9a07      	ldr	r2, [sp, #28]
9000fe4e:	fb91 f1fe 	sdiv	r1, r1, lr
9000fe52:	fb9c fcfe 	sdiv	ip, ip, lr
9000fe56:	4401      	add	r1, r0
9000fe58:	1a58      	subs	r0, r3, r1
9000fe5a:	9b02      	ldr	r3, [sp, #8]
9000fe5c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
9000fe60:	4413      	add	r3, r2
9000fe62:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9000fe64:	448c      	add	ip, r1
9000fe66:	eba3 030c 	sub.w	r3, r3, ip
9000fe6a:	435b      	muls	r3, r3
9000fe6c:	fb00 3300 	mla	r3, r0, r0, r3
9000fe70:	42ab      	cmp	r3, r5
9000fe72:	d208      	bcs.n	9000fe86 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9000fe74:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9000fe76:	461d      	mov	r5, r3
9000fe78:	9803      	ldr	r0, [sp, #12]
9000fe7a:	6001      	str	r1, [r0, #0]
9000fe7c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9000fe7e:	9805      	ldr	r0, [sp, #20]
9000fe80:	8008      	strh	r0, [r1, #0]
9000fe82:	992b      	ldr	r1, [sp, #172]	@ 0xac
9000fe84:	800f      	strh	r7, [r1, #0]
9000fe86:	4692      	mov	sl, r2
9000fe88:	f10b 0b01 	add.w	fp, fp, #1
9000fe8c:	3408      	adds	r4, #8
9000fe8e:	f1bb 0f04 	cmp.w	fp, #4
9000fe92:	d19d      	bne.n	9000fdd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
9000fe94:	9b00      	ldr	r3, [sp, #0]
9000fe96:	9c08      	ldr	r4, [sp, #32]
9000fe98:	444b      	add	r3, r9
9000fe9a:	4544      	cmp	r4, r8
9000fe9c:	9300      	str	r3, [sp, #0]
9000fe9e:	d188      	bne.n	9000fdb2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
9000fea0:	b021      	add	sp, #132	@ 0x84
9000fea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000fea6:	f04f 35ff 	mov.w	r5, #4294967295
9000feaa:	e767      	b.n	9000fd7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
9000feac:	24021c5c 	.word	0x24021c5c
9000feb0:	90027e78 	.word	0x90027e78

9000feb4 <_ZN8touchgfx4RectaNERKS0_>:
9000feb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000feb8:	f9b1 7000 	ldrsh.w	r7, [r1]
9000febc:	888c      	ldrh	r4, [r1, #4]
9000febe:	f9b0 9000 	ldrsh.w	r9, [r0]
9000fec2:	443c      	add	r4, r7
9000fec4:	b2a4      	uxth	r4, r4
9000fec6:	fa0f f884 	sxth.w	r8, r4
9000feca:	45c1      	cmp	r9, r8
9000fecc:	da2f      	bge.n	9000ff2e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000fece:	8882      	ldrh	r2, [r0, #4]
9000fed0:	444a      	add	r2, r9
9000fed2:	b292      	uxth	r2, r2
9000fed4:	fa0f fe82 	sxth.w	lr, r2
9000fed8:	4577      	cmp	r7, lr
9000feda:	da28      	bge.n	9000ff2e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000fedc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9000fee0:	88cb      	ldrh	r3, [r1, #6]
9000fee2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9000fee6:	442b      	add	r3, r5
9000fee8:	b21b      	sxth	r3, r3
9000feea:	429e      	cmp	r6, r3
9000feec:	da1f      	bge.n	9000ff2e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000feee:	88c3      	ldrh	r3, [r0, #6]
9000fef0:	4433      	add	r3, r6
9000fef2:	b29b      	uxth	r3, r3
9000fef4:	fa0f fc83 	sxth.w	ip, r3
9000fef8:	4565      	cmp	r5, ip
9000fefa:	da18      	bge.n	9000ff2e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000fefc:	454f      	cmp	r7, r9
9000fefe:	bfb8      	it	lt
9000ff00:	464f      	movlt	r7, r9
9000ff02:	42b5      	cmp	r5, r6
9000ff04:	bfb8      	it	lt
9000ff06:	4635      	movlt	r5, r6
9000ff08:	45f0      	cmp	r8, lr
9000ff0a:	bfd8      	it	le
9000ff0c:	4622      	movle	r2, r4
9000ff0e:	1bd2      	subs	r2, r2, r7
9000ff10:	8082      	strh	r2, [r0, #4]
9000ff12:	884a      	ldrh	r2, [r1, #2]
9000ff14:	88c9      	ldrh	r1, [r1, #6]
9000ff16:	8007      	strh	r7, [r0, #0]
9000ff18:	440a      	add	r2, r1
9000ff1a:	8045      	strh	r5, [r0, #2]
9000ff1c:	b292      	uxth	r2, r2
9000ff1e:	b211      	sxth	r1, r2
9000ff20:	458c      	cmp	ip, r1
9000ff22:	bfa8      	it	ge
9000ff24:	4613      	movge	r3, r2
9000ff26:	1b5b      	subs	r3, r3, r5
9000ff28:	80c3      	strh	r3, [r0, #6]
9000ff2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000ff2e:	2300      	movs	r3, #0
9000ff30:	8003      	strh	r3, [r0, #0]
9000ff32:	8043      	strh	r3, [r0, #2]
9000ff34:	8083      	strh	r3, [r0, #4]
9000ff36:	80c3      	strh	r3, [r0, #6]
9000ff38:	e7f7      	b.n	9000ff2a <_ZN8touchgfx4RectaNERKS0_+0x76>

9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>:
9000ff3a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9000ff3e:	2b00      	cmp	r3, #0
9000ff40:	dd06      	ble.n	9000ff50 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9000ff42:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9000ff46:	2800      	cmp	r0, #0
9000ff48:	bfcc      	ite	gt
9000ff4a:	2000      	movgt	r0, #0
9000ff4c:	2001      	movle	r0, #1
9000ff4e:	4770      	bx	lr
9000ff50:	2001      	movs	r0, #1
9000ff52:	4770      	bx	lr

9000ff54 <_ZNK8touchgfx9Container16getContainedAreaEv>:
9000ff54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ff58:	2300      	movs	r3, #0
9000ff5a:	4604      	mov	r4, r0
9000ff5c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9000ff5e:	8003      	strh	r3, [r0, #0]
9000ff60:	8043      	strh	r3, [r0, #2]
9000ff62:	8083      	strh	r3, [r0, #4]
9000ff64:	80c3      	strh	r3, [r0, #6]
9000ff66:	2d00      	cmp	r5, #0
9000ff68:	d040      	beq.n	9000ffec <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9000ff6a:	1d28      	adds	r0, r5, #4
9000ff6c:	f7ff ffe5 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9000ff70:	b988      	cbnz	r0, 9000ff96 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9000ff72:	4620      	mov	r0, r4
9000ff74:	f7ff ffe1 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9000ff78:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9000ff7c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9000ff80:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
9000ff84:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9000ff88:	b138      	cbz	r0, 9000ff9a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9000ff8a:	8022      	strh	r2, [r4, #0]
9000ff8c:	8063      	strh	r3, [r4, #2]
9000ff8e:	f8a4 e004 	strh.w	lr, [r4, #4]
9000ff92:	f8a4 c006 	strh.w	ip, [r4, #6]
9000ff96:	69ad      	ldr	r5, [r5, #24]
9000ff98:	e7e5      	b.n	9000ff66 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9000ff9a:	f9b4 0000 	ldrsh.w	r0, [r4]
9000ff9e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9000ffa2:	4290      	cmp	r0, r2
9000ffa4:	4607      	mov	r7, r0
9000ffa6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9000ffaa:	460e      	mov	r6, r1
9000ffac:	bfa8      	it	ge
9000ffae:	4617      	movge	r7, r2
9000ffb0:	4299      	cmp	r1, r3
9000ffb2:	4472      	add	r2, lr
9000ffb4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9000ffb8:	bfa8      	it	ge
9000ffba:	461e      	movge	r6, r3
9000ffbc:	4440      	add	r0, r8
9000ffbe:	4471      	add	r1, lr
9000ffc0:	4463      	add	r3, ip
9000ffc2:	b200      	sxth	r0, r0
9000ffc4:	8027      	strh	r7, [r4, #0]
9000ffc6:	b212      	sxth	r2, r2
9000ffc8:	8066      	strh	r6, [r4, #2]
9000ffca:	b209      	sxth	r1, r1
9000ffcc:	b21b      	sxth	r3, r3
9000ffce:	4290      	cmp	r0, r2
9000ffd0:	bfac      	ite	ge
9000ffd2:	ebc7 0200 	rsbge	r2, r7, r0
9000ffd6:	ebc7 0202 	rsblt	r2, r7, r2
9000ffda:	4299      	cmp	r1, r3
9000ffdc:	bfac      	ite	ge
9000ffde:	ebc6 0301 	rsbge	r3, r6, r1
9000ffe2:	ebc6 0303 	rsblt	r3, r6, r3
9000ffe6:	80a2      	strh	r2, [r4, #4]
9000ffe8:	80e3      	strh	r3, [r4, #6]
9000ffea:	e7d4      	b.n	9000ff96 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9000ffec:	4620      	mov	r0, r4
9000ffee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000fff2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9000fff2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9000fff6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9000fffa:	b383      	cbz	r3, 9001005e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9000fffc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fffe:	b374      	cbz	r4, 9001005e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010000:	f9b1 5000 	ldrsh.w	r5, [r1]
90010004:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90010008:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
9001000c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90010010:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90010014:	b303      	cbz	r3, 90010058 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90010016:	4668      	mov	r0, sp
90010018:	1d21      	adds	r1, r4, #4
9001001a:	f8ad 5000 	strh.w	r5, [sp]
9001001e:	f8ad 6002 	strh.w	r6, [sp, #2]
90010022:	f8ad 7004 	strh.w	r7, [sp, #4]
90010026:	f8ad 8006 	strh.w	r8, [sp, #6]
9001002a:	f7ff ff43 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001002e:	4668      	mov	r0, sp
90010030:	f7ff ff83 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90010034:	b980      	cbnz	r0, 90010058 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90010036:	f8bd 3000 	ldrh.w	r3, [sp]
9001003a:	4669      	mov	r1, sp
9001003c:	88a2      	ldrh	r2, [r4, #4]
9001003e:	4620      	mov	r0, r4
90010040:	1a9b      	subs	r3, r3, r2
90010042:	88e2      	ldrh	r2, [r4, #6]
90010044:	f8ad 3000 	strh.w	r3, [sp]
90010048:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001004c:	1a9b      	subs	r3, r3, r2
9001004e:	f8ad 3002 	strh.w	r3, [sp, #2]
90010052:	6823      	ldr	r3, [r4, #0]
90010054:	689b      	ldr	r3, [r3, #8]
90010056:	4798      	blx	r3
90010058:	69a4      	ldr	r4, [r4, #24]
9001005a:	2c00      	cmp	r4, #0
9001005c:	d1d8      	bne.n	90010010 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9001005e:	b002      	add	sp, #8
90010060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010064 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010064:	b573      	push	{r0, r1, r4, r5, r6, lr}
90010066:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001006a:	460d      	mov	r5, r1
9001006c:	4616      	mov	r6, r2
9001006e:	b323      	cbz	r3, 900100ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010070:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010072:	b314      	cbz	r4, 900100ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010074:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90010078:	b1eb      	cbz	r3, 900100b6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001007a:	6828      	ldr	r0, [r5, #0]
9001007c:	466b      	mov	r3, sp
9001007e:	6869      	ldr	r1, [r5, #4]
90010080:	c303      	stmia	r3!, {r0, r1}
90010082:	4668      	mov	r0, sp
90010084:	1d21      	adds	r1, r4, #4
90010086:	f7ff ff15 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001008a:	4668      	mov	r0, sp
9001008c:	f7ff ff55 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90010090:	b988      	cbnz	r0, 900100b6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010092:	f8bd 3000 	ldrh.w	r3, [sp]
90010096:	4669      	mov	r1, sp
90010098:	88a2      	ldrh	r2, [r4, #4]
9001009a:	4620      	mov	r0, r4
9001009c:	1a9b      	subs	r3, r3, r2
9001009e:	88e2      	ldrh	r2, [r4, #6]
900100a0:	f8ad 3000 	strh.w	r3, [sp]
900100a4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900100a8:	1a9b      	subs	r3, r3, r2
900100aa:	4632      	mov	r2, r6
900100ac:	f8ad 3002 	strh.w	r3, [sp, #2]
900100b0:	6823      	ldr	r3, [r4, #0]
900100b2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
900100b4:	4798      	blx	r3
900100b6:	69a4      	ldr	r4, [r4, #24]
900100b8:	e7db      	b.n	90010072 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
900100ba:	b002      	add	sp, #8
900100bc:	bd70      	pop	{r4, r5, r6, pc}

900100be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
900100be:	6803      	ldr	r3, [r0, #0]
900100c0:	b513      	push	{r0, r1, r4, lr}
900100c2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
900100c6:	2300      	movs	r3, #0
900100c8:	e9cd 3300 	strd	r3, r3, [sp]
900100cc:	466b      	mov	r3, sp
900100ce:	47a0      	blx	r4
900100d0:	b002      	add	sp, #8
900100d2:	bd10      	pop	{r4, pc}

900100d4 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900100d4:	2301      	movs	r3, #1
900100d6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900100da:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900100de:	4770      	bx	lr

900100e0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900100e0:	2301      	movs	r3, #1
900100e2:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900100e6:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900100ea:	4770      	bx	lr

900100ec <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900100ec:	6843      	ldr	r3, [r0, #4]
900100ee:	2201      	movs	r2, #1
900100f0:	725a      	strb	r2, [r3, #9]
900100f2:	6840      	ldr	r0, [r0, #4]
900100f4:	6803      	ldr	r3, [r0, #0]
900100f6:	691b      	ldr	r3, [r3, #16]
900100f8:	4718      	bx	r3

900100fa <_ZN8touchgfx3HAL8flushDMAEv>:
900100fa:	6840      	ldr	r0, [r0, #4]
900100fc:	6803      	ldr	r3, [r0, #0]
900100fe:	689b      	ldr	r3, [r3, #8]
90010100:	4718      	bx	r3

90010102 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90010102:	b530      	push	{r4, r5, lr}
90010104:	b08b      	sub	sp, #44	@ 0x2c
90010106:	6804      	ldr	r4, [r0, #0]
90010108:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
9001010c:	9509      	str	r5, [sp, #36]	@ 0x24
9001010e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
90010112:	9508      	str	r5, [sp, #32]
90010114:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90010118:	9507      	str	r5, [sp, #28]
9001011a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
9001011e:	9506      	str	r5, [sp, #24]
90010120:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90010124:	9505      	str	r5, [sp, #20]
90010126:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
9001012a:	9504      	str	r5, [sp, #16]
9001012c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90010130:	9503      	str	r5, [sp, #12]
90010132:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
90010136:	9502      	str	r5, [sp, #8]
90010138:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001013c:	e9cd 3500 	strd	r3, r5, [sp]
90010140:	4613      	mov	r3, r2
90010142:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
90010144:	2200      	movs	r2, #0
90010146:	47a0      	blx	r4
90010148:	b00b      	add	sp, #44	@ 0x2c
9001014a:	bd30      	pop	{r4, r5, pc}

9001014c <_ZN8touchgfx3HAL10beginFrameEv>:
9001014c:	4b04      	ldr	r3, [pc, #16]	@ (90010160 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9001014e:	781b      	ldrb	r3, [r3, #0]
90010150:	b123      	cbz	r3, 9001015c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010152:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
90010156:	f080 0001 	eor.w	r0, r0, #1
9001015a:	4770      	bx	lr
9001015c:	2001      	movs	r0, #1
9001015e:	4770      	bx	lr
90010160:	24021c5a 	.word	0x24021c5a

90010164 <_ZN8touchgfx3HAL8endFrameEv>:
90010164:	b510      	push	{r4, lr}
90010166:	4604      	mov	r4, r0
90010168:	6840      	ldr	r0, [r0, #4]
9001016a:	6803      	ldr	r3, [r0, #0]
9001016c:	689b      	ldr	r3, [r3, #8]
9001016e:	4798      	blx	r3
90010170:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90010174:	b113      	cbz	r3, 9001017c <_ZN8touchgfx3HAL8endFrameEv+0x18>
90010176:	2301      	movs	r3, #1
90010178:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
9001017c:	bd10      	pop	{r4, pc}

9001017e <_ZN8touchgfx3HAL10initializeEv>:
9001017e:	b510      	push	{r4, lr}
90010180:	4604      	mov	r4, r0
90010182:	f7f2 f8b1 	bl	900022e8 <_ZN8touchgfx10OSWrappers10initializeEv>
90010186:	f7f0 fd27 	bl	90000bd8 <_ZN8touchgfx4GPIO4initEv>
9001018a:	6860      	ldr	r0, [r4, #4]
9001018c:	6803      	ldr	r3, [r0, #0]
9001018e:	68db      	ldr	r3, [r3, #12]
90010190:	4798      	blx	r3
90010192:	68e0      	ldr	r0, [r4, #12]
90010194:	6803      	ldr	r3, [r0, #0]
90010196:	689b      	ldr	r3, [r3, #8]
90010198:	4798      	blx	r3
9001019a:	6823      	ldr	r3, [r4, #0]
9001019c:	4620      	mov	r0, r4
9001019e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
900101a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900101a4:	4718      	bx	r3
	...

900101a8 <_ZN8touchgfx3HAL4tickEv>:
900101a8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900101aa:	6803      	ldr	r3, [r0, #0]
900101ac:	4604      	mov	r4, r0
900101ae:	4d5b      	ldr	r5, [pc, #364]	@ (9001031c <_ZN8touchgfx3HAL4tickEv+0x174>)
900101b0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
900101b4:	4798      	blx	r3
900101b6:	2800      	cmp	r0, #0
900101b8:	f000 8095 	beq.w	900102e6 <_ZN8touchgfx3HAL4tickEv+0x13e>
900101bc:	2001      	movs	r0, #1
900101be:	2600      	movs	r6, #0
900101c0:	f7f0 fd44 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900101c4:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
900101c8:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
900101cc:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900101d0:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
900101d4:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
900101d8:	b133      	cbz	r3, 900101e8 <_ZN8touchgfx3HAL4tickEv+0x40>
900101da:	6823      	ldr	r3, [r4, #0]
900101dc:	4620      	mov	r0, r4
900101de:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
900101e2:	4798      	blx	r3
900101e4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900101e8:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
900101ec:	2601      	movs	r6, #1
900101ee:	6862      	ldr	r2, [r4, #4]
900101f0:	f083 0301 	eor.w	r3, r3, #1
900101f4:	702e      	strb	r6, [r5, #0]
900101f6:	7253      	strb	r3, [r2, #9]
900101f8:	f005 f8de 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
900101fc:	6803      	ldr	r3, [r0, #0]
900101fe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010200:	4798      	blx	r3
90010202:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90010206:	b90b      	cbnz	r3, 9001020c <_ZN8touchgfx3HAL4tickEv+0x64>
90010208:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
9001020c:	f005 f8d4 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
90010210:	6803      	ldr	r3, [r0, #0]
90010212:	695b      	ldr	r3, [r3, #20]
90010214:	4798      	blx	r3
90010216:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90010218:	6803      	ldr	r3, [r0, #0]
9001021a:	691b      	ldr	r3, [r3, #16]
9001021c:	4798      	blx	r3
9001021e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90010222:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
90010226:	3b01      	subs	r3, #1
90010228:	b2db      	uxtb	r3, r3
9001022a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
9001022e:	b10a      	cbz	r2, 90010234 <_ZN8touchgfx3HAL4tickEv+0x8c>
90010230:	2b00      	cmp	r3, #0
90010232:	d1eb      	bne.n	9001020c <_ZN8touchgfx3HAL4tickEv+0x64>
90010234:	4a3a      	ldr	r2, [pc, #232]	@ (90010320 <_ZN8touchgfx3HAL4tickEv+0x178>)
90010236:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
9001023a:	7813      	ldrb	r3, [r2, #0]
9001023c:	3301      	adds	r3, #1
9001023e:	b25b      	sxtb	r3, r3
90010240:	4299      	cmp	r1, r3
90010242:	7013      	strb	r3, [r2, #0]
90010244:	dc10      	bgt.n	90010268 <_ZN8touchgfx3HAL4tickEv+0xc0>
90010246:	2300      	movs	r3, #0
90010248:	68e0      	ldr	r0, [r4, #12]
9001024a:	a902      	add	r1, sp, #8
9001024c:	7013      	strb	r3, [r2, #0]
9001024e:	aa03      	add	r2, sp, #12
90010250:	6803      	ldr	r3, [r0, #0]
90010252:	68db      	ldr	r3, [r3, #12]
90010254:	4798      	blx	r3
90010256:	6823      	ldr	r3, [r4, #0]
90010258:	2800      	cmp	r0, #0
9001025a:	d050      	beq.n	900102fe <_ZN8touchgfx3HAL4tickEv+0x156>
9001025c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90010260:	4620      	mov	r0, r4
90010262:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90010266:	4798      	blx	r3
90010268:	2300      	movs	r3, #0
9001026a:	6960      	ldr	r0, [r4, #20]
9001026c:	f88d 3007 	strb.w	r3, [sp, #7]
90010270:	b158      	cbz	r0, 9001028a <_ZN8touchgfx3HAL4tickEv+0xe2>
90010272:	6803      	ldr	r3, [r0, #0]
90010274:	f10d 0107 	add.w	r1, sp, #7
90010278:	68db      	ldr	r3, [r3, #12]
9001027a:	4798      	blx	r3
9001027c:	b128      	cbz	r0, 9001028a <_ZN8touchgfx3HAL4tickEv+0xe2>
9001027e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90010280:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010284:	6803      	ldr	r3, [r0, #0]
90010286:	68db      	ldr	r3, [r3, #12]
90010288:	4798      	blx	r3
9001028a:	f104 001c 	add.w	r0, r4, #28
9001028e:	f015 fc1f 	bl	90025ad0 <_ZN8touchgfx8Gestures4tickEv>
90010292:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
90010296:	b30b      	cbz	r3, 900102dc <_ZN8touchgfx3HAL4tickEv+0x134>
90010298:	6920      	ldr	r0, [r4, #16]
9001029a:	6803      	ldr	r3, [r0, #0]
9001029c:	691b      	ldr	r3, [r3, #16]
9001029e:	4798      	blx	r3
900102a0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900102a2:	4606      	mov	r6, r0
900102a4:	b903      	cbnz	r3, 900102a8 <_ZN8touchgfx3HAL4tickEv+0x100>
900102a6:	6760      	str	r0, [r4, #116]	@ 0x74
900102a8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900102aa:	4a1e      	ldr	r2, [pc, #120]	@ (90010324 <_ZN8touchgfx3HAL4tickEv+0x17c>)
900102ac:	1af3      	subs	r3, r6, r3
900102ae:	4293      	cmp	r3, r2
900102b0:	d914      	bls.n	900102dc <_ZN8touchgfx3HAL4tickEv+0x134>
900102b2:	6920      	ldr	r0, [r4, #16]
900102b4:	6803      	ldr	r3, [r0, #0]
900102b6:	699b      	ldr	r3, [r3, #24]
900102b8:	4798      	blx	r3
900102ba:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900102bc:	2264      	movs	r2, #100	@ 0x64
900102be:	1af3      	subs	r3, r6, r3
900102c0:	fbb3 f3f2 	udiv	r3, r3, r2
900102c4:	fbb0 f0f3 	udiv	r0, r0, r3
900102c8:	2800      	cmp	r0, #0
900102ca:	dc1d      	bgt.n	90010308 <_ZN8touchgfx3HAL4tickEv+0x160>
900102cc:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
900102d0:	6920      	ldr	r0, [r4, #16]
900102d2:	2100      	movs	r1, #0
900102d4:	6803      	ldr	r3, [r0, #0]
900102d6:	69db      	ldr	r3, [r3, #28]
900102d8:	4798      	blx	r3
900102da:	6766      	str	r6, [r4, #116]	@ 0x74
900102dc:	f005 f86c 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
900102e0:	6803      	ldr	r3, [r0, #0]
900102e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900102e4:	4798      	blx	r3
900102e6:	6823      	ldr	r3, [r4, #0]
900102e8:	4620      	mov	r0, r4
900102ea:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
900102ee:	4798      	blx	r3
900102f0:	2001      	movs	r0, #1
900102f2:	f7f0 fcdf 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900102f6:	2300      	movs	r3, #0
900102f8:	702b      	strb	r3, [r5, #0]
900102fa:	b004      	add	sp, #16
900102fc:	bd70      	pop	{r4, r5, r6, pc}
900102fe:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90010302:	4620      	mov	r0, r4
90010304:	4798      	blx	r3
90010306:	e7af      	b.n	90010268 <_ZN8touchgfx3HAL4tickEv+0xc0>
90010308:	2863      	cmp	r0, #99	@ 0x63
9001030a:	bfcb      	itete	gt
9001030c:	2300      	movgt	r3, #0
9001030e:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90010312:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
90010316:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
9001031a:	e7d9      	b.n	900102d0 <_ZN8touchgfx3HAL4tickEv+0x128>
9001031c:	24021c60 	.word	0x24021c60
90010320:	24021c61 	.word	0x24021c61
90010324:	05f5e100 	.word	0x05f5e100

90010328 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90010328:	b510      	push	{r4, lr}
9001032a:	4604      	mov	r4, r0
9001032c:	f7f2 f80e 	bl	9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010330:	2200      	movs	r2, #0
90010332:	6863      	ldr	r3, [r4, #4]
90010334:	729a      	strb	r2, [r3, #10]
90010336:	bd10      	pop	{r4, pc}

90010338 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90010338:	65c1      	str	r1, [r0, #92]	@ 0x5c
9001033a:	301c      	adds	r0, #28
9001033c:	f015 bbc6 	b.w	90025acc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90010340 <_ZN8touchgfx3HAL5touchEll>:
90010340:	b530      	push	{r4, r5, lr}
90010342:	b087      	sub	sp, #28
90010344:	4604      	mov	r4, r0
90010346:	a804      	add	r0, sp, #16
90010348:	e9cd 1204 	strd	r1, r2, [sp, #16]
9001034c:	f004 fe1a 	bl	90014f84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010350:	9b04      	ldr	r3, [sp, #16]
90010352:	a906      	add	r1, sp, #24
90010354:	a803      	add	r0, sp, #12
90010356:	f8ad 300c 	strh.w	r3, [sp, #12]
9001035a:	9b05      	ldr	r3, [sp, #20]
9001035c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010360:	f004 fe62 	bl	90015028 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010364:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90010368:	f104 001c 	add.w	r0, r4, #28
9001036c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010370:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010374:	b189      	cbz	r1, 9001039a <_ZN8touchgfx3HAL5touchEll+0x5a>
90010376:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
9001037a:	9300      	str	r3, [sp, #0]
9001037c:	4613      	mov	r3, r2
9001037e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
90010382:	462a      	mov	r2, r5
90010384:	f015 fbb2 	bl	90025aec <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90010388:	b128      	cbz	r0, 90010396 <_ZN8touchgfx3HAL5touchEll+0x56>
9001038a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001038e:	6623      	str	r3, [r4, #96]	@ 0x60
90010390:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90010394:	6663      	str	r3, [r4, #100]	@ 0x64
90010396:	b007      	add	sp, #28
90010398:	bd30      	pop	{r4, r5, pc}
9001039a:	f015 fbe7 	bl	90025b6c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001039e:	2301      	movs	r3, #1
900103a0:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900103a4:	e7f1      	b.n	9001038a <_ZN8touchgfx3HAL5touchEll+0x4a>

900103a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900103a6:	b510      	push	{r4, lr}
900103a8:	2b00      	cmp	r3, #0
900103aa:	d046      	beq.n	9001043a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900103ac:	ea81 0002 	eor.w	r0, r1, r2
900103b0:	07c4      	lsls	r4, r0, #31
900103b2:	d508      	bpl.n	900103c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900103b4:	440b      	add	r3, r1
900103b6:	3a01      	subs	r2, #1
900103b8:	428b      	cmp	r3, r1
900103ba:	d93e      	bls.n	9001043a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900103bc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900103c0:	f801 0b01 	strb.w	r0, [r1], #1
900103c4:	e7f8      	b.n	900103b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900103c6:	07d0      	lsls	r0, r2, #31
900103c8:	bf42      	ittt	mi
900103ca:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900103ce:	f103 33ff 	addmi.w	r3, r3, #4294967295
900103d2:	f801 0b01 	strbmi.w	r0, [r1], #1
900103d6:	2b01      	cmp	r3, #1
900103d8:	d911      	bls.n	900103fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900103da:	ea81 0402 	eor.w	r4, r1, r2
900103de:	4610      	mov	r0, r2
900103e0:	07a4      	lsls	r4, r4, #30
900103e2:	d022      	beq.n	9001042a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
900103e4:	f023 0401 	bic.w	r4, r3, #1
900103e8:	440c      	add	r4, r1
900103ea:	428c      	cmp	r4, r1
900103ec:	4602      	mov	r2, r0
900103ee:	d904      	bls.n	900103fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
900103f0:	8812      	ldrh	r2, [r2, #0]
900103f2:	3002      	adds	r0, #2
900103f4:	f821 2b02 	strh.w	r2, [r1], #2
900103f8:	e7f7      	b.n	900103ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
900103fa:	f003 0301 	and.w	r3, r3, #1
900103fe:	f023 0003 	bic.w	r0, r3, #3
90010402:	4408      	add	r0, r1
90010404:	4288      	cmp	r0, r1
90010406:	4614      	mov	r4, r2
90010408:	d904      	bls.n	90010414 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
9001040a:	6824      	ldr	r4, [r4, #0]
9001040c:	3204      	adds	r2, #4
9001040e:	f841 4b04 	str.w	r4, [r1], #4
90010412:	e7f7      	b.n	90010404 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90010414:	f003 0303 	and.w	r3, r3, #3
90010418:	3a01      	subs	r2, #1
9001041a:	440b      	add	r3, r1
9001041c:	428b      	cmp	r3, r1
9001041e:	d90c      	bls.n	9001043a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010420:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010424:	f801 0b01 	strb.w	r0, [r1], #1
90010428:	e7f8      	b.n	9001041c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
9001042a:	0790      	lsls	r0, r2, #30
9001042c:	d0e7      	beq.n	900103fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001042e:	f832 0b02 	ldrh.w	r0, [r2], #2
90010432:	3b02      	subs	r3, #2
90010434:	f821 0b02 	strh.w	r0, [r1], #2
90010438:	e7e1      	b.n	900103fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001043a:	2001      	movs	r0, #1
9001043c:	bd10      	pop	{r4, pc}

9001043e <_ZN8touchgfx3HAL7noTouchEv>:
9001043e:	b510      	push	{r4, lr}
90010440:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90010444:	4604      	mov	r4, r0
90010446:	b153      	cbz	r3, 9001045e <_ZN8touchgfx3HAL7noTouchEv+0x20>
90010448:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
9001044c:	2101      	movs	r1, #1
9001044e:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90010452:	301c      	adds	r0, #28
90010454:	f015 fb8a 	bl	90025b6c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010458:	2300      	movs	r3, #0
9001045a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
9001045e:	bd10      	pop	{r4, pc}

90010460 <_ZN8touchgfx8Drawable5setXYEss>:
90010460:	b570      	push	{r4, r5, r6, lr}
90010462:	6803      	ldr	r3, [r0, #0]
90010464:	4604      	mov	r4, r0
90010466:	4615      	mov	r5, r2
90010468:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001046a:	4798      	blx	r3
9001046c:	6823      	ldr	r3, [r4, #0]
9001046e:	4629      	mov	r1, r5
90010470:	4620      	mov	r0, r4
90010472:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010478:	4718      	bx	r3
	...

9001047c <_ZN8touchgfx3HAL3lcdEv>:
9001047c:	4b04      	ldr	r3, [pc, #16]	@ (90010490 <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001047e:	681b      	ldr	r3, [r3, #0]
90010480:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90010484:	b10a      	cbz	r2, 9001048a <_ZN8touchgfx3HAL3lcdEv+0xe>
90010486:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90010488:	b900      	cbnz	r0, 9001048c <_ZN8touchgfx3HAL3lcdEv+0x10>
9001048a:	6898      	ldr	r0, [r3, #8]
9001048c:	4770      	bx	lr
9001048e:	bf00      	nop
90010490:	24021c5c 	.word	0x24021c5c

90010494 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90010494:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010498:	b085      	sub	sp, #20
9001049a:	4604      	mov	r4, r0
9001049c:	2000      	movs	r0, #0
9001049e:	4699      	mov	r9, r3
900104a0:	ad04      	add	r5, sp, #16
900104a2:	460f      	mov	r7, r1
900104a4:	4690      	mov	r8, r2
900104a6:	f845 0d04 	str.w	r0, [r5, #-4]!
900104aa:	69a0      	ldr	r0, [r4, #24]
900104ac:	6806      	ldr	r6, [r0, #0]
900104ae:	9501      	str	r5, [sp, #4]
900104b0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
900104b4:	9500      	str	r5, [sp, #0]
900104b6:	6835      	ldr	r5, [r6, #0]
900104b8:	47a8      	blx	r5
900104ba:	4d10      	ldr	r5, [pc, #64]	@ (900104fc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900104bc:	4606      	mov	r6, r0
900104be:	f8a5 9000 	strh.w	r9, [r5]
900104c2:	f7ff ffdb 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
900104c6:	6803      	ldr	r3, [r0, #0]
900104c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900104ca:	4798      	blx	r3
900104cc:	b128      	cbz	r0, 900104da <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900104ce:	2801      	cmp	r0, #1
900104d0:	d00b      	beq.n	900104ea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900104d2:	4630      	mov	r0, r6
900104d4:	b005      	add	sp, #20
900104d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900104da:	882b      	ldrh	r3, [r5, #0]
900104dc:	fb08 7203 	mla	r2, r8, r3, r7
900104e0:	9b03      	ldr	r3, [sp, #12]
900104e2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
900104e6:	63e3      	str	r3, [r4, #60]	@ 0x3c
900104e8:	e7f3      	b.n	900104d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900104ea:	882a      	ldrh	r2, [r5, #0]
900104ec:	9b03      	ldr	r3, [sp, #12]
900104ee:	fb08 7202 	mla	r2, r8, r2, r7
900104f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900104f6:	1a9a      	subs	r2, r3, r2
900104f8:	63e2      	str	r2, [r4, #60]	@ 0x3c
900104fa:	e7ea      	b.n	900104d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900104fc:	24021c56 	.word	0x24021c56

90010500 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90010500:	b5f0      	push	{r4, r5, r6, r7, lr}
90010502:	b08b      	sub	sp, #44	@ 0x2c
90010504:	4617      	mov	r7, r2
90010506:	4604      	mov	r4, r0
90010508:	460e      	mov	r6, r1
9001050a:	461d      	mov	r5, r3
9001050c:	f7ff ffb6 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90010510:	6803      	ldr	r3, [r0, #0]
90010512:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010514:	4798      	blx	r3
90010516:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9001051a:	9007      	str	r0, [sp, #28]
9001051c:	4631      	mov	r1, r6
9001051e:	6822      	ldr	r2, [r4, #0]
90010520:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010524:	4b0c      	ldr	r3, [pc, #48]	@ (90010558 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90010526:	4620      	mov	r0, r4
90010528:	881b      	ldrh	r3, [r3, #0]
9001052a:	9306      	str	r3, [sp, #24]
9001052c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010530:	9305      	str	r3, [sp, #20]
90010532:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90010536:	9304      	str	r3, [sp, #16]
90010538:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001053c:	9303      	str	r3, [sp, #12]
9001053e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010542:	9302      	str	r3, [sp, #8]
90010544:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010548:	e9cd 5300 	strd	r5, r3, [sp]
9001054c:	463b      	mov	r3, r7
9001054e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
90010550:	2200      	movs	r2, #0
90010552:	47a8      	blx	r5
90010554:	b00b      	add	sp, #44	@ 0x2c
90010556:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010558:	24021c56 	.word	0x24021c56

9001055c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
9001055c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010560:	4698      	mov	r8, r3
90010562:	6803      	ldr	r3, [r0, #0]
90010564:	b08b      	sub	sp, #44	@ 0x2c
90010566:	4617      	mov	r7, r2
90010568:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
9001056a:	460e      	mov	r6, r1
9001056c:	4b13      	ldr	r3, [pc, #76]	@ (900105bc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
9001056e:	4604      	mov	r4, r0
90010570:	f8b3 9000 	ldrh.w	r9, [r3]
90010574:	f7ff ff82 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90010578:	6803      	ldr	r3, [r0, #0]
9001057a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001057c:	4798      	blx	r3
9001057e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010582:	2200      	movs	r2, #0
90010584:	4631      	mov	r1, r6
90010586:	e9cd 0308 	strd	r0, r3, [sp, #32]
9001058a:	2302      	movs	r3, #2
9001058c:	4620      	mov	r0, r4
9001058e:	e9cd 9306 	strd	r9, r3, [sp, #24]
90010592:	2301      	movs	r3, #1
90010594:	9305      	str	r3, [sp, #20]
90010596:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9001059a:	9304      	str	r3, [sp, #16]
9001059c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900105a0:	9303      	str	r3, [sp, #12]
900105a2:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
900105a6:	9302      	str	r3, [sp, #8]
900105a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900105ac:	e9cd 8300 	strd	r8, r3, [sp]
900105b0:	463b      	mov	r3, r7
900105b2:	47a8      	blx	r5
900105b4:	b00b      	add	sp, #44	@ 0x2c
900105b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900105ba:	bf00      	nop
900105bc:	24021c56 	.word	0x24021c56

900105c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900105c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900105c4:	4698      	mov	r8, r3
900105c6:	6803      	ldr	r3, [r0, #0]
900105c8:	b087      	sub	sp, #28
900105ca:	460e      	mov	r6, r1
900105cc:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
900105ce:	4617      	mov	r7, r2
900105d0:	4b0f      	ldr	r3, [pc, #60]	@ (90010610 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900105d2:	4604      	mov	r4, r0
900105d4:	f8b3 9000 	ldrh.w	r9, [r3]
900105d8:	f7ff ff50 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
900105dc:	6803      	ldr	r3, [r0, #0]
900105de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900105e0:	4798      	blx	r3
900105e2:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
900105e6:	463a      	mov	r2, r7
900105e8:	4631      	mov	r1, r6
900105ea:	f8cd 900c 	str.w	r9, [sp, #12]
900105ee:	e9cd 0304 	strd	r0, r3, [sp, #16]
900105f2:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
900105f6:	4620      	mov	r0, r4
900105f8:	9302      	str	r3, [sp, #8]
900105fa:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
900105fe:	9301      	str	r3, [sp, #4]
90010600:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90010604:	9300      	str	r3, [sp, #0]
90010606:	4643      	mov	r3, r8
90010608:	47a8      	blx	r5
9001060a:	b007      	add	sp, #28
9001060c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010610:	24021c56 	.word	0x24021c56

90010614 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010618:	4604      	mov	r4, r0
9001061a:	b08f      	sub	sp, #60	@ 0x3c
9001061c:	4610      	mov	r0, r2
9001061e:	460d      	mov	r5, r1
90010620:	4691      	mov	r9, r2
90010622:	461e      	mov	r6, r3
90010624:	f007 fe26 	bl	90018274 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010628:	2800      	cmp	r0, #0
9001062a:	f000 809d 	beq.w	90010768 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
9001062e:	6823      	ldr	r3, [r4, #0]
90010630:	4620      	mov	r0, r4
90010632:	f8df b198 	ldr.w	fp, [pc, #408]	@ 900107cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90010636:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
9001063a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001063c:	4798      	blx	r3
9001063e:	6823      	ldr	r3, [r4, #0]
90010640:	4620      	mov	r0, r4
90010642:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 900107d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90010646:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010648:	4798      	blx	r3
9001064a:	f8bb 3000 	ldrh.w	r3, [fp]
9001064e:	4f5c      	ldr	r7, [pc, #368]	@ (900107c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010650:	9301      	str	r3, [sp, #4]
90010652:	f8ba 3000 	ldrh.w	r3, [sl]
90010656:	f828 9d1c 	strh.w	r9, [r8, #-28]!
9001065a:	4640      	mov	r0, r8
9001065c:	9302      	str	r3, [sp, #8]
9001065e:	883b      	ldrh	r3, [r7, #0]
90010660:	9303      	str	r3, [sp, #12]
90010662:	4b58      	ldr	r3, [pc, #352]	@ (900107c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010664:	881a      	ldrh	r2, [r3, #0]
90010666:	9305      	str	r3, [sp, #20]
90010668:	9204      	str	r2, [sp, #16]
9001066a:	f007 fe97 	bl	9001839c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001066e:	8038      	strh	r0, [r7, #0]
90010670:	4640      	mov	r0, r8
90010672:	f007 fec7 	bl	90018404 <_ZNK8touchgfx6Bitmap9getHeightEv>
90010676:	9b05      	ldr	r3, [sp, #20]
90010678:	b280      	uxth	r0, r0
9001067a:	8018      	strh	r0, [r3, #0]
9001067c:	4b52      	ldr	r3, [pc, #328]	@ (900107c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001067e:	781b      	ldrb	r3, [r3, #0]
90010680:	2b00      	cmp	r3, #0
90010682:	d174      	bne.n	9001076e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90010684:	883b      	ldrh	r3, [r7, #0]
90010686:	f8aa 0000 	strh.w	r0, [sl]
9001068a:	f8ab 3000 	strh.w	r3, [fp]
9001068e:	4648      	mov	r0, r9
90010690:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90010694:	f007 fdee 	bl	90018274 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010698:	2200      	movs	r2, #0
9001069a:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
9001069e:	4611      	mov	r1, r2
900106a0:	4628      	mov	r0, r5
900106a2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
900106a6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
900106aa:	f7ff fed9 	bl	90010460 <_ZN8touchgfx8Drawable5setXYEss>
900106ae:	2301      	movs	r3, #1
900106b0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
900106b4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
900106b8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900106bc:	2b00      	cmp	r3, #0
900106be:	dd5c      	ble.n	9001077a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900106c0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900106c4:	2b00      	cmp	r3, #0
900106c6:	dd58      	ble.n	9001077a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900106c8:	462a      	mov	r2, r5
900106ca:	ab0a      	add	r3, sp, #40	@ 0x28
900106cc:	f852 0f04 	ldr.w	r0, [r2, #4]!
900106d0:	6851      	ldr	r1, [r2, #4]
900106d2:	c303      	stmia	r3!, {r0, r1}
900106d4:	4631      	mov	r1, r6
900106d6:	a80a      	add	r0, sp, #40	@ 0x28
900106d8:	f7ff fbec 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
900106dc:	4b38      	ldr	r3, [pc, #224]	@ (900107c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900106de:	2100      	movs	r1, #0
900106e0:	f9b3 2000 	ldrsh.w	r2, [r3]
900106e4:	4b37      	ldr	r3, [pc, #220]	@ (900107c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900106e6:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900106ea:	aa0a      	add	r2, sp, #40	@ 0x28
900106ec:	f9b3 3000 	ldrsh.w	r3, [r3]
900106f0:	910c      	str	r1, [sp, #48]	@ 0x30
900106f2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900106f6:	ab08      	add	r3, sp, #32
900106f8:	e892 0003 	ldmia.w	r2, {r0, r1}
900106fc:	e883 0003 	stmia.w	r3, {r0, r1}
90010700:	4618      	mov	r0, r3
90010702:	a90c      	add	r1, sp, #48	@ 0x30
90010704:	f7ff fbd6 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
90010708:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9001070a:	2b00      	cmp	r3, #0
9001070c:	d13c      	bne.n	90010788 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
9001070e:	2000      	movs	r0, #0
90010710:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90010714:	2600      	movs	r6, #0
90010716:	696b      	ldr	r3, [r5, #20]
90010718:	a908      	add	r1, sp, #32
9001071a:	682a      	ldr	r2, [r5, #0]
9001071c:	4628      	mov	r0, r5
9001071e:	9305      	str	r3, [sp, #20]
90010720:	616e      	str	r6, [r5, #20]
90010722:	6892      	ldr	r2, [r2, #8]
90010724:	4790      	blx	r2
90010726:	9b05      	ldr	r3, [sp, #20]
90010728:	4652      	mov	r2, sl
9001072a:	4649      	mov	r1, r9
9001072c:	616b      	str	r3, [r5, #20]
9001072e:	4628      	mov	r0, r5
90010730:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90010734:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90010738:	f7ff fe92 	bl	90010460 <_ZN8touchgfx8Drawable5setXYEss>
9001073c:	9a01      	ldr	r2, [sp, #4]
9001073e:	4b23      	ldr	r3, [pc, #140]	@ (900107cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90010740:	4620      	mov	r0, r4
90010742:	801a      	strh	r2, [r3, #0]
90010744:	9a02      	ldr	r2, [sp, #8]
90010746:	4b22      	ldr	r3, [pc, #136]	@ (900107d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90010748:	801a      	strh	r2, [r3, #0]
9001074a:	9a03      	ldr	r2, [sp, #12]
9001074c:	4b1c      	ldr	r3, [pc, #112]	@ (900107c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001074e:	801a      	strh	r2, [r3, #0]
90010750:	4b1c      	ldr	r3, [pc, #112]	@ (900107c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010752:	9a04      	ldr	r2, [sp, #16]
90010754:	801a      	strh	r2, [r3, #0]
90010756:	6823      	ldr	r3, [r4, #0]
90010758:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
9001075c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001075e:	4798      	blx	r3
90010760:	6823      	ldr	r3, [r4, #0]
90010762:	4620      	mov	r0, r4
90010764:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010766:	4798      	blx	r3
90010768:	b00f      	add	sp, #60	@ 0x3c
9001076a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001076e:	883b      	ldrh	r3, [r7, #0]
90010770:	f8ab 0000 	strh.w	r0, [fp]
90010774:	f8aa 3000 	strh.w	r3, [sl]
90010778:	e789      	b.n	9001068e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
9001077a:	462a      	mov	r2, r5
9001077c:	ab0a      	add	r3, sp, #40	@ 0x28
9001077e:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010782:	6851      	ldr	r1, [r2, #4]
90010784:	c303      	stmia	r3!, {r0, r1}
90010786:	e7a9      	b.n	900106dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90010788:	a807      	add	r0, sp, #28
9001078a:	f007 ff77 	bl	9001867c <_ZNK8touchgfx6Bitmap9getFormatEv>
9001078e:	4606      	mov	r6, r0
90010790:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90010792:	6803      	ldr	r3, [r0, #0]
90010794:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010796:	4798      	blx	r3
90010798:	4286      	cmp	r6, r0
9001079a:	d1b8      	bne.n	9001070e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
9001079c:	f7ff fe6e 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
900107a0:	6803      	ldr	r3, [r0, #0]
900107a2:	4606      	mov	r6, r0
900107a4:	a807      	add	r0, sp, #28
900107a6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900107a8:	9305      	str	r3, [sp, #20]
900107aa:	f007 ff67 	bl	9001867c <_ZNK8touchgfx6Bitmap9getFormatEv>
900107ae:	9b05      	ldr	r3, [sp, #20]
900107b0:	4601      	mov	r1, r0
900107b2:	4630      	mov	r0, r6
900107b4:	4798      	blx	r3
900107b6:	f080 0001 	eor.w	r0, r0, #1
900107ba:	b2c0      	uxtb	r0, r0
900107bc:	e7a8      	b.n	90010710 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
900107be:	bf00      	nop
900107c0:	24021c50 	.word	0x24021c50
900107c4:	24021c52 	.word	0x24021c52
900107c8:	24021c54 	.word	0x24021c54
900107cc:	24021c56 	.word	0x24021c56
900107d0:	24021c58 	.word	0x24021c58

900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
900107d4:	4b07      	ldr	r3, [pc, #28]	@ (900107f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
900107d6:	b510      	push	{r4, lr}
900107d8:	781b      	ldrb	r3, [r3, #0]
900107da:	4604      	mov	r4, r0
900107dc:	b13b      	cbz	r3, 900107ee <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
900107de:	6803      	ldr	r3, [r0, #0]
900107e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900107e2:	4798      	blx	r3
900107e4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900107e6:	4283      	cmp	r3, r0
900107e8:	d101      	bne.n	900107ee <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
900107ea:	6c20      	ldr	r0, [r4, #64]	@ 0x40
900107ec:	bd10      	pop	{r4, pc}
900107ee:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
900107f0:	e7fc      	b.n	900107ec <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
900107f2:	bf00      	nop
900107f4:	24021c5a 	.word	0x24021c5a

900107f8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
900107f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900107fc:	461d      	mov	r5, r3
900107fe:	b08a      	sub	sp, #40	@ 0x28
90010800:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90010804:	4690      	mov	r8, r2
90010806:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
9001080a:	2400      	movs	r4, #0
9001080c:	4607      	mov	r7, r0
9001080e:	fb06 8505 	mla	r5, r6, r5, r8
90010812:	9404      	str	r4, [sp, #16]
90010814:	f88d 4020 	strb.w	r4, [sp, #32]
90010818:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001081c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010820:	f8ad 3018 	strh.w	r3, [sp, #24]
90010824:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010828:	f8ad 301a 	strh.w	r3, [sp, #26]
9001082c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010830:	f8ad 301c 	strh.w	r3, [sp, #28]
90010834:	f7ff ffce 	bl	900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010838:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001083c:	6878      	ldr	r0, [r7, #4]
9001083e:	f8ad 601e 	strh.w	r6, [sp, #30]
90010842:	a901      	add	r1, sp, #4
90010844:	9505      	str	r5, [sp, #20]
90010846:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001084a:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
9001084e:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90010852:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90010856:	6803      	ldr	r3, [r0, #0]
90010858:	685b      	ldr	r3, [r3, #4]
9001085a:	4798      	blx	r3
9001085c:	b00a      	add	sp, #40	@ 0x28
9001085e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010862 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90010862:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010866:	b08b      	sub	sp, #44	@ 0x2c
90010868:	2400      	movs	r4, #0
9001086a:	4691      	mov	r9, r2
9001086c:	461d      	mov	r5, r3
9001086e:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90010872:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90010876:	4688      	mov	r8, r1
90010878:	4607      	mov	r7, r0
9001087a:	9404      	str	r4, [sp, #16]
9001087c:	fb06 9505 	mla	r5, r6, r5, r9
90010880:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010884:	f7ff ffa6 	bl	900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010888:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001088c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010890:	6878      	ldr	r0, [r7, #4]
90010892:	f8ad 3018 	strh.w	r3, [sp, #24]
90010896:	a901      	add	r1, sp, #4
90010898:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
9001089c:	9505      	str	r5, [sp, #20]
9001089e:	f8ad 301a 	strh.w	r3, [sp, #26]
900108a2:	f8ad 401c 	strh.w	r4, [sp, #28]
900108a6:	f8ad 601e 	strh.w	r6, [sp, #30]
900108aa:	f8cd 8010 	str.w	r8, [sp, #16]
900108ae:	f8ad 4020 	strh.w	r4, [sp, #32]
900108b2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900108b6:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
900108ba:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
900108be:	6803      	ldr	r3, [r0, #0]
900108c0:	685b      	ldr	r3, [r3, #4]
900108c2:	4798      	blx	r3
900108c4:	b00b      	add	sp, #44	@ 0x2c
900108c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

900108cc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
900108cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900108d0:	b08a      	sub	sp, #40	@ 0x28
900108d2:	4698      	mov	r8, r3
900108d4:	2300      	movs	r3, #0
900108d6:	4606      	mov	r6, r0
900108d8:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
900108dc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900108e0:	2d0b      	cmp	r5, #11
900108e2:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
900108e6:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
900108ea:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
900108ee:	9304      	str	r3, [sp, #16]
900108f0:	d137      	bne.n	90010962 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
900108f2:	2380      	movs	r3, #128	@ 0x80
900108f4:	f88d 0020 	strb.w	r0, [sp, #32]
900108f8:	4630      	mov	r0, r6
900108fa:	9203      	str	r2, [sp, #12]
900108fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010900:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010904:	f8ad 3018 	strh.w	r3, [sp, #24]
90010908:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001090c:	f8ad 301a 	strh.w	r3, [sp, #26]
90010910:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010914:	f8ad 301c 	strh.w	r3, [sp, #28]
90010918:	f7ff ff5c 	bl	900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001091c:	2c0b      	cmp	r4, #11
9001091e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90010922:	f8ad 701e 	strh.w	r7, [sp, #30]
90010926:	bf94      	ite	ls
90010928:	4b19      	ldrls	r3, [pc, #100]	@ (90010990 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
9001092a:	2100      	movhi	r1, #0
9001092c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90010930:	bf98      	it	ls
90010932:	5d19      	ldrbls	r1, [r3, r4]
90010934:	fb02 8307 	mla	r3, r2, r7, r8
90010938:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
9001093c:	10c9      	asrs	r1, r1, #3
9001093e:	fb01 0003 	mla	r0, r1, r3, r0
90010942:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90010946:	a901      	add	r1, sp, #4
90010948:	9005      	str	r0, [sp, #20]
9001094a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
9001094e:	2300      	movs	r3, #0
90010950:	6870      	ldr	r0, [r6, #4]
90010952:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010956:	6803      	ldr	r3, [r0, #0]
90010958:	685b      	ldr	r3, [r3, #4]
9001095a:	4798      	blx	r3
9001095c:	b00a      	add	sp, #40	@ 0x28
9001095e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010962:	2d02      	cmp	r5, #2
90010964:	d109      	bne.n	9001097a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90010966:	28ff      	cmp	r0, #255	@ 0xff
90010968:	d105      	bne.n	90010976 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
9001096a:	f1bc 0f00 	cmp.w	ip, #0
9001096e:	bf14      	ite	ne
90010970:	2340      	movne	r3, #64	@ 0x40
90010972:	2320      	moveq	r3, #32
90010974:	e7be      	b.n	900108f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010976:	2340      	movs	r3, #64	@ 0x40
90010978:	e7bc      	b.n	900108f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001097a:	28ff      	cmp	r0, #255	@ 0xff
9001097c:	d105      	bne.n	9001098a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
9001097e:	f1bc 0f00 	cmp.w	ip, #0
90010982:	bf14      	ite	ne
90010984:	2304      	movne	r3, #4
90010986:	2301      	moveq	r3, #1
90010988:	e7b4      	b.n	900108f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001098a:	2304      	movs	r3, #4
9001098c:	e7b2      	b.n	900108f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001098e:	bf00      	nop
90010990:	9002a4ec 	.word	0x9002a4ec

90010994 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90010994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010998:	b08b      	sub	sp, #44	@ 0x2c
9001099a:	461d      	mov	r5, r3
9001099c:	2400      	movs	r4, #0
9001099e:	4688      	mov	r8, r1
900109a0:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
900109a4:	4693      	mov	fp, r2
900109a6:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
900109aa:	4607      	mov	r7, r0
900109ac:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900109b0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
900109b4:	9404      	str	r4, [sp, #16]
900109b6:	bf14      	ite	ne
900109b8:	2308      	movne	r3, #8
900109ba:	2302      	moveq	r3, #2
900109bc:	fb05 b50a 	mla	r5, r5, sl, fp
900109c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
900109c4:	f7ff ff06 	bl	900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900109c8:	2e0b      	cmp	r6, #11
900109ca:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900109ce:	a901      	add	r1, sp, #4
900109d0:	bf98      	it	ls
900109d2:	4b13      	ldrls	r3, [pc, #76]	@ (90010a20 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
900109d4:	f8ad a01e 	strh.w	sl, [sp, #30]
900109d8:	bf98      	it	ls
900109da:	5d9c      	ldrbls	r4, [r3, r6]
900109dc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
900109e0:	10e4      	asrs	r4, r4, #3
900109e2:	f8cd 8010 	str.w	r8, [sp, #16]
900109e6:	f8ad 3018 	strh.w	r3, [sp, #24]
900109ea:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900109ee:	fb04 0405 	mla	r4, r4, r5, r0
900109f2:	6878      	ldr	r0, [r7, #4]
900109f4:	f8ad 301a 	strh.w	r3, [sp, #26]
900109f8:	2300      	movs	r3, #0
900109fa:	9405      	str	r4, [sp, #20]
900109fc:	f8ad 301c 	strh.w	r3, [sp, #28]
90010a00:	f88d 9020 	strb.w	r9, [sp, #32]
90010a04:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90010a08:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010a0c:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90010a10:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90010a14:	6803      	ldr	r3, [r0, #0]
90010a16:	685b      	ldr	r3, [r3, #4]
90010a18:	4798      	blx	r3
90010a1a:	b00b      	add	sp, #44	@ 0x2c
90010a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010a20:	9002a4ec 	.word	0x9002a4ec

90010a24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010a28:	461e      	mov	r6, r3
90010a2a:	4b0a      	ldr	r3, [pc, #40]	@ (90010a54 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010a2c:	460f      	mov	r7, r1
90010a2e:	4690      	mov	r8, r2
90010a30:	881d      	ldrh	r5, [r3, #0]
90010a32:	f7ff fd23 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90010a36:	6803      	ldr	r3, [r0, #0]
90010a38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010a3a:	4798      	blx	r3
90010a3c:	280b      	cmp	r0, #11
90010a3e:	bf96      	itet	ls
90010a40:	4b05      	ldrls	r3, [pc, #20]	@ (90010a58 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90010a42:	2400      	movhi	r4, #0
90010a44:	5c1c      	ldrbls	r4, [r3, r0]
90010a46:	fb08 7005 	mla	r0, r8, r5, r7
90010a4a:	10e4      	asrs	r4, r4, #3
90010a4c:	fb04 6000 	mla	r0, r4, r0, r6
90010a50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010a54:	24021c56 	.word	0x24021c56
90010a58:	9002a4ec 	.word	0x9002a4ec

90010a5c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90010a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
90010a5e:	b08b      	sub	sp, #44	@ 0x2c
90010a60:	461f      	mov	r7, r3
90010a62:	4604      	mov	r4, r0
90010a64:	4616      	mov	r6, r2
90010a66:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90010a6a:	2500      	movs	r5, #0
90010a6c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010a70:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010a74:	9504      	str	r5, [sp, #16]
90010a76:	f8ad 3018 	strh.w	r3, [sp, #24]
90010a7a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010a7e:	f8ad 301a 	strh.w	r3, [sp, #26]
90010a82:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010a86:	f8ad 301c 	strh.w	r3, [sp, #28]
90010a8a:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010a8e:	f88d 3020 	strb.w	r3, [sp, #32]
90010a92:	f7ff fe9f 	bl	900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010a96:	463a      	mov	r2, r7
90010a98:	4631      	mov	r1, r6
90010a9a:	4603      	mov	r3, r0
90010a9c:	4620      	mov	r0, r4
90010a9e:	f7ff ffc1 	bl	90010a24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010aa2:	4b0e      	ldr	r3, [pc, #56]	@ (90010adc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90010aa4:	9005      	str	r0, [sp, #20]
90010aa6:	881b      	ldrh	r3, [r3, #0]
90010aa8:	f8ad 301e 	strh.w	r3, [sp, #30]
90010aac:	f7ff fce6 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90010ab0:	6803      	ldr	r3, [r0, #0]
90010ab2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010ab4:	4798      	blx	r3
90010ab6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90010ab8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90010abc:	a901      	add	r1, sp, #4
90010abe:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90010ac2:	9304      	str	r3, [sp, #16]
90010ac4:	6860      	ldr	r0, [r4, #4]
90010ac6:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010aca:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90010ace:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90010ad2:	6803      	ldr	r3, [r0, #0]
90010ad4:	685b      	ldr	r3, [r3, #4]
90010ad6:	4798      	blx	r3
90010ad8:	b00b      	add	sp, #44	@ 0x2c
90010ada:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010adc:	24021c56 	.word	0x24021c56

90010ae0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90010ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
90010ae2:	b08d      	sub	sp, #52	@ 0x34
90010ae4:	2501      	movs	r5, #1
90010ae6:	4604      	mov	r4, r0
90010ae8:	466b      	mov	r3, sp
90010aea:	9503      	str	r5, [sp, #12]
90010aec:	e883 0006 	stmia.w	r3, {r1, r2}
90010af0:	2300      	movs	r3, #0
90010af2:	f8bd 6000 	ldrh.w	r6, [sp]
90010af6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010afa:	9306      	str	r3, [sp, #24]
90010afc:	6803      	ldr	r3, [r0, #0]
90010afe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010b00:	4798      	blx	r3
90010b02:	463a      	mov	r2, r7
90010b04:	4631      	mov	r1, r6
90010b06:	4603      	mov	r3, r0
90010b08:	4620      	mov	r0, r4
90010b0a:	f7ff ff8b 	bl	90010a24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010b0e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90010b10:	9004      	str	r0, [sp, #16]
90010b12:	9307      	str	r3, [sp, #28]
90010b14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010b18:	f8ad 3020 	strh.w	r3, [sp, #32]
90010b1c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010b20:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010b24:	4b0e      	ldr	r3, [pc, #56]	@ (90010b60 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010b26:	881b      	ldrh	r3, [r3, #0]
90010b28:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010b2c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010b30:	f7ff fca4 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90010b34:	6803      	ldr	r3, [r0, #0]
90010b36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010b38:	4798      	blx	r3
90010b3a:	23ff      	movs	r3, #255	@ 0xff
90010b3c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90010b40:	a903      	add	r1, sp, #12
90010b42:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90010b46:	6860      	ldr	r0, [r4, #4]
90010b48:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010b4c:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90010b50:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90010b54:	6803      	ldr	r3, [r0, #0]
90010b56:	685b      	ldr	r3, [r3, #4]
90010b58:	4798      	blx	r3
90010b5a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90010b5c:	b00d      	add	sp, #52	@ 0x34
90010b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010b60:	24021c56 	.word	0x24021c56

90010b64 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90010b64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010b68:	b08c      	sub	sp, #48	@ 0x30
90010b6a:	461e      	mov	r6, r3
90010b6c:	2300      	movs	r3, #0
90010b6e:	4604      	mov	r4, r0
90010b70:	466d      	mov	r5, sp
90010b72:	9306      	str	r3, [sp, #24]
90010b74:	6803      	ldr	r3, [r0, #0]
90010b76:	e885 0006 	stmia.w	r5, {r1, r2}
90010b7a:	2501      	movs	r5, #1
90010b7c:	f8bd 7000 	ldrh.w	r7, [sp]
90010b80:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90010b84:	9503      	str	r5, [sp, #12]
90010b86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010b88:	4798      	blx	r3
90010b8a:	4642      	mov	r2, r8
90010b8c:	4639      	mov	r1, r7
90010b8e:	4603      	mov	r3, r0
90010b90:	4620      	mov	r0, r4
90010b92:	f7ff ff47 	bl	90010a24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010b96:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010b9a:	9004      	str	r0, [sp, #16]
90010b9c:	f8ad 3020 	strh.w	r3, [sp, #32]
90010ba0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010ba4:	9607      	str	r6, [sp, #28]
90010ba6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010baa:	4b10      	ldr	r3, [pc, #64]	@ (90010bec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90010bac:	881b      	ldrh	r3, [r3, #0]
90010bae:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010bb2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90010bb4:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010bb8:	f7ff fc60 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90010bbc:	6803      	ldr	r3, [r0, #0]
90010bbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010bc0:	4798      	blx	r3
90010bc2:	23ff      	movs	r3, #255	@ 0xff
90010bc4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90010bc8:	a903      	add	r1, sp, #12
90010bca:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90010bce:	6860      	ldr	r0, [r4, #4]
90010bd0:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010bd4:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90010bd8:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90010bdc:	6803      	ldr	r3, [r0, #0]
90010bde:	685b      	ldr	r3, [r3, #4]
90010be0:	4798      	blx	r3
90010be2:	4630      	mov	r0, r6
90010be4:	b00c      	add	sp, #48	@ 0x30
90010be6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010bea:	bf00      	nop
90010bec:	24021c56 	.word	0x24021c56

90010bf0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90010bf0:	b5f0      	push	{r4, r5, r6, r7, lr}
90010bf2:	b085      	sub	sp, #20
90010bf4:	4605      	mov	r5, r0
90010bf6:	ac02      	add	r4, sp, #8
90010bf8:	e884 0006 	stmia.w	r4, {r1, r2}
90010bfc:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90010c00:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90010c04:	f7ff fde6 	bl	900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010c08:	4631      	mov	r1, r6
90010c0a:	4603      	mov	r3, r0
90010c0c:	463a      	mov	r2, r7
90010c0e:	4628      	mov	r0, r5
90010c10:	f7ff ff08 	bl	90010a24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010c14:	4a05      	ldr	r2, [pc, #20]	@ (90010c2c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90010c16:	682b      	ldr	r3, [r5, #0]
90010c18:	8812      	ldrh	r2, [r2, #0]
90010c1a:	9200      	str	r2, [sp, #0]
90010c1c:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
90010c1e:	4603      	mov	r3, r0
90010c20:	4628      	mov	r0, r5
90010c22:	e894 0006 	ldmia.w	r4, {r1, r2}
90010c26:	47b0      	blx	r6
90010c28:	b005      	add	sp, #20
90010c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010c2c:	24021c56 	.word	0x24021c56

90010c30 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90010c30:	b570      	push	{r4, r5, r6, lr}
90010c32:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90010c36:	4604      	mov	r4, r0
90010c38:	b19b      	cbz	r3, 90010c62 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90010c3a:	2002      	movs	r0, #2
90010c3c:	f7f0 f86e 	bl	90000d1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90010c40:	2300      	movs	r3, #0
90010c42:	4620      	mov	r0, r4
90010c44:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010c48:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90010c4c:	6823      	ldr	r3, [r4, #0]
90010c4e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
90010c52:	f7ff fdbf 	bl	900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010c56:	4601      	mov	r1, r0
90010c58:	4620      	mov	r0, r4
90010c5a:	462b      	mov	r3, r5
90010c5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010c60:	4718      	bx	r3
90010c62:	bd70      	pop	{r4, r5, r6, pc}

90010c64 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90010c64:	b570      	push	{r4, r5, r6, lr}
90010c66:	4605      	mov	r5, r0
90010c68:	460c      	mov	r4, r1
90010c6a:	2003      	movs	r0, #3
90010c6c:	b149      	cbz	r1, 90010c82 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90010c6e:	f7ef ffed 	bl	90000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010c72:	6928      	ldr	r0, [r5, #16]
90010c74:	b168      	cbz	r0, 90010c92 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010c76:	6803      	ldr	r3, [r0, #0]
90010c78:	2101      	movs	r1, #1
90010c7a:	695b      	ldr	r3, [r3, #20]
90010c7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010c80:	4718      	bx	r3
90010c82:	f7f0 f817 	bl	90000cb4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010c86:	6928      	ldr	r0, [r5, #16]
90010c88:	b118      	cbz	r0, 90010c92 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010c8a:	6803      	ldr	r3, [r0, #0]
90010c8c:	4621      	mov	r1, r4
90010c8e:	695b      	ldr	r3, [r3, #20]
90010c90:	e7f4      	b.n	90010c7c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90010c92:	bd70      	pop	{r4, r5, r6, pc}

90010c94 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90010c94:	b538      	push	{r3, r4, r5, lr}
90010c96:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
90010c9a:	4604      	mov	r4, r0
90010c9c:	460d      	mov	r5, r1
90010c9e:	428b      	cmp	r3, r1
90010ca0:	d006      	beq.n	90010cb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90010ca2:	6803      	ldr	r3, [r0, #0]
90010ca4:	b929      	cbnz	r1, 90010cb2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90010ca6:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
90010caa:	4798      	blx	r3
90010cac:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90010cb0:	bd38      	pop	{r3, r4, r5, pc}
90010cb2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90010cb6:	e7f8      	b.n	90010caa <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90010cb8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90010cb8:	4b0d      	ldr	r3, [pc, #52]	@ (90010cf0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90010cba:	b510      	push	{r4, lr}
90010cbc:	781b      	ldrb	r3, [r3, #0]
90010cbe:	4604      	mov	r4, r0
90010cc0:	b95b      	cbnz	r3, 90010cda <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010cc2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90010cc6:	2b02      	cmp	r3, #2
90010cc8:	d007      	beq.n	90010cda <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010cca:	6840      	ldr	r0, [r0, #4]
90010ccc:	f000 f91a 	bl	90010f04 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90010cd0:	b118      	cbz	r0, 90010cda <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010cd2:	6862      	ldr	r2, [r4, #4]
90010cd4:	7a53      	ldrb	r3, [r2, #9]
90010cd6:	2b00      	cmp	r3, #0
90010cd8:	d0fc      	beq.n	90010cd4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90010cda:	f7f1 fb2f 	bl	9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010cde:	4620      	mov	r0, r4
90010ce0:	2100      	movs	r1, #0
90010ce2:	f7ff ffd7 	bl	90010c94 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010ce6:	4620      	mov	r0, r4
90010ce8:	f7ff fd74 	bl	900107d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010cec:	bd10      	pop	{r4, pc}
90010cee:	bf00      	nop
90010cf0:	24021c5a 	.word	0x24021c5a

90010cf4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90010cf4:	b570      	push	{r4, r5, r6, lr}
90010cf6:	4604      	mov	r4, r0
90010cf8:	6803      	ldr	r3, [r0, #0]
90010cfa:	b919      	cbnz	r1, 90010d04 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90010cfc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010cfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010d02:	4718      	bx	r3
90010d04:	2200      	movs	r2, #0
90010d06:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90010d0a:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
90010d0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90010d10:	4798      	blx	r3
90010d12:	6863      	ldr	r3, [r4, #4]
90010d14:	2101      	movs	r1, #1
90010d16:	4605      	mov	r5, r0
90010d18:	4620      	mov	r0, r4
90010d1a:	7299      	strb	r1, [r3, #10]
90010d1c:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90010d20:	f7ff ffb8 	bl	90010c94 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010d24:	4628      	mov	r0, r5
90010d26:	bd70      	pop	{r4, r5, r6, pc}

90010d28 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90010d28:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90010d2c:	1a13      	subs	r3, r2, r0
90010d2e:	4258      	negs	r0, r3
90010d30:	4158      	adcs	r0, r3
90010d32:	4770      	bx	lr

90010d34 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90010d34:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90010d38:	1a9b      	subs	r3, r3, r2
90010d3a:	2b00      	cmp	r3, #0
90010d3c:	bfdc      	itt	le
90010d3e:	6882      	ldrle	r2, [r0, #8]
90010d40:	189b      	addle	r3, r3, r2
90010d42:	2b01      	cmp	r3, #1
90010d44:	bfcc      	ite	gt
90010d46:	2000      	movgt	r0, #0
90010d48:	2001      	movle	r0, #1
90010d4a:	4770      	bx	lr

90010d4c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90010d4c:	6902      	ldr	r2, [r0, #16]
90010d4e:	6843      	ldr	r3, [r0, #4]
90010d50:	2024      	movs	r0, #36	@ 0x24
90010d52:	fb00 3002 	mla	r0, r0, r2, r3
90010d56:	4770      	bx	lr

90010d58 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90010d58:	6803      	ldr	r3, [r0, #0]
90010d5a:	691b      	ldr	r3, [r3, #16]
90010d5c:	4718      	bx	r3

90010d5e <_ZN8touchgfx13DMA_Interface7executeEv>:
90010d5e:	2301      	movs	r3, #1
90010d60:	b570      	push	{r4, r5, r6, lr}
90010d62:	7203      	strb	r3, [r0, #8]
90010d64:	4604      	mov	r4, r0
90010d66:	6840      	ldr	r0, [r0, #4]
90010d68:	6803      	ldr	r3, [r0, #0]
90010d6a:	699b      	ldr	r3, [r3, #24]
90010d6c:	4798      	blx	r3
90010d6e:	6803      	ldr	r3, [r0, #0]
90010d70:	4605      	mov	r5, r0
90010d72:	2b40      	cmp	r3, #64	@ 0x40
90010d74:	d00c      	beq.n	90010d90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010d76:	d810      	bhi.n	90010d9a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90010d78:	2b04      	cmp	r3, #4
90010d7a:	d01d      	beq.n	90010db8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90010d7c:	d804      	bhi.n	90010d88 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90010d7e:	2b01      	cmp	r3, #1
90010d80:	d006      	beq.n	90010d90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010d82:	2b02      	cmp	r3, #2
90010d84:	d02c      	beq.n	90010de0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90010d86:	bd70      	pop	{r4, r5, r6, pc}
90010d88:	2b08      	cmp	r3, #8
90010d8a:	d01d      	beq.n	90010dc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90010d8c:	2b20      	cmp	r3, #32
90010d8e:	d1fa      	bne.n	90010d86 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90010d90:	6823      	ldr	r3, [r4, #0]
90010d92:	4620      	mov	r0, r4
90010d94:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90010d96:	4798      	blx	r3
90010d98:	e013      	b.n	90010dc2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90010d9a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90010d9e:	d0f7      	beq.n	90010d90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010da0:	d804      	bhi.n	90010dac <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90010da2:	2b80      	cmp	r3, #128	@ 0x80
90010da4:	d0f4      	beq.n	90010d90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010da6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90010daa:	e7f0      	b.n	90010d8e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90010dac:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90010db0:	d0ee      	beq.n	90010d90 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010db2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90010db6:	e7e5      	b.n	90010d84 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90010db8:	6823      	ldr	r3, [r4, #0]
90010dba:	7f01      	ldrb	r1, [r0, #28]
90010dbc:	4620      	mov	r0, r4
90010dbe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90010dc0:	4798      	blx	r3
90010dc2:	6823      	ldr	r3, [r4, #0]
90010dc4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010dc6:	e006      	b.n	90010dd6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90010dc8:	6823      	ldr	r3, [r4, #0]
90010dca:	7f01      	ldrb	r1, [r0, #28]
90010dcc:	4620      	mov	r0, r4
90010dce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90010dd0:	4798      	blx	r3
90010dd2:	6823      	ldr	r3, [r4, #0]
90010dd4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010dd6:	4629      	mov	r1, r5
90010dd8:	4620      	mov	r0, r4
90010dda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010dde:	4718      	bx	r3
90010de0:	6823      	ldr	r3, [r4, #0]
90010de2:	4620      	mov	r0, r4
90010de4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90010de6:	4798      	blx	r3
90010de8:	e7f3      	b.n	90010dd2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90010dea <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90010dea:	4770      	bx	lr

90010dec <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90010dec:	4770      	bx	lr

90010dee <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90010dee:	4770      	bx	lr

90010df0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90010df0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90010df4:	b510      	push	{r4, lr}
90010df6:	1ad2      	subs	r2, r2, r3
90010df8:	2a00      	cmp	r2, #0
90010dfa:	bfdc      	itt	le
90010dfc:	6884      	ldrle	r4, [r0, #8]
90010dfe:	1912      	addle	r2, r2, r4
90010e00:	2a01      	cmp	r2, #1
90010e02:	dd16      	ble.n	90010e32 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90010e04:	6842      	ldr	r2, [r0, #4]
90010e06:	2424      	movs	r4, #36	@ 0x24
90010e08:	fb04 2303 	mla	r3, r4, r3, r2
90010e0c:	f101 0220 	add.w	r2, r1, #32
90010e10:	f851 4b04 	ldr.w	r4, [r1], #4
90010e14:	4291      	cmp	r1, r2
90010e16:	f843 4b04 	str.w	r4, [r3], #4
90010e1a:	d1f9      	bne.n	90010e10 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90010e1c:	780a      	ldrb	r2, [r1, #0]
90010e1e:	701a      	strb	r2, [r3, #0]
90010e20:	68c3      	ldr	r3, [r0, #12]
90010e22:	6882      	ldr	r2, [r0, #8]
90010e24:	f3bf 8f5b 	dmb	ish
90010e28:	3301      	adds	r3, #1
90010e2a:	429a      	cmp	r2, r3
90010e2c:	bfd8      	it	le
90010e2e:	1a9b      	suble	r3, r3, r2
90010e30:	60c3      	str	r3, [r0, #12]
90010e32:	bd10      	pop	{r4, pc}

90010e34 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90010e34:	6903      	ldr	r3, [r0, #16]
90010e36:	6882      	ldr	r2, [r0, #8]
90010e38:	f3bf 8f5b 	dmb	ish
90010e3c:	3301      	adds	r3, #1
90010e3e:	429a      	cmp	r2, r3
90010e40:	bfd8      	it	le
90010e42:	1a9b      	suble	r3, r3, r2
90010e44:	6103      	str	r3, [r0, #16]
90010e46:	4770      	bx	lr

90010e48 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90010e48:	b570      	push	{r4, r5, r6, lr}
90010e4a:	4604      	mov	r4, r0
90010e4c:	460e      	mov	r6, r1
90010e4e:	6860      	ldr	r0, [r4, #4]
90010e50:	6803      	ldr	r3, [r0, #0]
90010e52:	685b      	ldr	r3, [r3, #4]
90010e54:	4798      	blx	r3
90010e56:	2800      	cmp	r0, #0
90010e58:	d1f9      	bne.n	90010e4e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90010e5a:	4d0d      	ldr	r5, [pc, #52]	@ (90010e90 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90010e5c:	6828      	ldr	r0, [r5, #0]
90010e5e:	6803      	ldr	r3, [r0, #0]
90010e60:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90010e62:	4798      	blx	r3
90010e64:	f7f1 fa78 	bl	90002358 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90010e68:	6828      	ldr	r0, [r5, #0]
90010e6a:	2101      	movs	r1, #1
90010e6c:	f7ff ff12 	bl	90010c94 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010e70:	6860      	ldr	r0, [r4, #4]
90010e72:	4631      	mov	r1, r6
90010e74:	6803      	ldr	r3, [r0, #0]
90010e76:	689b      	ldr	r3, [r3, #8]
90010e78:	4798      	blx	r3
90010e7a:	6823      	ldr	r3, [r4, #0]
90010e7c:	4620      	mov	r0, r4
90010e7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010e80:	4798      	blx	r3
90010e82:	6828      	ldr	r0, [r5, #0]
90010e84:	6803      	ldr	r3, [r0, #0]
90010e86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010e8a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90010e8c:	4718      	bx	r3
90010e8e:	bf00      	nop
90010e90:	24021c5c 	.word	0x24021c5c

90010e94 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90010e94:	b508      	push	{r3, lr}
90010e96:	f7f1 fa51 	bl	9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010e9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90010e9e:	f7f1 ba55 	b.w	9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90010ea2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90010ea2:	b510      	push	{r4, lr}
90010ea4:	4604      	mov	r4, r0
90010ea6:	2114      	movs	r1, #20
90010ea8:	f015 fc2e 	bl	90026708 <_ZdlPvj>
90010eac:	4620      	mov	r0, r4
90010eae:	bd10      	pop	{r4, pc}

90010eb0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90010eb0:	b570      	push	{r4, r5, r6, lr}
90010eb2:	4604      	mov	r4, r0
90010eb4:	6840      	ldr	r0, [r0, #4]
90010eb6:	6803      	ldr	r3, [r0, #0]
90010eb8:	681b      	ldr	r3, [r3, #0]
90010eba:	4798      	blx	r3
90010ebc:	4605      	mov	r5, r0
90010ebe:	b930      	cbnz	r0, 90010ece <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010ec0:	7a23      	ldrb	r3, [r4, #8]
90010ec2:	b123      	cbz	r3, 90010ece <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010ec4:	6860      	ldr	r0, [r4, #4]
90010ec6:	6803      	ldr	r3, [r0, #0]
90010ec8:	695b      	ldr	r3, [r3, #20]
90010eca:	4798      	blx	r3
90010ecc:	7225      	strb	r5, [r4, #8]
90010ece:	6860      	ldr	r0, [r4, #4]
90010ed0:	6803      	ldr	r3, [r0, #0]
90010ed2:	681b      	ldr	r3, [r3, #0]
90010ed4:	4798      	blx	r3
90010ed6:	b928      	cbnz	r0, 90010ee4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90010ed8:	6823      	ldr	r3, [r4, #0]
90010eda:	4620      	mov	r0, r4
90010edc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90010ede:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010ee2:	4718      	bx	r3
90010ee4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010ee8:	f7f1 ba3e 	b.w	90002368 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90010eec <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90010eec:	b510      	push	{r4, lr}
90010eee:	6082      	str	r2, [r0, #8]
90010ef0:	2200      	movs	r2, #0
90010ef2:	4c03      	ldr	r4, [pc, #12]	@ (90010f00 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90010ef4:	e9c0 2203 	strd	r2, r2, [r0, #12]
90010ef8:	e9c0 4100 	strd	r4, r1, [r0]
90010efc:	bd10      	pop	{r4, pc}
90010efe:	bf00      	nop
90010f00:	9002a500 	.word	0x9002a500

90010f04 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90010f04:	6840      	ldr	r0, [r0, #4]
90010f06:	6803      	ldr	r3, [r0, #0]
90010f08:	681b      	ldr	r3, [r3, #0]
90010f0a:	4718      	bx	r3
90010f0c:	0000      	movs	r0, r0
	...

90010f10 <_ZN8touchgfxL10applyNoiseEiihhh>:
90010f10:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90010f14:	fb80 0101 	smull	r0, r1, r0, r1
90010f18:	4f21      	ldr	r7, [pc, #132]	@ (90010fa0 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90010f1a:	461c      	mov	r4, r3
90010f1c:	4616      	mov	r6, r2
90010f1e:	fba0 bc07 	umull	fp, ip, r0, r7
90010f22:	f89d 5018 	ldrb.w	r5, [sp, #24]
90010f26:	fb07 cc01 	mla	ip, r7, r1, ip
90010f2a:	fbab 010b 	umull	r0, r1, fp, fp
90010f2e:	fb0b f70c 	mul.w	r7, fp, ip
90010f32:	fb00 f30c 	mul.w	r3, r0, ip
90010f36:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90010f3a:	fb0b 3301 	mla	r3, fp, r1, r3
90010f3e:	fba0 010b 	umull	r0, r1, r0, fp
90010f42:	4419      	add	r1, r3
90010f44:	a314      	add	r3, pc, #80	@ (adr r3, 90010f98 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90010f46:	e9d3 2300 	ldrd	r2, r3, [r3]
90010f4a:	f7ef fbd5 	bl	900006f8 <__aeabi_ldivmod>
90010f4e:	2ef7      	cmp	r6, #247	@ 0xf7
90010f50:	b290      	uxth	r0, r2
90010f52:	bf9e      	ittt	ls
90010f54:	f002 0207 	andls.w	r2, r2, #7
90010f58:	18b6      	addls	r6, r6, r2
90010f5a:	b2f6      	uxtbls	r6, r6
90010f5c:	2cfb      	cmp	r4, #251	@ 0xfb
90010f5e:	bf9e      	ittt	ls
90010f60:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
90010f64:	18e4      	addls	r4, r4, r3
90010f66:	b2e4      	uxtbls	r4, r4
90010f68:	2df7      	cmp	r5, #247	@ 0xf7
90010f6a:	bf98      	it	ls
90010f6c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
90010f70:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90010f74:	bf98      	it	ls
90010f76:	182d      	addls	r5, r5, r0
90010f78:	480a      	ldr	r0, [pc, #40]	@ (90010fa4 <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
90010f7a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90010f7e:	ea00 2006 	and.w	r0, r0, r6, lsl #8
90010f82:	bf98      	it	ls
90010f84:	b2ed      	uxtbls	r5, r5
90010f86:	4304      	orrs	r4, r0
90010f88:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
90010f8c:	b280      	uxth	r0, r0
90010f8e:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
90010f92:	bf00      	nop
90010f94:	f3af 8000 	nop.w
90010f98:	797a8d77 	.word	0x797a8d77
90010f9c:	00000000 	.word	0x00000000
90010fa0:	00ec4ba7 	.word	0x00ec4ba7
90010fa4:	fffff800 	.word	0xfffff800

90010fa8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
90010fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010fac:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90010fb0:	4605      	mov	r5, r0
90010fb2:	ed2d 8b02 	vpush	{d8}
90010fb6:	b087      	sub	sp, #28
90010fb8:	7c41      	ldrb	r1, [r0, #17]
90010fba:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
90010fbe:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
90010fc2:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
90010fc6:	2900      	cmp	r1, #0
90010fc8:	f000 809a 	beq.w	90011100 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
90010fcc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90010fd0:	ed90 7a08 	vldr	s14, [r0, #32]
90010fd4:	454a      	cmp	r2, r9
90010fd6:	68c0      	ldr	r0, [r0, #12]
90010fd8:	db25      	blt.n	90011026 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90010fda:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90010fde:	f640 72fc 	movw	r2, #4092	@ 0xffc
90010fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010fe6:	bfc8      	it	gt
90010fe8:	2200      	movgt	r2, #0
90010fea:	5882      	ldr	r2, [r0, r2]
90010fec:	2100      	movs	r1, #0
90010fee:	ea4f 2812 	mov.w	r8, r2, lsr #8
90010ff2:	7c2d      	ldrb	r5, [r5, #16]
90010ff4:	0950      	lsrs	r0, r2, #5
90010ff6:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90010ffa:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90010ffe:	eb04 0746 	add.w	r7, r4, r6, lsl #1
90011002:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90011006:	2d00      	cmp	r5, #0
90011008:	d044      	beq.n	90011094 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
9001100a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001100e:	d141      	bne.n	90011094 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011010:	bb61      	cbnz	r1, 9001106c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
90011012:	ea4e 0000 	orr.w	r0, lr, r0
90011016:	ea4c 0500 	orr.w	r5, ip, r0
9001101a:	42bc      	cmp	r4, r7
9001101c:	f080 8214 	bcs.w	90011448 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011020:	f824 5b02 	strh.w	r5, [r4], #2
90011024:	e7f9      	b.n	9001101a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
90011026:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
9001102a:	454f      	cmp	r7, r9
9001102c:	dc08      	bgt.n	90011040 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
9001102e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011032:	f640 72fc 	movw	r2, #4092	@ 0xffc
90011036:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001103a:	bfd8      	it	le
9001103c:	2200      	movle	r2, #0
9001103e:	e7d4      	b.n	90010fea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90011040:	eba9 0202 	sub.w	r2, r9, r2
90011044:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011048:	ee07 2a90 	vmov	s15, r2
9001104c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011050:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011054:	ee67 7a87 	vmul.f32	s15, s15, s14
90011058:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001105c:	ee17 2a90 	vmov	r2, s15
90011060:	bfd8      	it	le
90011062:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
90011066:	0092      	lsls	r2, r2, #2
90011068:	5882      	ldr	r2, [r0, r2]
9001106a:	e7c0      	b.n	90010fee <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
9001106c:	b2d5      	uxtb	r5, r2
9001106e:	f3c2 4a07 	ubfx	sl, r2, #16, #8
90011072:	fa5f f888 	uxtb.w	r8, r8
90011076:	461e      	mov	r6, r3
90011078:	42bc      	cmp	r4, r7
9001107a:	f080 81e5 	bcs.w	90011448 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001107e:	4630      	mov	r0, r6
90011080:	9500      	str	r5, [sp, #0]
90011082:	4643      	mov	r3, r8
90011084:	4652      	mov	r2, sl
90011086:	4649      	mov	r1, r9
90011088:	3601      	adds	r6, #1
9001108a:	f7ff ff41 	bl	90010f10 <_ZN8touchgfxL10applyNoiseEiihhh>
9001108e:	f824 0b02 	strh.w	r0, [r4], #2
90011092:	e7f1      	b.n	90011078 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
90011094:	0e12      	lsrs	r2, r2, #24
90011096:	26ff      	movs	r6, #255	@ 0xff
90011098:	fb02 f20a 	mul.w	r2, r2, sl
9001109c:	1c53      	adds	r3, r2, #1
9001109e:	eb03 2222 	add.w	r2, r3, r2, asr #8
900110a2:	1212      	asrs	r2, r2, #8
900110a4:	fb02 f50c 	mul.w	r5, r2, ip
900110a8:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 9001145c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900110ac:	fb02 f10e 	mul.w	r1, r2, lr
900110b0:	4350      	muls	r0, r2
900110b2:	43d2      	mvns	r2, r2
900110b4:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900110b8:	42bc      	cmp	r4, r7
900110ba:	f080 81c5 	bcs.w	90011448 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900110be:	f8b4 e000 	ldrh.w	lr, [r4]
900110c2:	ea0e 030c 	and.w	r3, lr, ip
900110c6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
900110ca:	f00e 0e1f 	and.w	lr, lr, #31
900110ce:	fb02 1303 	mla	r3, r2, r3, r1
900110d2:	fb02 0808 	mla	r8, r2, r8, r0
900110d6:	fb02 5e0e 	mla	lr, r2, lr, r5
900110da:	fb93 f3f6 	sdiv	r3, r3, r6
900110de:	fb98 f8f6 	sdiv	r8, r8, r6
900110e2:	fb9e fef6 	sdiv	lr, lr, r6
900110e6:	ea03 030c 	and.w	r3, r3, ip
900110ea:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900110ee:	f00e 0e1f 	and.w	lr, lr, #31
900110f2:	ea43 0308 	orr.w	r3, r3, r8
900110f6:	ea43 030e 	orr.w	r3, r3, lr
900110fa:	f824 3b02 	strh.w	r3, [r4], #2
900110fe:	e7db      	b.n	900110b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90011100:	7c82      	ldrb	r2, [r0, #18]
90011102:	2a00      	cmp	r2, #0
90011104:	d04f      	beq.n	900111a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
90011106:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001110a:	ee07 2a90 	vmov	s15, r2
9001110e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011112:	ee07 3a10 	vmov	s14, r3
90011116:	461f      	mov	r7, r3
90011118:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9001111c:	eef4 6ae7 	vcmpe.f32	s13, s15
90011120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011124:	f200 8095 	bhi.w	90011252 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90011128:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001112c:	f640 71fc 	movw	r1, #4092	@ 0xffc
90011130:	68ea      	ldr	r2, [r5, #12]
90011132:	f895 c010 	ldrb.w	ip, [r5, #16]
90011136:	ee37 7a87 	vadd.f32	s14, s15, s14
9001113a:	ee37 7a66 	vsub.f32	s14, s14, s13
9001113e:	ee06 6a90 	vmov	s13, r6
90011142:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90011146:	eeb4 7ae6 	vcmpe.f32	s14, s13
9001114a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001114e:	bf4a      	itet	mi
90011150:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
90011154:	9602      	strpl	r6, [sp, #8]
90011156:	ed8d 7a02 	vstrmi	s14, [sp, #8]
9001115a:	ed95 7a08 	vldr	s14, [r5, #32]
9001115e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011166:	bfc8      	it	gt
90011168:	2100      	movgt	r1, #0
9001116a:	5852      	ldr	r2, [r2, r1]
9001116c:	9902      	ldr	r1, [sp, #8]
9001116e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90011172:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90011176:	0950      	lsrs	r0, r2, #5
90011178:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001117c:	9103      	str	r1, [sp, #12]
9001117e:	f3c2 01c4 	ubfx	r1, r2, #3, #5
90011182:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90011186:	f1bc 0f00 	cmp.w	ip, #0
9001118a:	d024      	beq.n	900111d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
9001118c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011190:	d121      	bne.n	900111d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90011192:	ea4b 0b00 	orr.w	fp, fp, r0
90011196:	ea41 010b 	orr.w	r1, r1, fp
9001119a:	9a03      	ldr	r2, [sp, #12]
9001119c:	4294      	cmp	r4, r2
9001119e:	d255      	bcs.n	9001124c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900111a0:	f824 1b02 	strh.w	r1, [r4], #2
900111a4:	e7f9      	b.n	9001119a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900111a6:	ee07 9a10 	vmov	s14, r9
900111aa:	edd0 7a06 	vldr	s15, [r0, #24]
900111ae:	edd0 6a05 	vldr	s13, [r0, #20]
900111b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900111b6:	ee37 7a67 	vsub.f32	s14, s14, s15
900111ba:	eec7 7a26 	vdiv.f32	s15, s14, s13
900111be:	ed90 7a08 	vldr	s14, [r0, #32]
900111c2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900111c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900111ca:	bf44      	itt	mi
900111cc:	ed90 7a07 	vldrmi	s14, [r0, #28]
900111d0:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
900111d4:	e79d      	b.n	90011112 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
900111d6:	0e12      	lsrs	r2, r2, #24
900111d8:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 9001145c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900111dc:	f04f 0eff 	mov.w	lr, #255	@ 0xff
900111e0:	fb02 f20a 	mul.w	r2, r2, sl
900111e4:	f102 0c01 	add.w	ip, r2, #1
900111e8:	eb0c 2222 	add.w	r2, ip, r2, asr #8
900111ec:	1212      	asrs	r2, r2, #8
900111ee:	4350      	muls	r0, r2
900111f0:	4351      	muls	r1, r2
900111f2:	fb02 fb0b 	mul.w	fp, r2, fp
900111f6:	43d2      	mvns	r2, r2
900111f8:	9004      	str	r0, [sp, #16]
900111fa:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900111fe:	9105      	str	r1, [sp, #20]
90011200:	9903      	ldr	r1, [sp, #12]
90011202:	428c      	cmp	r4, r1
90011204:	d222      	bcs.n	9001124c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90011206:	8820      	ldrh	r0, [r4, #0]
90011208:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
9001120c:	ea00 0c08 	and.w	ip, r0, r8
90011210:	460f      	mov	r7, r1
90011212:	9904      	ldr	r1, [sp, #16]
90011214:	fb02 bc0c 	mla	ip, r2, ip, fp
90011218:	fb02 1107 	mla	r1, r2, r7, r1
9001121c:	fb9c fcfe 	sdiv	ip, ip, lr
90011220:	fb91 f1fe 	sdiv	r1, r1, lr
90011224:	ea0c 0c08 	and.w	ip, ip, r8
90011228:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001122c:	ea4c 0101 	orr.w	r1, ip, r1
90011230:	f000 0c1f 	and.w	ip, r0, #31
90011234:	9805      	ldr	r0, [sp, #20]
90011236:	fb02 0c0c 	mla	ip, r2, ip, r0
9001123a:	fb9c fcfe 	sdiv	ip, ip, lr
9001123e:	f00c 0c1f 	and.w	ip, ip, #31
90011242:	ea41 010c 	orr.w	r1, r1, ip
90011246:	f824 1b02 	strh.w	r1, [r4], #2
9001124a:	e7d9      	b.n	90011200 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
9001124c:	9a02      	ldr	r2, [sp, #8]
9001124e:	441a      	add	r2, r3
90011250:	4617      	mov	r7, r2
90011252:	441e      	add	r6, r3
90011254:	b236      	sxth	r6, r6
90011256:	42be      	cmp	r6, r7
90011258:	f340 80f6 	ble.w	90011448 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001125c:	ed95 7a07 	vldr	s14, [r5, #28]
90011260:	ee06 7a90 	vmov	s13, r7
90011264:	ee37 7a87 	vadd.f32	s14, s15, s14
90011268:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001126c:	eeb4 7ae6 	vcmpe.f32	s14, s13
90011270:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011274:	f340 80b2 	ble.w	900113dc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
90011278:	ee06 6a10 	vmov	s12, r6
9001127c:	ee76 7ae7 	vsub.f32	s15, s13, s15
90011280:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 90011454 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
90011284:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
90011288:	7c2b      	ldrb	r3, [r5, #16]
9001128a:	eeb4 7ac6 	vcmpe.f32	s14, s12
9001128e:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90011458 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
90011292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011296:	bfd6      	itet	le
90011298:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
9001129c:	46b0      	movgt	r8, r6
9001129e:	ee17 8a10 	vmovle	r8, s14
900112a2:	ed95 7a08 	vldr	s14, [r5, #32]
900112a6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900112aa:	eba8 0707 	sub.w	r7, r8, r7
900112ae:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900112b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900112b6:	fe38 8a06 	vselgt.f32	s16, s16, s12
900112ba:	eea7 8a27 	vfma.f32	s16, s14, s15
900112be:	b1db      	cbz	r3, 900112f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900112c0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900112c4:	d118      	bne.n	900112f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900112c6:	42bc      	cmp	r4, r7
900112c8:	d262      	bcs.n	90011390 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
900112ca:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900112ce:	68eb      	ldr	r3, [r5, #12]
900112d0:	4649      	mov	r1, r9
900112d2:	ee17 0a90 	vmov	r0, s15
900112d6:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
900112da:	b2d3      	uxtb	r3, r2
900112dc:	9300      	str	r3, [sp, #0]
900112de:	f3c2 2307 	ubfx	r3, r2, #8, #8
900112e2:	f3c2 4207 	ubfx	r2, r2, #16, #8
900112e6:	f7ff fe13 	bl	90010f10 <_ZN8touchgfxL10applyNoiseEiihhh>
900112ea:	f824 0b02 	strh.w	r0, [r4], #2
900112ee:	edd5 7a08 	vldr	s15, [r5, #32]
900112f2:	ee38 8a27 	vadd.f32	s16, s16, s15
900112f6:	e7e6      	b.n	900112c6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
900112f8:	f8df b160 	ldr.w	fp, [pc, #352]	@ 9001145c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900112fc:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90011300:	42bc      	cmp	r4, r7
90011302:	d245      	bcs.n	90011390 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011304:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011308:	68eb      	ldr	r3, [r5, #12]
9001130a:	f8b4 e000 	ldrh.w	lr, [r4]
9001130e:	ee17 2a90 	vmov	r2, s15
90011312:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90011316:	0e13      	lsrs	r3, r2, #24
90011318:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
9001131c:	fb03 f30a 	mul.w	r3, r3, sl
90011320:	b289      	uxth	r1, r1
90011322:	1c58      	adds	r0, r3, #1
90011324:	eb00 2023 	add.w	r0, r0, r3, asr #8
90011328:	ea0e 030b 	and.w	r3, lr, fp
9001132c:	1200      	asrs	r0, r0, #8
9001132e:	ea6f 0c00 	mvn.w	ip, r0
90011332:	fa5f fc8c 	uxtb.w	ip, ip
90011336:	fb0c f303 	mul.w	r3, ip, r3
9001133a:	fb00 3101 	mla	r1, r0, r1, r3
9001133e:	fb91 f1f9 	sdiv	r1, r1, r9
90011342:	ea01 030b 	and.w	r3, r1, fp
90011346:	9302      	str	r3, [sp, #8]
90011348:	0953      	lsrs	r3, r2, #5
9001134a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001134e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90011352:	4619      	mov	r1, r3
90011354:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90011358:	f00e 0e1f 	and.w	lr, lr, #31
9001135c:	fb0c f303 	mul.w	r3, ip, r3
90011360:	fb0c fc0e 	mul.w	ip, ip, lr
90011364:	fb00 3301 	mla	r3, r0, r1, r3
90011368:	9902      	ldr	r1, [sp, #8]
9001136a:	fb00 c002 	mla	r0, r0, r2, ip
9001136e:	fb93 f3f9 	sdiv	r3, r3, r9
90011372:	fb90 f0f9 	sdiv	r0, r0, r9
90011376:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001137a:	f000 001f 	and.w	r0, r0, #31
9001137e:	4319      	orrs	r1, r3
90011380:	4301      	orrs	r1, r0
90011382:	f824 1b02 	strh.w	r1, [r4], #2
90011386:	edd5 7a08 	vldr	s15, [r5, #32]
9001138a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001138e:	e7b7      	b.n	90011300 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
90011390:	4546      	cmp	r6, r8
90011392:	dd59      	ble.n	90011448 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011394:	edd5 7a08 	vldr	s15, [r5, #32]
90011398:	f640 73fc 	movw	r3, #4092	@ 0xffc
9001139c:	68ea      	ldr	r2, [r5, #12]
9001139e:	eba6 0608 	sub.w	r6, r6, r8
900113a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900113a6:	7c29      	ldrb	r1, [r5, #16]
900113a8:	eb04 0646 	add.w	r6, r4, r6, lsl #1
900113ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900113b0:	bfd8      	it	le
900113b2:	2300      	movle	r3, #0
900113b4:	58d2      	ldr	r2, [r2, r3]
900113b6:	0a10      	lsrs	r0, r2, #8
900113b8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
900113bc:	0953      	lsrs	r3, r2, #5
900113be:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900113c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900113c6:	b159      	cbz	r1, 900113e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900113c8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900113cc:	d108      	bne.n	900113e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900113ce:	4318      	orrs	r0, r3
900113d0:	4338      	orrs	r0, r7
900113d2:	42b4      	cmp	r4, r6
900113d4:	d238      	bcs.n	90011448 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900113d6:	f824 0b02 	strh.w	r0, [r4], #2
900113da:	e7fa      	b.n	900113d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
900113dc:	46b8      	mov	r8, r7
900113de:	e7d9      	b.n	90011394 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
900113e0:	0e12      	lsrs	r2, r2, #24
900113e2:	f8df c078 	ldr.w	ip, [pc, #120]	@ 9001145c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900113e6:	fb02 f10a 	mul.w	r1, r2, sl
900113ea:	1c4a      	adds	r2, r1, #1
900113ec:	eb02 2221 	add.w	r2, r2, r1, asr #8
900113f0:	1212      	asrs	r2, r2, #8
900113f2:	fb02 f507 	mul.w	r5, r2, r7
900113f6:	27ff      	movs	r7, #255	@ 0xff
900113f8:	4350      	muls	r0, r2
900113fa:	4353      	muls	r3, r2
900113fc:	43d2      	mvns	r2, r2
900113fe:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011402:	42b4      	cmp	r4, r6
90011404:	d220      	bcs.n	90011448 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011406:	f8b4 e000 	ldrh.w	lr, [r4]
9001140a:	ea0e 010c 	and.w	r1, lr, ip
9001140e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90011412:	f00e 0e1f 	and.w	lr, lr, #31
90011416:	fb02 0101 	mla	r1, r2, r1, r0
9001141a:	fb02 3808 	mla	r8, r2, r8, r3
9001141e:	fb02 5e0e 	mla	lr, r2, lr, r5
90011422:	fb91 f1f7 	sdiv	r1, r1, r7
90011426:	fb98 f8f7 	sdiv	r8, r8, r7
9001142a:	fb9e fef7 	sdiv	lr, lr, r7
9001142e:	ea01 010c 	and.w	r1, r1, ip
90011432:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90011436:	f00e 0e1f 	and.w	lr, lr, #31
9001143a:	ea41 0108 	orr.w	r1, r1, r8
9001143e:	ea41 010e 	orr.w	r1, r1, lr
90011442:	f824 1b02 	strh.w	r1, [r4], #2
90011446:	e7dc      	b.n	90011402 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90011448:	b007      	add	sp, #28
9001144a:	ecbd 8b02 	vpop	{d8}
9001144e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011452:	bf00      	nop
90011454:	00000000 	.word	0x00000000
90011458:	447ffffe 	.word	0x447ffffe
9001145c:	fffff800 	.word	0xfffff800

90011460 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90011460:	4770      	bx	lr

90011462 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
90011462:	4770      	bx	lr

90011464 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
90011464:	b510      	push	{r4, lr}
90011466:	4604      	mov	r4, r0
90011468:	2124      	movs	r1, #36	@ 0x24
9001146a:	f015 f94d 	bl	90026708 <_ZdlPvj>
9001146e:	4620      	mov	r0, r4
90011470:	bd10      	pop	{r4, pc}
	...

90011474 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011474:	094a      	lsrs	r2, r1, #5
90011476:	4b06      	ldr	r3, [pc, #24]	@ (90011490 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90011478:	60c1      	str	r1, [r0, #12]
9001147a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
9001147e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90011482:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90011486:	4313      	orrs	r3, r2
90011488:	4319      	orrs	r1, r3
9001148a:	8201      	strh	r1, [r0, #16]
9001148c:	4770      	bx	lr
9001148e:	bf00      	nop
90011490:	fffff800 	.word	0xfffff800

90011494 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011494:	f1a0 0008 	sub.w	r0, r0, #8
90011498:	e7ec      	b.n	90011474 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
9001149a:	bf00      	nop

9001149c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
9001149c:	b508      	push	{r3, lr}
9001149e:	4b05      	ldr	r3, [pc, #20]	@ (900114b4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
900114a0:	6818      	ldr	r0, [r3, #0]
900114a2:	6803      	ldr	r3, [r0, #0]
900114a4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
900114a8:	4798      	blx	r3
900114aa:	1e43      	subs	r3, r0, #1
900114ac:	4258      	negs	r0, r3
900114ae:	4158      	adcs	r0, r3
900114b0:	bd08      	pop	{r3, pc}
900114b2:	bf00      	nop
900114b4:	24021c5c 	.word	0x24021c5c

900114b8 <_ZN8touchgfx13PainterRGB565D1Ev>:
900114b8:	4770      	bx	lr

900114ba <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
900114ba:	3808      	subs	r0, #8
900114bc:	4770      	bx	lr

900114be <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
900114be:	b430      	push	{r4, r5}
900114c0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900114c4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
900114c8:	8a02      	ldrh	r2, [r0, #16]
900114ca:	f89d 3010 	ldrb.w	r3, [sp, #16]
900114ce:	4629      	mov	r1, r5
900114d0:	9202      	str	r2, [sp, #8]
900114d2:	68c2      	ldr	r2, [r0, #12]
900114d4:	4620      	mov	r0, r4
900114d6:	bc30      	pop	{r4, r5}
900114d8:	f7f1 ba1a 	b.w	90002910 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

900114dc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
900114dc:	f7f1 ba0e 	b.w	900028fc <_ZN8touchgfx5paint8tearDownEv>

900114e0 <_ZN8touchgfx13PainterRGB565D0Ev>:
900114e0:	b510      	push	{r4, lr}
900114e2:	4604      	mov	r4, r0
900114e4:	2114      	movs	r1, #20
900114e6:	f015 f90f 	bl	90026708 <_ZdlPvj>
900114ea:	4620      	mov	r0, r4
900114ec:	bd10      	pop	{r4, pc}

900114ee <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
900114ee:	f1a0 0008 	sub.w	r0, r0, #8
900114f2:	e7f5      	b.n	900114e0 <_ZN8touchgfx13PainterRGB565D0Ev>

900114f4 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
900114f4:	2300      	movs	r3, #0
900114f6:	84c3      	strh	r3, [r0, #38]	@ 0x26
900114f8:	8503      	strh	r3, [r0, #40]	@ 0x28
900114fa:	8543      	strh	r3, [r0, #42]	@ 0x2a
900114fc:	8583      	strh	r3, [r0, #44]	@ 0x2c
900114fe:	6980      	ldr	r0, [r0, #24]
90011500:	b110      	cbz	r0, 90011508 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90011502:	6803      	ldr	r3, [r0, #0]
90011504:	691b      	ldr	r3, [r3, #16]
90011506:	4718      	bx	r3
90011508:	4770      	bx	lr

9001150a <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
9001150a:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
9001150e:	4770      	bx	lr

90011510 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90011510:	b538      	push	{r3, r4, r5, lr}
90011512:	0e0b      	lsrs	r3, r1, #24
90011514:	4604      	mov	r4, r0
90011516:	460d      	mov	r5, r1
90011518:	7783      	strb	r3, [r0, #30]
9001151a:	6803      	ldr	r3, [r0, #0]
9001151c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001151e:	4798      	blx	r3
90011520:	6803      	ldr	r3, [r0, #0]
90011522:	4629      	mov	r1, r5
90011524:	689b      	ldr	r3, [r3, #8]
90011526:	4798      	blx	r3
90011528:	6823      	ldr	r3, [r4, #0]
9001152a:	4620      	mov	r0, r4
9001152c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001152e:	4798      	blx	r3
90011530:	61a0      	str	r0, [r4, #24]
90011532:	bd38      	pop	{r3, r4, r5, pc}

90011534 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90011534:	7741      	strb	r1, [r0, #29]
90011536:	4770      	bx	lr

90011538 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90011538:	b530      	push	{r4, r5, lr}
9001153a:	460d      	mov	r5, r1
9001153c:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90011540:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90011542:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011544:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90011546:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011548:	682b      	ldr	r3, [r5, #0]
9001154a:	6023      	str	r3, [r4, #0]
9001154c:	bd30      	pop	{r4, r5, pc}

9001154e <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
9001154e:	b538      	push	{r3, r4, r5, lr}
90011550:	4604      	mov	r4, r0
90011552:	1d03      	adds	r3, r0, #4
90011554:	6808      	ldr	r0, [r1, #0]
90011556:	2500      	movs	r5, #0
90011558:	6849      	ldr	r1, [r1, #4]
9001155a:	c303      	stmia	r3!, {r0, r1}
9001155c:	6813      	ldr	r3, [r2, #0]
9001155e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
90011562:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
90011566:	6853      	ldr	r3, [r2, #4]
90011568:	61a5      	str	r5, [r4, #24]
9001156a:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
9001156e:	f005 faa3 	bl	90016ab8 <_ZN8touchgfx9Matrix3x35resetEv>
90011572:	23ff      	movs	r3, #255	@ 0xff
90011574:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90011578:	7763      	strb	r3, [r4, #29]
9001157a:	77a3      	strb	r3, [r4, #30]
9001157c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90011580:	6323      	str	r3, [r4, #48]	@ 0x30
90011582:	2301      	movs	r3, #1
90011584:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90011588:	bd38      	pop	{r3, r4, r5, pc}
	...

9001158c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
9001158c:	ee70 7a41 	vsub.f32	s15, s0, s2
90011590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011594:	eef5 7a40 	vcmp.f32	s15, #0.0
90011598:	4605      	mov	r5, r0
9001159a:	ed2d 8b0a 	vpush	{d8-d12}
9001159e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900115a2:	b086      	sub	sp, #24
900115a4:	eeb0 ba40 	vmov.f32	s22, s0
900115a8:	6802      	ldr	r2, [r0, #0]
900115aa:	eef0 ba60 	vmov.f32	s23, s1
900115ae:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
900115b2:	eef0 aa41 	vmov.f32	s21, s2
900115b6:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
900115b8:	eeb0 aa61 	vmov.f32	s20, s3
900115bc:	eeb0 ca42 	vmov.f32	s24, s4
900115c0:	eef0 ca62 	vmov.f32	s25, s5
900115c4:	d112      	bne.n	900115ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900115c6:	ee70 7ae1 	vsub.f32	s15, s1, s3
900115ca:	eef5 7a40 	vcmp.f32	s15, #0.0
900115ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900115d2:	d10b      	bne.n	900115ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
900115d4:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
900115d8:	6a92      	ldr	r2, [r2, #40]	@ 0x28
900115da:	3901      	subs	r1, #1
900115dc:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
900115e0:	b006      	add	sp, #24
900115e2:	ecbd 8b0a 	vpop	{d8-d12}
900115e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900115ea:	4710      	bx	r2
900115ec:	23ff      	movs	r3, #255	@ 0xff
900115ee:	4628      	mov	r0, r5
900115f0:	f105 0834 	add.w	r8, r5, #52	@ 0x34
900115f4:	77ab      	strb	r3, [r5, #30]
900115f6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
900115f8:	4798      	blx	r3
900115fa:	eeb0 0a4b 	vmov.f32	s0, s22
900115fe:	eef0 0a6b 	vmov.f32	s1, s23
90011602:	4604      	mov	r4, r0
90011604:	4640      	mov	r0, r8
90011606:	f005 fb06 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001160a:	eef0 8a40 	vmov.f32	s17, s0
9001160e:	ed8d 0a00 	vstr	s0, [sp]
90011612:	eeb0 0a6a 	vmov.f32	s0, s21
90011616:	eef0 9a60 	vmov.f32	s19, s1
9001161a:	edcd 0a01 	vstr	s1, [sp, #4]
9001161e:	4640      	mov	r0, r8
90011620:	eef0 0a4a 	vmov.f32	s1, s20
90011624:	f005 faf7 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011628:	eef4 8a40 	vcmp.f32	s17, s0
9001162c:	eeb0 8a40 	vmov.f32	s16, s0
90011630:	ed8d 0a02 	vstr	s0, [sp, #8]
90011634:	eeb0 9a60 	vmov.f32	s18, s1
90011638:	edcd 0a03 	vstr	s1, [sp, #12]
9001163c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011640:	eef4 9a60 	vcmp.f32	s19, s1
90011644:	bf0c      	ite	eq
90011646:	2301      	moveq	r3, #1
90011648:	2300      	movne	r3, #0
9001164a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001164e:	eef4 8a40 	vcmp.f32	s17, s0
90011652:	7463      	strb	r3, [r4, #17]
90011654:	bf0c      	ite	eq
90011656:	2301      	moveq	r3, #1
90011658:	2300      	movne	r3, #0
9001165a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001165e:	74a3      	strb	r3, [r4, #18]
90011660:	d024      	beq.n	900116ac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90011662:	eef4 9a60 	vcmp.f32	s19, s1
90011666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001166a:	d01f      	beq.n	900116ac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
9001166c:	ee3a aa6b 	vsub.f32	s20, s20, s23
90011670:	4640      	mov	r0, r8
90011672:	ee7a aacb 	vsub.f32	s21, s21, s22
90011676:	eeb0 0a4b 	vmov.f32	s0, s22
9001167a:	eeca 7a2c 	vdiv.f32	s15, s20, s25
9001167e:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
90011682:	eef0 0a6b 	vmov.f32	s1, s23
90011686:	eea7 0acc 	vfms.f32	s0, s15, s24
9001168a:	eeec 0a87 	vfma.f32	s1, s25, s14
9001168e:	f005 fac2 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011692:	ed8d 0a04 	vstr	s0, [sp, #16]
90011696:	ee30 0a68 	vsub.f32	s0, s0, s17
9001169a:	eeb5 0a40 	vcmp.f32	s0, #0.0
9001169e:	edcd 0a05 	vstr	s1, [sp, #20]
900116a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900116a6:	d121      	bne.n	900116ec <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x160>
900116a8:	2301      	movs	r3, #1
900116aa:	74a3      	strb	r3, [r4, #18]
900116ac:	7c63      	ldrb	r3, [r4, #17]
900116ae:	2b00      	cmp	r3, #0
900116b0:	d051      	beq.n	90011756 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ca>
900116b2:	ee39 7a69 	vsub.f32	s14, s18, s19
900116b6:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 900117ac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
900116ba:	eef4 9ac9 	vcmpe.f32	s19, s18
900116be:	eec6 7a87 	vdiv.f32	s15, s13, s14
900116c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900116c6:	edc4 7a08 	vstr	s15, [r4, #32]
900116ca:	eefd 7ac9 	vcvt.s32.f32	s15, s18
900116ce:	ee17 3a90 	vmov	r3, s15
900116d2:	eefd 7ae9 	vcvt.s32.f32	s15, s19
900116d6:	b21a      	sxth	r2, r3
900116d8:	ee17 3a90 	vmov	r3, s15
900116dc:	bf48      	it	mi
900116de:	8122      	strhmi	r2, [r4, #8]
900116e0:	b21b      	sxth	r3, r3
900116e2:	bf56      	itet	pl
900116e4:	80e2      	strhpl	r2, [r4, #6]
900116e6:	80e3      	strhmi	r3, [r4, #6]
900116e8:	8123      	strhpl	r3, [r4, #8]
900116ea:	e02c      	b.n	90011746 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
900116ec:	ee70 0ae9 	vsub.f32	s1, s1, s19
900116f0:	eec0 7a80 	vdiv.f32	s15, s1, s0
900116f4:	eef5 7a40 	vcmp.f32	s15, #0.0
900116f8:	edc4 7a05 	vstr	s15, [r4, #20]
900116fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011700:	d102      	bne.n	90011708 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17c>
90011702:	2301      	movs	r3, #1
90011704:	7463      	strb	r3, [r4, #17]
90011706:	e7d1      	b.n	900116ac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90011708:	eeb0 7a69 	vmov.f32	s14, s19
9001170c:	ee39 9a69 	vsub.f32	s18, s18, s19
90011710:	ee38 8a68 	vsub.f32	s16, s16, s17
90011714:	eea8 7ae7 	vfms.f32	s14, s17, s15
90011718:	ed84 7a06 	vstr	s14, [r4, #24]
9001171c:	ee89 7a27 	vdiv.f32	s14, s18, s15
90011720:	ee38 8a47 	vsub.f32	s16, s16, s14
90011724:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 900117b0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x224>
90011728:	eec7 7a08 	vdiv.f32	s15, s14, s16
9001172c:	ed84 8a07 	vstr	s16, [r4, #28]
90011730:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90011734:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011738:	edc4 7a08 	vstr	s15, [r4, #32]
9001173c:	d503      	bpl.n	90011746 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
9001173e:	eeb1 8a48 	vneg.f32	s16, s16
90011742:	ed84 8a07 	vstr	s16, [r4, #28]
90011746:	60e7      	str	r7, [r4, #12]
90011748:	7426      	strb	r6, [r4, #16]
9001174a:	61ac      	str	r4, [r5, #24]
9001174c:	b006      	add	sp, #24
9001174e:	ecbd 8b0a 	vpop	{d8-d12}
90011752:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011756:	7ca3      	ldrb	r3, [r4, #18]
90011758:	2b00      	cmp	r3, #0
9001175a:	d0f4      	beq.n	90011746 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
9001175c:	ee38 7a68 	vsub.f32	s14, s16, s17
90011760:	eddf 6a12 	vldr	s13, [pc, #72]	@ 900117ac <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90011764:	eef4 8ac8 	vcmpe.f32	s17, s16
90011768:	eec6 7a87 	vdiv.f32	s15, s13, s14
9001176c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011770:	edc4 7a08 	vstr	s15, [r4, #32]
90011774:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011778:	ee17 3a90 	vmov	r3, s15
9001177c:	eefd 7ae8 	vcvt.s32.f32	s15, s17
90011780:	b21a      	sxth	r2, r3
90011782:	ee17 3a90 	vmov	r3, s15
90011786:	bf48      	it	mi
90011788:	8122      	strhmi	r2, [r4, #8]
9001178a:	b21b      	sxth	r3, r3
9001178c:	bf56      	itet	pl
9001178e:	80e2      	strhpl	r2, [r4, #6]
90011790:	80e3      	strhmi	r3, [r4, #6]
90011792:	8123      	strhpl	r3, [r4, #8]
90011794:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90011798:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
9001179c:	1a9b      	subs	r3, r3, r2
9001179e:	ee07 3a90 	vmov	s15, r3
900117a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900117a6:	edc4 7a07 	vstr	s15, [r4, #28]
900117aa:	e7cc      	b.n	90011746 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
900117ac:	447ffffe 	.word	0x447ffffe
900117b0:	44800000 	.word	0x44800000

900117b4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
900117b4:	b510      	push	{r4, lr}
900117b6:	ed2d 8b02 	vpush	{d8}
900117ba:	eef0 8a62 	vmov.f32	s17, s5
900117be:	2100      	movs	r1, #0
900117c0:	4604      	mov	r4, r0
900117c2:	eeb0 8a42 	vmov.f32	s16, s4
900117c6:	f014 fd11 	bl	900261ec <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
900117ca:	eef0 7a68 	vmov.f32	s15, s17
900117ce:	6823      	ldr	r3, [r4, #0]
900117d0:	4620      	mov	r0, r4
900117d2:	689b      	ldr	r3, [r3, #8]
900117d4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900117d8:	ee17 2a90 	vmov	r2, s15
900117dc:	eef0 7a48 	vmov.f32	s15, s16
900117e0:	ecbd 8b02 	vpop	{d8}
900117e4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900117e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900117ec:	ee17 1a90 	vmov	r1, s15
900117f0:	4718      	bx	r3

900117f2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
900117f2:	b510      	push	{r4, lr}
900117f4:	ed2d 8b02 	vpush	{d8}
900117f8:	eef0 8a63 	vmov.f32	s17, s7
900117fc:	2100      	movs	r1, #0
900117fe:	4604      	mov	r4, r0
90011800:	eeb0 8a43 	vmov.f32	s16, s6
90011804:	f014 fdb4 	bl	90026370 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90011808:	eef0 7a68 	vmov.f32	s15, s17
9001180c:	6823      	ldr	r3, [r4, #0]
9001180e:	4620      	mov	r0, r4
90011810:	689b      	ldr	r3, [r3, #8]
90011812:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011816:	ee17 2a90 	vmov	r2, s15
9001181a:	eef0 7a48 	vmov.f32	s15, s16
9001181e:	ecbd 8b02 	vpop	{d8}
90011822:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011826:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001182a:	ee17 1a90 	vmov	r1, s15
9001182e:	4718      	bx	r3

90011830 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90011830:	b513      	push	{r0, r1, r4, lr}
90011832:	4604      	mov	r4, r0
90011834:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011836:	f005 f9ee 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001183a:	eef0 7a60 	vmov.f32	s15, s1
9001183e:	4620      	mov	r0, r4
90011840:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011844:	ee17 2a90 	vmov	r2, s15
90011848:	eef0 7a40 	vmov.f32	s15, s0
9001184c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011850:	ee17 1a90 	vmov	r1, s15
90011854:	b002      	add	sp, #8
90011856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001185a:	f014 bc21 	b.w	900260a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
9001185e:	b513      	push	{r0, r1, r4, lr}
90011860:	4604      	mov	r4, r0
90011862:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011864:	f005 f9d7 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011868:	eef0 7a60 	vmov.f32	s15, s1
9001186c:	4620      	mov	r0, r4
9001186e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011872:	ee17 2a90 	vmov	r2, s15
90011876:	eef0 7a40 	vmov.f32	s15, s0
9001187a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001187e:	ee17 1a90 	vmov	r1, s15
90011882:	b002      	add	sp, #8
90011884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011888:	f014 bc57 	b.w	9002613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

9001188c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
9001188c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001188e:	2400      	movs	r4, #0
90011890:	9f07      	ldr	r7, [sp, #28]
90011892:	f04f 0e01 	mov.w	lr, #1
90011896:	4626      	mov	r6, r4
90011898:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
9001189c:	4463      	add	r3, ip
9001189e:	4563      	cmp	r3, ip
900118a0:	d02d      	beq.n	900118fe <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
900118a2:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
900118a6:	2d06      	cmp	r5, #6
900118a8:	d8f9      	bhi.n	9001189e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900118aa:	fa0e f505 	lsl.w	r5, lr, r5
900118ae:	f015 0f66 	tst.w	r5, #102	@ 0x66
900118b2:	d10d      	bne.n	900118d0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
900118b4:	f015 0f10 	tst.w	r5, #16
900118b8:	d117      	bne.n	900118ea <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
900118ba:	072d      	lsls	r5, r5, #28
900118bc:	d5ef      	bpl.n	9001189e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900118be:	3801      	subs	r0, #1
900118c0:	b91e      	cbnz	r6, 900118ca <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
900118c2:	eb07 0580 	add.w	r5, r7, r0, lsl #2
900118c6:	682d      	ldr	r5, [r5, #0]
900118c8:	600d      	str	r5, [r1, #0]
900118ca:	b96c      	cbnz	r4, 900118e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
900118cc:	2601      	movs	r6, #1
900118ce:	e7e6      	b.n	9001189e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900118d0:	b926      	cbnz	r6, 900118dc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
900118d2:	eb07 0380 	add.w	r3, r7, r0, lsl #2
900118d6:	f853 3c08 	ldr.w	r3, [r3, #-8]
900118da:	600b      	str	r3, [r1, #0]
900118dc:	b924      	cbnz	r4, 900118e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
900118de:	eb07 0080 	add.w	r0, r7, r0, lsl #2
900118e2:	f850 3c04 	ldr.w	r3, [r0, #-4]
900118e6:	6013      	str	r3, [r2, #0]
900118e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900118ea:	3801      	subs	r0, #1
900118ec:	b91c      	cbnz	r4, 900118f6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
900118ee:	eb07 0480 	add.w	r4, r7, r0, lsl #2
900118f2:	6824      	ldr	r4, [r4, #0]
900118f4:	6014      	str	r4, [r2, #0]
900118f6:	2e00      	cmp	r6, #0
900118f8:	d1f6      	bne.n	900118e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
900118fa:	2401      	movs	r4, #1
900118fc:	e7cf      	b.n	9001189e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
900118fe:	b90e      	cbnz	r6, 90011904 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90011900:	2300      	movs	r3, #0
90011902:	600b      	str	r3, [r1, #0]
90011904:	2c00      	cmp	r4, #0
90011906:	d1ef      	bne.n	900118e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011908:	2300      	movs	r3, #0
9001190a:	e7ec      	b.n	900118e6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

9001190c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
9001190c:	b538      	push	{r3, r4, r5, lr}
9001190e:	ed2d 8b0a 	vpush	{d8-d12}
90011912:	eef0 ba40 	vmov.f32	s23, s0
90011916:	4604      	mov	r4, r0
90011918:	eeb0 ca60 	vmov.f32	s24, s1
9001191c:	460d      	mov	r5, r1
9001191e:	eef0 aa41 	vmov.f32	s21, s2
90011922:	eeb0 ba61 	vmov.f32	s22, s3
90011926:	eeb0 9a42 	vmov.f32	s18, s4
9001192a:	eef0 9a62 	vmov.f32	s19, s5
9001192e:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90011932:	ee7b 8a29 	vadd.f32	s17, s22, s19
90011936:	ee3a 8a89 	vadd.f32	s16, s21, s18
9001193a:	ee68 8a8a 	vmul.f32	s17, s17, s20
9001193e:	ee28 8a0a 	vmul.f32	s16, s16, s20
90011942:	ee3c 0a68 	vsub.f32	s0, s24, s17
90011946:	ee7b 7ac8 	vsub.f32	s15, s23, s16
9001194a:	ee20 0a00 	vmul.f32	s0, s0, s0
9001194e:	eea7 0aa7 	vfma.f32	s0, s15, s15
90011952:	f014 ff03 	bl	9002675c <sqrtf>
90011956:	eeb5 0a40 	vcmp.f32	s0, #0.0
9001195a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001195e:	d12e      	bne.n	900119be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90011960:	ee79 7a6a 	vsub.f32	s15, s18, s21
90011964:	ee39 7acb 	vsub.f32	s14, s19, s22
90011968:	eeb0 8a6a 	vmov.f32	s16, s21
9001196c:	eef0 8a4b 	vmov.f32	s17, s22
90011970:	eea7 8a8a 	vfma.f32	s16, s15, s20
90011974:	eee7 8a0a 	vfma.f32	s17, s14, s20
90011978:	eea7 8a0a 	vfma.f32	s16, s14, s20
9001197c:	eee7 8aca 	vfms.f32	s17, s15, s20
90011980:	2d02      	cmp	r5, #2
90011982:	dc2f      	bgt.n	900119e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90011984:	3501      	adds	r5, #1
90011986:	eef0 1a4b 	vmov.f32	s3, s22
9001198a:	eeb0 1a6a 	vmov.f32	s2, s21
9001198e:	4620      	mov	r0, r4
90011990:	4629      	mov	r1, r5
90011992:	eef0 2a68 	vmov.f32	s5, s17
90011996:	eeb0 2a48 	vmov.f32	s4, s16
9001199a:	eef0 0a4c 	vmov.f32	s1, s24
9001199e:	eeb0 0a6b 	vmov.f32	s0, s23
900119a2:	f7ff ffb3 	bl	9001190c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900119a6:	eef0 0a68 	vmov.f32	s1, s17
900119aa:	eeb0 0a48 	vmov.f32	s0, s16
900119ae:	4620      	mov	r0, r4
900119b0:	f7ff ff55 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900119b4:	eeb0 ba68 	vmov.f32	s22, s17
900119b8:	eef0 aa48 	vmov.f32	s21, s16
900119bc:	e7b9      	b.n	90011932 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
900119be:	ee38 8a6b 	vsub.f32	s16, s16, s23
900119c2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
900119c6:	ee78 8acc 	vsub.f32	s17, s17, s24
900119ca:	ee28 7a27 	vmul.f32	s14, s16, s15
900119ce:	ee68 7aa7 	vmul.f32	s15, s17, s15
900119d2:	ee87 8a00 	vdiv.f32	s16, s14, s0
900119d6:	eec7 8a80 	vdiv.f32	s17, s15, s0
900119da:	ee3b 8a88 	vadd.f32	s16, s23, s16
900119de:	ee7c 8a28 	vadd.f32	s17, s24, s17
900119e2:	e7cd      	b.n	90011980 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
900119e4:	eef0 0a68 	vmov.f32	s1, s17
900119e8:	4620      	mov	r0, r4
900119ea:	eeb0 0a48 	vmov.f32	s0, s16
900119ee:	f7ff ff36 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900119f2:	ecbd 8b0a 	vpop	{d8-d12}
900119f6:	bd38      	pop	{r3, r4, r5, pc}

900119f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
900119f8:	b510      	push	{r4, lr}
900119fa:	ed2d 8b0a 	vpush	{d8-d12}
900119fe:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90011a02:	4604      	mov	r4, r0
90011a04:	eeb0 ca40 	vmov.f32	s24, s0
90011a08:	2b02      	cmp	r3, #2
90011a0a:	eeb0 9a60 	vmov.f32	s18, s1
90011a0e:	eef0 9a41 	vmov.f32	s19, s2
90011a12:	eef0 8a61 	vmov.f32	s17, s3
90011a16:	eeb0 ba42 	vmov.f32	s22, s4
90011a1a:	eef0 ba62 	vmov.f32	s23, s5
90011a1e:	eeb0 aa43 	vmov.f32	s20, s6
90011a22:	eef0 aa63 	vmov.f32	s21, s7
90011a26:	eeb0 8a44 	vmov.f32	s16, s8
90011a2a:	eef0 ca64 	vmov.f32	s25, s9
90011a2e:	d12c      	bne.n	90011a8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90011a30:	eef0 0a62 	vmov.f32	s1, s5
90011a34:	eeb0 0a42 	vmov.f32	s0, s4
90011a38:	f7ff ff11 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011a3c:	ee79 9acb 	vsub.f32	s19, s19, s22
90011a40:	ee7a caec 	vsub.f32	s25, s21, s25
90011a44:	ee78 8aeb 	vsub.f32	s17, s17, s23
90011a48:	ee3a 8a48 	vsub.f32	s16, s20, s16
90011a4c:	ee69 9aac 	vmul.f32	s19, s19, s25
90011a50:	ee28 8a88 	vmul.f32	s16, s17, s16
90011a54:	eef4 9ac8 	vcmpe.f32	s19, s16
90011a58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a5c:	db0f      	blt.n	90011a7e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
90011a5e:	2101      	movs	r1, #1
90011a60:	eef0 2a6a 	vmov.f32	s5, s21
90011a64:	eeb0 2a4a 	vmov.f32	s4, s20
90011a68:	4620      	mov	r0, r4
90011a6a:	eef0 1a6b 	vmov.f32	s3, s23
90011a6e:	eeb0 1a4b 	vmov.f32	s2, s22
90011a72:	eef0 0a49 	vmov.f32	s1, s18
90011a76:	eeb0 0a4c 	vmov.f32	s0, s24
90011a7a:	f7ff ff47 	bl	9001190c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90011a7e:	eef0 0a6a 	vmov.f32	s1, s21
90011a82:	4620      	mov	r0, r4
90011a84:	eeb0 0a4a 	vmov.f32	s0, s20
90011a88:	e035      	b.n	90011af6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
90011a8a:	2b01      	cmp	r3, #1
90011a8c:	d138      	bne.n	90011b00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011a8e:	ee31 4ae2 	vsub.f32	s8, s3, s5
90011a92:	ee33 6a48 	vsub.f32	s12, s6, s16
90011a96:	ee71 7a42 	vsub.f32	s15, s2, s4
90011a9a:	ee73 6ae4 	vsub.f32	s13, s7, s9
90011a9e:	ee26 7a44 	vnmul.f32	s14, s12, s8
90011aa2:	eea7 7aa6 	vfma.f32	s14, s15, s13
90011aa6:	eeb5 7a40 	vcmp.f32	s14, #0.0
90011aaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011aae:	d027      	beq.n	90011b00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011ab0:	ee28 8a63 	vnmul.f32	s16, s16, s7
90011ab4:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90011ab8:	eea4 8a83 	vfma.f32	s16, s9, s6
90011abc:	eee1 8a22 	vfma.f32	s17, s2, s5
90011ac0:	ee68 7a67 	vnmul.f32	s15, s16, s15
90011ac4:	ee28 8a44 	vnmul.f32	s16, s16, s8
90011ac8:	eee6 7a28 	vfma.f32	s15, s12, s17
90011acc:	eea6 8aa8 	vfma.f32	s16, s13, s17
90011ad0:	ee87 0a87 	vdiv.f32	s0, s15, s14
90011ad4:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90011ad8:	eec8 0a07 	vdiv.f32	s1, s16, s14
90011adc:	ee3c ca40 	vsub.f32	s24, s24, s0
90011ae0:	ee39 9a60 	vsub.f32	s18, s18, s1
90011ae4:	ee29 9a09 	vmul.f32	s18, s18, s18
90011ae8:	eeac 9a0c 	vfma.f32	s18, s24, s24
90011aec:	eef4 7ac9 	vcmpe.f32	s15, s18
90011af0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011af4:	db04      	blt.n	90011b00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011af6:	f7ff feb2 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011afa:	ecbd 8b0a 	vpop	{d8-d12}
90011afe:	bd10      	pop	{r4, pc}
90011b00:	eef0 0a6b 	vmov.f32	s1, s23
90011b04:	4620      	mov	r0, r4
90011b06:	eeb0 0a4b 	vmov.f32	s0, s22
90011b0a:	f7ff fea8 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011b0e:	e7b6      	b.n	90011a7e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90011b10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90011b10:	b510      	push	{r4, lr}
90011b12:	ed2d 8b0c 	vpush	{d8-d13}
90011b16:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90011b1a:	4604      	mov	r4, r0
90011b1c:	eeb0 9a40 	vmov.f32	s18, s0
90011b20:	eef0 9a60 	vmov.f32	s19, s1
90011b24:	eef0 aa41 	vmov.f32	s21, s2
90011b28:	eeb0 ba61 	vmov.f32	s22, s3
90011b2c:	b933      	cbnz	r3, 90011b3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90011b2e:	f7ff fe96 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011b32:	eef0 0a4b 	vmov.f32	s1, s22
90011b36:	eeb0 0a6a 	vmov.f32	s0, s21
90011b3a:	e015      	b.n	90011b68 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90011b3c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90011b40:	2b02      	cmp	r3, #2
90011b42:	ee71 8a40 	vsub.f32	s17, s2, s0
90011b46:	ee31 8ae0 	vsub.f32	s16, s3, s1
90011b4a:	ee68 8aa7 	vmul.f32	s17, s17, s15
90011b4e:	ee28 8a27 	vmul.f32	s16, s16, s15
90011b52:	d10f      	bne.n	90011b74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90011b54:	ee70 0ae8 	vsub.f32	s1, s1, s17
90011b58:	ee30 0a08 	vadd.f32	s0, s0, s16
90011b5c:	f7ff fe7f 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011b60:	ee7b 0a68 	vsub.f32	s1, s22, s17
90011b64:	ee3a 0a88 	vadd.f32	s0, s21, s16
90011b68:	4620      	mov	r0, r4
90011b6a:	f7ff fe78 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011b6e:	ecbd 8b0c 	vpop	{d8-d13}
90011b72:	bd10      	pop	{r4, pc}
90011b74:	f7ff fe73 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011b78:	eef0 0a69 	vmov.f32	s1, s19
90011b7c:	eeb0 0a49 	vmov.f32	s0, s18
90011b80:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90011cb0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
90011b84:	eeb1 aa68 	vneg.f32	s20, s17
90011b88:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90011cb4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
90011b8c:	eee8 0a27 	vfma.f32	s1, s16, s15
90011b90:	4620      	mov	r0, r4
90011b92:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011b96:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90011cb8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
90011b9a:	eddf ca48 	vldr	s25, [pc, #288]	@ 90011cbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
90011b9e:	ed9f da48 	vldr	s26, [pc, #288]	@ 90011cc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90011ba2:	eeea 0a2b 	vfma.f32	s1, s20, s23
90011ba6:	eea8 0a2b 	vfma.f32	s0, s16, s23
90011baa:	f7ff fe58 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011bae:	eef0 0a69 	vmov.f32	s1, s19
90011bb2:	eeb0 0a49 	vmov.f32	s0, s18
90011bb6:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90011cc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
90011bba:	4620      	mov	r0, r4
90011bbc:	eee8 0a27 	vfma.f32	s1, s16, s15
90011bc0:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011bc4:	eeea 0a0c 	vfma.f32	s1, s20, s24
90011bc8:	eea8 0a0c 	vfma.f32	s0, s16, s24
90011bcc:	f7ff fe47 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011bd0:	eef0 0a69 	vmov.f32	s1, s19
90011bd4:	eeb0 0a49 	vmov.f32	s0, s18
90011bd8:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90011cc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90011bdc:	4620      	mov	r0, r4
90011bde:	eee8 0a27 	vfma.f32	s1, s16, s15
90011be2:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011be6:	eeea 0a2c 	vfma.f32	s1, s20, s25
90011bea:	eea8 0a2c 	vfma.f32	s0, s16, s25
90011bee:	f7ff fe36 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011bf2:	eef0 0a69 	vmov.f32	s1, s19
90011bf6:	eeb0 0a49 	vmov.f32	s0, s18
90011bfa:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90011ccc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90011bfe:	4620      	mov	r0, r4
90011c00:	eee8 0a27 	vfma.f32	s1, s16, s15
90011c04:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011c08:	eeea 0a0d 	vfma.f32	s1, s20, s26
90011c0c:	eea8 0a0d 	vfma.f32	s0, s16, s26
90011c10:	f7ff fe25 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c14:	ee79 0a88 	vadd.f32	s1, s19, s16
90011c18:	ee39 0a28 	vadd.f32	s0, s18, s17
90011c1c:	4620      	mov	r0, r4
90011c1e:	ee70 0ae8 	vsub.f32	s1, s1, s17
90011c22:	ee30 0a08 	vadd.f32	s0, s0, s16
90011c26:	f7ff fe1a 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c2a:	eef0 0a69 	vmov.f32	s1, s19
90011c2e:	eeb0 0a49 	vmov.f32	s0, s18
90011c32:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90011cd0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90011c36:	4620      	mov	r0, r4
90011c38:	eee8 0a27 	vfma.f32	s1, s16, s15
90011c3c:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011c40:	eeea 0a0d 	vfma.f32	s1, s20, s26
90011c44:	eea8 0a0d 	vfma.f32	s0, s16, s26
90011c48:	f7ff fe09 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c4c:	eef0 0a69 	vmov.f32	s1, s19
90011c50:	eeb0 0a49 	vmov.f32	s0, s18
90011c54:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90011cd4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90011c58:	4620      	mov	r0, r4
90011c5a:	eee8 0a27 	vfma.f32	s1, s16, s15
90011c5e:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011c62:	eeea 0a2c 	vfma.f32	s1, s20, s25
90011c66:	eea8 0a2c 	vfma.f32	s0, s16, s25
90011c6a:	f7ff fdf8 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c6e:	eef0 0a69 	vmov.f32	s1, s19
90011c72:	eeb0 0a49 	vmov.f32	s0, s18
90011c76:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90011cd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
90011c7a:	4620      	mov	r0, r4
90011c7c:	eee8 0a27 	vfma.f32	s1, s16, s15
90011c80:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011c84:	eeea 0a0c 	vfma.f32	s1, s20, s24
90011c88:	eea8 0a0c 	vfma.f32	s0, s16, s24
90011c8c:	f7ff fde7 	bl	9001185e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011c90:	eef0 0a69 	vmov.f32	s1, s19
90011c94:	eeb0 0a49 	vmov.f32	s0, s18
90011c98:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90011cdc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
90011c9c:	4620      	mov	r0, r4
90011c9e:	eee8 0a27 	vfma.f32	s1, s16, s15
90011ca2:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011ca6:	eeea 0a2b 	vfma.f32	s1, s20, s23
90011caa:	eea8 0a2b 	vfma.f32	s0, s16, s23
90011cae:	e73e      	b.n	90011b2e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90011cb0:	3d23d70a 	.word	0x3d23d70a
90011cb4:	3e8f5c29 	.word	0x3e8f5c29
90011cb8:	3f19999a 	.word	0x3f19999a
90011cbc:	3f4ccccd 	.word	0x3f4ccccd
90011cc0:	3f75c28f 	.word	0x3f75c28f
90011cc4:	3e4ccccd 	.word	0x3e4ccccd
90011cc8:	3ecccccd 	.word	0x3ecccccd
90011ccc:	3f3851ec 	.word	0x3f3851ec
90011cd0:	3fa3d70a 	.word	0x3fa3d70a
90011cd4:	3fcccccd 	.word	0x3fcccccd
90011cd8:	3fe66666 	.word	0x3fe66666
90011cdc:	3ffae148 	.word	0x3ffae148

90011ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90011ce0:	b570      	push	{r4, r5, r6, lr}
90011ce2:	ed2d 8b06 	vpush	{d8-d10}
90011ce6:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90011cea:	eef0 aa40 	vmov.f32	s21, s0
90011cee:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90011cf2:	4604      	mov	r4, r0
90011cf4:	ee30 8ac8 	vsub.f32	s16, s1, s16
90011cf8:	ee30 9a49 	vsub.f32	s18, s0, s18
90011cfc:	eeb0 aa60 	vmov.f32	s20, s1
90011d00:	ee28 0a08 	vmul.f32	s0, s16, s16
90011d04:	eea9 0a09 	vfma.f32	s0, s18, s18
90011d08:	f014 fd28 	bl	9002675c <sqrtf>
90011d0c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90011d10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011d14:	dd36      	ble.n	90011d84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90011d16:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90011d1a:	2600      	movs	r6, #0
90011d1c:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90011d20:	eec0 6a27 	vdiv.f32	s13, s0, s15
90011d24:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90011d28:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90011d2c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90011d30:	eec8 8a26 	vdiv.f32	s17, s16, s13
90011d34:	ee89 8a26 	vdiv.f32	s16, s18, s13
90011d38:	ee70 9a28 	vadd.f32	s19, s0, s17
90011d3c:	ee78 8aaa 	vadd.f32	s17, s17, s21
90011d40:	ee30 9ac8 	vsub.f32	s18, s1, s16
90011d44:	ee3a 8a48 	vsub.f32	s16, s20, s16
90011d48:	b1fd      	cbz	r5, 90011d8a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
90011d4a:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
90011d4e:	eef0 0a49 	vmov.f32	s1, s18
90011d52:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90011d56:	eeb0 0a69 	vmov.f32	s0, s19
90011d5a:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
90011d5e:	4620      	mov	r0, r4
90011d60:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90011d64:	f7ff fd64 	bl	90011830 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90011d68:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
90011d6c:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
90011d70:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
90011d74:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
90011d78:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
90011d7c:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
90011d80:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
90011d84:	ecbd 8b06 	vpop	{d8-d10}
90011d88:	bd70      	pop	{r4, r5, r6, pc}
90011d8a:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
90011d8e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90011d92:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90011d96:	b16b      	cbz	r3, 90011db4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
90011d98:	eef0 1a49 	vmov.f32	s3, s18
90011d9c:	4620      	mov	r0, r4
90011d9e:	eeb0 1a69 	vmov.f32	s2, s19
90011da2:	eef0 0a62 	vmov.f32	s1, s5
90011da6:	eeb0 0a42 	vmov.f32	s0, s4
90011daa:	f7ff feb1 	bl	90011b10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011dae:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90011db2:	e7db      	b.n	90011d6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90011db4:	eef0 4a48 	vmov.f32	s9, s16
90011db8:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90011dbc:	eeb0 4a68 	vmov.f32	s8, s17
90011dc0:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90011dc4:	eef0 3a49 	vmov.f32	s7, s18
90011dc8:	4620      	mov	r0, r4
90011dca:	eeb0 3a69 	vmov.f32	s6, s19
90011dce:	f7ff fe13 	bl	900119f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90011dd2:	e7cb      	b.n	90011d6c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90011dd4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90011dd4:	ee07 2a90 	vmov	s15, r2
90011dd8:	ee07 1a10 	vmov	s14, r1
90011ddc:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90011de0:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90011df4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90011de4:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90011de8:	ee60 0aa7 	vmul.f32	s1, s1, s15
90011dec:	ee20 0a27 	vmul.f32	s0, s0, s15
90011df0:	f7ff bf76 	b.w	90011ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90011df4:	3d000000 	.word	0x3d000000

90011df8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90011df8:	b538      	push	{r3, r4, r5, lr}
90011dfa:	ed2d 8b02 	vpush	{d8}
90011dfe:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90011e02:	4604      	mov	r4, r0
90011e04:	b31d      	cbz	r5, 90011e4e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90011e06:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
90011e0a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90011e0e:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90011e12:	ee78 8a67 	vsub.f32	s17, s16, s15
90011e16:	ee38 8a27 	vadd.f32	s16, s16, s15
90011e1a:	eef0 0a68 	vmov.f32	s1, s17
90011e1e:	f7ff fd07 	bl	90011830 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90011e22:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90011e26:	eef0 1a48 	vmov.f32	s3, s16
90011e2a:	4620      	mov	r0, r4
90011e2c:	eeb0 0a41 	vmov.f32	s0, s2
90011e30:	eef0 0a68 	vmov.f32	s1, s17
90011e34:	f7ff fe6c 	bl	90011b10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011e38:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90011e3c:	eef0 1a68 	vmov.f32	s3, s17
90011e40:	4620      	mov	r0, r4
90011e42:	eef0 0a48 	vmov.f32	s1, s16
90011e46:	eeb0 0a41 	vmov.f32	s0, s2
90011e4a:	f7ff fe61 	bl	90011b10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90011e4e:	4628      	mov	r0, r5
90011e50:	ecbd 8b02 	vpop	{d8}
90011e54:	bd38      	pop	{r3, r4, r5, pc}

90011e56 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
90011e56:	b510      	push	{r4, lr}
90011e58:	ed2d 8b02 	vpush	{d8}
90011e5c:	4604      	mov	r4, r0
90011e5e:	eeb0 8a40 	vmov.f32	s16, s0
90011e62:	eef0 8a60 	vmov.f32	s17, s1
90011e66:	f7ff ffc7 	bl	90011df8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90011e6a:	b9d0      	cbnz	r0, 90011ea2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
90011e6c:	4620      	mov	r0, r4
90011e6e:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
90011e72:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
90011e76:	eef0 0a68 	vmov.f32	s1, s17
90011e7a:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
90011e7e:	eeb0 0a48 	vmov.f32	s0, s16
90011e82:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
90011e86:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90011e8a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90011e8e:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90011e92:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90011e96:	f7ff fdaf 	bl	900119f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90011e9a:	2001      	movs	r0, #1
90011e9c:	ecbd 8b02 	vpop	{d8}
90011ea0:	bd10      	pop	{r4, pc}
90011ea2:	2000      	movs	r0, #0
90011ea4:	e7fa      	b.n	90011e9c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

90011ea6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
90011ea6:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
90011eaa:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
90011eae:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
90011eb2:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
90011eb6:	f7ff be2b 	b.w	90011b10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90011ebc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90011ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011ec0:	b089      	sub	sp, #36	@ 0x24
90011ec2:	461c      	mov	r4, r3
90011ec4:	4682      	mov	sl, r0
90011ec6:	4615      	mov	r5, r2
90011ec8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90011ecc:	f10d 0820 	add.w	r8, sp, #32
90011ed0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90011ed2:	9304      	str	r3, [sp, #16]
90011ed4:	2300      	movs	r3, #0
90011ed6:	9105      	str	r1, [sp, #20]
90011ed8:	9306      	str	r3, [sp, #24]
90011eda:	f848 3d04 	str.w	r3, [r8, #-4]!
90011ede:	9b04      	ldr	r3, [sp, #16]
90011ee0:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90011ee4:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90011ee8:	9b05      	ldr	r3, [sp, #20]
90011eea:	429d      	cmp	r5, r3
90011eec:	d96d      	bls.n	90011fca <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90011eee:	3d01      	subs	r5, #1
90011ef0:	f819 3005 	ldrb.w	r3, [r9, r5]
90011ef4:	2b06      	cmp	r3, #6
90011ef6:	d8f7      	bhi.n	90011ee8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90011ef8:	a201      	add	r2, pc, #4	@ (adr r2, 90011f00 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
90011efa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90011efe:	bf00      	nop
90011f00:	90011f1f 	.word	0x90011f1f
90011f04:	90011ee9 	.word	0x90011ee9
90011f08:	90011f1d 	.word	0x90011f1d
90011f0c:	90011f41 	.word	0x90011f41
90011f10:	90011f41 	.word	0x90011f41
90011f14:	90011f45 	.word	0x90011f45
90011f18:	90011f85 	.word	0x90011f85
90011f1c:	3c02      	subs	r4, #2
90011f1e:	4650      	mov	r0, sl
90011f20:	9400      	str	r4, [sp, #0]
90011f22:	462b      	mov	r3, r5
90011f24:	4642      	mov	r2, r8
90011f26:	a906      	add	r1, sp, #24
90011f28:	e9cd 9701 	strd	r9, r7, [sp, #4]
90011f2c:	f7ff fcae 	bl	9001188c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90011f30:	eddd 0a07 	vldr	s1, [sp, #28]
90011f34:	ed9d 0a06 	vldr	s0, [sp, #24]
90011f38:	4630      	mov	r0, r6
90011f3a:	f7ff fed1 	bl	90011ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90011f3e:	e7d3      	b.n	90011ee8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90011f40:	3c01      	subs	r4, #1
90011f42:	e7ec      	b.n	90011f1e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90011f44:	f1a4 0b04 	sub.w	fp, r4, #4
90011f48:	3c02      	subs	r4, #2
90011f4a:	4650      	mov	r0, sl
90011f4c:	462b      	mov	r3, r5
90011f4e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90011f52:	f8cd b000 	str.w	fp, [sp]
90011f56:	4642      	mov	r2, r8
90011f58:	a906      	add	r1, sp, #24
90011f5a:	e9cd 9701 	strd	r9, r7, [sp, #4]
90011f5e:	f7ff fc95 	bl	9001188c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90011f62:	eddd 2a07 	vldr	s5, [sp, #28]
90011f66:	ed9d 2a06 	vldr	s4, [sp, #24]
90011f6a:	4630      	mov	r0, r6
90011f6c:	ed54 1a01 	vldr	s3, [r4, #-4]
90011f70:	ed14 1a02 	vldr	s2, [r4, #-8]
90011f74:	edd4 0a01 	vldr	s1, [r4, #4]
90011f78:	ed94 0a00 	vldr	s0, [r4]
90011f7c:	f7ff fc1a 	bl	900117b4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90011f80:	465c      	mov	r4, fp
90011f82:	e7b1      	b.n	90011ee8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90011f84:	f1a4 0b06 	sub.w	fp, r4, #6
90011f88:	3c02      	subs	r4, #2
90011f8a:	4650      	mov	r0, sl
90011f8c:	462b      	mov	r3, r5
90011f8e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90011f92:	f8cd b000 	str.w	fp, [sp]
90011f96:	4642      	mov	r2, r8
90011f98:	a906      	add	r1, sp, #24
90011f9a:	e9cd 9701 	strd	r9, r7, [sp, #4]
90011f9e:	f7ff fc75 	bl	9001188c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90011fa2:	eddd 3a07 	vldr	s7, [sp, #28]
90011fa6:	ed9d 3a06 	vldr	s6, [sp, #24]
90011faa:	4630      	mov	r0, r6
90011fac:	ed54 2a03 	vldr	s5, [r4, #-12]
90011fb0:	ed14 2a04 	vldr	s4, [r4, #-16]
90011fb4:	ed54 1a01 	vldr	s3, [r4, #-4]
90011fb8:	ed14 1a02 	vldr	s2, [r4, #-8]
90011fbc:	edd4 0a01 	vldr	s1, [r4, #4]
90011fc0:	ed94 0a00 	vldr	s0, [r4]
90011fc4:	f7ff fc15 	bl	900117f2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90011fc8:	e7da      	b.n	90011f80 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
90011fca:	9b04      	ldr	r3, [sp, #16]
90011fcc:	b113      	cbz	r3, 90011fd4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90011fce:	4630      	mov	r0, r6
90011fd0:	f7ff ff69 	bl	90011ea6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90011fd4:	b009      	add	sp, #36	@ 0x24
90011fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011fda:	bf00      	nop

90011fdc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90011fdc:	eef0 7a60 	vmov.f32	s15, s1
90011fe0:	6803      	ldr	r3, [r0, #0]
90011fe2:	689b      	ldr	r3, [r3, #8]
90011fe4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011fe8:	ee17 2a90 	vmov	r2, s15
90011fec:	eef0 7a40 	vmov.f32	s15, s0
90011ff0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011ff4:	ee17 1a90 	vmov	r1, s15
90011ff8:	4718      	bx	r3
	...

90011ffc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90011ffc:	4b04      	ldr	r3, [pc, #16]	@ (90012010 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90011ffe:	b510      	push	{r4, lr}
90012000:	4604      	mov	r4, r0
90012002:	f840 3b14 	str.w	r3, [r0], #20
90012006:	f000 fe99 	bl	90012d3c <_ZN8touchgfx7OutlineD1Ev>
9001200a:	4620      	mov	r0, r4
9001200c:	bd10      	pop	{r4, pc}
9001200e:	bf00      	nop
90012010:	9002ac30 	.word	0x9002ac30

90012014 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90012014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012018:	ed2d 8b04 	vpush	{d8-d9}
9001201c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90012020:	b0b5      	sub	sp, #212	@ 0xd4
90012022:	4605      	mov	r5, r0
90012024:	468b      	mov	fp, r1
90012026:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001202a:	9206      	str	r2, [sp, #24]
9001202c:	461e      	mov	r6, r3
9001202e:	2400      	movs	r4, #0
90012030:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012034:	f240 814f 	bls.w	900122d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
90012038:	23ff      	movs	r3, #255	@ 0xff
9001203a:	1d02      	adds	r2, r0, #4
9001203c:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 900122dc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90012040:	f04f 0800 	mov.w	r8, #0
90012044:	9300      	str	r3, [sp, #0]
90012046:	af08      	add	r7, sp, #32
90012048:	6981      	ldr	r1, [r0, #24]
9001204a:	a808      	add	r0, sp, #32
9001204c:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
9001204e:	eef0 9a49 	vmov.f32	s19, s18
90012052:	f013 fed9 	bl	90025e08 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90012056:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
9001205a:	4ba1      	ldr	r3, [pc, #644]	@ (900122e0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
9001205c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90012060:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90012064:	2201      	movs	r2, #1
90012066:	9308      	str	r3, [sp, #32]
90012068:	f105 0334 	add.w	r3, r5, #52	@ 0x34
9001206c:	edd5 6a08 	vldr	s13, [r5, #32]
90012070:	eeb0 8a49 	vmov.f32	s16, s18
90012074:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012078:	9325      	str	r3, [sp, #148]	@ 0x94
9001207a:	f04f 0300 	mov.w	r3, #0
9001207e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
90012082:	7f6a      	ldrb	r2, [r5, #29]
90012084:	eef0 8a49 	vmov.f32	s17, s18
90012088:	bf48      	it	mi
9001208a:	eef1 7a67 	vnegmi.f32	s15, s15
9001208e:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
90012092:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
90012096:	46c1      	mov	r9, r8
90012098:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
9001209c:	f04f 0a01 	mov.w	sl, #1
900120a0:	ee67 7a87 	vmul.f32	s15, s15, s14
900120a4:	7fab      	ldrb	r3, [r5, #30]
900120a6:	942a      	str	r4, [sp, #168]	@ 0xa8
900120a8:	435a      	muls	r2, r3
900120aa:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900120ae:	ee26 7aa7 	vmul.f32	s14, s13, s15
900120b2:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900120b6:	1c53      	adds	r3, r2, #1
900120b8:	942b      	str	r4, [sp, #172]	@ 0xac
900120ba:	942c      	str	r4, [sp, #176]	@ 0xb0
900120bc:	ee27 7a26 	vmul.f32	s14, s14, s13
900120c0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900120c4:	942d      	str	r4, [sp, #180]	@ 0xb4
900120c6:	942e      	str	r4, [sp, #184]	@ 0xb8
900120c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900120cc:	ee67 7a27 	vmul.f32	s15, s14, s15
900120d0:	942f      	str	r4, [sp, #188]	@ 0xbc
900120d2:	9430      	str	r4, [sp, #192]	@ 0xc0
900120d4:	9431      	str	r4, [sp, #196]	@ 0xc4
900120d6:	9432      	str	r4, [sp, #200]	@ 0xc8
900120d8:	9433      	str	r4, [sp, #204]	@ 0xcc
900120da:	4644      	mov	r4, r8
900120dc:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
900120e0:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
900120e4:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
900120e8:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
900120ec:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
900120f0:	9b06      	ldr	r3, [sp, #24]
900120f2:	454b      	cmp	r3, r9
900120f4:	f000 80cc 	beq.w	90012290 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
900120f8:	f109 0301 	add.w	r3, r9, #1
900120fc:	9305      	str	r3, [sp, #20]
900120fe:	f81b 3009 	ldrb.w	r3, [fp, r9]
90012102:	2b06      	cmp	r3, #6
90012104:	d839      	bhi.n	9001217a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012106:	e8df f003 	tbb	[pc, r3]
9001210a:	3b04      	.short	0x3b04
9001210c:	817c6f60 	.word	0x817c6f60
90012110:	a0          	.byte	0xa0
90012111:	00          	.byte	0x00
90012112:	45c1      	cmp	r9, r8
90012114:	d92b      	bls.n	9001216e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90012116:	eef0 0a49 	vmov.f32	s1, s18
9001211a:	4638      	mov	r0, r7
9001211c:	eeb0 0a69 	vmov.f32	s0, s19
90012120:	f7ff fdde 	bl	90011ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012124:	4638      	mov	r0, r7
90012126:	f7ff fe67 	bl	90011df8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001212a:	4681      	mov	r9, r0
9001212c:	b9f8      	cbnz	r0, 9001216e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001212e:	eef0 0a49 	vmov.f32	s1, s18
90012132:	4638      	mov	r0, r7
90012134:	eeb0 0a69 	vmov.f32	s0, s19
90012138:	f7ff fe8d 	bl	90011e56 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
9001213c:	4628      	mov	r0, r5
9001213e:	4623      	mov	r3, r4
90012140:	9a05      	ldr	r2, [sp, #20]
90012142:	4641      	mov	r1, r8
90012144:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90012148:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
9001214c:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90012150:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90012154:	e9cd 9702 	strd	r9, r7, [sp, #8]
90012158:	e9cd b600 	strd	fp, r6, [sp]
9001215c:	f7ff feae 	bl	90011ebc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012160:	eef0 0a49 	vmov.f32	s1, s18
90012164:	eeb0 0a69 	vmov.f32	s0, s19
90012168:	4638      	mov	r0, r7
9001216a:	f7ff fe74 	bl	90011e56 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
9001216e:	eeb0 8a49 	vmov.f32	s16, s18
90012172:	f8dd 8014 	ldr.w	r8, [sp, #20]
90012176:	eef0 8a69 	vmov.f32	s17, s19
9001217a:	f8dd 9014 	ldr.w	r9, [sp, #20]
9001217e:	e7b7      	b.n	900120f0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
90012180:	45c1      	cmp	r9, r8
90012182:	d90d      	bls.n	900121a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
90012184:	4638      	mov	r0, r7
90012186:	f7ff fe37 	bl	90011df8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001218a:	b948      	cbnz	r0, 900121a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
9001218c:	4623      	mov	r3, r4
9001218e:	464a      	mov	r2, r9
90012190:	4641      	mov	r1, r8
90012192:	4628      	mov	r0, r5
90012194:	e9cd a702 	strd	sl, r7, [sp, #8]
90012198:	e9cd b600 	strd	fp, r6, [sp]
9001219c:	f7ff fe8e 	bl	90011ebc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900121a0:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900121a4:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900121a8:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900121ac:	3402      	adds	r4, #2
900121ae:	edd3 8a00 	vldr	s17, [r3]
900121b2:	46c8      	mov	r8, r9
900121b4:	ed93 8a01 	vldr	s16, [r3, #4]
900121b8:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
900121bc:	eef0 9a68 	vmov.f32	s19, s17
900121c0:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
900121c4:	eeb0 9a48 	vmov.f32	s18, s16
900121c8:	e7d7      	b.n	9001217a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900121ca:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900121ce:	4638      	mov	r0, r7
900121d0:	3402      	adds	r4, #2
900121d2:	edd3 8a00 	vldr	s17, [r3]
900121d6:	ed93 8a01 	vldr	s16, [r3, #4]
900121da:	eeb0 0a68 	vmov.f32	s0, s17
900121de:	eef0 0a48 	vmov.f32	s1, s16
900121e2:	f7ff fd7d 	bl	90011ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900121e6:	e7c8      	b.n	9001217a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900121e8:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900121ec:	edd3 8a00 	vldr	s17, [r3]
900121f0:	eef0 0a48 	vmov.f32	s1, s16
900121f4:	4638      	mov	r0, r7
900121f6:	eeb0 0a68 	vmov.f32	s0, s17
900121fa:	3401      	adds	r4, #1
900121fc:	f7ff fd70 	bl	90011ce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012200:	e7bb      	b.n	9001217a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012202:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012206:	ed93 8a00 	vldr	s16, [r3]
9001220a:	e7f1      	b.n	900121f0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
9001220c:	00a3      	lsls	r3, r4, #2
9001220e:	eef0 0a48 	vmov.f32	s1, s16
90012212:	eeb0 0a68 	vmov.f32	s0, s17
90012216:	4638      	mov	r0, r7
90012218:	f103 0208 	add.w	r2, r3, #8
9001221c:	f103 090c 	add.w	r9, r3, #12
90012220:	4433      	add	r3, r6
90012222:	3404      	adds	r4, #4
90012224:	4432      	add	r2, r6
90012226:	44b1      	add	r9, r6
90012228:	edd3 1a01 	vldr	s3, [r3, #4]
9001222c:	ed92 2a00 	vldr	s4, [r2]
90012230:	edd9 2a00 	vldr	s5, [r9]
90012234:	ed93 1a00 	vldr	s2, [r3]
90012238:	9207      	str	r2, [sp, #28]
9001223a:	f7ff fabb 	bl	900117b4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
9001223e:	9a07      	ldr	r2, [sp, #28]
90012240:	ed99 8a00 	vldr	s16, [r9]
90012244:	edd2 8a00 	vldr	s17, [r2]
90012248:	e797      	b.n	9001217a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001224a:	00a3      	lsls	r3, r4, #2
9001224c:	eef0 0a48 	vmov.f32	s1, s16
90012250:	eeb0 0a68 	vmov.f32	s0, s17
90012254:	4638      	mov	r0, r7
90012256:	f103 0210 	add.w	r2, r3, #16
9001225a:	f103 0914 	add.w	r9, r3, #20
9001225e:	4433      	add	r3, r6
90012260:	3406      	adds	r4, #6
90012262:	4432      	add	r2, r6
90012264:	44b1      	add	r9, r6
90012266:	edd3 2a03 	vldr	s5, [r3, #12]
9001226a:	ed92 3a00 	vldr	s6, [r2]
9001226e:	edd9 3a00 	vldr	s7, [r9]
90012272:	ed93 2a02 	vldr	s4, [r3, #8]
90012276:	edd3 1a01 	vldr	s3, [r3, #4]
9001227a:	ed93 1a00 	vldr	s2, [r3]
9001227e:	9207      	str	r2, [sp, #28]
90012280:	f7ff fab7 	bl	900117f2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90012284:	9a07      	ldr	r2, [sp, #28]
90012286:	ed99 8a00 	vldr	s16, [r9]
9001228a:	edd2 8a00 	vldr	s17, [r2]
9001228e:	e774      	b.n	9001217a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012290:	9b06      	ldr	r3, [sp, #24]
90012292:	af08      	add	r7, sp, #32
90012294:	4543      	cmp	r3, r8
90012296:	d90f      	bls.n	900122b8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90012298:	4638      	mov	r0, r7
9001229a:	f7ff fdad 	bl	90011df8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001229e:	b958      	cbnz	r0, 900122b8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900122a0:	2301      	movs	r3, #1
900122a2:	9703      	str	r7, [sp, #12]
900122a4:	f8cd b000 	str.w	fp, [sp]
900122a8:	4641      	mov	r1, r8
900122aa:	9a06      	ldr	r2, [sp, #24]
900122ac:	4628      	mov	r0, r5
900122ae:	e9cd 6301 	strd	r6, r3, [sp, #4]
900122b2:	4623      	mov	r3, r4
900122b4:	f7ff fe02 	bl	90011ebc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900122b8:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
900122bc:	4638      	mov	r0, r7
900122be:	f013 fe37 	bl	90025f30 <_ZN8touchgfx6Canvas6renderEh>
900122c2:	4604      	mov	r4, r0
900122c4:	4638      	mov	r0, r7
900122c6:	f7ff fe99 	bl	90011ffc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900122ca:	4620      	mov	r0, r4
900122cc:	b035      	add	sp, #212	@ 0xd4
900122ce:	ecbd 8b04 	vpop	{d8-d9}
900122d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900122d6:	2401      	movs	r4, #1
900122d8:	e7f7      	b.n	900122ca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
900122da:	bf00      	nop
900122dc:	00000000 	.word	0x00000000
900122e0:	9002a57c 	.word	0x9002a57c

900122e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
900122e4:	b510      	push	{r4, lr}
900122e6:	4604      	mov	r4, r0
900122e8:	f7ff fe88 	bl	90011ffc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900122ec:	21b0      	movs	r1, #176	@ 0xb0
900122ee:	4620      	mov	r0, r4
900122f0:	f014 fa0a 	bl	90026708 <_ZdlPvj>
900122f4:	4620      	mov	r0, r4
900122f6:	bd10      	pop	{r4, pc}

900122f8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
900122f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900122fc:	4698      	mov	r8, r3
900122fe:	23ff      	movs	r3, #255	@ 0xff
90012300:	4607      	mov	r7, r0
90012302:	4689      	mov	r9, r1
90012304:	4692      	mov	sl, r2
90012306:	1d02      	adds	r2, r0, #4
90012308:	f107 0534 	add.w	r5, r7, #52	@ 0x34
9001230c:	2400      	movs	r4, #0
9001230e:	44ca      	add	sl, r9
90012310:	ed2d 8b06 	vpush	{d8-d10}
90012314:	b0aa      	sub	sp, #168	@ 0xa8
90012316:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 9001251c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001231a:	9300      	str	r3, [sp, #0]
9001231c:	eef0 8a48 	vmov.f32	s17, s16
90012320:	6981      	ldr	r1, [r0, #24]
90012322:	a80d      	add	r0, sp, #52	@ 0x34
90012324:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90012326:	f013 fd6f 	bl	90025e08 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001232a:	7f3b      	ldrb	r3, [r7, #28]
9001232c:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 9001251c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012330:	4628      	mov	r0, r5
90012332:	1e5a      	subs	r2, r3, #1
90012334:	eeb0 0a60 	vmov.f32	s0, s1
90012338:	4253      	negs	r3, r2
9001233a:	4153      	adcs	r3, r2
9001233c:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90012340:	f004 fc69 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012344:	eeb0 9a40 	vmov.f32	s18, s0
90012348:	eef0 9a60 	vmov.f32	s19, s1
9001234c:	45ca      	cmp	sl, r9
9001234e:	f000 80cd 	beq.w	900124ec <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90012352:	f819 3b01 	ldrb.w	r3, [r9], #1
90012356:	2b06      	cmp	r3, #6
90012358:	d8f8      	bhi.n	9001234c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001235a:	e8df f003 	tbb	[pc, r3]
9001235e:	0804      	.short	0x0804
90012360:	58533f2a 	.word	0x58533f2a
90012364:	8a          	.byte	0x8a
90012365:	00          	.byte	0x00
90012366:	a80d      	add	r0, sp, #52	@ 0x34
90012368:	f013 fdc0 	bl	90025eec <_ZN8touchgfx6Canvas5closeEv>
9001236c:	e7ee      	b.n	9001234c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001236e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012372:	4628      	mov	r0, r5
90012374:	ed93 8a01 	vldr	s16, [r3, #4]
90012378:	edd3 8a00 	vldr	s17, [r3]
9001237c:	eef0 0a48 	vmov.f32	s1, s16
90012380:	eeb0 0a68 	vmov.f32	s0, s17
90012384:	f004 fc47 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012388:	a80d      	add	r0, sp, #52	@ 0x34
9001238a:	eef0 7a60 	vmov.f32	s15, s1
9001238e:	eeb0 9a40 	vmov.f32	s18, s0
90012392:	eef0 9a60 	vmov.f32	s19, s1
90012396:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001239a:	ee17 2a90 	vmov	r2, s15
9001239e:	eef0 7a40 	vmov.f32	s15, s0
900123a2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900123a6:	ee17 1a90 	vmov	r1, s15
900123aa:	f013 fe79 	bl	900260a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900123ae:	3402      	adds	r4, #2
900123b0:	e7cc      	b.n	9001234c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900123b2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900123b6:	4628      	mov	r0, r5
900123b8:	edd3 8a00 	vldr	s17, [r3]
900123bc:	ed93 8a01 	vldr	s16, [r3, #4]
900123c0:	eeb0 0a68 	vmov.f32	s0, s17
900123c4:	eef0 0a48 	vmov.f32	s1, s16
900123c8:	f004 fc25 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900123cc:	a80d      	add	r0, sp, #52	@ 0x34
900123ce:	eeb0 9a40 	vmov.f32	s18, s0
900123d2:	eef0 9a60 	vmov.f32	s19, s1
900123d6:	f7ff fe01 	bl	90011fdc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900123da:	e7e8      	b.n	900123ae <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
900123dc:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900123e0:	edd3 8a00 	vldr	s17, [r3]
900123e4:	eef0 0a48 	vmov.f32	s1, s16
900123e8:	4628      	mov	r0, r5
900123ea:	eeb0 0a68 	vmov.f32	s0, s17
900123ee:	3401      	adds	r4, #1
900123f0:	f004 fc11 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900123f4:	a80d      	add	r0, sp, #52	@ 0x34
900123f6:	eef0 9a60 	vmov.f32	s19, s1
900123fa:	eeb0 9a40 	vmov.f32	s18, s0
900123fe:	f7ff fded 	bl	90011fdc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012402:	e7a3      	b.n	9001234c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012404:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012408:	ed93 8a00 	vldr	s16, [r3]
9001240c:	e7ea      	b.n	900123e4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
9001240e:	1ca3      	adds	r3, r4, #2
90012410:	4628      	mov	r0, r5
90012412:	3404      	adds	r4, #4
90012414:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90012418:	ed53 0a01 	vldr	s1, [r3, #-4]
9001241c:	ed13 0a02 	vldr	s0, [r3, #-8]
90012420:	edd3 8a00 	vldr	s17, [r3]
90012424:	ed93 8a01 	vldr	s16, [r3, #4]
90012428:	f004 fbf5 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001242c:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012430:	eeb0 0a68 	vmov.f32	s0, s17
90012434:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90012438:	eef0 0a48 	vmov.f32	s1, s16
9001243c:	4628      	mov	r0, r5
9001243e:	f004 fbea 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012442:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
90012446:	eef0 2a60 	vmov.f32	s5, s1
9001244a:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
9001244e:	eeb0 2a40 	vmov.f32	s4, s0
90012452:	a80d      	add	r0, sp, #52	@ 0x34
90012454:	eeb0 aa40 	vmov.f32	s20, s0
90012458:	eef0 aa60 	vmov.f32	s21, s1
9001245c:	eeb0 0a49 	vmov.f32	s0, s18
90012460:	eef0 0a69 	vmov.f32	s1, s19
90012464:	f7ff f9a6 	bl	900117b4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90012468:	eef0 9a6a 	vmov.f32	s19, s21
9001246c:	eeb0 9a4a 	vmov.f32	s18, s20
90012470:	e76c      	b.n	9001234c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012472:	1d26      	adds	r6, r4, #4
90012474:	4628      	mov	r0, r5
90012476:	3406      	adds	r4, #6
90012478:	eb08 0686 	add.w	r6, r8, r6, lsl #2
9001247c:	ed56 0a03 	vldr	s1, [r6, #-12]
90012480:	ed16 0a04 	vldr	s0, [r6, #-16]
90012484:	edd6 8a00 	vldr	s17, [r6]
90012488:	ed96 8a01 	vldr	s16, [r6, #4]
9001248c:	f004 fbc3 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012490:	ed8d 0a07 	vstr	s0, [sp, #28]
90012494:	4628      	mov	r0, r5
90012496:	ed16 0a02 	vldr	s0, [r6, #-8]
9001249a:	edcd 0a08 	vstr	s1, [sp, #32]
9001249e:	ed56 0a01 	vldr	s1, [r6, #-4]
900124a2:	f004 fbb8 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900124a6:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
900124aa:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
900124ae:	eeb0 0a68 	vmov.f32	s0, s17
900124b2:	eef0 0a48 	vmov.f32	s1, s16
900124b6:	4628      	mov	r0, r5
900124b8:	f004 fbad 	bl	90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900124bc:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
900124c0:	eeb0 3a40 	vmov.f32	s6, s0
900124c4:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
900124c8:	eef0 3a60 	vmov.f32	s7, s1
900124cc:	eddd 1a08 	vldr	s3, [sp, #32]
900124d0:	eeb0 aa40 	vmov.f32	s20, s0
900124d4:	ed9d 1a07 	vldr	s2, [sp, #28]
900124d8:	eef0 aa60 	vmov.f32	s21, s1
900124dc:	a80d      	add	r0, sp, #52	@ 0x34
900124de:	eef0 0a69 	vmov.f32	s1, s19
900124e2:	eeb0 0a49 	vmov.f32	s0, s18
900124e6:	f7ff f984 	bl	900117f2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900124ea:	e7bd      	b.n	90012468 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
900124ec:	7f7b      	ldrb	r3, [r7, #29]
900124ee:	a80d      	add	r0, sp, #52	@ 0x34
900124f0:	7fb9      	ldrb	r1, [r7, #30]
900124f2:	4359      	muls	r1, r3
900124f4:	1c4b      	adds	r3, r1, #1
900124f6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900124fa:	f3c1 2107 	ubfx	r1, r1, #8, #8
900124fe:	f013 fd17 	bl	90025f30 <_ZN8touchgfx6Canvas6renderEh>
90012502:	4b07      	ldr	r3, [pc, #28]	@ (90012520 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90012504:	4604      	mov	r4, r0
90012506:	a812      	add	r0, sp, #72	@ 0x48
90012508:	930d      	str	r3, [sp, #52]	@ 0x34
9001250a:	f000 fc17 	bl	90012d3c <_ZN8touchgfx7OutlineD1Ev>
9001250e:	4620      	mov	r0, r4
90012510:	b02a      	add	sp, #168	@ 0xa8
90012512:	ecbd 8b06 	vpop	{d8-d10}
90012516:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001251a:	bf00      	nop
9001251c:	00000000 	.word	0x00000000
90012520:	9002ac30 	.word	0x9002ac30

90012524 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90012524:	b410      	push	{r4}
90012526:	7f04      	ldrb	r4, [r0, #28]
90012528:	b11c      	cbz	r4, 90012532 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
9001252a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001252e:	f7ff bee3 	b.w	900122f8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90012532:	f85d 4b04 	ldr.w	r4, [sp], #4
90012536:	f7ff bd6d 	b.w	90012014 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

9001253a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
9001253a:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001253e:	4691      	mov	r9, r2
90012540:	4602      	mov	r2, r0
90012542:	4606      	mov	r6, r0
90012544:	4688      	mov	r8, r1
90012546:	f852 0f26 	ldr.w	r0, [r2, #38]!
9001254a:	469a      	mov	sl, r3
9001254c:	ab02      	add	r3, sp, #8
9001254e:	af02      	add	r7, sp, #8
90012550:	6851      	ldr	r1, [r2, #4]
90012552:	c303      	stmia	r3!, {r0, r1}
90012554:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012558:	2b00      	cmp	r3, #0
9001255a:	dd2f      	ble.n	900125bc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
9001255c:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90012560:	2c00      	cmp	r4, #0
90012562:	dd2b      	ble.n	900125bc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90012564:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012568:	441c      	add	r4, r3
9001256a:	b2a4      	uxth	r4, r4
9001256c:	b225      	sxth	r5, r4
9001256e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90012572:	42ab      	cmp	r3, r5
90012574:	da22      	bge.n	900125bc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90012576:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90012578:	464a      	mov	r2, r9
9001257a:	9701      	str	r7, [sp, #4]
9001257c:	4641      	mov	r1, r8
9001257e:	9300      	str	r3, [sp, #0]
90012580:	4630      	mov	r0, r6
90012582:	4653      	mov	r3, sl
90012584:	f7ff ffce 	bl	90012524 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012588:	b940      	cbnz	r0, 9001259c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
9001258a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001258e:	2b01      	cmp	r3, #1
90012590:	d004      	beq.n	9001259c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
90012592:	3301      	adds	r3, #1
90012594:	105b      	asrs	r3, r3, #1
90012596:	f8ad 300e 	strh.w	r3, [sp, #14]
9001259a:	e7ec      	b.n	90012576 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
9001259c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
900125a0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900125a4:	4413      	add	r3, r2
900125a6:	b29b      	uxth	r3, r3
900125a8:	441a      	add	r2, r3
900125aa:	f8ad 300a 	strh.w	r3, [sp, #10]
900125ae:	b212      	sxth	r2, r2
900125b0:	4295      	cmp	r5, r2
900125b2:	dadc      	bge.n	9001256e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
900125b4:	1ae3      	subs	r3, r4, r3
900125b6:	f8ad 300e 	strh.w	r3, [sp, #14]
900125ba:	e7d8      	b.n	9001256e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
900125bc:	b004      	add	sp, #16
900125be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

900125c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
900125c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900125c6:	6803      	ldr	r3, [r0, #0]
900125c8:	460d      	mov	r5, r1
900125ca:	4604      	mov	r4, r0
900125cc:	4601      	mov	r1, r0
900125ce:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900125d0:	a802      	add	r0, sp, #8
900125d2:	4798      	blx	r3
900125d4:	6828      	ldr	r0, [r5, #0]
900125d6:	6869      	ldr	r1, [r5, #4]
900125d8:	466b      	mov	r3, sp
900125da:	c303      	stmia	r3!, {r0, r1}
900125dc:	4668      	mov	r0, sp
900125de:	4619      	mov	r1, r3
900125e0:	f7fd fc68 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
900125e4:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900125e6:	b188      	cbz	r0, 9001260c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900125e8:	6803      	ldr	r3, [r0, #0]
900125ea:	1d21      	adds	r1, r4, #4
900125ec:	68db      	ldr	r3, [r3, #12]
900125ee:	4798      	blx	r3
900125f0:	b160      	cbz	r0, 9001260c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900125f2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900125f6:	2b00      	cmp	r3, #0
900125f8:	dd08      	ble.n	9001260c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900125fa:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
900125fe:	2d00      	cmp	r5, #0
90012600:	dd04      	ble.n	9001260c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012602:	4a2b      	ldr	r2, [pc, #172]	@ (900126b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90012604:	7812      	ldrb	r2, [r2, #0]
90012606:	b11a      	cbz	r2, 90012610 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90012608:	2a01      	cmp	r2, #1
9001260a:	d029      	beq.n	90012660 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
9001260c:	b004      	add	sp, #16
9001260e:	bd70      	pop	{r4, r5, r6, pc}
90012610:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012614:	441d      	add	r5, r3
90012616:	b2ad      	uxth	r5, r5
90012618:	b22e      	sxth	r6, r5
9001261a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9001261e:	42b3      	cmp	r3, r6
90012620:	daf4      	bge.n	9001260c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012622:	6823      	ldr	r3, [r4, #0]
90012624:	4669      	mov	r1, sp
90012626:	4620      	mov	r0, r4
90012628:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001262a:	4798      	blx	r3
9001262c:	b940      	cbnz	r0, 90012640 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001262e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90012632:	2b01      	cmp	r3, #1
90012634:	d004      	beq.n	90012640 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012636:	3301      	adds	r3, #1
90012638:	105b      	asrs	r3, r3, #1
9001263a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001263e:	e7f0      	b.n	90012622 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90012640:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90012644:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012648:	4413      	add	r3, r2
9001264a:	b29b      	uxth	r3, r3
9001264c:	441a      	add	r2, r3
9001264e:	f8ad 3002 	strh.w	r3, [sp, #2]
90012652:	b212      	sxth	r2, r2
90012654:	4296      	cmp	r6, r2
90012656:	dae0      	bge.n	9001261a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012658:	1aeb      	subs	r3, r5, r3
9001265a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001265e:	e7dc      	b.n	9001261a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012660:	f8bd 5000 	ldrh.w	r5, [sp]
90012664:	441d      	add	r5, r3
90012666:	b2ad      	uxth	r5, r5
90012668:	b22e      	sxth	r6, r5
9001266a:	f9bd 3000 	ldrsh.w	r3, [sp]
9001266e:	42b3      	cmp	r3, r6
90012670:	dacc      	bge.n	9001260c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012672:	6823      	ldr	r3, [r4, #0]
90012674:	4669      	mov	r1, sp
90012676:	4620      	mov	r0, r4
90012678:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
9001267a:	4798      	blx	r3
9001267c:	b940      	cbnz	r0, 90012690 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001267e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012682:	2b01      	cmp	r3, #1
90012684:	d004      	beq.n	90012690 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90012686:	3301      	adds	r3, #1
90012688:	105b      	asrs	r3, r3, #1
9001268a:	f8ad 3004 	strh.w	r3, [sp, #4]
9001268e:	e7f0      	b.n	90012672 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90012690:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90012694:	f8bd 3000 	ldrh.w	r3, [sp]
90012698:	4413      	add	r3, r2
9001269a:	b29b      	uxth	r3, r3
9001269c:	441a      	add	r2, r3
9001269e:	f8ad 3000 	strh.w	r3, [sp]
900126a2:	b212      	sxth	r2, r2
900126a4:	4296      	cmp	r6, r2
900126a6:	dae0      	bge.n	9001266a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900126a8:	1aeb      	subs	r3, r5, r3
900126aa:	f8ad 3004 	strh.w	r3, [sp, #4]
900126ae:	e7dc      	b.n	9001266a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900126b0:	24021c54 	.word	0x24021c54

900126b4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900126b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900126b6:	6803      	ldr	r3, [r0, #0]
900126b8:	4604      	mov	r4, r0
900126ba:	4601      	mov	r1, r0
900126bc:	4668      	mov	r0, sp
900126be:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900126c0:	4798      	blx	r3
900126c2:	2100      	movs	r1, #0
900126c4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900126c8:	4668      	mov	r0, sp
900126ca:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900126ce:	9102      	str	r1, [sp, #8]
900126d0:	a902      	add	r1, sp, #8
900126d2:	f8ad 200c 	strh.w	r2, [sp, #12]
900126d6:	f8ad 300e 	strh.w	r3, [sp, #14]
900126da:	f7fd fbeb 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
900126de:	6823      	ldr	r3, [r4, #0]
900126e0:	4669      	mov	r1, sp
900126e2:	4620      	mov	r0, r4
900126e4:	691b      	ldr	r3, [r3, #16]
900126e6:	4798      	blx	r3
900126e8:	b004      	add	sp, #16
900126ea:	bd10      	pop	{r4, pc}

900126ec <_ZN8touchgfx12CanvasWidgetC1Ev>:
900126ec:	2101      	movs	r1, #1
900126ee:	2200      	movs	r2, #0
900126f0:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900126f4:	490a      	ldr	r1, [pc, #40]	@ (90012720 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
900126f6:	8082      	strh	r2, [r0, #4]
900126f8:	6001      	str	r1, [r0, #0]
900126fa:	21ff      	movs	r1, #255	@ 0xff
900126fc:	80c2      	strh	r2, [r0, #6]
900126fe:	8102      	strh	r2, [r0, #8]
90012700:	8142      	strh	r2, [r0, #10]
90012702:	8182      	strh	r2, [r0, #12]
90012704:	81c2      	strh	r2, [r0, #14]
90012706:	8202      	strh	r2, [r0, #16]
90012708:	8242      	strh	r2, [r0, #18]
9001270a:	61c2      	str	r2, [r0, #28]
9001270c:	8402      	strh	r2, [r0, #32]
9001270e:	8442      	strh	r2, [r0, #34]	@ 0x22
90012710:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90012714:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90012718:	6282      	str	r2, [r0, #40]	@ 0x28
9001271a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001271e:	4770      	bx	lr
90012720:	9002a5dc 	.word	0x9002a5dc

90012724 <_ZNK8touchgfx3Box12getSolidRectEv>:
90012724:	2300      	movs	r3, #0
90012726:	8083      	strh	r3, [r0, #4]
90012728:	80c3      	strh	r3, [r0, #6]
9001272a:	8003      	strh	r3, [r0, #0]
9001272c:	8043      	strh	r3, [r0, #2]
9001272e:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
90012732:	2bff      	cmp	r3, #255	@ 0xff
90012734:	bf01      	itttt	eq
90012736:	890b      	ldrheq	r3, [r1, #8]
90012738:	8083      	strheq	r3, [r0, #4]
9001273a:	894b      	ldrheq	r3, [r1, #10]
9001273c:	80c3      	strheq	r3, [r0, #6]
9001273e:	4770      	bx	lr

90012740 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90012740:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012742:	4604      	mov	r4, r0
90012744:	466b      	mov	r3, sp
90012746:	6808      	ldr	r0, [r1, #0]
90012748:	6849      	ldr	r1, [r1, #4]
9001274a:	c303      	stmia	r3!, {r0, r1}
9001274c:	6823      	ldr	r3, [r4, #0]
9001274e:	4669      	mov	r1, sp
90012750:	4620      	mov	r0, r4
90012752:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012754:	4798      	blx	r3
90012756:	4b08      	ldr	r3, [pc, #32]	@ (90012778 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90012758:	681b      	ldr	r3, [r3, #0]
9001275a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001275e:	b10a      	cbz	r2, 90012764 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90012760:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90012762:	b900      	cbnz	r0, 90012766 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90012764:	6898      	ldr	r0, [r3, #8]
90012766:	6803      	ldr	r3, [r0, #0]
90012768:	4669      	mov	r1, sp
9001276a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9001276c:	6a1d      	ldr	r5, [r3, #32]
9001276e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90012772:	47a8      	blx	r5
90012774:	b003      	add	sp, #12
90012776:	bd30      	pop	{r4, r5, pc}
90012778:	24021c5c 	.word	0x24021c5c

9001277c <_ZN8touchgfx3BoxD1Ev>:
9001277c:	4770      	bx	lr

9001277e <_ZN8touchgfx3BoxD0Ev>:
9001277e:	b510      	push	{r4, lr}
90012780:	4604      	mov	r4, r0
90012782:	212c      	movs	r1, #44	@ 0x2c
90012784:	f013 ffc0 	bl	90026708 <_ZdlPvj>
90012788:	4620      	mov	r0, r4
9001278a:	bd10      	pop	{r4, pc}

9001278c <_ZNK8touchgfx3Box17invalidateContentEv>:
9001278c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90012790:	b12a      	cbz	r2, 9001279e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90012792:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012796:	b112      	cbz	r2, 9001279e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90012798:	6803      	ldr	r3, [r0, #0]
9001279a:	695b      	ldr	r3, [r3, #20]
9001279c:	4718      	bx	r3
9001279e:	4770      	bx	lr

900127a0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900127a0:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
900127a4:	4770      	bx	lr

900127a6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
900127a6:	b570      	push	{r4, r5, r6, lr}
900127a8:	880b      	ldrh	r3, [r1, #0]
900127aa:	4605      	mov	r5, r0
900127ac:	4604      	mov	r4, r0
900127ae:	85c3      	strh	r3, [r0, #46]	@ 0x2e
900127b0:	8813      	ldrh	r3, [r2, #0]
900127b2:	f825 3f30 	strh.w	r3, [r5, #48]!
900127b6:	4628      	mov	r0, r5
900127b8:	f005 fdf0 	bl	9001839c <_ZNK8touchgfx6Bitmap8getWidthEv>
900127bc:	4606      	mov	r6, r0
900127be:	4628      	mov	r0, r5
900127c0:	f005 fe20 	bl	90018404 <_ZNK8touchgfx6Bitmap9getHeightEv>
900127c4:	6823      	ldr	r3, [r4, #0]
900127c6:	4605      	mov	r5, r0
900127c8:	4631      	mov	r1, r6
900127ca:	4620      	mov	r0, r4
900127cc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900127ce:	4798      	blx	r3
900127d0:	6823      	ldr	r3, [r4, #0]
900127d2:	4629      	mov	r1, r5
900127d4:	4620      	mov	r0, r4
900127d6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900127d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900127dc:	4718      	bx	r3

900127de <_ZN8touchgfx14AbstractButton13executeActionEv>:
900127de:	b510      	push	{r4, lr}
900127e0:	4604      	mov	r4, r0
900127e2:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900127e4:	b150      	cbz	r0, 900127fc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900127e6:	6803      	ldr	r3, [r0, #0]
900127e8:	68db      	ldr	r3, [r3, #12]
900127ea:	4798      	blx	r3
900127ec:	b130      	cbz	r0, 900127fc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900127ee:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900127f0:	4621      	mov	r1, r4
900127f2:	6803      	ldr	r3, [r0, #0]
900127f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900127f8:	689b      	ldr	r3, [r3, #8]
900127fa:	4718      	bx	r3
900127fc:	bd10      	pop	{r4, pc}

900127fe <_ZNK8touchgfx6Button12getSolidRectEv>:
900127fe:	b510      	push	{r4, lr}
90012800:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
90012804:	4604      	mov	r4, r0
90012806:	2bff      	cmp	r3, #255	@ 0xff
90012808:	d006      	beq.n	90012818 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
9001280a:	2300      	movs	r3, #0
9001280c:	8003      	strh	r3, [r0, #0]
9001280e:	8043      	strh	r3, [r0, #2]
90012810:	8083      	strh	r3, [r0, #4]
90012812:	80c3      	strh	r3, [r0, #6]
90012814:	4620      	mov	r0, r4
90012816:	bd10      	pop	{r4, pc}
90012818:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
9001281c:	b11b      	cbz	r3, 90012826 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9001281e:	3130      	adds	r1, #48	@ 0x30
90012820:	f005 fe24 	bl	9001846c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012824:	e7f6      	b.n	90012814 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90012826:	312e      	adds	r1, #46	@ 0x2e
90012828:	e7fa      	b.n	90012820 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

9001282c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
9001282c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012830:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90012834:	b08a      	sub	sp, #40	@ 0x28
90012836:	4604      	mov	r4, r0
90012838:	4688      	mov	r8, r1
9001283a:	2b00      	cmp	r3, #0
9001283c:	d066      	beq.n	9001290c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9001283e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
90012840:	a805      	add	r0, sp, #20
90012842:	f8ad 3014 	strh.w	r3, [sp, #20]
90012846:	f005 fda9 	bl	9001839c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001284a:	4607      	mov	r7, r0
9001284c:	a805      	add	r0, sp, #20
9001284e:	f005 fdd9 	bl	90018404 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012852:	f9b8 6000 	ldrsh.w	r6, [r8]
90012856:	f8b8 2004 	ldrh.w	r2, [r8, #4]
9001285a:	2300      	movs	r3, #0
9001285c:	4432      	add	r2, r6
9001285e:	9306      	str	r3, [sp, #24]
90012860:	b292      	uxth	r2, r2
90012862:	fa0f fc82 	sxth.w	ip, r2
90012866:	459c      	cmp	ip, r3
90012868:	dd52      	ble.n	90012910 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001286a:	42b7      	cmp	r7, r6
9001286c:	dd50      	ble.n	90012910 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001286e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90012872:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90012876:	442b      	add	r3, r5
90012878:	b29b      	uxth	r3, r3
9001287a:	b219      	sxth	r1, r3
9001287c:	2900      	cmp	r1, #0
9001287e:	dd47      	ble.n	90012910 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90012880:	42a8      	cmp	r0, r5
90012882:	dd45      	ble.n	90012910 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90012884:	4567      	cmp	r7, ip
90012886:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
9001288a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001288e:	bfb8      	it	lt
90012890:	b2ba      	uxthlt	r2, r7
90012892:	4288      	cmp	r0, r1
90012894:	f8ad 6018 	strh.w	r6, [sp, #24]
90012898:	bfb8      	it	lt
9001289a:	b283      	uxthlt	r3, r0
9001289c:	1b92      	subs	r2, r2, r6
9001289e:	f8ad 501a 	strh.w	r5, [sp, #26]
900128a2:	1b5b      	subs	r3, r3, r5
900128a4:	f8ad 201c 	strh.w	r2, [sp, #28]
900128a8:	f8ad 301e 	strh.w	r3, [sp, #30]
900128ac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900128b0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900128b4:	429a      	cmp	r2, r3
900128b6:	d026      	beq.n	90012906 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900128b8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900128bc:	2b00      	cmp	r3, #0
900128be:	dd22      	ble.n	90012906 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900128c0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900128c4:	2b00      	cmp	r3, #0
900128c6:	dd1e      	ble.n	90012906 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900128c8:	2300      	movs	r3, #0
900128ca:	a908      	add	r1, sp, #32
900128cc:	4620      	mov	r0, r4
900128ce:	e9cd 3308 	strd	r3, r3, [sp, #32]
900128d2:	6823      	ldr	r3, [r4, #0]
900128d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900128d6:	4798      	blx	r3
900128d8:	4b0f      	ldr	r3, [pc, #60]	@ (90012918 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
900128da:	681b      	ldr	r3, [r3, #0]
900128dc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900128e0:	b10a      	cbz	r2, 900128e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
900128e2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900128e4:	b900      	cbnz	r0, 900128e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
900128e6:	6898      	ldr	r0, [r3, #8]
900128e8:	2501      	movs	r5, #1
900128ea:	6801      	ldr	r1, [r0, #0]
900128ec:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
900128f0:	9502      	str	r5, [sp, #8]
900128f2:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
900128f6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
900128fa:	9401      	str	r4, [sp, #4]
900128fc:	ac06      	add	r4, sp, #24
900128fe:	9400      	str	r4, [sp, #0]
90012900:	688c      	ldr	r4, [r1, #8]
90012902:	a905      	add	r1, sp, #20
90012904:	47a0      	blx	r4
90012906:	b00a      	add	sp, #40	@ 0x28
90012908:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001290c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
9001290e:	e797      	b.n	90012840 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90012910:	2300      	movs	r3, #0
90012912:	9307      	str	r3, [sp, #28]
90012914:	e7ca      	b.n	900128ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90012916:	bf00      	nop
90012918:	24021c5c 	.word	0x24021c5c

9001291c <_ZNK8touchgfx6Button17invalidateContentEv>:
9001291c:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
90012920:	b12a      	cbz	r2, 9001292e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90012922:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012926:	b112      	cbz	r2, 9001292e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90012928:	6803      	ldr	r3, [r0, #0]
9001292a:	695b      	ldr	r3, [r3, #20]
9001292c:	4718      	bx	r3
9001292e:	4770      	bx	lr

90012930 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90012930:	4770      	bx	lr

90012932 <_ZN8touchgfx13BoxWithBorderD0Ev>:
90012932:	b510      	push	{r4, lr}
90012934:	4604      	mov	r4, r0
90012936:	2134      	movs	r1, #52	@ 0x34
90012938:	f013 fee6 	bl	90026708 <_ZdlPvj>
9001293c:	4620      	mov	r0, r4
9001293e:	bd10      	pop	{r4, pc}

90012940 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90012940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012944:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
90012946:	4604      	mov	r4, r0
90012948:	460e      	mov	r6, r1
9001294a:	b08e      	sub	sp, #56	@ 0x38
9001294c:	b218      	sxth	r0, r3
9001294e:	8921      	ldrh	r1, [r4, #8]
90012950:	005b      	lsls	r3, r3, #1
90012952:	8962      	ldrh	r2, [r4, #10]
90012954:	f8ad 0000 	strh.w	r0, [sp]
90012958:	b29b      	uxth	r3, r3
9001295a:	f8ad 0002 	strh.w	r0, [sp, #2]
9001295e:	1ac9      	subs	r1, r1, r3
90012960:	1ad3      	subs	r3, r2, r3
90012962:	b209      	sxth	r1, r1
90012964:	b21b      	sxth	r3, r3
90012966:	2900      	cmp	r1, #0
90012968:	f8ad 1004 	strh.w	r1, [sp, #4]
9001296c:	f8ad 3006 	strh.w	r3, [sp, #6]
90012970:	dd5e      	ble.n	90012a30 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90012972:	2b00      	cmp	r3, #0
90012974:	dd5c      	ble.n	90012a30 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90012976:	6830      	ldr	r0, [r6, #0]
90012978:	ab02      	add	r3, sp, #8
9001297a:	6871      	ldr	r1, [r6, #4]
9001297c:	c303      	stmia	r3!, {r0, r1}
9001297e:	4669      	mov	r1, sp
90012980:	a802      	add	r0, sp, #8
90012982:	f7fd fa97 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
90012986:	4620      	mov	r0, r4
90012988:	a902      	add	r1, sp, #8
9001298a:	f7ff fed9 	bl	90012740 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
9001298e:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
90012990:	2800      	cmp	r0, #0
90012992:	d05f      	beq.n	90012a54 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90012994:	8963      	ldrh	r3, [r4, #10]
90012996:	b202      	sxth	r2, r0
90012998:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001299c:	2500      	movs	r5, #0
9001299e:	1a1f      	subs	r7, r3, r0
900129a0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
900129a4:	f8ad 101c 	strh.w	r1, [sp, #28]
900129a8:	b21b      	sxth	r3, r3
900129aa:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
900129ae:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
900129b2:	af04      	add	r7, sp, #16
900129b4:	1a09      	subs	r1, r1, r0
900129b6:	9506      	str	r5, [sp, #24]
900129b8:	f8ad 201e 	strh.w	r2, [sp, #30]
900129bc:	f8ad 5020 	strh.w	r5, [sp, #32]
900129c0:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
900129c4:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
900129c8:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
900129cc:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900129d0:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900129d4:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
900129d8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
900129dc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
900129e0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900129e4:	ab06      	add	r3, sp, #24
900129e6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900129ea:	e893 0003 	ldmia.w	r3, {r0, r1}
900129ee:	e887 0003 	stmia.w	r7, {r0, r1}
900129f2:	4631      	mov	r1, r6
900129f4:	4638      	mov	r0, r7
900129f6:	f7fd fa5d 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
900129fa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900129fe:	2b00      	cmp	r3, #0
90012a00:	dd12      	ble.n	90012a28 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90012a02:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90012a06:	2b00      	cmp	r3, #0
90012a08:	dd0e      	ble.n	90012a28 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90012a0a:	6823      	ldr	r3, [r4, #0]
90012a0c:	4639      	mov	r1, r7
90012a0e:	4620      	mov	r0, r4
90012a10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012a12:	4798      	blx	r3
90012a14:	f7fd fd32 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90012a18:	6803      	ldr	r3, [r0, #0]
90012a1a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90012a1c:	4639      	mov	r1, r7
90012a1e:	f8d3 8020 	ldr.w	r8, [r3, #32]
90012a22:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90012a26:	47c0      	blx	r8
90012a28:	3501      	adds	r5, #1
90012a2a:	2d04      	cmp	r5, #4
90012a2c:	d1da      	bne.n	900129e4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
90012a2e:	e011      	b.n	90012a54 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90012a30:	6830      	ldr	r0, [r6, #0]
90012a32:	ab06      	add	r3, sp, #24
90012a34:	6871      	ldr	r1, [r6, #4]
90012a36:	c303      	stmia	r3!, {r0, r1}
90012a38:	6823      	ldr	r3, [r4, #0]
90012a3a:	a906      	add	r1, sp, #24
90012a3c:	4620      	mov	r0, r4
90012a3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012a40:	4798      	blx	r3
90012a42:	f7fd fd1b 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90012a46:	6803      	ldr	r3, [r0, #0]
90012a48:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90012a4a:	a906      	add	r1, sp, #24
90012a4c:	6a1d      	ldr	r5, [r3, #32]
90012a4e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
90012a52:	47a8      	blx	r5
90012a54:	b00e      	add	sp, #56	@ 0x38
90012a56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012a5a <_ZN8touchgfx5ImageD1Ev>:
90012a5a:	4770      	bx	lr

90012a5c <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90012a5c:	b570      	push	{r4, r5, r6, lr}
90012a5e:	880b      	ldrh	r3, [r1, #0]
90012a60:	460d      	mov	r5, r1
90012a62:	4604      	mov	r4, r0
90012a64:	84c3      	strh	r3, [r0, #38]	@ 0x26
90012a66:	4608      	mov	r0, r1
90012a68:	f005 fc98 	bl	9001839c <_ZNK8touchgfx6Bitmap8getWidthEv>
90012a6c:	4606      	mov	r6, r0
90012a6e:	4628      	mov	r0, r5
90012a70:	f005 fcc8 	bl	90018404 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012a74:	6823      	ldr	r3, [r4, #0]
90012a76:	4605      	mov	r5, r0
90012a78:	4631      	mov	r1, r6
90012a7a:	4620      	mov	r0, r4
90012a7c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012a7e:	4798      	blx	r3
90012a80:	6823      	ldr	r3, [r4, #0]
90012a82:	4629      	mov	r1, r5
90012a84:	4620      	mov	r0, r4
90012a86:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90012a88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012a8c:	4718      	bx	r3

90012a8e <_ZN8touchgfx5ImageD0Ev>:
90012a8e:	b510      	push	{r4, lr}
90012a90:	4604      	mov	r4, r0
90012a92:	212c      	movs	r1, #44	@ 0x2c
90012a94:	f013 fe38 	bl	90026708 <_ZdlPvj>
90012a98:	4620      	mov	r0, r4
90012a9a:	bd10      	pop	{r4, pc}

90012a9c <_ZNK8touchgfx5Image12getSolidRectEv>:
90012a9c:	b510      	push	{r4, lr}
90012a9e:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
90012aa2:	4604      	mov	r4, r0
90012aa4:	2bff      	cmp	r3, #255	@ 0xff
90012aa6:	d006      	beq.n	90012ab6 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90012aa8:	2300      	movs	r3, #0
90012aaa:	8003      	strh	r3, [r0, #0]
90012aac:	8043      	strh	r3, [r0, #2]
90012aae:	8083      	strh	r3, [r0, #4]
90012ab0:	80c3      	strh	r3, [r0, #6]
90012ab2:	4620      	mov	r0, r4
90012ab4:	bd10      	pop	{r4, pc}
90012ab6:	3126      	adds	r1, #38	@ 0x26
90012ab8:	f005 fcd8 	bl	9001846c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012abc:	e7f9      	b.n	90012ab2 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90012abe <_ZNK8touchgfx5Image17invalidateContentEv>:
90012abe:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90012ac2:	b12a      	cbz	r2, 90012ad0 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012ac4:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012ac8:	b112      	cbz	r2, 90012ad0 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012aca:	6803      	ldr	r3, [r0, #0]
90012acc:	695b      	ldr	r3, [r3, #20]
90012ace:	4718      	bx	r3
90012ad0:	4770      	bx	lr
	...

90012ad4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90012ad4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012ad8:	4604      	mov	r4, r0
90012ada:	b088      	sub	sp, #32
90012adc:	2500      	movs	r5, #0
90012ade:	460f      	mov	r7, r1
90012ae0:	f854 3b26 	ldr.w	r3, [r4], #38
90012ae4:	a904      	add	r1, sp, #16
90012ae6:	4606      	mov	r6, r0
90012ae8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012aea:	e9cd 5504 	strd	r5, r5, [sp, #16]
90012aee:	4798      	blx	r3
90012af0:	4620      	mov	r0, r4
90012af2:	f005 fc53 	bl	9001839c <_ZNK8touchgfx6Bitmap8getWidthEv>
90012af6:	4680      	mov	r8, r0
90012af8:	4620      	mov	r0, r4
90012afa:	f005 fc83 	bl	90018404 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012afe:	9506      	str	r5, [sp, #24]
90012b00:	ad06      	add	r5, sp, #24
90012b02:	f8ad 001e 	strh.w	r0, [sp, #30]
90012b06:	4639      	mov	r1, r7
90012b08:	f8ad 801c 	strh.w	r8, [sp, #28]
90012b0c:	4628      	mov	r0, r5
90012b0e:	f7fd f9d1 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
90012b12:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90012b16:	2b00      	cmp	r3, #0
90012b18:	dd19      	ble.n	90012b4e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90012b1a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90012b1e:	2b00      	cmp	r3, #0
90012b20:	dd15      	ble.n	90012b4e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90012b22:	4b0c      	ldr	r3, [pc, #48]	@ (90012b54 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90012b24:	681b      	ldr	r3, [r3, #0]
90012b26:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90012b2a:	b10a      	cbz	r2, 90012b30 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90012b2c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90012b2e:	b900      	cbnz	r0, 90012b32 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90012b30:	6898      	ldr	r0, [r3, #8]
90012b32:	2701      	movs	r7, #1
90012b34:	6801      	ldr	r1, [r0, #0]
90012b36:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90012b3a:	9702      	str	r7, [sp, #8]
90012b3c:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
90012b40:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90012b44:	e9cd 5600 	strd	r5, r6, [sp]
90012b48:	688d      	ldr	r5, [r1, #8]
90012b4a:	4621      	mov	r1, r4
90012b4c:	47a8      	blx	r5
90012b4e:	b008      	add	sp, #32
90012b50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012b54:	24021c5c 	.word	0x24021c5c

90012b58 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90012b58:	4770      	bx	lr

90012b5a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90012b5a:	b510      	push	{r4, lr}
90012b5c:	4604      	mov	r4, r0
90012b5e:	2148      	movs	r1, #72	@ 0x48
90012b60:	f013 fdd2 	bl	90026708 <_ZdlPvj>
90012b64:	4620      	mov	r0, r4
90012b66:	bd10      	pop	{r4, pc}

90012b68 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90012b68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012b6c:	b08d      	sub	sp, #52	@ 0x34
90012b6e:	4604      	mov	r4, r0
90012b70:	460f      	mov	r7, r1
90012b72:	f7ff fe5b 	bl	9001282c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90012b76:	4a55      	ldr	r2, [pc, #340]	@ (90012ccc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90012b78:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90012b7a:	8812      	ldrh	r2, [r2, #0]
90012b7c:	429a      	cmp	r2, r3
90012b7e:	f240 8082 	bls.w	90012c86 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90012b82:	4d53      	ldr	r5, [pc, #332]	@ (90012cd0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90012b84:	682a      	ldr	r2, [r5, #0]
90012b86:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90012b8a:	4b52      	ldr	r3, [pc, #328]	@ (90012cd4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90012b8c:	681b      	ldr	r3, [r3, #0]
90012b8e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90012b92:	2200      	movs	r2, #0
90012b94:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
90012b98:	e9cd 2203 	strd	r2, r2, [sp, #12]
90012b9c:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
90012ba0:	2a03      	cmp	r2, #3
90012ba2:	d811      	bhi.n	90012bc8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90012ba4:	e8df f002 	tbb	[pc, r2]
90012ba8:	89727902 	.word	0x89727902
90012bac:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90012bb0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90012bb4:	1ad2      	subs	r2, r2, r3
90012bb6:	2002      	movs	r0, #2
90012bb8:	f8ad 1010 	strh.w	r1, [sp, #16]
90012bbc:	f8ad 3012 	strh.w	r3, [sp, #18]
90012bc0:	fb92 f2f0 	sdiv	r2, r2, r0
90012bc4:	f8ad 200e 	strh.w	r2, [sp, #14]
90012bc8:	f10d 080c 	add.w	r8, sp, #12
90012bcc:	f10d 0914 	add.w	r9, sp, #20
90012bd0:	e898 0003 	ldmia.w	r8, {r0, r1}
90012bd4:	e889 0003 	stmia.w	r9, {r0, r1}
90012bd8:	4639      	mov	r1, r7
90012bda:	4648      	mov	r0, r9
90012bdc:	f7fd f96a 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
90012be0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90012be4:	2b00      	cmp	r3, #0
90012be6:	dd4e      	ble.n	90012c86 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90012be8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90012bec:	2b00      	cmp	r3, #0
90012bee:	dd4a      	ble.n	90012c86 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90012bf0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90012bf4:	4641      	mov	r1, r8
90012bf6:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90012bfa:	4620      	mov	r0, r4
90012bfc:	1a9b      	subs	r3, r3, r2
90012bfe:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90012c02:	f8ad 3014 	strh.w	r3, [sp, #20]
90012c06:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90012c0a:	1a9b      	subs	r3, r3, r2
90012c0c:	f8ad 3016 	strh.w	r3, [sp, #22]
90012c10:	6823      	ldr	r3, [r4, #0]
90012c12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012c14:	4798      	blx	r3
90012c16:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
90012c1a:	2b00      	cmp	r3, #0
90012c1c:	d053      	beq.n	90012cc6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90012c1e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90012c20:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
90012c22:	682b      	ldr	r3, [r5, #0]
90012c24:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
90012c28:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90012c2c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
90012c30:	785b      	ldrb	r3, [r3, #1]
90012c32:	9209      	str	r2, [sp, #36]	@ 0x24
90012c34:	f3c3 0501 	ubfx	r5, r3, #0, #2
90012c38:	f3c3 0381 	ubfx	r3, r3, #2, #2
90012c3c:	9607      	str	r6, [sp, #28]
90012c3e:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
90012c42:	2300      	movs	r3, #0
90012c44:	f88d 5020 	strb.w	r5, [sp, #32]
90012c48:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
90012c4c:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
90012c50:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
90012c54:	4b20      	ldr	r3, [pc, #128]	@ (90012cd8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
90012c56:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90012c5a:	681b      	ldr	r3, [r3, #0]
90012c5c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90012c60:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90012c64:	b10a      	cbz	r2, 90012c6a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
90012c66:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
90012c68:	b904      	cbnz	r4, 90012c6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90012c6a:	689c      	ldr	r4, [r3, #8]
90012c6c:	4b1b      	ldr	r3, [pc, #108]	@ (90012cdc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90012c6e:	6818      	ldr	r0, [r3, #0]
90012c70:	f7f1 fff6 	bl	90004c60 <_ZNK8touchgfx5Texts7getTextEt>
90012c74:	ab07      	add	r3, sp, #28
90012c76:	9001      	str	r0, [sp, #4]
90012c78:	4620      	mov	r0, r4
90012c7a:	9300      	str	r3, [sp, #0]
90012c7c:	464b      	mov	r3, r9
90012c7e:	e898 0006 	ldmia.w	r8, {r1, r2}
90012c82:	f7f1 ff9d 	bl	90004bc0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90012c86:	b00d      	add	sp, #52	@ 0x34
90012c88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012c8c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90012c90:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90012c94:	1ad2      	subs	r2, r2, r3
90012c96:	3201      	adds	r2, #1
90012c98:	e78d      	b.n	90012bb6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90012c9a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012c9e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90012ca2:	1ad2      	subs	r2, r2, r3
90012ca4:	3201      	adds	r2, #1
90012ca6:	2002      	movs	r0, #2
90012ca8:	f8ad 3010 	strh.w	r3, [sp, #16]
90012cac:	f8ad 1012 	strh.w	r1, [sp, #18]
90012cb0:	fb92 f2f0 	sdiv	r2, r2, r0
90012cb4:	f8ad 200c 	strh.w	r2, [sp, #12]
90012cb8:	e786      	b.n	90012bc8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90012cba:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012cbe:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90012cc2:	1ad2      	subs	r2, r2, r3
90012cc4:	e7ef      	b.n	90012ca6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90012cc6:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
90012cc8:	e7aa      	b.n	90012c20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90012cca:	bf00      	nop
90012ccc:	24021cb8 	.word	0x24021cb8
90012cd0:	24021cb4 	.word	0x24021cb4
90012cd4:	24021cbc 	.word	0x24021cbc
90012cd8:	24021c5c 	.word	0x24021c5c
90012cdc:	24021cc0 	.word	0x24021cc0

90012ce0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90012ce0:	2101      	movs	r1, #1
90012ce2:	2200      	movs	r2, #0
90012ce4:	b510      	push	{r4, lr}
90012ce6:	4c13      	ldr	r4, [pc, #76]	@ (90012d34 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90012ce8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90012cec:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90012cf0:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90012cf4:	6004      	str	r4, [r0, #0]
90012cf6:	4c10      	ldr	r4, [pc, #64]	@ (90012d38 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90012cf8:	8082      	strh	r2, [r0, #4]
90012cfa:	80c2      	strh	r2, [r0, #6]
90012cfc:	8102      	strh	r2, [r0, #8]
90012cfe:	8142      	strh	r2, [r0, #10]
90012d00:	8182      	strh	r2, [r0, #12]
90012d02:	81c2      	strh	r2, [r0, #14]
90012d04:	8202      	strh	r2, [r0, #16]
90012d06:	8242      	strh	r2, [r0, #18]
90012d08:	61c2      	str	r2, [r0, #28]
90012d0a:	8402      	strh	r2, [r0, #32]
90012d0c:	8442      	strh	r2, [r0, #34]	@ 0x22
90012d0e:	6282      	str	r2, [r0, #40]	@ 0x28
90012d10:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90012d14:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90012d16:	8601      	strh	r1, [r0, #48]	@ 0x30
90012d18:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90012d1c:	6344      	str	r4, [r0, #52]	@ 0x34
90012d1e:	8701      	strh	r1, [r0, #56]	@ 0x38
90012d20:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90012d24:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
90012d28:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012d2c:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90012d30:	bd10      	pop	{r4, pc}
90012d32:	bf00      	nop
90012d34:	9002a790 	.word	0x9002a790
90012d38:	900297e8 	.word	0x900297e8

90012d3c <_ZN8touchgfx7OutlineD1Ev>:
90012d3c:	4770      	bx	lr

90012d3e <_ZN8touchgfx7OutlineD0Ev>:
90012d3e:	b510      	push	{r4, lr}
90012d40:	4604      	mov	r4, r0
90012d42:	2130      	movs	r1, #48	@ 0x30
90012d44:	f013 fce0 	bl	90026708 <_ZdlPvj>
90012d48:	4620      	mov	r0, r4
90012d4a:	bd10      	pop	{r4, pc}

90012d4c <_ZN8touchgfx7Outline5resetEv>:
90012d4c:	b510      	push	{r4, lr}
90012d4e:	4604      	mov	r4, r0
90012d50:	f000 fe72 	bl	90013a38 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90012d54:	60e0      	str	r0, [r4, #12]
90012d56:	f000 fe75 	bl	90013a44 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90012d5a:	68e3      	ldr	r3, [r4, #12]
90012d5c:	08c0      	lsrs	r0, r0, #3
90012d5e:	2200      	movs	r2, #0
90012d60:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90012d64:	6123      	str	r3, [r4, #16]
90012d66:	3801      	subs	r0, #1
90012d68:	60a2      	str	r2, [r4, #8]
90012d6a:	6060      	str	r0, [r4, #4]
90012d6c:	8019      	strh	r1, [r3, #0]
90012d6e:	8059      	strh	r1, [r3, #2]
90012d70:	809a      	strh	r2, [r3, #4]
90012d72:	80da      	strh	r2, [r3, #6]
90012d74:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90012d76:	f023 0301 	bic.w	r3, r3, #1
90012d7a:	f043 0302 	orr.w	r3, r3, #2
90012d7e:	6263      	str	r3, [r4, #36]	@ 0x24
90012d80:	bd10      	pop	{r4, pc}
	...

90012d84 <_ZN8touchgfx7OutlineC1Ev>:
90012d84:	4b0a      	ldr	r3, [pc, #40]	@ (90012db0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90012d86:	b510      	push	{r4, lr}
90012d88:	6003      	str	r3, [r0, #0]
90012d8a:	2300      	movs	r3, #0
90012d8c:	4604      	mov	r4, r0
90012d8e:	6243      	str	r3, [r0, #36]	@ 0x24
90012d90:	e9c0 3301 	strd	r3, r3, [r0, #4]
90012d94:	e9c0 3303 	strd	r3, r3, [r0, #12]
90012d98:	e9c0 3305 	strd	r3, r3, [r0, #20]
90012d9c:	e9c0 3307 	strd	r3, r3, [r0, #28]
90012da0:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90012da4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90012da8:	f7ff ffd0 	bl	90012d4c <_ZN8touchgfx7Outline5resetEv>
90012dac:	4620      	mov	r0, r4
90012dae:	bd10      	pop	{r4, pc}
90012db0:	9002a804 	.word	0x9002a804

90012db4 <_ZN8touchgfx7Outline10renderLineEiiii>:
90012db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012db8:	b093      	sub	sp, #76	@ 0x4c
90012dba:	1156      	asrs	r6, r2, #5
90012dbc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90012dbe:	9305      	str	r3, [sp, #20]
90012dc0:	1153      	asrs	r3, r2, #5
90012dc2:	f004 051f 	and.w	r5, r4, #31
90012dc6:	9303      	str	r3, [sp, #12]
90012dc8:	1163      	asrs	r3, r4, #5
90012dca:	9504      	str	r5, [sp, #16]
90012dcc:	1165      	asrs	r5, r4, #5
90012dce:	9306      	str	r3, [sp, #24]
90012dd0:	f002 031f 	and.w	r3, r2, #31
90012dd4:	42ae      	cmp	r6, r5
90012dd6:	f040 80f4 	bne.w	90012fc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90012dda:	9c04      	ldr	r4, [sp, #16]
90012ddc:	9a05      	ldr	r2, [sp, #20]
90012dde:	42a3      	cmp	r3, r4
90012de0:	ea4f 1e62 	mov.w	lr, r2, asr #5
90012de4:	6902      	ldr	r2, [r0, #16]
90012de6:	d125      	bne.n	90012e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90012de8:	f9b2 3000 	ldrsh.w	r3, [r2]
90012dec:	459e      	cmp	lr, r3
90012dee:	d103      	bne.n	90012df8 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90012df0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012df4:	429e      	cmp	r6, r3
90012df6:	d035      	beq.n	90012e64 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012df8:	88d1      	ldrh	r1, [r2, #6]
90012dfa:	8893      	ldrh	r3, [r2, #4]
90012dfc:	430b      	orrs	r3, r1
90012dfe:	d010      	beq.n	90012e22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012e00:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012e04:	2b00      	cmp	r3, #0
90012e06:	db0c      	blt.n	90012e22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012e08:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90012e0a:	428b      	cmp	r3, r1
90012e0c:	da09      	bge.n	90012e22 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012e0e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90012e12:	428b      	cmp	r3, r1
90012e14:	f103 0301 	add.w	r3, r3, #1
90012e18:	bf38      	it	cc
90012e1a:	3208      	addcc	r2, #8
90012e1c:	6083      	str	r3, [r0, #8]
90012e1e:	bf38      	it	cc
90012e20:	6102      	strcc	r2, [r0, #16]
90012e22:	6903      	ldr	r3, [r0, #16]
90012e24:	9a03      	ldr	r2, [sp, #12]
90012e26:	f8a3 e000 	strh.w	lr, [r3]
90012e2a:	805a      	strh	r2, [r3, #2]
90012e2c:	2200      	movs	r2, #0
90012e2e:	809a      	strh	r2, [r3, #4]
90012e30:	80da      	strh	r2, [r3, #6]
90012e32:	e017      	b.n	90012e64 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012e34:	9c05      	ldr	r4, [sp, #20]
90012e36:	114e      	asrs	r6, r1, #5
90012e38:	f001 0c1f 	and.w	ip, r1, #31
90012e3c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90012e40:	f004 041f 	and.w	r4, r4, #31
90012e44:	4576      	cmp	r6, lr
90012e46:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90012e4a:	9402      	str	r4, [sp, #8]
90012e4c:	9c04      	ldr	r4, [sp, #16]
90012e4e:	eba4 0403 	sub.w	r4, r4, r3
90012e52:	d10a      	bne.n	90012e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90012e54:	9b02      	ldr	r3, [sp, #8]
90012e56:	44a0      	add	r8, r4
90012e58:	449c      	add	ip, r3
90012e5a:	f8a2 8004 	strh.w	r8, [r2, #4]
90012e5e:	fb04 a40c 	mla	r4, r4, ip, sl
90012e62:	80d4      	strh	r4, [r2, #6]
90012e64:	b013      	add	sp, #76	@ 0x4c
90012e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012e6a:	9d05      	ldr	r5, [sp, #20]
90012e6c:	1a69      	subs	r1, r5, r1
90012e6e:	bf51      	iteee	pl
90012e70:	f1cc 0520 	rsbpl	r5, ip, #32
90012e74:	fb04 f40c 	mulmi.w	r4, r4, ip
90012e78:	4249      	negmi	r1, r1
90012e7a:	2500      	movmi	r5, #0
90012e7c:	bf5d      	ittte	pl
90012e7e:	436c      	mulpl	r4, r5
90012e80:	2520      	movpl	r5, #32
90012e82:	f04f 0901 	movpl.w	r9, #1
90012e86:	f04f 39ff 	movmi.w	r9, #4294967295
90012e8a:	9501      	str	r5, [sp, #4]
90012e8c:	9f01      	ldr	r7, [sp, #4]
90012e8e:	444e      	add	r6, r9
90012e90:	fb94 f5f1 	sdiv	r5, r4, r1
90012e94:	fb01 4415 	mls	r4, r1, r5, r4
90012e98:	44bc      	add	ip, r7
90012e9a:	2c00      	cmp	r4, #0
90012e9c:	bfbc      	itt	lt
90012e9e:	f105 35ff 	addlt.w	r5, r5, #4294967295
90012ea2:	1864      	addlt	r4, r4, r1
90012ea4:	44a8      	add	r8, r5
90012ea6:	fb05 ac0c 	mla	ip, r5, ip, sl
90012eaa:	f8a2 8004 	strh.w	r8, [r2, #4]
90012eae:	f8a2 c006 	strh.w	ip, [r2, #6]
90012eb2:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012eb6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90012eba:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90012ebe:	ea58 0202 	orrs.w	r2, r8, r2
90012ec2:	d011      	beq.n	90012ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012ec4:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90012ec8:	f1b8 0f00 	cmp.w	r8, #0
90012ecc:	db0c      	blt.n	90012ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012ece:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90012ed0:	4590      	cmp	r8, r2
90012ed2:	da09      	bge.n	90012ee8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012ed4:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90012ed8:	4590      	cmp	r8, r2
90012eda:	bf3c      	itt	cc
90012edc:	f10c 0208 	addcc.w	r2, ip, #8
90012ee0:	6102      	strcc	r2, [r0, #16]
90012ee2:	f108 0201 	add.w	r2, r8, #1
90012ee6:	6082      	str	r2, [r0, #8]
90012ee8:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012eec:	2700      	movs	r7, #0
90012eee:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90012ef2:	45b6      	cmp	lr, r6
90012ef4:	f8ac 6000 	strh.w	r6, [ip]
90012ef8:	442b      	add	r3, r5
90012efa:	f8ac 2002 	strh.w	r2, [ip, #2]
90012efe:	f8ac 7004 	strh.w	r7, [ip, #4]
90012f02:	f8ac 7006 	strh.w	r7, [ip, #6]
90012f06:	d04b      	beq.n	90012fa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90012f08:	9f04      	ldr	r7, [sp, #16]
90012f0a:	1a64      	subs	r4, r4, r1
90012f0c:	f04f 0a00 	mov.w	sl, #0
90012f10:	1aff      	subs	r7, r7, r3
90012f12:	443d      	add	r5, r7
90012f14:	016d      	lsls	r5, r5, #5
90012f16:	fb95 f8f1 	sdiv	r8, r5, r1
90012f1a:	fb01 5518 	mls	r5, r1, r8, r5
90012f1e:	2d00      	cmp	r5, #0
90012f20:	bfbc      	itt	lt
90012f22:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012f26:	186d      	addlt	r5, r5, r1
90012f28:	f108 0701 	add.w	r7, r8, #1
90012f2c:	9703      	str	r7, [sp, #12]
90012f2e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012f32:	1964      	adds	r4, r4, r5
90012f34:	444e      	add	r6, r9
90012f36:	bf54      	ite	pl
90012f38:	9f03      	ldrpl	r7, [sp, #12]
90012f3a:	4647      	movmi	r7, r8
90012f3c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90012f40:	bf58      	it	pl
90012f42:	1a64      	subpl	r4, r4, r1
90012f44:	443b      	add	r3, r7
90012f46:	44bb      	add	fp, r7
90012f48:	f8ac b004 	strh.w	fp, [ip, #4]
90012f4c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012f50:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012f54:	f8ac b006 	strh.w	fp, [ip, #6]
90012f58:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012f5c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012f60:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012f64:	ea5b 0707 	orrs.w	r7, fp, r7
90012f68:	d011      	beq.n	90012f8e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012f6a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90012f6e:	f1bb 0f00 	cmp.w	fp, #0
90012f72:	db0c      	blt.n	90012f8e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012f74:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90012f76:	45bb      	cmp	fp, r7
90012f78:	da09      	bge.n	90012f8e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012f7a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012f7e:	45bb      	cmp	fp, r7
90012f80:	bf3c      	itt	cc
90012f82:	f10c 0708 	addcc.w	r7, ip, #8
90012f86:	6107      	strcc	r7, [r0, #16]
90012f88:	f10b 0701 	add.w	r7, fp, #1
90012f8c:	6087      	str	r7, [r0, #8]
90012f8e:	6907      	ldr	r7, [r0, #16]
90012f90:	45b6      	cmp	lr, r6
90012f92:	803e      	strh	r6, [r7, #0]
90012f94:	807a      	strh	r2, [r7, #2]
90012f96:	f8a7 a004 	strh.w	sl, [r7, #4]
90012f9a:	f8a7 a006 	strh.w	sl, [r7, #6]
90012f9e:	d1c6      	bne.n	90012f2e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90012fa0:	9a04      	ldr	r2, [sp, #16]
90012fa2:	1ad3      	subs	r3, r2, r3
90012fa4:	6902      	ldr	r2, [r0, #16]
90012fa6:	8891      	ldrh	r1, [r2, #4]
90012fa8:	88d6      	ldrh	r6, [r2, #6]
90012faa:	4419      	add	r1, r3
90012fac:	8091      	strh	r1, [r2, #4]
90012fae:	9902      	ldr	r1, [sp, #8]
90012fb0:	f101 0c20 	add.w	ip, r1, #32
90012fb4:	9901      	ldr	r1, [sp, #4]
90012fb6:	ebac 0c01 	sub.w	ip, ip, r1
90012fba:	fb03 630c 	mla	r3, r3, ip, r6
90012fbe:	80d3      	strh	r3, [r2, #6]
90012fc0:	e750      	b.n	90012e64 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012fc2:	9d05      	ldr	r5, [sp, #20]
90012fc4:	1aa2      	subs	r2, r4, r2
90012fc6:	eba5 0501 	sub.w	r5, r5, r1
90012fca:	9202      	str	r2, [sp, #8]
90012fcc:	9508      	str	r5, [sp, #32]
90012fce:	f140 8128 	bpl.w	90013222 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90012fd2:	9a03      	ldr	r2, [sp, #12]
90012fd4:	2a00      	cmp	r2, #0
90012fd6:	f6ff af45 	blt.w	90012e64 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012fda:	9a02      	ldr	r2, [sp, #8]
90012fdc:	f04f 34ff 	mov.w	r4, #4294967295
90012fe0:	4252      	negs	r2, r2
90012fe2:	940b      	str	r4, [sp, #44]	@ 0x2c
90012fe4:	2400      	movs	r4, #0
90012fe6:	9202      	str	r2, [sp, #8]
90012fe8:	9a06      	ldr	r2, [sp, #24]
90012fea:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90012fee:	9206      	str	r2, [sp, #24]
90012ff0:	462a      	mov	r2, r5
90012ff2:	435a      	muls	r2, r3
90012ff4:	9401      	str	r4, [sp, #4]
90012ff6:	9c02      	ldr	r4, [sp, #8]
90012ff8:	9d02      	ldr	r5, [sp, #8]
90012ffa:	fb92 f4f4 	sdiv	r4, r2, r4
90012ffe:	fb05 2214 	mls	r2, r5, r4, r2
90013002:	2a00      	cmp	r2, #0
90013004:	9207      	str	r2, [sp, #28]
90013006:	bfbc      	itt	lt
90013008:	1952      	addlt	r2, r2, r5
9001300a:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001300e:	6905      	ldr	r5, [r0, #16]
90013010:	bfb8      	it	lt
90013012:	9207      	strlt	r2, [sp, #28]
90013014:	eb04 0901 	add.w	r9, r4, r1
90013018:	9a01      	ldr	r2, [sp, #4]
9001301a:	ea4f 1669 	mov.w	r6, r9, asr #5
9001301e:	429a      	cmp	r2, r3
90013020:	f040 8111 	bne.w	90013246 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90013024:	f9b5 3000 	ldrsh.w	r3, [r5]
90013028:	429e      	cmp	r6, r3
9001302a:	d104      	bne.n	90013036 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
9001302c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90013030:	9a03      	ldr	r2, [sp, #12]
90013032:	429a      	cmp	r2, r3
90013034:	d01b      	beq.n	9001306e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013036:	88ea      	ldrh	r2, [r5, #6]
90013038:	88ab      	ldrh	r3, [r5, #4]
9001303a:	4313      	orrs	r3, r2
9001303c:	d010      	beq.n	90013060 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001303e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90013042:	2a00      	cmp	r2, #0
90013044:	db0c      	blt.n	90013060 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013046:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013048:	429a      	cmp	r2, r3
9001304a:	da09      	bge.n	90013060 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001304c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90013050:	429a      	cmp	r2, r3
90013052:	f102 0201 	add.w	r2, r2, #1
90013056:	bf38      	it	cc
90013058:	3508      	addcc	r5, #8
9001305a:	6082      	str	r2, [r0, #8]
9001305c:	bf38      	it	cc
9001305e:	6105      	strcc	r5, [r0, #16]
90013060:	6903      	ldr	r3, [r0, #16]
90013062:	9a03      	ldr	r2, [sp, #12]
90013064:	801e      	strh	r6, [r3, #0]
90013066:	805a      	strh	r2, [r3, #2]
90013068:	2200      	movs	r2, #0
9001306a:	809a      	strh	r2, [r3, #4]
9001306c:	80da      	strh	r2, [r3, #6]
9001306e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013070:	9a03      	ldr	r2, [sp, #12]
90013072:	6901      	ldr	r1, [r0, #16]
90013074:	441a      	add	r2, r3
90013076:	f9b1 3000 	ldrsh.w	r3, [r1]
9001307a:	42b3      	cmp	r3, r6
9001307c:	d103      	bne.n	90013086 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
9001307e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90013082:	429a      	cmp	r2, r3
90013084:	d01a      	beq.n	900130bc <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90013086:	88cc      	ldrh	r4, [r1, #6]
90013088:	888b      	ldrh	r3, [r1, #4]
9001308a:	4323      	orrs	r3, r4
9001308c:	d010      	beq.n	900130b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001308e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013092:	2c00      	cmp	r4, #0
90013094:	db0c      	blt.n	900130b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013096:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013098:	429c      	cmp	r4, r3
9001309a:	da09      	bge.n	900130b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001309c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900130a0:	429c      	cmp	r4, r3
900130a2:	f104 0401 	add.w	r4, r4, #1
900130a6:	bf38      	it	cc
900130a8:	3108      	addcc	r1, #8
900130aa:	6084      	str	r4, [r0, #8]
900130ac:	bf38      	it	cc
900130ae:	6101      	strcc	r1, [r0, #16]
900130b0:	6903      	ldr	r3, [r0, #16]
900130b2:	2100      	movs	r1, #0
900130b4:	801e      	strh	r6, [r3, #0]
900130b6:	805a      	strh	r2, [r3, #2]
900130b8:	8099      	strh	r1, [r3, #4]
900130ba:	80d9      	strh	r1, [r3, #6]
900130bc:	9b06      	ldr	r3, [sp, #24]
900130be:	4293      	cmp	r3, r2
900130c0:	f000 8082 	beq.w	900131c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
900130c4:	9b08      	ldr	r3, [sp, #32]
900130c6:	9902      	ldr	r1, [sp, #8]
900130c8:	015b      	lsls	r3, r3, #5
900130ca:	9c02      	ldr	r4, [sp, #8]
900130cc:	fb93 f1f1 	sdiv	r1, r3, r1
900130d0:	fb04 3311 	mls	r3, r4, r1, r3
900130d4:	9103      	str	r1, [sp, #12]
900130d6:	2b00      	cmp	r3, #0
900130d8:	9308      	str	r3, [sp, #32]
900130da:	da04      	bge.n	900130e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900130dc:	1e4b      	subs	r3, r1, #1
900130de:	9303      	str	r3, [sp, #12]
900130e0:	9b08      	ldr	r3, [sp, #32]
900130e2:	4423      	add	r3, r4
900130e4:	9308      	str	r3, [sp, #32]
900130e6:	9b07      	ldr	r3, [sp, #28]
900130e8:	464f      	mov	r7, r9
900130ea:	9902      	ldr	r1, [sp, #8]
900130ec:	2600      	movs	r6, #0
900130ee:	1a5b      	subs	r3, r3, r1
900130f0:	9307      	str	r3, [sp, #28]
900130f2:	9b01      	ldr	r3, [sp, #4]
900130f4:	f1c3 0320 	rsb	r3, r3, #32
900130f8:	930e      	str	r3, [sp, #56]	@ 0x38
900130fa:	990e      	ldr	r1, [sp, #56]	@ 0x38
900130fc:	9b01      	ldr	r3, [sp, #4]
900130fe:	1a5b      	subs	r3, r3, r1
90013100:	930a      	str	r3, [sp, #40]	@ 0x28
90013102:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90013106:	185b      	adds	r3, r3, r1
90013108:	bf58      	it	pl
9001310a:	9902      	ldrpl	r1, [sp, #8]
9001310c:	9307      	str	r3, [sp, #28]
9001310e:	bf57      	itett	pl
90013110:	1a5b      	subpl	r3, r3, r1
90013112:	9903      	ldrmi	r1, [sp, #12]
90013114:	9307      	strpl	r3, [sp, #28]
90013116:	9b03      	ldrpl	r3, [sp, #12]
90013118:	bf58      	it	pl
9001311a:	1c59      	addpl	r1, r3, #1
9001311c:	2a00      	cmp	r2, #0
9001311e:	4489      	add	r9, r1
90013120:	ea4f 1a69 	mov.w	sl, r9, asr #5
90013124:	db2e      	blt.n	90013184 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013126:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013128:	4293      	cmp	r3, r2
9001312a:	dd2b      	ble.n	90013184 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001312c:	9c01      	ldr	r4, [sp, #4]
9001312e:	6905      	ldr	r5, [r0, #16]
90013130:	46a0      	mov	r8, r4
90013132:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90013134:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90013138:	45a0      	cmp	r8, r4
9001313a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001313e:	f040 814c 	bne.w	900133da <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90013142:	f9b5 1000 	ldrsh.w	r1, [r5]
90013146:	4551      	cmp	r1, sl
90013148:	d103      	bne.n	90013152 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001314a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001314e:	4291      	cmp	r1, r2
90013150:	d018      	beq.n	90013184 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013152:	ea5c 010e 	orrs.w	r1, ip, lr
90013156:	d00f      	beq.n	90013178 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013158:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001315c:	2900      	cmp	r1, #0
9001315e:	db0b      	blt.n	90013178 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013160:	428b      	cmp	r3, r1
90013162:	dd09      	ble.n	90013178 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013164:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90013168:	4299      	cmp	r1, r3
9001316a:	f101 0101 	add.w	r1, r1, #1
9001316e:	bf38      	it	cc
90013170:	3508      	addcc	r5, #8
90013172:	6081      	str	r1, [r0, #8]
90013174:	bf38      	it	cc
90013176:	6105      	strcc	r5, [r0, #16]
90013178:	6903      	ldr	r3, [r0, #16]
9001317a:	f8a3 a000 	strh.w	sl, [r3]
9001317e:	805a      	strh	r2, [r3, #2]
90013180:	809e      	strh	r6, [r3, #4]
90013182:	80de      	strh	r6, [r3, #6]
90013184:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013186:	6901      	ldr	r1, [r0, #16]
90013188:	441a      	add	r2, r3
9001318a:	88cc      	ldrh	r4, [r1, #6]
9001318c:	888b      	ldrh	r3, [r1, #4]
9001318e:	4323      	orrs	r3, r4
90013190:	d010      	beq.n	900131b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013192:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013196:	2c00      	cmp	r4, #0
90013198:	db0c      	blt.n	900131b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001319a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001319c:	429c      	cmp	r4, r3
9001319e:	da09      	bge.n	900131b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900131a0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900131a4:	429c      	cmp	r4, r3
900131a6:	f104 0401 	add.w	r4, r4, #1
900131aa:	bf38      	it	cc
900131ac:	3108      	addcc	r1, #8
900131ae:	6084      	str	r4, [r0, #8]
900131b0:	bf38      	it	cc
900131b2:	6101      	strcc	r1, [r0, #16]
900131b4:	6903      	ldr	r3, [r0, #16]
900131b6:	464f      	mov	r7, r9
900131b8:	f8a3 a000 	strh.w	sl, [r3]
900131bc:	805a      	strh	r2, [r3, #2]
900131be:	809e      	strh	r6, [r3, #4]
900131c0:	80de      	strh	r6, [r3, #6]
900131c2:	9b06      	ldr	r3, [sp, #24]
900131c4:	4293      	cmp	r3, r2
900131c6:	d19c      	bne.n	90013102 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900131c8:	9b01      	ldr	r3, [sp, #4]
900131ca:	6907      	ldr	r7, [r0, #16]
900131cc:	f1c3 0620 	rsb	r6, r3, #32
900131d0:	9b05      	ldr	r3, [sp, #20]
900131d2:	ea4f 1e63 	mov.w	lr, r3, asr #5
900131d6:	9b04      	ldr	r3, [sp, #16]
900131d8:	429e      	cmp	r6, r3
900131da:	f040 81c7 	bne.w	9001356c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900131de:	f9b7 3000 	ldrsh.w	r3, [r7]
900131e2:	459e      	cmp	lr, r3
900131e4:	d104      	bne.n	900131f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900131e6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900131ea:	429a      	cmp	r2, r3
900131ec:	f43f ae3a 	beq.w	90012e64 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900131f0:	88f9      	ldrh	r1, [r7, #6]
900131f2:	88bb      	ldrh	r3, [r7, #4]
900131f4:	430b      	orrs	r3, r1
900131f6:	d010      	beq.n	9001321a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900131f8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900131fc:	2b00      	cmp	r3, #0
900131fe:	db0c      	blt.n	9001321a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90013200:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90013202:	428b      	cmp	r3, r1
90013204:	da09      	bge.n	9001321a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90013206:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001320a:	428b      	cmp	r3, r1
9001320c:	f103 0301 	add.w	r3, r3, #1
90013210:	bf38      	it	cc
90013212:	3708      	addcc	r7, #8
90013214:	6083      	str	r3, [r0, #8]
90013216:	bf38      	it	cc
90013218:	6107      	strcc	r7, [r0, #16]
9001321a:	6903      	ldr	r3, [r0, #16]
9001321c:	f8a3 e000 	strh.w	lr, [r3]
90013220:	e603      	b.n	90012e2a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90013222:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90013224:	9c03      	ldr	r4, [sp, #12]
90013226:	42a2      	cmp	r2, r4
90013228:	f6ff ae1c 	blt.w	90012e64 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001322c:	9c06      	ldr	r4, [sp, #24]
9001322e:	42a2      	cmp	r2, r4
90013230:	9c08      	ldr	r4, [sp, #32]
90013232:	bfbc      	itt	lt
90013234:	3201      	addlt	r2, #1
90013236:	9206      	strlt	r2, [sp, #24]
90013238:	f1c3 0220 	rsb	r2, r3, #32
9001323c:	4362      	muls	r2, r4
9001323e:	2401      	movs	r4, #1
90013240:	940b      	str	r4, [sp, #44]	@ 0x2c
90013242:	2420      	movs	r4, #32
90013244:	e6d6      	b.n	90012ff4 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90013246:	ea4f 1861 	mov.w	r8, r1, asr #5
9001324a:	f009 021f 	and.w	r2, r9, #31
9001324e:	f001 011f 	and.w	r1, r1, #31
90013252:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90013256:	920c      	str	r2, [sp, #48]	@ 0x30
90013258:	45b0      	cmp	r8, r6
9001325a:	9a01      	ldr	r2, [sp, #4]
9001325c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90013260:	eba2 0203 	sub.w	r2, r2, r3
90013264:	d108      	bne.n	90013278 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90013266:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90013268:	4496      	add	lr, r2
9001326a:	4419      	add	r1, r3
9001326c:	f8a5 e004 	strh.w	lr, [r5, #4]
90013270:	fb02 a101 	mla	r1, r2, r1, sl
90013274:	80e9      	strh	r1, [r5, #6]
90013276:	e6fa      	b.n	9001306e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013278:	2c00      	cmp	r4, #0
9001327a:	f2c0 80a7 	blt.w	900133cc <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
9001327e:	2701      	movs	r7, #1
90013280:	f1c1 0c20 	rsb	ip, r1, #32
90013284:	970a      	str	r7, [sp, #40]	@ 0x28
90013286:	2720      	movs	r7, #32
90013288:	fb02 f20c 	mul.w	r2, r2, ip
9001328c:	9709      	str	r7, [sp, #36]	@ 0x24
9001328e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90013290:	fb92 fcf4 	sdiv	ip, r2, r4
90013294:	fb04 221c 	mls	r2, r4, ip, r2
90013298:	4439      	add	r1, r7
9001329a:	2a00      	cmp	r2, #0
9001329c:	bfbc      	itt	lt
9001329e:	f10c 3cff 	addlt.w	ip, ip, #4294967295
900132a2:	1912      	addlt	r2, r2, r4
900132a4:	fb0c a101 	mla	r1, ip, r1, sl
900132a8:	44e6      	add	lr, ip
900132aa:	80e9      	strh	r1, [r5, #6]
900132ac:	990a      	ldr	r1, [sp, #40]	@ 0x28
900132ae:	f8a5 e004 	strh.w	lr, [r5, #4]
900132b2:	eb08 0501 	add.w	r5, r8, r1
900132b6:	6901      	ldr	r1, [r0, #16]
900132b8:	f8b1 8006 	ldrh.w	r8, [r1, #6]
900132bc:	f8b1 e004 	ldrh.w	lr, [r1, #4]
900132c0:	ea58 070e 	orrs.w	r7, r8, lr
900132c4:	d010      	beq.n	900132e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900132c6:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
900132ca:	f1be 0f00 	cmp.w	lr, #0
900132ce:	db0b      	blt.n	900132e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900132d0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900132d2:	45be      	cmp	lr, r7
900132d4:	da08      	bge.n	900132e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900132d6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900132da:	45be      	cmp	lr, r7
900132dc:	bf3c      	itt	cc
900132de:	3108      	addcc	r1, #8
900132e0:	6101      	strcc	r1, [r0, #16]
900132e2:	f10e 0101 	add.w	r1, lr, #1
900132e6:	6081      	str	r1, [r0, #8]
900132e8:	6901      	ldr	r1, [r0, #16]
900132ea:	f04f 0e00 	mov.w	lr, #0
900132ee:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
900132f2:	42ae      	cmp	r6, r5
900132f4:	800d      	strh	r5, [r1, #0]
900132f6:	4463      	add	r3, ip
900132f8:	f8a1 8002 	strh.w	r8, [r1, #2]
900132fc:	f8a1 e004 	strh.w	lr, [r1, #4]
90013300:	f8a1 e006 	strh.w	lr, [r1, #6]
90013304:	d053      	beq.n	900133ae <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90013306:	9901      	ldr	r1, [sp, #4]
90013308:	1b12      	subs	r2, r2, r4
9001330a:	1ac9      	subs	r1, r1, r3
9001330c:	4461      	add	r1, ip
9001330e:	0149      	lsls	r1, r1, #5
90013310:	fb91 fef4 	sdiv	lr, r1, r4
90013314:	fb04 111e 	mls	r1, r4, lr, r1
90013318:	2900      	cmp	r1, #0
9001331a:	bfbc      	itt	lt
9001331c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90013320:	1909      	addlt	r1, r1, r4
90013322:	f10e 0701 	add.w	r7, lr, #1
90013326:	970d      	str	r7, [sp, #52]	@ 0x34
90013328:	f8d0 a010 	ldr.w	sl, [r0, #16]
9001332c:	1852      	adds	r2, r2, r1
9001332e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90013330:	bf54      	ite	pl
90013332:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90013336:	46f4      	movmi	ip, lr
90013338:	f8ba b004 	ldrh.w	fp, [sl, #4]
9001333c:	bf58      	it	pl
9001333e:	1b12      	subpl	r2, r2, r4
90013340:	4463      	add	r3, ip
90013342:	443d      	add	r5, r7
90013344:	44e3      	add	fp, ip
90013346:	f8aa b004 	strh.w	fp, [sl, #4]
9001334a:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001334e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90013352:	f8aa b006 	strh.w	fp, [sl, #6]
90013356:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001335a:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001335e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90013362:	ea5b 070a 	orrs.w	r7, fp, sl
90013366:	d014      	beq.n	90013392 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013368:	f9bc a002 	ldrsh.w	sl, [ip, #2]
9001336c:	f1ba 0f00 	cmp.w	sl, #0
90013370:	db0f      	blt.n	90013392 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013372:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013374:	45ba      	cmp	sl, r7
90013376:	da0c      	bge.n	90013392 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90013378:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
9001337c:	45ba      	cmp	sl, r7
9001337e:	f10a 0a01 	add.w	sl, sl, #1
90013382:	bf38      	it	cc
90013384:	f10c 0c08 	addcc.w	ip, ip, #8
90013388:	f8c0 a008 	str.w	sl, [r0, #8]
9001338c:	bf38      	it	cc
9001338e:	f8c0 c010 	strcc.w	ip, [r0, #16]
90013392:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013396:	f04f 0700 	mov.w	r7, #0
9001339a:	42ae      	cmp	r6, r5
9001339c:	f8ac 5000 	strh.w	r5, [ip]
900133a0:	f8ac 8002 	strh.w	r8, [ip, #2]
900133a4:	f8ac 7004 	strh.w	r7, [ip, #4]
900133a8:	f8ac 7006 	strh.w	r7, [ip, #6]
900133ac:	d1bc      	bne.n	90013328 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900133ae:	6904      	ldr	r4, [r0, #16]
900133b0:	9a01      	ldr	r2, [sp, #4]
900133b2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900133b4:	1ad3      	subs	r3, r2, r3
900133b6:	88a2      	ldrh	r2, [r4, #4]
900133b8:	3120      	adds	r1, #32
900133ba:	441a      	add	r2, r3
900133bc:	80a2      	strh	r2, [r4, #4]
900133be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900133c0:	1a89      	subs	r1, r1, r2
900133c2:	88e2      	ldrh	r2, [r4, #6]
900133c4:	fb03 2301 	mla	r3, r3, r1, r2
900133c8:	80e3      	strh	r3, [r4, #6]
900133ca:	e650      	b.n	9001306e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900133cc:	f04f 37ff 	mov.w	r7, #4294967295
900133d0:	434a      	muls	r2, r1
900133d2:	4264      	negs	r4, r4
900133d4:	970a      	str	r7, [sp, #40]	@ 0x28
900133d6:	2700      	movs	r7, #0
900133d8:	e758      	b.n	9001328c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900133da:	ea4f 1867 	mov.w	r8, r7, asr #5
900133de:	f009 031f 	and.w	r3, r9, #31
900133e2:	f007 071f 	and.w	r7, r7, #31
900133e6:	fa1f fc8c 	uxth.w	ip, ip
900133ea:	45d0      	cmp	r8, sl
900133ec:	930f      	str	r3, [sp, #60]	@ 0x3c
900133ee:	fa1f fe8e 	uxth.w	lr, lr
900133f2:	d10a      	bne.n	9001340a <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
900133f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900133f6:	449c      	add	ip, r3
900133f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900133fa:	441f      	add	r7, r3
900133fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900133fe:	f8a5 c004 	strh.w	ip, [r5, #4]
90013402:	fb03 e707 	mla	r7, r3, r7, lr
90013406:	80ef      	strh	r7, [r5, #6]
90013408:	e6bc      	b.n	90013184 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001340a:	2900      	cmp	r1, #0
9001340c:	f2c0 80a6 	blt.w	9001355c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90013410:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90013412:	f1c7 0320 	rsb	r3, r7, #32
90013416:	4363      	muls	r3, r4
90013418:	2401      	movs	r4, #1
9001341a:	940d      	str	r4, [sp, #52]	@ 0x34
9001341c:	2420      	movs	r4, #32
9001341e:	940c      	str	r4, [sp, #48]	@ 0x30
90013420:	fb93 f4f1 	sdiv	r4, r3, r1
90013424:	fb01 3b14 	mls	fp, r1, r4, r3
90013428:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001342a:	f1bb 0f00 	cmp.w	fp, #0
9001342e:	441f      	add	r7, r3
90013430:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90013432:	bfbc      	itt	lt
90013434:	f104 34ff 	addlt.w	r4, r4, #4294967295
90013438:	448b      	addlt	fp, r1
9001343a:	fb04 e707 	mla	r7, r4, r7, lr
9001343e:	44a4      	add	ip, r4
90013440:	80ef      	strh	r7, [r5, #6]
90013442:	f8a5 c004 	strh.w	ip, [r5, #4]
90013446:	eb08 0503 	add.w	r5, r8, r3
9001344a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001344e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90013452:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013456:	ea5e 0307 	orrs.w	r3, lr, r7
9001345a:	d011      	beq.n	90013480 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001345c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90013460:	f1be 0f00 	cmp.w	lr, #0
90013464:	db0c      	blt.n	90013480 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90013466:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013468:	45be      	cmp	lr, r7
9001346a:	da09      	bge.n	90013480 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001346c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90013470:	45be      	cmp	lr, r7
90013472:	bf3c      	itt	cc
90013474:	f10c 0708 	addcc.w	r7, ip, #8
90013478:	6107      	strcc	r7, [r0, #16]
9001347a:	f10e 0701 	add.w	r7, lr, #1
9001347e:	6087      	str	r7, [r0, #8]
90013480:	6907      	ldr	r7, [r0, #16]
90013482:	b213      	sxth	r3, r2
90013484:	4555      	cmp	r5, sl
90013486:	9310      	str	r3, [sp, #64]	@ 0x40
90013488:	807b      	strh	r3, [r7, #2]
9001348a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001348c:	803d      	strh	r5, [r7, #0]
9001348e:	80be      	strh	r6, [r7, #4]
90013490:	eb04 0c03 	add.w	ip, r4, r3
90013494:	80fe      	strh	r6, [r7, #6]
90013496:	d050      	beq.n	9001353a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90013498:	9b01      	ldr	r3, [sp, #4]
9001349a:	eba3 070c 	sub.w	r7, r3, ip
9001349e:	ebab 0301 	sub.w	r3, fp, r1
900134a2:	443c      	add	r4, r7
900134a4:	9309      	str	r3, [sp, #36]	@ 0x24
900134a6:	0164      	lsls	r4, r4, #5
900134a8:	fb94 f8f1 	sdiv	r8, r4, r1
900134ac:	fb01 4418 	mls	r4, r1, r8, r4
900134b0:	2c00      	cmp	r4, #0
900134b2:	bfbc      	itt	lt
900134b4:	f108 38ff 	addlt.w	r8, r8, #4294967295
900134b8:	1864      	addlt	r4, r4, r1
900134ba:	f108 0701 	add.w	r7, r8, #1
900134be:	9711      	str	r7, [sp, #68]	@ 0x44
900134c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900134c2:	f8d0 e010 	ldr.w	lr, [r0, #16]
900134c6:	191b      	adds	r3, r3, r4
900134c8:	f8be b004 	ldrh.w	fp, [lr, #4]
900134cc:	bf54      	ite	pl
900134ce:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
900134d0:	4647      	movmi	r7, r8
900134d2:	9309      	str	r3, [sp, #36]	@ 0x24
900134d4:	bf58      	it	pl
900134d6:	1a5b      	subpl	r3, r3, r1
900134d8:	44bb      	add	fp, r7
900134da:	44bc      	add	ip, r7
900134dc:	bf58      	it	pl
900134de:	9309      	strpl	r3, [sp, #36]	@ 0x24
900134e0:	f8ae b004 	strh.w	fp, [lr, #4]
900134e4:	f8be b006 	ldrh.w	fp, [lr, #6]
900134e8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900134ec:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
900134ee:	f8ae b006 	strh.w	fp, [lr, #6]
900134f2:	443d      	add	r5, r7
900134f4:	f8d0 e010 	ldr.w	lr, [r0, #16]
900134f8:	f8be b006 	ldrh.w	fp, [lr, #6]
900134fc:	f8be 7004 	ldrh.w	r7, [lr, #4]
90013500:	ea5b 0307 	orrs.w	r3, fp, r7
90013504:	d011      	beq.n	9001352a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013506:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001350a:	f1bb 0f00 	cmp.w	fp, #0
9001350e:	db0c      	blt.n	9001352a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013510:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013512:	45bb      	cmp	fp, r7
90013514:	da09      	bge.n	9001352a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90013516:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001351a:	45bb      	cmp	fp, r7
9001351c:	bf3c      	itt	cc
9001351e:	f10e 0708 	addcc.w	r7, lr, #8
90013522:	6107      	strcc	r7, [r0, #16]
90013524:	f10b 0701 	add.w	r7, fp, #1
90013528:	6087      	str	r7, [r0, #8]
9001352a:	6907      	ldr	r7, [r0, #16]
9001352c:	4555      	cmp	r5, sl
9001352e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90013530:	803d      	strh	r5, [r7, #0]
90013532:	807b      	strh	r3, [r7, #2]
90013534:	80be      	strh	r6, [r7, #4]
90013536:	80fe      	strh	r6, [r7, #6]
90013538:	d1c2      	bne.n	900134c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001353a:	9b01      	ldr	r3, [sp, #4]
9001353c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001353e:	eba3 0c0c 	sub.w	ip, r3, ip
90013542:	6903      	ldr	r3, [r0, #16]
90013544:	3720      	adds	r7, #32
90013546:	8899      	ldrh	r1, [r3, #4]
90013548:	4461      	add	r1, ip
9001354a:	8099      	strh	r1, [r3, #4]
9001354c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001354e:	1a7f      	subs	r7, r7, r1
90013550:	88d9      	ldrh	r1, [r3, #6]
90013552:	fb0c 1c07 	mla	ip, ip, r7, r1
90013556:	f8a3 c006 	strh.w	ip, [r3, #6]
9001355a:	e613      	b.n	90013184 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001355c:	f04f 34ff 	mov.w	r4, #4294967295
90013560:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90013562:	4249      	negs	r1, r1
90013564:	940d      	str	r4, [sp, #52]	@ 0x34
90013566:	2400      	movs	r4, #0
90013568:	437b      	muls	r3, r7
9001356a:	e758      	b.n	9001341e <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
9001356c:	9905      	ldr	r1, [sp, #20]
9001356e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90013572:	f009 0c1f 	and.w	ip, r9, #31
90013576:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001357a:	f001 011f 	and.w	r1, r1, #31
9001357e:	45f3      	cmp	fp, lr
90013580:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90013584:	9102      	str	r1, [sp, #8]
90013586:	9904      	ldr	r1, [sp, #16]
90013588:	eba1 0406 	sub.w	r4, r1, r6
9001358c:	d108      	bne.n	900135a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001358e:	9b02      	ldr	r3, [sp, #8]
90013590:	44a0      	add	r8, r4
90013592:	449c      	add	ip, r3
90013594:	f8a7 8004 	strh.w	r8, [r7, #4]
90013598:	fb04 a40c 	mla	r4, r4, ip, sl
9001359c:	80fc      	strh	r4, [r7, #6]
9001359e:	e461      	b.n	90012e64 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900135a0:	9905      	ldr	r1, [sp, #20]
900135a2:	ebb1 0109 	subs.w	r1, r1, r9
900135a6:	bf51      	iteee	pl
900135a8:	f1cc 0520 	rsbpl	r5, ip, #32
900135ac:	fb04 f40c 	mulmi.w	r4, r4, ip
900135b0:	4249      	negmi	r1, r1
900135b2:	2500      	movmi	r5, #0
900135b4:	bf5d      	ittte	pl
900135b6:	436c      	mulpl	r4, r5
900135b8:	2520      	movpl	r5, #32
900135ba:	f04f 0901 	movpl.w	r9, #1
900135be:	f04f 39ff 	movmi.w	r9, #4294967295
900135c2:	9501      	str	r5, [sp, #4]
900135c4:	9b01      	ldr	r3, [sp, #4]
900135c6:	fb94 f5f1 	sdiv	r5, r4, r1
900135ca:	fb01 4415 	mls	r4, r1, r5, r4
900135ce:	449c      	add	ip, r3
900135d0:	eb0b 0309 	add.w	r3, fp, r9
900135d4:	2c00      	cmp	r4, #0
900135d6:	bfbc      	itt	lt
900135d8:	f105 35ff 	addlt.w	r5, r5, #4294967295
900135dc:	1864      	addlt	r4, r4, r1
900135de:	44a8      	add	r8, r5
900135e0:	fb05 ac0c 	mla	ip, r5, ip, sl
900135e4:	f8a7 8004 	strh.w	r8, [r7, #4]
900135e8:	f8a7 c006 	strh.w	ip, [r7, #6]
900135ec:	f8d0 c010 	ldr.w	ip, [r0, #16]
900135f0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900135f4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900135f8:	ea58 0707 	orrs.w	r7, r8, r7
900135fc:	d011      	beq.n	90013622 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900135fe:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013602:	f1b8 0f00 	cmp.w	r8, #0
90013606:	db0c      	blt.n	90013622 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90013608:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001360a:	45b8      	cmp	r8, r7
9001360c:	da09      	bge.n	90013622 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001360e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90013612:	45b8      	cmp	r8, r7
90013614:	bf3c      	itt	cc
90013616:	f10c 0708 	addcc.w	r7, ip, #8
9001361a:	6107      	strcc	r7, [r0, #16]
9001361c:	f108 0701 	add.w	r7, r8, #1
90013620:	6087      	str	r7, [r0, #8]
90013622:	6907      	ldr	r7, [r0, #16]
90013624:	f04f 0c00 	mov.w	ip, #0
90013628:	b212      	sxth	r2, r2
9001362a:	459e      	cmp	lr, r3
9001362c:	803b      	strh	r3, [r7, #0]
9001362e:	442e      	add	r6, r5
90013630:	807a      	strh	r2, [r7, #2]
90013632:	f8a7 c004 	strh.w	ip, [r7, #4]
90013636:	f8a7 c006 	strh.w	ip, [r7, #6]
9001363a:	d04b      	beq.n	900136d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
9001363c:	9f04      	ldr	r7, [sp, #16]
9001363e:	1a64      	subs	r4, r4, r1
90013640:	f04f 0a00 	mov.w	sl, #0
90013644:	1bbf      	subs	r7, r7, r6
90013646:	443d      	add	r5, r7
90013648:	016d      	lsls	r5, r5, #5
9001364a:	fb95 f8f1 	sdiv	r8, r5, r1
9001364e:	fb01 5518 	mls	r5, r1, r8, r5
90013652:	4565      	cmp	r5, ip
90013654:	bfbc      	itt	lt
90013656:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001365a:	186d      	addlt	r5, r5, r1
9001365c:	f108 0701 	add.w	r7, r8, #1
90013660:	9703      	str	r7, [sp, #12]
90013662:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013666:	1964      	adds	r4, r4, r5
90013668:	444b      	add	r3, r9
9001366a:	bf54      	ite	pl
9001366c:	9f03      	ldrpl	r7, [sp, #12]
9001366e:	4647      	movmi	r7, r8
90013670:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013674:	bf58      	it	pl
90013676:	1a64      	subpl	r4, r4, r1
90013678:	443e      	add	r6, r7
9001367a:	44bb      	add	fp, r7
9001367c:	f8ac b004 	strh.w	fp, [ip, #4]
90013680:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013684:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013688:	f8ac b006 	strh.w	fp, [ip, #6]
9001368c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013690:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013694:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013698:	ea5b 0707 	orrs.w	r7, fp, r7
9001369c:	d011      	beq.n	900136c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001369e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900136a2:	f1bb 0f00 	cmp.w	fp, #0
900136a6:	db0c      	blt.n	900136c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900136a8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900136aa:	45bb      	cmp	fp, r7
900136ac:	da09      	bge.n	900136c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900136ae:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900136b2:	45bb      	cmp	fp, r7
900136b4:	bf3c      	itt	cc
900136b6:	f10c 0708 	addcc.w	r7, ip, #8
900136ba:	6107      	strcc	r7, [r0, #16]
900136bc:	f10b 0701 	add.w	r7, fp, #1
900136c0:	6087      	str	r7, [r0, #8]
900136c2:	6907      	ldr	r7, [r0, #16]
900136c4:	459e      	cmp	lr, r3
900136c6:	803b      	strh	r3, [r7, #0]
900136c8:	807a      	strh	r2, [r7, #2]
900136ca:	f8a7 a004 	strh.w	sl, [r7, #4]
900136ce:	f8a7 a006 	strh.w	sl, [r7, #6]
900136d2:	d1c6      	bne.n	90013662 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900136d4:	9b04      	ldr	r3, [sp, #16]
900136d6:	1b9e      	subs	r6, r3, r6
900136d8:	6903      	ldr	r3, [r0, #16]
900136da:	889a      	ldrh	r2, [r3, #4]
900136dc:	4432      	add	r2, r6
900136de:	809a      	strh	r2, [r3, #4]
900136e0:	9a02      	ldr	r2, [sp, #8]
900136e2:	f102 0c20 	add.w	ip, r2, #32
900136e6:	9a01      	ldr	r2, [sp, #4]
900136e8:	ebac 0c02 	sub.w	ip, ip, r2
900136ec:	88da      	ldrh	r2, [r3, #6]
900136ee:	fb06 260c 	mla	r6, r6, ip, r2
900136f2:	80de      	strh	r6, [r3, #6]
900136f4:	f7ff bbb6 	b.w	90012e64 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

900136f8 <_ZN8touchgfx7Outline6lineToEii>:
900136f8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900136fa:	079b      	lsls	r3, r3, #30
900136fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900136fe:	460e      	mov	r6, r1
90013700:	4615      	mov	r5, r2
90013702:	d511      	bpl.n	90013728 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013704:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90013708:	ea86 0701 	eor.w	r7, r6, r1
9001370c:	ea85 0302 	eor.w	r3, r5, r2
90013710:	433b      	orrs	r3, r7
90013712:	d009      	beq.n	90013728 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013714:	4633      	mov	r3, r6
90013716:	9500      	str	r5, [sp, #0]
90013718:	f7ff fb4c 	bl	90012db4 <_ZN8touchgfx7Outline10renderLineEiiii>
9001371c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001371e:	f043 0301 	orr.w	r3, r3, #1
90013722:	e9c0 6505 	strd	r6, r5, [r0, #20]
90013726:	6243      	str	r3, [r0, #36]	@ 0x24
90013728:	b003      	add	sp, #12
9001372a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001372c <_ZN8touchgfx7Outline6moveToEii>:
9001372c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001372e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90013730:	4615      	mov	r5, r2
90013732:	4604      	mov	r4, r0
90013734:	460e      	mov	r6, r1
90013736:	079a      	lsls	r2, r3, #30
90013738:	d401      	bmi.n	9001373e <_ZN8touchgfx7Outline6moveToEii+0x12>
9001373a:	f7ff fb07 	bl	90012d4c <_ZN8touchgfx7Outline5resetEv>
9001373e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013740:	07db      	lsls	r3, r3, #31
90013742:	d504      	bpl.n	9001374e <_ZN8touchgfx7Outline6moveToEii+0x22>
90013744:	4620      	mov	r0, r4
90013746:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001374a:	f7ff ffd5 	bl	900136f8 <_ZN8touchgfx7Outline6lineToEii>
9001374e:	6923      	ldr	r3, [r4, #16]
90013750:	1170      	asrs	r0, r6, #5
90013752:	1169      	asrs	r1, r5, #5
90013754:	f9b3 2000 	ldrsh.w	r2, [r3]
90013758:	4290      	cmp	r0, r2
9001375a:	d103      	bne.n	90013764 <_ZN8touchgfx7Outline6moveToEii+0x38>
9001375c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013760:	4291      	cmp	r1, r2
90013762:	d01a      	beq.n	9001379a <_ZN8touchgfx7Outline6moveToEii+0x6e>
90013764:	88df      	ldrh	r7, [r3, #6]
90013766:	889a      	ldrh	r2, [r3, #4]
90013768:	433a      	orrs	r2, r7
9001376a:	d010      	beq.n	9001378e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001376c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013770:	2a00      	cmp	r2, #0
90013772:	db0c      	blt.n	9001378e <_ZN8touchgfx7Outline6moveToEii+0x62>
90013774:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90013776:	42ba      	cmp	r2, r7
90013778:	da09      	bge.n	9001378e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001377a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
9001377e:	42ba      	cmp	r2, r7
90013780:	f102 0201 	add.w	r2, r2, #1
90013784:	bf38      	it	cc
90013786:	3308      	addcc	r3, #8
90013788:	60a2      	str	r2, [r4, #8]
9001378a:	bf38      	it	cc
9001378c:	6123      	strcc	r3, [r4, #16]
9001378e:	6923      	ldr	r3, [r4, #16]
90013790:	2200      	movs	r2, #0
90013792:	8018      	strh	r0, [r3, #0]
90013794:	8059      	strh	r1, [r3, #2]
90013796:	809a      	strh	r2, [r3, #4]
90013798:	80da      	strh	r2, [r3, #6]
9001379a:	6166      	str	r6, [r4, #20]
9001379c:	6225      	str	r5, [r4, #32]
9001379e:	e9c4 5606 	strd	r5, r6, [r4, #24]
900137a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900137a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900137a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900137a8:	b0d0      	sub	sp, #320	@ 0x140
900137aa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900137ae:	466c      	mov	r4, sp
900137b0:	4627      	mov	r7, r4
900137b2:	1a0d      	subs	r5, r1, r0
900137b4:	f100 0308 	add.w	r3, r0, #8
900137b8:	2d48      	cmp	r5, #72	@ 0x48
900137ba:	f340 80d5 	ble.w	90013968 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900137be:	112d      	asrs	r5, r5, #4
900137c0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900137c4:	f9b0 9000 	ldrsh.w	r9, [r0]
900137c8:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
900137cc:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
900137d0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900137d4:	6816      	ldr	r6, [r2, #0]
900137d6:	6006      	str	r6, [r0, #0]
900137d8:	6856      	ldr	r6, [r2, #4]
900137da:	6046      	str	r6, [r0, #4]
900137dc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900137e0:	f8a2 8002 	strh.w	r8, [r2, #2]
900137e4:	f8a2 e004 	strh.w	lr, [r2, #4]
900137e8:	f8a2 c006 	strh.w	ip, [r2, #6]
900137ec:	f1a1 0208 	sub.w	r2, r1, #8
900137f0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900137f4:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
900137f8:	4565      	cmp	r5, ip
900137fa:	db06      	blt.n	9001380a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
900137fc:	d119      	bne.n	90013832 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900137fe:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90013802:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90013806:	42ae      	cmp	r6, r5
90013808:	dd13      	ble.n	90013832 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001380a:	460e      	mov	r6, r1
9001380c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90013810:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90013814:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013818:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
9001381c:	601d      	str	r5, [r3, #0]
9001381e:	6875      	ldr	r5, [r6, #4]
90013820:	605d      	str	r5, [r3, #4]
90013822:	f821 9c08 	strh.w	r9, [r1, #-8]
90013826:	f821 cc06 	strh.w	ip, [r1, #-6]
9001382a:	f821 8c04 	strh.w	r8, [r1, #-4]
9001382e:	f821 ec02 	strh.w	lr, [r1, #-2]
90013832:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013836:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001383a:	42ae      	cmp	r6, r5
9001383c:	db06      	blt.n	9001384c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001383e:	d116      	bne.n	9001386e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013840:	f9b0 c000 	ldrsh.w	ip, [r0]
90013844:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90013848:	45ac      	cmp	ip, r5
9001384a:	da10      	bge.n	9001386e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001384c:	681d      	ldr	r5, [r3, #0]
9001384e:	f9b0 8000 	ldrsh.w	r8, [r0]
90013852:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013856:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001385a:	6005      	str	r5, [r0, #0]
9001385c:	685d      	ldr	r5, [r3, #4]
9001385e:	f8a0 8008 	strh.w	r8, [r0, #8]
90013862:	6045      	str	r5, [r0, #4]
90013864:	8146      	strh	r6, [r0, #10]
90013866:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001386a:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001386e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013872:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013876:	4565      	cmp	r5, ip
90013878:	db06      	blt.n	90013888 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001387a:	d119      	bne.n	900138b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001387c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90013880:	f9b0 5000 	ldrsh.w	r5, [r0]
90013884:	42ae      	cmp	r6, r5
90013886:	da13      	bge.n	900138b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013888:	460e      	mov	r6, r1
9001388a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001388e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90013892:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013896:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
9001389a:	6005      	str	r5, [r0, #0]
9001389c:	6875      	ldr	r5, [r6, #4]
9001389e:	6045      	str	r5, [r0, #4]
900138a0:	f821 9c08 	strh.w	r9, [r1, #-8]
900138a4:	f821 cc06 	strh.w	ip, [r1, #-6]
900138a8:	f821 8c04 	strh.w	r8, [r1, #-4]
900138ac:	f821 ec02 	strh.w	lr, [r1, #-2]
900138b0:	3308      	adds	r3, #8
900138b2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900138b6:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900138ba:	45e6      	cmp	lr, ip
900138bc:	dbf8      	blt.n	900138b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900138be:	d105      	bne.n	900138cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900138c0:	f9b3 6000 	ldrsh.w	r6, [r3]
900138c4:	f9b0 5000 	ldrsh.w	r5, [r0]
900138c8:	42ae      	cmp	r6, r5
900138ca:	dbf1      	blt.n	900138b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900138cc:	4615      	mov	r5, r2
900138ce:	3a08      	subs	r2, #8
900138d0:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
900138d4:	45b4      	cmp	ip, r6
900138d6:	dbf9      	blt.n	900138cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900138d8:	d105      	bne.n	900138e6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
900138da:	f9b0 8000 	ldrsh.w	r8, [r0]
900138de:	f9b2 6000 	ldrsh.w	r6, [r2]
900138e2:	45b0      	cmp	r8, r6
900138e4:	dbf2      	blt.n	900138cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900138e6:	4293      	cmp	r3, r2
900138e8:	f1a5 0608 	sub.w	r6, r5, #8
900138ec:	d816      	bhi.n	9001391c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
900138ee:	f8d6 c000 	ldr.w	ip, [r6]
900138f2:	f9b3 a000 	ldrsh.w	sl, [r3]
900138f6:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
900138fa:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
900138fe:	f8c3 c000 	str.w	ip, [r3]
90013902:	f8d6 c004 	ldr.w	ip, [r6, #4]
90013906:	f8c3 c004 	str.w	ip, [r3, #4]
9001390a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001390e:	f825 ec06 	strh.w	lr, [r5, #-6]
90013912:	f825 9c04 	strh.w	r9, [r5, #-4]
90013916:	f825 8c02 	strh.w	r8, [r5, #-2]
9001391a:	e7c9      	b.n	900138b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001391c:	f8d6 e000 	ldr.w	lr, [r6]
90013920:	f9b0 a000 	ldrsh.w	sl, [r0]
90013924:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90013928:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
9001392c:	f8c0 e000 	str.w	lr, [r0]
90013930:	f8d6 e004 	ldr.w	lr, [r6, #4]
90013934:	1a16      	subs	r6, r2, r0
90013936:	f8c0 e004 	str.w	lr, [r0, #4]
9001393a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001393e:	f825 cc06 	strh.w	ip, [r5, #-6]
90013942:	f825 9c04 	strh.w	r9, [r5, #-4]
90013946:	f825 8c02 	strh.w	r8, [r5, #-2]
9001394a:	1acd      	subs	r5, r1, r3
9001394c:	10ed      	asrs	r5, r5, #3
9001394e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90013952:	bfb5      	itete	lt
90013954:	e9c4 0200 	strdlt	r0, r2, [r4]
90013958:	e9c4 3100 	strdge	r3, r1, [r4]
9001395c:	460a      	movlt	r2, r1
9001395e:	4603      	movge	r3, r0
90013960:	3408      	adds	r4, #8
90013962:	4618      	mov	r0, r3
90013964:	4611      	mov	r1, r2
90013966:	e724      	b.n	900137b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013968:	4299      	cmp	r1, r3
9001396a:	d927      	bls.n	900139bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
9001396c:	f1a3 0210 	sub.w	r2, r3, #16
90013970:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90013974:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90013978:	45ac      	cmp	ip, r5
9001397a:	db06      	blt.n	9001398a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
9001397c:	d11c      	bne.n	900139b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001397e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90013982:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90013986:	42ae      	cmp	r6, r5
90013988:	da16      	bge.n	900139b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001398a:	4615      	mov	r5, r2
9001398c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90013990:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90013994:	3a08      	subs	r2, #8
90013996:	f855 6f08 	ldr.w	r6, [r5, #8]!
9001399a:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
9001399e:	6196      	str	r6, [r2, #24]
900139a0:	42a8      	cmp	r0, r5
900139a2:	686e      	ldr	r6, [r5, #4]
900139a4:	f8a2 9010 	strh.w	r9, [r2, #16]
900139a8:	61d6      	str	r6, [r2, #28]
900139aa:	f8a2 c012 	strh.w	ip, [r2, #18]
900139ae:	f8a2 8014 	strh.w	r8, [r2, #20]
900139b2:	f8a2 e016 	strh.w	lr, [r2, #22]
900139b6:	d1db      	bne.n	90013970 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900139b8:	3308      	adds	r3, #8
900139ba:	e7d5      	b.n	90013968 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900139bc:	42bc      	cmp	r4, r7
900139be:	d903      	bls.n	900139c8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900139c0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900139c4:	3c08      	subs	r4, #8
900139c6:	e6f4      	b.n	900137b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900139c8:	b050      	add	sp, #320	@ 0x140
900139ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900139ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900139ce:	b510      	push	{r4, lr}
900139d0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900139d2:	4604      	mov	r4, r0
900139d4:	07da      	lsls	r2, r3, #31
900139d6:	d507      	bpl.n	900139e8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
900139d8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
900139dc:	f7ff fe8c 	bl	900136f8 <_ZN8touchgfx7Outline6lineToEii>
900139e0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900139e2:	f023 0301 	bic.w	r3, r3, #1
900139e6:	6243      	str	r3, [r0, #36]	@ 0x24
900139e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900139ea:	079b      	lsls	r3, r3, #30
900139ec:	d521      	bpl.n	90013a32 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
900139ee:	6923      	ldr	r3, [r4, #16]
900139f0:	88d9      	ldrh	r1, [r3, #6]
900139f2:	889a      	ldrh	r2, [r3, #4]
900139f4:	430a      	orrs	r2, r1
900139f6:	d010      	beq.n	90013a1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900139f8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900139fc:	2a00      	cmp	r2, #0
900139fe:	db0c      	blt.n	90013a1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013a00:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90013a02:	428a      	cmp	r2, r1
90013a04:	da09      	bge.n	90013a1a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013a06:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90013a0a:	4291      	cmp	r1, r2
90013a0c:	f102 0201 	add.w	r2, r2, #1
90013a10:	bf88      	it	hi
90013a12:	3308      	addhi	r3, #8
90013a14:	60a2      	str	r2, [r4, #8]
90013a16:	bf88      	it	hi
90013a18:	6123      	strhi	r3, [r4, #16]
90013a1a:	68a1      	ldr	r1, [r4, #8]
90013a1c:	b129      	cbz	r1, 90013a2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013a1e:	6863      	ldr	r3, [r4, #4]
90013a20:	4299      	cmp	r1, r3
90013a22:	d802      	bhi.n	90013a2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013a24:	68e0      	ldr	r0, [r4, #12]
90013a26:	f7ff febd 	bl	900137a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90013a2a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013a2c:	f023 0302 	bic.w	r3, r3, #2
90013a30:	6263      	str	r3, [r4, #36]	@ 0x24
90013a32:	68e0      	ldr	r0, [r4, #12]
90013a34:	bd10      	pop	{r4, pc}
	...

90013a38 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90013a38:	4b01      	ldr	r3, [pc, #4]	@ (90013a40 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90013a3a:	6818      	ldr	r0, [r3, #0]
90013a3c:	4770      	bx	lr
90013a3e:	bf00      	nop
90013a40:	24021c64 	.word	0x24021c64

90013a44 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90013a44:	4b01      	ldr	r3, [pc, #4]	@ (90013a4c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90013a46:	6818      	ldr	r0, [r3, #0]
90013a48:	4770      	bx	lr
90013a4a:	bf00      	nop
90013a4c:	24021c68 	.word	0x24021c68

90013a50 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90013a50:	b510      	push	{r4, lr}
90013a52:	6803      	ldr	r3, [r0, #0]
90013a54:	460c      	mov	r4, r1
90013a56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013a58:	4798      	blx	r3
90013a5a:	1b03      	subs	r3, r0, r4
90013a5c:	4258      	negs	r0, r3
90013a5e:	4158      	adcs	r0, r3
90013a60:	bd10      	pop	{r4, pc}
	...

90013a64 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90013a64:	4b01      	ldr	r3, [pc, #4]	@ (90013a6c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90013a66:	6019      	str	r1, [r3, #0]
90013a68:	4770      	bx	lr
90013a6a:	bf00      	nop
90013a6c:	24021c6c 	.word	0x24021c6c

90013a70 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013a74:	4696      	mov	lr, r2
90013a76:	b097      	sub	sp, #92	@ 0x5c
90013a78:	4605      	mov	r5, r0
90013a7a:	4614      	mov	r4, r2
90013a7c:	460e      	mov	r6, r1
90013a7e:	461f      	mov	r7, r3
90013a80:	f10d 0c1c 	add.w	ip, sp, #28
90013a84:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90013a88:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90013a8c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90013a90:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013a94:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013a98:	f8de 3000 	ldr.w	r3, [lr]
90013a9c:	f104 0e14 	add.w	lr, r4, #20
90013aa0:	f8cc 3000 	str.w	r3, [ip]
90013aa4:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90013aa8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013aac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013ab0:	f8de 3000 	ldr.w	r3, [lr]
90013ab4:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90013ab8:	f8cc 3000 	str.w	r3, [ip]
90013abc:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90013ac0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013ac4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013ac8:	f8de 3000 	ldr.w	r3, [lr]
90013acc:	4631      	mov	r1, r6
90013ace:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90013ad0:	4628      	mov	r0, r5
90013ad2:	f8cc 3000 	str.w	r3, [ip]
90013ad6:	682b      	ldr	r3, [r5, #0]
90013ad8:	9201      	str	r2, [sp, #4]
90013ada:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90013adc:	f8cd 8008 	str.w	r8, [sp, #8]
90013ae0:	9200      	str	r2, [sp, #0]
90013ae2:	aa07      	add	r2, sp, #28
90013ae4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013ae8:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90013aec:	463b      	mov	r3, r7
90013aee:	47d8      	blx	fp
90013af0:	46a6      	mov	lr, r4
90013af2:	f10d 0c1c 	add.w	ip, sp, #28
90013af6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013afa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013afe:	f8de 3000 	ldr.w	r3, [lr]
90013b02:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90013b06:	343c      	adds	r4, #60	@ 0x3c
90013b08:	f8cc 3000 	str.w	r3, [ip]
90013b0c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90013b10:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013b14:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013b18:	f8de 3000 	ldr.w	r3, [lr]
90013b1c:	f8cc 3000 	str.w	r3, [ip]
90013b20:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90013b24:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90013b26:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013b2a:	6823      	ldr	r3, [r4, #0]
90013b2c:	4631      	mov	r1, r6
90013b2e:	4628      	mov	r0, r5
90013b30:	f8cc 3000 	str.w	r3, [ip]
90013b34:	682b      	ldr	r3, [r5, #0]
90013b36:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013b3a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90013b3c:	f8cd 8008 	str.w	r8, [sp, #8]
90013b40:	9201      	str	r2, [sp, #4]
90013b42:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90013b44:	9200      	str	r2, [sp, #0]
90013b46:	aa07      	add	r2, sp, #28
90013b48:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90013b4a:	463b      	mov	r3, r7
90013b4c:	47a0      	blx	r4
90013b4e:	b017      	add	sp, #92	@ 0x5c
90013b50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90013b54 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90013b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013b58:	b08d      	sub	sp, #52	@ 0x34
90013b5a:	4688      	mov	r8, r1
90013b5c:	f8d3 c000 	ldr.w	ip, [r3]
90013b60:	9916      	ldr	r1, [sp, #88]	@ 0x58
90013b62:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90013b66:	680f      	ldr	r7, [r1, #0]
90013b68:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90013b6c:	eba7 070c 	sub.w	r7, r7, ip
90013b70:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90013b74:	edd3 6a07 	vldr	s13, [r3, #28]
90013b78:	42bc      	cmp	r4, r7
90013b7a:	9918      	ldr	r1, [sp, #96]	@ 0x60
90013b7c:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90013b80:	bfa8      	it	ge
90013b82:	463c      	movge	r4, r7
90013b84:	f9b1 9000 	ldrsh.w	r9, [r1]
90013b88:	f9ba 1000 	ldrsh.w	r1, [sl]
90013b8c:	ee07 4a90 	vmov	s15, r4
90013b90:	eb09 0e0c 	add.w	lr, r9, ip
90013b94:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90013b98:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90013b9c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90013ba0:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90013ba4:	4571      	cmp	r1, lr
90013ba6:	ee25 4a04 	vmul.f32	s8, s10, s8
90013baa:	ee65 4a24 	vmul.f32	s9, s10, s9
90013bae:	ee25 5a27 	vmul.f32	s10, s10, s15
90013bb2:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90013bb6:	ee71 0aa4 	vadd.f32	s1, s3, s9
90013bba:	ee32 1a05 	vadd.f32	s2, s4, s10
90013bbe:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90013bc2:	ee36 0a84 	vadd.f32	s0, s13, s8
90013bc6:	ee61 1a87 	vmul.f32	s3, s3, s14
90013bca:	ee22 2a07 	vmul.f32	s4, s4, s14
90013bce:	f340 808c 	ble.w	90013cea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90013bd2:	eba1 060e 	sub.w	r6, r1, lr
90013bd6:	fb96 f5f4 	sdiv	r5, r6, r4
90013bda:	ee07 5a10 	vmov	s14, r5
90013bde:	2d00      	cmp	r5, #0
90013be0:	fb04 6615 	mls	r6, r4, r5, r6
90013be4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90013be8:	eea7 0a04 	vfma.f32	s0, s14, s8
90013bec:	eee7 0a24 	vfma.f32	s1, s14, s9
90013bf0:	eea7 1a05 	vfma.f32	s2, s14, s10
90013bf4:	dd12      	ble.n	90013c1c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90013bf6:	ee70 6a44 	vsub.f32	s13, s0, s8
90013bfa:	ee70 1ae4 	vsub.f32	s3, s1, s9
90013bfe:	ee31 2a45 	vsub.f32	s4, s2, s10
90013c02:	eef5 6a40 	vcmp.f32	s13, #0.0
90013c06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013c0a:	bf14      	ite	ne
90013c0c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90013c10:	eeb0 7a67 	vmoveq.f32	s14, s15
90013c14:	ee61 1a87 	vmul.f32	s3, s3, s14
90013c18:	ee22 2a07 	vmul.f32	s4, s4, s14
90013c1c:	fb05 f204 	mul.w	r2, r5, r4
90013c20:	1abf      	subs	r7, r7, r2
90013c22:	4494      	add	ip, r2
90013c24:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90013c28:	4411      	add	r1, r2
90013c2a:	eb09 020c 	add.w	r2, r9, ip
90013c2e:	b209      	sxth	r1, r1
90013c30:	443a      	add	r2, r7
90013c32:	428a      	cmp	r2, r1
90013c34:	bfc4      	itt	gt
90013c36:	eba1 0209 	subgt.w	r2, r1, r9
90013c3a:	eba2 070c 	subgt.w	r7, r2, ip
90013c3e:	2f00      	cmp	r7, #0
90013c40:	dd50      	ble.n	90013ce4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90013c42:	fb97 f1f4 	sdiv	r1, r7, r4
90013c46:	fb04 7211 	mls	r2, r4, r1, r7
90013c4a:	b90a      	cbnz	r2, 90013c50 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90013c4c:	3901      	subs	r1, #1
90013c4e:	4622      	mov	r2, r4
90013c50:	eec7 3a80 	vdiv.f32	s7, s15, s0
90013c54:	6840      	ldr	r0, [r0, #4]
90013c56:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90013c5a:	44b6      	add	lr, r6
90013c5c:	f8d0 a000 	ldr.w	sl, [r0]
90013c60:	2900      	cmp	r1, #0
90013c62:	bfcc      	ite	gt
90013c64:	46a1      	movgt	r9, r4
90013c66:	4691      	movle	r9, r2
90013c68:	900b      	str	r0, [sp, #44]	@ 0x2c
90013c6a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90013c6c:	fb04 e505 	mla	r5, r4, r5, lr
90013c70:	eef0 6a42 	vmov.f32	s13, s4
90013c74:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90013c78:	9008      	str	r0, [sp, #32]
90013c7a:	eeb0 7a61 	vmov.f32	s14, s3
90013c7e:	9818      	ldr	r0, [sp, #96]	@ 0x60
90013c80:	695b      	ldr	r3, [r3, #20]
90013c82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90013c86:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90013c8a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90013c8e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90013c90:	445b      	add	r3, fp
90013c92:	9307      	str	r3, [sp, #28]
90013c94:	ee16 3a90 	vmov	r3, s13
90013c98:	e9cd 8505 	strd	r8, r5, [sp, #20]
90013c9c:	ee60 2aa3 	vmul.f32	s5, s1, s7
90013ca0:	ee21 3a23 	vmul.f32	s6, s2, s7
90013ca4:	ee72 7ae1 	vsub.f32	s15, s5, s3
90013ca8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013cac:	ee17 7a90 	vmov	r7, s15
90013cb0:	ee73 7a42 	vsub.f32	s15, s6, s4
90013cb4:	fb97 f7f4 	sdiv	r7, r7, r4
90013cb8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013cbc:	ee17 ca90 	vmov	ip, s15
90013cc0:	fb9c fcf4 	sdiv	ip, ip, r4
90013cc4:	fb0c 3306 	mla	r3, ip, r6, r3
90013cc8:	9302      	str	r3, [sp, #8]
90013cca:	ee17 3a10 	vmov	r3, s14
90013cce:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90013cd2:	fb07 3706 	mla	r7, r7, r6, r3
90013cd6:	eba9 0306 	sub.w	r3, r9, r6
90013cda:	e9cd 4700 	strd	r4, r7, [sp]
90013cde:	f8da 4008 	ldr.w	r4, [sl, #8]
90013ce2:	47a0      	blx	r4
90013ce4:	b00d      	add	sp, #52	@ 0x34
90013ce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013cea:	2500      	movs	r5, #0
90013cec:	462e      	mov	r6, r5
90013cee:	e799      	b.n	90013c24 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90013cf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013cf4:	b0db      	sub	sp, #364	@ 0x16c
90013cf6:	461d      	mov	r5, r3
90013cf8:	4614      	mov	r4, r2
90013cfa:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90013cfe:	910f      	str	r1, [sp, #60]	@ 0x3c
90013d00:	4629      	mov	r1, r5
90013d02:	930a      	str	r3, [sp, #40]	@ 0x28
90013d04:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90013d08:	9009      	str	r0, [sp, #36]	@ 0x24
90013d0a:	930b      	str	r3, [sp, #44]	@ 0x2c
90013d0c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90013d10:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90013d14:	9310      	str	r3, [sp, #64]	@ 0x40
90013d16:	6803      	ldr	r3, [r0, #0]
90013d18:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90013d1a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90013d1e:	47b8      	blx	r7
90013d20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90013d22:	6058      	str	r0, [r3, #4]
90013d24:	2800      	cmp	r0, #0
90013d26:	f000 83a1 	beq.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013d2a:	682b      	ldr	r3, [r5, #0]
90013d2c:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90013d30:	ed94 7a02 	vldr	s14, [r4, #8]
90013d34:	9314      	str	r3, [sp, #80]	@ 0x50
90013d36:	686b      	ldr	r3, [r5, #4]
90013d38:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013d3c:	9315      	str	r3, [sp, #84]	@ 0x54
90013d3e:	4bc1      	ldr	r3, [pc, #772]	@ (90014044 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90013d40:	7819      	ldrb	r1, [r3, #0]
90013d42:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90013d46:	2900      	cmp	r1, #0
90013d48:	bf16      	itet	ne
90013d4a:	4619      	movne	r1, r3
90013d4c:	4611      	moveq	r1, r2
90013d4e:	4613      	movne	r3, r2
90013d50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013d54:	9116      	str	r1, [sp, #88]	@ 0x58
90013d56:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90013d5a:	f240 8387 	bls.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013d5e:	ed94 7a07 	vldr	s14, [r4, #28]
90013d62:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013d66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013d6a:	f240 837f 	bls.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013d6e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90013d72:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013d76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013d7a:	f240 8377 	bls.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013d7e:	6822      	ldr	r2, [r4, #0]
90013d80:	4bb1      	ldr	r3, [pc, #708]	@ (90014048 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90013d82:	429a      	cmp	r2, r3
90013d84:	f2c0 8372 	blt.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013d88:	49b0      	ldr	r1, [pc, #704]	@ (9001404c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90013d8a:	6963      	ldr	r3, [r4, #20]
90013d8c:	428a      	cmp	r2, r1
90013d8e:	f300 836d 	bgt.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013d92:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90013d96:	48ae      	ldr	r0, [pc, #696]	@ (90014050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90013d98:	33ff      	adds	r3, #255	@ 0xff
90013d9a:	4283      	cmp	r3, r0
90013d9c:	f200 8366 	bhi.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013da0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90013da2:	4dac      	ldr	r5, [pc, #688]	@ (90014054 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90013da4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90013da8:	33ff      	adds	r3, #255	@ 0xff
90013daa:	42ab      	cmp	r3, r5
90013dac:	f200 835e 	bhi.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013db0:	6862      	ldr	r2, [r4, #4]
90013db2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90013db6:	33ff      	adds	r3, #255	@ 0xff
90013db8:	4283      	cmp	r3, r0
90013dba:	f200 8357 	bhi.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013dbe:	69a1      	ldr	r1, [r4, #24]
90013dc0:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90013dc4:	33ff      	adds	r3, #255	@ 0xff
90013dc6:	4283      	cmp	r3, r0
90013dc8:	f200 8350 	bhi.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013dcc:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90013dce:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90013dd2:	30ff      	adds	r0, #255	@ 0xff
90013dd4:	42a8      	cmp	r0, r5
90013dd6:	f200 8349 	bhi.w	9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013dda:	428a      	cmp	r2, r1
90013ddc:	f280 8110 	bge.w	90014000 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90013de0:	429a      	cmp	r2, r3
90013de2:	f300 8119 	bgt.w	90014018 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90013de6:	4299      	cmp	r1, r3
90013de8:	f280 811d 	bge.w	90014026 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90013dec:	2502      	movs	r5, #2
90013dee:	2701      	movs	r7, #1
90013df0:	46a9      	mov	r9, r5
90013df2:	46b8      	mov	r8, r7
90013df4:	f04f 0a00 	mov.w	sl, #0
90013df8:	4621      	mov	r1, r4
90013dfa:	a849      	add	r0, sp, #292	@ 0x124
90013dfc:	f004 f806 	bl	90017e0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90013e00:	4622      	mov	r2, r4
90013e02:	4653      	mov	r3, sl
90013e04:	a949      	add	r1, sp, #292	@ 0x124
90013e06:	f8cd 9000 	str.w	r9, [sp]
90013e0a:	a819      	add	r0, sp, #100	@ 0x64
90013e0c:	f004 f92e 	bl	9001806c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013e10:	4622      	mov	r2, r4
90013e12:	4653      	mov	r3, sl
90013e14:	a949      	add	r1, sp, #292	@ 0x124
90013e16:	f8cd 8000 	str.w	r8, [sp]
90013e1a:	a829      	add	r0, sp, #164	@ 0xa4
90013e1c:	f004 f926 	bl	9001806c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013e20:	4643      	mov	r3, r8
90013e22:	4622      	mov	r2, r4
90013e24:	a949      	add	r1, sp, #292	@ 0x124
90013e26:	f8cd 9000 	str.w	r9, [sp]
90013e2a:	a839      	add	r0, sp, #228	@ 0xe4
90013e2c:	f004 f91e 	bl	9001806c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013e30:	42af      	cmp	r7, r5
90013e32:	af12      	add	r7, sp, #72	@ 0x48
90013e34:	bfb7      	itett	lt
90013e36:	2300      	movlt	r3, #0
90013e38:	2301      	movge	r3, #1
90013e3a:	ad29      	addlt	r5, sp, #164	@ 0xa4
90013e3c:	ac19      	addlt	r4, sp, #100	@ 0x64
90013e3e:	bfb1      	iteee	lt
90013e40:	930e      	strlt	r3, [sp, #56]	@ 0x38
90013e42:	ad19      	addge	r5, sp, #100	@ 0x64
90013e44:	930e      	strge	r3, [sp, #56]	@ 0x38
90013e46:	ac29      	addge	r4, sp, #164	@ 0xa4
90013e48:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90013e4a:	e893 0003 	ldmia.w	r3, {r0, r1}
90013e4e:	e887 0003 	stmia.w	r7, {r0, r1}
90013e52:	b928      	cbnz	r0, 90013e60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90013e54:	4b80      	ldr	r3, [pc, #512]	@ (90014058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90013e56:	6818      	ldr	r0, [r3, #0]
90013e58:	6803      	ldr	r3, [r0, #0]
90013e5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90013e5c:	4798      	blx	r3
90013e5e:	6038      	str	r0, [r7, #0]
90013e60:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90013e62:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90013e66:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90013e6a:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90013e6c:	930c      	str	r3, [sp, #48]	@ 0x30
90013e6e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90013e70:	6963      	ldr	r3, [r4, #20]
90013e72:	440b      	add	r3, r1
90013e74:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90013e78:	4408      	add	r0, r1
90013e7a:	b200      	sxth	r0, r0
90013e7c:	4283      	cmp	r3, r0
90013e7e:	900d      	str	r0, [sp, #52]	@ 0x34
90013e80:	f280 80dd 	bge.w	9001403e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90013e84:	428b      	cmp	r3, r1
90013e86:	da08      	bge.n	90013e9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013e88:	2a00      	cmp	r2, #0
90013e8a:	dd06      	ble.n	90013e9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013e8c:	1acb      	subs	r3, r1, r3
90013e8e:	429a      	cmp	r2, r3
90013e90:	f2c0 80e4 	blt.w	9001405c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90013e94:	2b00      	cmp	r3, #0
90013e96:	f300 80e2 	bgt.w	9001405e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90013e9a:	6967      	ldr	r7, [r4, #20]
90013e9c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90013ea0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90013ea2:	443b      	add	r3, r7
90013ea4:	461f      	mov	r7, r3
90013ea6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90013ea8:	1bdf      	subs	r7, r3, r7
90013eaa:	4297      	cmp	r7, r2
90013eac:	bfa8      	it	ge
90013eae:	4617      	movge	r7, r2
90013eb0:	2f00      	cmp	r7, #0
90013eb2:	f340 8166 	ble.w	90014182 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90013eb6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90013eb8:	6829      	ldr	r1, [r5, #0]
90013eba:	f9b3 2000 	ldrsh.w	r2, [r3]
90013ebe:	f9bb 3000 	ldrsh.w	r3, [fp]
90013ec2:	4411      	add	r1, r2
90013ec4:	6820      	ldr	r0, [r4, #0]
90013ec6:	4299      	cmp	r1, r3
90013ec8:	dd1a      	ble.n	90013f00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013eca:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013ece:	4402      	add	r2, r0
90013ed0:	440b      	add	r3, r1
90013ed2:	b21b      	sxth	r3, r3
90013ed4:	429a      	cmp	r2, r3
90013ed6:	dc13      	bgt.n	90013f00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013ed8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90013eda:	a912      	add	r1, sp, #72	@ 0x48
90013edc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90013ede:	9809      	ldr	r0, [sp, #36]	@ 0x24
90013ee0:	681b      	ldr	r3, [r3, #0]
90013ee2:	9206      	str	r2, [sp, #24]
90013ee4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90013ee6:	9500      	str	r5, [sp, #0]
90013ee8:	9205      	str	r2, [sp, #20]
90013eea:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90013eec:	e9cd b203 	strd	fp, r2, [sp, #12]
90013ef0:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90013ef2:	e9cd 8201 	strd	r8, r2, [sp, #4]
90013ef6:	aa49      	add	r2, sp, #292	@ 0x124
90013ef8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90013efc:	4623      	mov	r3, r4
90013efe:	47c8      	blx	r9
90013f00:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90013f04:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90013f08:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90013f0c:	ee37 7a27 	vadd.f32	s14, s14, s15
90013f10:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90013f14:	68a1      	ldr	r1, [r4, #8]
90013f16:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013f1a:	ed94 6a08 	vldr	s12, [r4, #32]
90013f1e:	edd4 6a07 	vldr	s13, [r4, #28]
90013f22:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90013f26:	ee76 6a86 	vadd.f32	s13, s13, s12
90013f2a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90013f2e:	e9d4 2300 	ldrd	r2, r3, [r4]
90013f32:	edc4 6a07 	vstr	s13, [r4, #28]
90013f36:	441a      	add	r2, r3
90013f38:	6963      	ldr	r3, [r4, #20]
90013f3a:	3301      	adds	r3, #1
90013f3c:	6022      	str	r2, [r4, #0]
90013f3e:	6163      	str	r3, [r4, #20]
90013f40:	69a3      	ldr	r3, [r4, #24]
90013f42:	3b01      	subs	r3, #1
90013f44:	61a3      	str	r3, [r4, #24]
90013f46:	6923      	ldr	r3, [r4, #16]
90013f48:	440b      	add	r3, r1
90013f4a:	68e1      	ldr	r1, [r4, #12]
90013f4c:	428b      	cmp	r3, r1
90013f4e:	6123      	str	r3, [r4, #16]
90013f50:	db15      	blt.n	90013f7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90013f52:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90013f56:	3201      	adds	r2, #1
90013f58:	1a5b      	subs	r3, r3, r1
90013f5a:	ee76 6a26 	vadd.f32	s13, s12, s13
90013f5e:	6022      	str	r2, [r4, #0]
90013f60:	6123      	str	r3, [r4, #16]
90013f62:	edc4 6a07 	vstr	s13, [r4, #28]
90013f66:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90013f6a:	ee36 7a87 	vadd.f32	s14, s13, s14
90013f6e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90013f72:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90013f76:	ee77 7a27 	vadd.f32	s15, s14, s15
90013f7a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90013f7e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90013f82:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90013f86:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90013f8a:	ee37 7a27 	vadd.f32	s14, s14, s15
90013f8e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90013f92:	68a9      	ldr	r1, [r5, #8]
90013f94:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013f98:	ed95 6a08 	vldr	s12, [r5, #32]
90013f9c:	edd5 6a07 	vldr	s13, [r5, #28]
90013fa0:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90013fa4:	ee76 6a86 	vadd.f32	s13, s13, s12
90013fa8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90013fac:	e9d5 2300 	ldrd	r2, r3, [r5]
90013fb0:	edc5 6a07 	vstr	s13, [r5, #28]
90013fb4:	441a      	add	r2, r3
90013fb6:	696b      	ldr	r3, [r5, #20]
90013fb8:	3301      	adds	r3, #1
90013fba:	602a      	str	r2, [r5, #0]
90013fbc:	616b      	str	r3, [r5, #20]
90013fbe:	69ab      	ldr	r3, [r5, #24]
90013fc0:	3b01      	subs	r3, #1
90013fc2:	61ab      	str	r3, [r5, #24]
90013fc4:	692b      	ldr	r3, [r5, #16]
90013fc6:	440b      	add	r3, r1
90013fc8:	68e9      	ldr	r1, [r5, #12]
90013fca:	428b      	cmp	r3, r1
90013fcc:	612b      	str	r3, [r5, #16]
90013fce:	db15      	blt.n	90013ffc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90013fd0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90013fd4:	3201      	adds	r2, #1
90013fd6:	1a5b      	subs	r3, r3, r1
90013fd8:	ee76 6a26 	vadd.f32	s13, s12, s13
90013fdc:	602a      	str	r2, [r5, #0]
90013fde:	612b      	str	r3, [r5, #16]
90013fe0:	edc5 6a07 	vstr	s13, [r5, #28]
90013fe4:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90013fe8:	ee36 7a87 	vadd.f32	s14, s13, s14
90013fec:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90013ff0:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90013ff4:	ee77 7a27 	vadd.f32	s15, s14, s15
90013ff8:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90013ffc:	3f01      	subs	r7, #1
90013ffe:	e757      	b.n	90013eb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90014000:	4299      	cmp	r1, r3
90014002:	dc13      	bgt.n	9001402c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90014004:	429a      	cmp	r2, r3
90014006:	da14      	bge.n	90014032 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90014008:	2502      	movs	r5, #2
9001400a:	2703      	movs	r7, #3
9001400c:	f04f 0800 	mov.w	r8, #0
90014010:	46a9      	mov	r9, r5
90014012:	f04f 0a01 	mov.w	sl, #1
90014016:	e6ef      	b.n	90013df8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90014018:	2501      	movs	r5, #1
9001401a:	2700      	movs	r7, #0
9001401c:	46a9      	mov	r9, r5
9001401e:	46b8      	mov	r8, r7
90014020:	f04f 0a02 	mov.w	sl, #2
90014024:	e6e8      	b.n	90013df8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90014026:	2501      	movs	r5, #1
90014028:	2702      	movs	r7, #2
9001402a:	e6e1      	b.n	90013df0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
9001402c:	2500      	movs	r5, #0
9001402e:	2701      	movs	r7, #1
90014030:	e7f4      	b.n	9001401c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90014032:	2702      	movs	r7, #2
90014034:	2503      	movs	r5, #3
90014036:	f04f 0900 	mov.w	r9, #0
9001403a:	46b8      	mov	r8, r7
9001403c:	e7e9      	b.n	90014012 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
9001403e:	4613      	mov	r3, r2
90014040:	e728      	b.n	90013e94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90014042:	bf00      	nop
90014044:	24021c54 	.word	0x24021c54
90014048:	fffd8f01 	.word	0xfffd8f01
9001404c:	00027100 	.word	0x00027100
90014050:	0004e1ff 	.word	0x0004e1ff
90014054:	0004e1fe 	.word	0x0004e1fe
90014058:	24021c5c 	.word	0x24021c5c
9001405c:	4613      	mov	r3, r2
9001405e:	992b      	ldr	r1, [sp, #172]	@ 0xac
90014060:	469e      	mov	lr, r3
90014062:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90014064:	469c      	mov	ip, r3
90014066:	9111      	str	r1, [sp, #68]	@ 0x44
90014068:	f04f 0900 	mov.w	r9, #0
9001406c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90014070:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90014074:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90014078:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
9001407c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90014080:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90014084:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90014088:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
9001408c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90014090:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90014094:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90014098:	f1bc 0f00 	cmp.w	ip, #0
9001409c:	d147      	bne.n	9001412e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
9001409e:	eb03 0c07 	add.w	ip, r3, r7
900140a2:	1ad7      	subs	r7, r2, r3
900140a4:	f1b9 0f00 	cmp.w	r9, #0
900140a8:	d009      	beq.n	900140be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900140aa:	9029      	str	r0, [sp, #164]	@ 0xa4
900140ac:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
900140b0:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
900140b4:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
900140b8:	912d      	str	r1, [sp, #180]	@ 0xb4
900140ba:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
900140be:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900140c0:	f04f 0800 	mov.w	r8, #0
900140c4:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900140c8:	9111      	str	r1, [sp, #68]	@ 0x44
900140ca:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900140ce:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900140d2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900140d6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900140da:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900140de:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900140e2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900140e6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900140ea:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
900140ee:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
900140f2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
900140f6:	f1be 0f00 	cmp.w	lr, #0
900140fa:	d031      	beq.n	90014160 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
900140fc:	9e11      	ldr	r6, [sp, #68]	@ 0x44
900140fe:	4450      	add	r0, sl
90014100:	ee76 6aa4 	vadd.f32	s13, s13, s9
90014104:	4431      	add	r1, r6
90014106:	ee37 7a04 	vadd.f32	s14, s14, s8
9001410a:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001410e:	4549      	cmp	r1, r9
90014110:	db08      	blt.n	90014124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90014112:	ee77 7a85 	vadd.f32	s15, s15, s10
90014116:	3001      	adds	r0, #1
90014118:	ee76 6aa5 	vadd.f32	s13, s13, s11
9001411c:	eba1 0109 	sub.w	r1, r1, r9
90014120:	ee37 7a06 	vadd.f32	s14, s14, s12
90014124:	f10e 3eff 	add.w	lr, lr, #4294967295
90014128:	f04f 0801 	mov.w	r8, #1
9001412c:	e7e3      	b.n	900140f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
9001412e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90014130:	4450      	add	r0, sl
90014132:	ee37 7a24 	vadd.f32	s14, s14, s9
90014136:	4431      	add	r1, r6
90014138:	ee77 7a84 	vadd.f32	s15, s15, s8
9001413c:	ee76 6aa3 	vadd.f32	s13, s13, s7
90014140:	4541      	cmp	r1, r8
90014142:	db08      	blt.n	90014156 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90014144:	ee76 6a85 	vadd.f32	s13, s13, s10
90014148:	3001      	adds	r0, #1
9001414a:	ee37 7a25 	vadd.f32	s14, s14, s11
9001414e:	eba1 0108 	sub.w	r1, r1, r8
90014152:	ee77 7a86 	vadd.f32	s15, s15, s12
90014156:	f10c 3cff 	add.w	ip, ip, #4294967295
9001415a:	f04f 0901 	mov.w	r9, #1
9001415e:	e79b      	b.n	90014098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90014160:	449c      	add	ip, r3
90014162:	1aff      	subs	r7, r7, r3
90014164:	f1b8 0f00 	cmp.w	r8, #0
90014168:	d009      	beq.n	9001417e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
9001416a:	9019      	str	r0, [sp, #100]	@ 0x64
9001416c:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90014170:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90014174:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90014178:	911d      	str	r1, [sp, #116]	@ 0x74
9001417a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
9001417e:	1ad2      	subs	r2, r2, r3
90014180:	e68b      	b.n	90013e9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014182:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014184:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90014186:	2b00      	cmp	r3, #0
90014188:	f000 80d1 	beq.w	9001432e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
9001418c:	ad19      	add	r5, sp, #100	@ 0x64
9001418e:	ac39      	add	r4, sp, #228	@ 0xe4
90014190:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014192:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014196:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001419a:	930c      	str	r3, [sp, #48]	@ 0x30
9001419c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001419e:	6963      	ldr	r3, [r4, #20]
900141a0:	440b      	add	r3, r1
900141a2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900141a6:	4408      	add	r0, r1
900141a8:	b200      	sxth	r0, r0
900141aa:	4283      	cmp	r3, r0
900141ac:	900d      	str	r0, [sp, #52]	@ 0x34
900141ae:	f280 80c1 	bge.w	90014334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900141b2:	428b      	cmp	r3, r1
900141b4:	da08      	bge.n	900141c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900141b6:	2a00      	cmp	r2, #0
900141b8:	dd06      	ble.n	900141c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900141ba:	1acb      	subs	r3, r1, r3
900141bc:	429a      	cmp	r2, r3
900141be:	f2c0 80bb 	blt.w	90014338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900141c2:	2b00      	cmp	r3, #0
900141c4:	f300 80b9 	bgt.w	9001433a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
900141c8:	6967      	ldr	r7, [r4, #20]
900141ca:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
900141ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900141d0:	443b      	add	r3, r7
900141d2:	461f      	mov	r7, r3
900141d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900141d6:	1bdf      	subs	r7, r3, r7
900141d8:	4297      	cmp	r7, r2
900141da:	bfa8      	it	ge
900141dc:	4617      	movge	r7, r2
900141de:	2f00      	cmp	r7, #0
900141e0:	f340 813c 	ble.w	9001445c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
900141e4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900141e6:	6829      	ldr	r1, [r5, #0]
900141e8:	f9b3 2000 	ldrsh.w	r2, [r3]
900141ec:	f9bb 3000 	ldrsh.w	r3, [fp]
900141f0:	4411      	add	r1, r2
900141f2:	6820      	ldr	r0, [r4, #0]
900141f4:	4299      	cmp	r1, r3
900141f6:	dd1a      	ble.n	9001422e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
900141f8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900141fc:	4402      	add	r2, r0
900141fe:	440b      	add	r3, r1
90014200:	b21b      	sxth	r3, r3
90014202:	429a      	cmp	r2, r3
90014204:	dc13      	bgt.n	9001422e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90014206:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90014208:	a912      	add	r1, sp, #72	@ 0x48
9001420a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001420c:	9809      	ldr	r0, [sp, #36]	@ 0x24
9001420e:	681b      	ldr	r3, [r3, #0]
90014210:	9206      	str	r2, [sp, #24]
90014212:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90014214:	9500      	str	r5, [sp, #0]
90014216:	9205      	str	r2, [sp, #20]
90014218:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001421a:	e9cd b203 	strd	fp, r2, [sp, #12]
9001421e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90014220:	e9cd 8201 	strd	r8, r2, [sp, #4]
90014224:	aa49      	add	r2, sp, #292	@ 0x124
90014226:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
9001422a:	4623      	mov	r3, r4
9001422c:	47c8      	blx	r9
9001422e:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90014232:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90014236:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
9001423a:	ee37 7a27 	vadd.f32	s14, s14, s15
9001423e:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90014242:	68a1      	ldr	r1, [r4, #8]
90014244:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014248:	ed94 6a08 	vldr	s12, [r4, #32]
9001424c:	edd4 6a07 	vldr	s13, [r4, #28]
90014250:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014254:	ee76 6a86 	vadd.f32	s13, s13, s12
90014258:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
9001425c:	e9d4 2300 	ldrd	r2, r3, [r4]
90014260:	edc4 6a07 	vstr	s13, [r4, #28]
90014264:	441a      	add	r2, r3
90014266:	6963      	ldr	r3, [r4, #20]
90014268:	3301      	adds	r3, #1
9001426a:	6022      	str	r2, [r4, #0]
9001426c:	6163      	str	r3, [r4, #20]
9001426e:	69a3      	ldr	r3, [r4, #24]
90014270:	3b01      	subs	r3, #1
90014272:	61a3      	str	r3, [r4, #24]
90014274:	6923      	ldr	r3, [r4, #16]
90014276:	440b      	add	r3, r1
90014278:	68e1      	ldr	r1, [r4, #12]
9001427a:	428b      	cmp	r3, r1
9001427c:	6123      	str	r3, [r4, #16]
9001427e:	db15      	blt.n	900142ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90014280:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90014284:	3201      	adds	r2, #1
90014286:	1a5b      	subs	r3, r3, r1
90014288:	ee76 6a26 	vadd.f32	s13, s12, s13
9001428c:	6022      	str	r2, [r4, #0]
9001428e:	6123      	str	r3, [r4, #16]
90014290:	edc4 6a07 	vstr	s13, [r4, #28]
90014294:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90014298:	ee36 7a87 	vadd.f32	s14, s13, s14
9001429c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900142a0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
900142a4:	ee77 7a27 	vadd.f32	s15, s14, s15
900142a8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900142ac:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
900142b0:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
900142b4:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
900142b8:	ee37 7a27 	vadd.f32	s14, s14, s15
900142bc:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
900142c0:	68a9      	ldr	r1, [r5, #8]
900142c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
900142c6:	ed95 6a08 	vldr	s12, [r5, #32]
900142ca:	edd5 6a07 	vldr	s13, [r5, #28]
900142ce:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900142d2:	ee76 6a86 	vadd.f32	s13, s13, s12
900142d6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900142da:	e9d5 2300 	ldrd	r2, r3, [r5]
900142de:	edc5 6a07 	vstr	s13, [r5, #28]
900142e2:	441a      	add	r2, r3
900142e4:	696b      	ldr	r3, [r5, #20]
900142e6:	3301      	adds	r3, #1
900142e8:	602a      	str	r2, [r5, #0]
900142ea:	616b      	str	r3, [r5, #20]
900142ec:	69ab      	ldr	r3, [r5, #24]
900142ee:	3b01      	subs	r3, #1
900142f0:	61ab      	str	r3, [r5, #24]
900142f2:	692b      	ldr	r3, [r5, #16]
900142f4:	440b      	add	r3, r1
900142f6:	68e9      	ldr	r1, [r5, #12]
900142f8:	428b      	cmp	r3, r1
900142fa:	612b      	str	r3, [r5, #16]
900142fc:	db15      	blt.n	9001432a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
900142fe:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90014302:	3201      	adds	r2, #1
90014304:	1a5b      	subs	r3, r3, r1
90014306:	ee76 6a26 	vadd.f32	s13, s12, s13
9001430a:	602a      	str	r2, [r5, #0]
9001430c:	612b      	str	r3, [r5, #16]
9001430e:	edc5 6a07 	vstr	s13, [r5, #28]
90014312:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90014316:	ee36 7a87 	vadd.f32	s14, s13, s14
9001431a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001431e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90014322:	ee77 7a27 	vadd.f32	s15, s14, s15
90014326:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001432a:	3f01      	subs	r7, #1
9001432c:	e757      	b.n	900141de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
9001432e:	ad39      	add	r5, sp, #228	@ 0xe4
90014330:	ac19      	add	r4, sp, #100	@ 0x64
90014332:	e72d      	b.n	90014190 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90014334:	4613      	mov	r3, r2
90014336:	e744      	b.n	900141c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90014338:	4613      	mov	r3, r2
9001433a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
9001433c:	469e      	mov	lr, r3
9001433e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
90014342:	461f      	mov	r7, r3
90014344:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90014348:	f04f 0900 	mov.w	r9, #0
9001434c:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90014350:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
90014354:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90014358:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
9001435c:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90014360:	993d      	ldr	r1, [sp, #244]	@ 0xf4
90014362:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
90014366:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
9001436a:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
9001436e:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
90014372:	960e      	str	r6, [sp, #56]	@ 0x38
90014374:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90014378:	2f00      	cmp	r7, #0
9001437a:	d146      	bne.n	9001440a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
9001437c:	449c      	add	ip, r3
9001437e:	1ad7      	subs	r7, r2, r3
90014380:	f1b9 0f00 	cmp.w	r9, #0
90014384:	d009      	beq.n	9001439a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90014386:	9039      	str	r0, [sp, #228]	@ 0xe4
90014388:	913d      	str	r1, [sp, #244]	@ 0xf4
9001438a:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
9001438e:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90014392:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
90014396:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
9001439a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
9001439c:	f04f 0800 	mov.w	r8, #0
900143a0:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900143a4:	910e      	str	r1, [sp, #56]	@ 0x38
900143a6:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900143aa:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900143ae:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900143b2:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900143b6:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900143ba:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900143be:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900143c2:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900143c6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
900143ca:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
900143ce:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
900143d2:	f1be 0f00 	cmp.w	lr, #0
900143d6:	d030      	beq.n	9001443a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
900143d8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
900143da:	4450      	add	r0, sl
900143dc:	ee76 6aa4 	vadd.f32	s13, s13, s9
900143e0:	4431      	add	r1, r6
900143e2:	ee37 7a04 	vadd.f32	s14, s14, s8
900143e6:	ee77 7aa3 	vadd.f32	s15, s15, s7
900143ea:	4549      	cmp	r1, r9
900143ec:	db08      	blt.n	90014400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
900143ee:	ee77 7a85 	vadd.f32	s15, s15, s10
900143f2:	3001      	adds	r0, #1
900143f4:	ee76 6aa5 	vadd.f32	s13, s13, s11
900143f8:	eba1 0109 	sub.w	r1, r1, r9
900143fc:	ee37 7a06 	vadd.f32	s14, s14, s12
90014400:	f10e 3eff 	add.w	lr, lr, #4294967295
90014404:	f04f 0801 	mov.w	r8, #1
90014408:	e7e3      	b.n	900143d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9001440a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
9001440c:	4450      	add	r0, sl
9001440e:	ee37 7a24 	vadd.f32	s14, s14, s9
90014412:	4431      	add	r1, r6
90014414:	ee77 7a84 	vadd.f32	s15, s15, s8
90014418:	ee76 6aa3 	vadd.f32	s13, s13, s7
9001441c:	4541      	cmp	r1, r8
9001441e:	db08      	blt.n	90014432 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90014420:	ee76 6a85 	vadd.f32	s13, s13, s10
90014424:	3001      	adds	r0, #1
90014426:	ee37 7a25 	vadd.f32	s14, s14, s11
9001442a:	eba1 0108 	sub.w	r1, r1, r8
9001442e:	ee77 7a86 	vadd.f32	s15, s15, s12
90014432:	3f01      	subs	r7, #1
90014434:	f04f 0901 	mov.w	r9, #1
90014438:	e79e      	b.n	90014378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
9001443a:	449c      	add	ip, r3
9001443c:	1aff      	subs	r7, r7, r3
9001443e:	f1b8 0f00 	cmp.w	r8, #0
90014442:	d009      	beq.n	90014458 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90014444:	9019      	str	r0, [sp, #100]	@ 0x64
90014446:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
9001444a:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
9001444e:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90014452:	911d      	str	r1, [sp, #116]	@ 0x74
90014454:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90014458:	1ad2      	subs	r2, r2, r3
9001445a:	e6b5      	b.n	900141c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001445c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001445e:	681b      	ldr	r3, [r3, #0]
90014460:	b923      	cbnz	r3, 9001446c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014462:	4b04      	ldr	r3, [pc, #16]	@ (90014474 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90014464:	6818      	ldr	r0, [r3, #0]
90014466:	6803      	ldr	r3, [r0, #0]
90014468:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001446a:	4798      	blx	r3
9001446c:	b05b      	add	sp, #364	@ 0x16c
9001446e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014472:	bf00      	nop
90014474:	24021c5c 	.word	0x24021c5c

90014478 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90014478:	b570      	push	{r4, r5, r6, lr}
9001447a:	4604      	mov	r4, r0
9001447c:	2500      	movs	r5, #0
9001447e:	9805      	ldr	r0, [sp, #20]
90014480:	f89d 601c 	ldrb.w	r6, [sp, #28]
90014484:	6061      	str	r1, [r4, #4]
90014486:	8263      	strh	r3, [r4, #18]
90014488:	f89d 1010 	ldrb.w	r1, [sp, #16]
9001448c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014490:	8025      	strh	r5, [r4, #0]
90014492:	7221      	strb	r1, [r4, #8]
90014494:	7266      	strb	r6, [r4, #9]
90014496:	60e0      	str	r0, [r4, #12]
90014498:	8222      	strh	r2, [r4, #16]
9001449a:	82a3      	strh	r3, [r4, #20]
9001449c:	82e5      	strh	r5, [r4, #22]
9001449e:	8325      	strh	r5, [r4, #24]
900144a0:	8365      	strh	r5, [r4, #26]
900144a2:	83a5      	strh	r5, [r4, #28]
900144a4:	83e5      	strh	r5, [r4, #30]
900144a6:	8425      	strh	r5, [r4, #32]
900144a8:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
900144ac:	b32e      	cbz	r6, 900144fa <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900144ae:	6803      	ldr	r3, [r0, #0]
900144b0:	695b      	ldr	r3, [r3, #20]
900144b2:	4798      	blx	r3
900144b4:	4606      	mov	r6, r0
900144b6:	b300      	cbz	r0, 900144fa <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900144b8:	68e0      	ldr	r0, [r4, #12]
900144ba:	4631      	mov	r1, r6
900144bc:	6803      	ldr	r3, [r0, #0]
900144be:	68db      	ldr	r3, [r3, #12]
900144c0:	4798      	blx	r3
900144c2:	4605      	mov	r5, r0
900144c4:	b1c8      	cbz	r0, 900144fa <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900144c6:	7b43      	ldrb	r3, [r0, #13]
900144c8:	7a82      	ldrb	r2, [r0, #10]
900144ca:	005b      	lsls	r3, r3, #1
900144cc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900144d0:	4313      	orrs	r3, r2
900144d2:	8423      	strh	r3, [r4, #32]
900144d4:	7a63      	ldrb	r3, [r4, #9]
900144d6:	2b06      	cmp	r3, #6
900144d8:	d10f      	bne.n	900144fa <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900144da:	68e0      	ldr	r0, [r4, #12]
900144dc:	462a      	mov	r2, r5
900144de:	4631      	mov	r1, r6
900144e0:	6803      	ldr	r3, [r0, #0]
900144e2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900144e4:	4798      	blx	r3
900144e6:	7b6b      	ldrb	r3, [r5, #13]
900144e8:	005b      	lsls	r3, r3, #1
900144ea:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900144ee:	7aab      	ldrb	r3, [r5, #10]
900144f0:	4313      	orrs	r3, r2
900144f2:	4418      	add	r0, r3
900144f4:	8c23      	ldrh	r3, [r4, #32]
900144f6:	4418      	add	r0, r3
900144f8:	8420      	strh	r0, [r4, #32]
900144fa:	4620      	mov	r0, r4
900144fc:	bd70      	pop	{r4, r5, r6, pc}

900144fe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
900144fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014502:	2400      	movs	r4, #0
90014504:	b085      	sub	sp, #20
90014506:	4681      	mov	r9, r0
90014508:	4688      	mov	r8, r1
9001450a:	4692      	mov	sl, r2
9001450c:	469b      	mov	fp, r3
9001450e:	4627      	mov	r7, r4
90014510:	4625      	mov	r5, r4
90014512:	4626      	mov	r6, r4
90014514:	4554      	cmp	r4, sl
90014516:	da2a      	bge.n	9001456e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90014518:	2300      	movs	r3, #0
9001451a:	9303      	str	r3, [sp, #12]
9001451c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014520:	429d      	cmp	r5, r3
90014522:	d004      	beq.n	9001452e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90014524:	f242 030b 	movw	r3, #8203	@ 0x200b
90014528:	429d      	cmp	r5, r3
9001452a:	bf18      	it	ne
9001452c:	462f      	movne	r7, r5
9001452e:	ab03      	add	r3, sp, #12
90014530:	4642      	mov	r2, r8
90014532:	4659      	mov	r1, fp
90014534:	4648      	mov	r0, r9
90014536:	f003 fa7f 	bl	90017a38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001453a:	4605      	mov	r5, r0
9001453c:	b1b8      	cbz	r0, 9001456e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001453e:	280a      	cmp	r0, #10
90014540:	d015      	beq.n	9001456e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90014542:	9a03      	ldr	r2, [sp, #12]
90014544:	b18a      	cbz	r2, 9001456a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90014546:	7b50      	ldrb	r0, [r2, #13]
90014548:	4639      	mov	r1, r7
9001454a:	7a93      	ldrb	r3, [r2, #10]
9001454c:	0040      	lsls	r0, r0, #1
9001454e:	8895      	ldrh	r5, [r2, #4]
90014550:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90014554:	4303      	orrs	r3, r0
90014556:	4640      	mov	r0, r8
90014558:	9301      	str	r3, [sp, #4]
9001455a:	f8d8 3000 	ldr.w	r3, [r8]
9001455e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90014560:	4798      	blx	r3
90014562:	9b01      	ldr	r3, [sp, #4]
90014564:	4418      	add	r0, r3
90014566:	4406      	add	r6, r0
90014568:	b2b6      	uxth	r6, r6
9001456a:	3401      	adds	r4, #1
9001456c:	e7d2      	b.n	90014514 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
9001456e:	4630      	mov	r0, r6
90014570:	b005      	add	sp, #20
90014572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90014576 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90014576:	2a02      	cmp	r2, #2
90014578:	b530      	push	{r4, r5, lr}
9001457a:	d011      	beq.n	900145a0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
9001457c:	2a03      	cmp	r2, #3
9001457e:	d01c      	beq.n	900145ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90014580:	2a01      	cmp	r2, #1
90014582:	d10c      	bne.n	9001459e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90014584:	888b      	ldrh	r3, [r1, #4]
90014586:	8801      	ldrh	r1, [r0, #0]
90014588:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
9001458c:	1a5b      	subs	r3, r3, r1
9001458e:	8844      	ldrh	r4, [r0, #2]
90014590:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90014594:	1a9b      	subs	r3, r3, r2
90014596:	8004      	strh	r4, [r0, #0]
90014598:	8081      	strh	r1, [r0, #4]
9001459a:	8043      	strh	r3, [r0, #2]
9001459c:	80c2      	strh	r2, [r0, #6]
9001459e:	bd30      	pop	{r4, r5, pc}
900145a0:	88cb      	ldrh	r3, [r1, #6]
900145a2:	8842      	ldrh	r2, [r0, #2]
900145a4:	1a9b      	subs	r3, r3, r2
900145a6:	88c2      	ldrh	r2, [r0, #6]
900145a8:	1a9b      	subs	r3, r3, r2
900145aa:	888a      	ldrh	r2, [r1, #4]
900145ac:	8801      	ldrh	r1, [r0, #0]
900145ae:	8043      	strh	r3, [r0, #2]
900145b0:	1a52      	subs	r2, r2, r1
900145b2:	8881      	ldrh	r1, [r0, #4]
900145b4:	1a52      	subs	r2, r2, r1
900145b6:	8002      	strh	r2, [r0, #0]
900145b8:	e7f1      	b.n	9001459e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900145ba:	88cb      	ldrh	r3, [r1, #6]
900145bc:	8841      	ldrh	r1, [r0, #2]
900145be:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900145c2:	1a5b      	subs	r3, r3, r1
900145c4:	f9b0 5000 	ldrsh.w	r5, [r0]
900145c8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
900145cc:	1a9b      	subs	r3, r3, r2
900145ce:	8045      	strh	r5, [r0, #2]
900145d0:	8082      	strh	r2, [r0, #4]
900145d2:	8003      	strh	r3, [r0, #0]
900145d4:	80c4      	strh	r4, [r0, #6]
900145d6:	e7e2      	b.n	9001459e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

900145d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
900145d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900145dc:	b09f      	sub	sp, #124	@ 0x7c
900145de:	920f      	str	r2, [sp, #60]	@ 0x3c
900145e0:	9312      	str	r3, [sp, #72]	@ 0x48
900145e2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900145e4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900145e6:	8812      	ldrh	r2, [r2, #0]
900145e8:	889b      	ldrh	r3, [r3, #4]
900145ea:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900145ec:	4413      	add	r3, r2
900145ee:	900e      	str	r0, [sp, #56]	@ 0x38
900145f0:	6828      	ldr	r0, [r5, #0]
900145f2:	b21b      	sxth	r3, r3
900145f4:	9117      	str	r1, [sp, #92]	@ 0x5c
900145f6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
900145fa:	9311      	str	r3, [sp, #68]	@ 0x44
900145fc:	6803      	ldr	r3, [r0, #0]
900145fe:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
90014602:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90014604:	4798      	blx	r3
90014606:	682b      	ldr	r3, [r5, #0]
90014608:	9013      	str	r0, [sp, #76]	@ 0x4c
9001460a:	7b1a      	ldrb	r2, [r3, #12]
9001460c:	7adb      	ldrb	r3, [r3, #11]
9001460e:	9215      	str	r2, [sp, #84]	@ 0x54
90014610:	9316      	str	r3, [sp, #88]	@ 0x58
90014612:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
90014616:	2c00      	cmp	r4, #0
90014618:	d067      	beq.n	900146ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
9001461a:	7c2b      	ldrb	r3, [r5, #16]
9001461c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
9001461e:	2b06      	cmp	r3, #6
90014620:	bf14      	ite	ne
90014622:	2301      	movne	r3, #1
90014624:	2302      	moveq	r3, #2
90014626:	4413      	add	r3, r2
90014628:	f04f 0900 	mov.w	r9, #0
9001462c:	9310      	str	r3, [sp, #64]	@ 0x40
9001462e:	464c      	mov	r4, r9
90014630:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
90014634:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90014638:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001463a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001463c:	4293      	cmp	r3, r2
9001463e:	f280 808b 	bge.w	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90014642:	2300      	movs	r3, #0
90014644:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90014648:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
9001464c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014650:	429c      	cmp	r4, r3
90014652:	d006      	beq.n	90014662 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90014654:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014656:	f242 020b 	movw	r2, #8203	@ 0x200b
9001465a:	4294      	cmp	r4, r2
9001465c:	bf18      	it	ne
9001465e:	4623      	movne	r3, r4
90014660:	930c      	str	r3, [sp, #48]	@ 0x30
90014662:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014664:	992d      	ldr	r1, [sp, #180]	@ 0xb4
90014666:	682a      	ldr	r2, [r5, #0]
90014668:	428b      	cmp	r3, r1
9001466a:	db40      	blt.n	900146ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
9001466c:	6813      	ldr	r3, [r2, #0]
9001466e:	4610      	mov	r0, r2
90014670:	695b      	ldr	r3, [r3, #20]
90014672:	4798      	blx	r3
90014674:	4604      	mov	r4, r0
90014676:	6828      	ldr	r0, [r5, #0]
90014678:	aa1d      	add	r2, sp, #116	@ 0x74
9001467a:	4621      	mov	r1, r4
9001467c:	6803      	ldr	r3, [r0, #0]
9001467e:	689f      	ldr	r7, [r3, #8]
90014680:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90014684:	47b8      	blx	r7
90014686:	901c      	str	r0, [sp, #112]	@ 0x70
90014688:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001468c:	429c      	cmp	r4, r3
9001468e:	f000 80eb 	beq.w	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014692:	f242 030b 	movw	r3, #8203	@ 0x200b
90014696:	429c      	cmp	r4, r3
90014698:	f000 80e6 	beq.w	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001469c:	2c00      	cmp	r4, #0
9001469e:	f000 810d 	beq.w	900148bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900146a2:	2c0a      	cmp	r4, #10
900146a4:	d05e      	beq.n	90014764 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900146a6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900146a8:	b36a      	cbz	r2, 90014706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900146aa:	8894      	ldrh	r4, [r2, #4]
900146ac:	f1bb 0f00 	cmp.w	fp, #0
900146b0:	d03a      	beq.n	90014728 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900146b2:	f892 900d 	ldrb.w	r9, [r2, #13]
900146b6:	f1bb 0f01 	cmp.w	fp, #1
900146ba:	ea4f 0949 	mov.w	r9, r9, lsl #1
900146be:	f409 7380 	and.w	r3, r9, #256	@ 0x100
900146c2:	f892 900a 	ldrb.w	r9, [r2, #10]
900146c6:	ea49 0903 	orr.w	r9, r9, r3
900146ca:	d133      	bne.n	90014734 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
900146cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900146ce:	eba6 0609 	sub.w	r6, r6, r9
900146d2:	2b00      	cmp	r3, #0
900146d4:	d14d      	bne.n	90014772 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900146d6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
900146d8:	eb09 0306 	add.w	r3, r9, r6
900146dc:	4413      	add	r3, r2
900146de:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900146e0:	f9b2 2000 	ldrsh.w	r2, [r2]
900146e4:	4293      	cmp	r3, r2
900146e6:	da4e      	bge.n	90014786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900146e8:	e036      	b.n	90014758 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900146ea:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900146ec:	e79c      	b.n	90014628 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
900146ee:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900146f2:	4659      	mov	r1, fp
900146f4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900146f6:	9301      	str	r3, [sp, #4]
900146f8:	ab1d      	add	r3, sp, #116	@ 0x74
900146fa:	9300      	str	r3, [sp, #0]
900146fc:	ab1c      	add	r3, sp, #112	@ 0x70
900146fe:	f003 f9e4 	bl	90017aca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90014702:	4604      	mov	r4, r0
90014704:	e7c0      	b.n	90014688 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90014706:	6828      	ldr	r0, [r5, #0]
90014708:	6803      	ldr	r3, [r0, #0]
9001470a:	691b      	ldr	r3, [r3, #16]
9001470c:	4798      	blx	r3
9001470e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90014712:	4298      	cmp	r0, r3
90014714:	f000 80a8 	beq.w	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014718:	f242 030b 	movw	r3, #8203	@ 0x200b
9001471c:	4298      	cmp	r0, r3
9001471e:	f000 80a3 	beq.w	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014722:	f1bb 0f00 	cmp.w	fp, #0
90014726:	d100      	bne.n	9001472a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90014728:	444e      	add	r6, r9
9001472a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
9001472c:	2a00      	cmp	r2, #0
9001472e:	d1c0      	bne.n	900146b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90014730:	4691      	mov	r9, r2
90014732:	e099      	b.n	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014734:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014736:	2b00      	cmp	r3, #0
90014738:	f000 80c2 	beq.w	900148c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
9001473c:	f1bb 0f00 	cmp.w	fp, #0
90014740:	d117      	bne.n	90014772 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90014742:	6828      	ldr	r0, [r5, #0]
90014744:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014746:	6803      	ldr	r3, [r0, #0]
90014748:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001474a:	4798      	blx	r3
9001474c:	4406      	add	r6, r0
9001474e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90014750:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90014752:	1af3      	subs	r3, r6, r3
90014754:	4293      	cmp	r3, r2
90014756:	dd16      	ble.n	90014786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90014758:	2c00      	cmp	r4, #0
9001475a:	f000 80af 	beq.w	900148bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001475e:	2c0a      	cmp	r4, #10
90014760:	f040 809d 	bne.w	9001489e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90014764:	240a      	movs	r4, #10
90014766:	fab4 f084 	clz	r0, r4
9001476a:	0940      	lsrs	r0, r0, #5
9001476c:	b01f      	add	sp, #124	@ 0x7c
9001476e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014772:	6828      	ldr	r0, [r5, #0]
90014774:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014776:	6803      	ldr	r3, [r0, #0]
90014778:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001477a:	4798      	blx	r3
9001477c:	f1bb 0f01 	cmp.w	fp, #1
90014780:	eba6 0600 	sub.w	r6, r6, r0
90014784:	d0a7      	beq.n	900146d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90014786:	981c      	ldr	r0, [sp, #112]	@ 0x70
90014788:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001478a:	f990 1009 	ldrsb.w	r1, [r0, #9]
9001478e:	f9b3 8000 	ldrsh.w	r8, [r3]
90014792:	7b43      	ldrb	r3, [r0, #13]
90014794:	4431      	add	r1, r6
90014796:	015b      	lsls	r3, r3, #5
90014798:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001479c:	7983      	ldrb	r3, [r0, #6]
9001479e:	4313      	orrs	r3, r2
900147a0:	440b      	add	r3, r1
900147a2:	4543      	cmp	r3, r8
900147a4:	db60      	blt.n	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900147a6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900147a8:	4299      	cmp	r1, r3
900147aa:	da5d      	bge.n	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900147ac:	6828      	ldr	r0, [r5, #0]
900147ae:	45b0      	cmp	r8, r6
900147b0:	6803      	ldr	r3, [r0, #0]
900147b2:	bfcc      	ite	gt
900147b4:	eba8 0806 	subgt.w	r8, r8, r6
900147b8:	f04f 0800 	movle.w	r8, #0
900147bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900147be:	bfc8      	it	gt
900147c0:	fa1f f888 	uxthgt.w	r8, r8
900147c4:	4798      	blx	r3
900147c6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900147c8:	7b53      	ldrb	r3, [r2, #13]
900147ca:	00d9      	lsls	r1, r3, #3
900147cc:	f401 7780 	and.w	r7, r1, #256	@ 0x100
900147d0:	7a11      	ldrb	r1, [r2, #8]
900147d2:	4339      	orrs	r1, r7
900147d4:	065f      	lsls	r7, r3, #25
900147d6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
900147d8:	bf48      	it	mi
900147da:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
900147de:	4407      	add	r7, r0
900147e0:	bf48      	it	mi
900147e2:	b209      	sxthmi	r1, r1
900147e4:	1a7f      	subs	r7, r7, r1
900147e6:	9929      	ldr	r1, [sp, #164]	@ 0xa4
900147e8:	b2bf      	uxth	r7, r7
900147ea:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
900147ee:	fa0f fa87 	sxth.w	sl, r7
900147f2:	4551      	cmp	r1, sl
900147f4:	dd3c      	ble.n	90014870 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
900147f6:	011b      	lsls	r3, r3, #4
900147f8:	79d0      	ldrb	r0, [r2, #7]
900147fa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900147fe:	4303      	orrs	r3, r0
90014800:	449a      	add	sl, r3
90014802:	4551      	cmp	r1, sl
90014804:	dc30      	bgt.n	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014806:	1bcf      	subs	r7, r1, r7
90014808:	468a      	mov	sl, r1
9001480a:	b23f      	sxth	r7, r7
9001480c:	9219      	str	r2, [sp, #100]	@ 0x64
9001480e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90014810:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90014812:	6828      	ldr	r0, [r5, #0]
90014814:	2a00      	cmp	r2, #0
90014816:	d12d      	bne.n	90014874 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90014818:	9318      	str	r3, [sp, #96]	@ 0x60
9001481a:	b2bf      	uxth	r7, r7
9001481c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001481e:	6819      	ldr	r1, [r3, #0]
90014820:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
90014822:	6801      	ldr	r1, [r0, #0]
90014824:	9314      	str	r3, [sp, #80]	@ 0x50
90014826:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90014828:	4788      	blx	r1
9001482a:	79a9      	ldrb	r1, [r5, #6]
9001482c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001482e:	910b      	str	r1, [sp, #44]	@ 0x2c
90014830:	7ba9      	ldrb	r1, [r5, #14]
90014832:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90014834:	910a      	str	r1, [sp, #40]	@ 0x28
90014836:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
9001483a:	9109      	str	r1, [sp, #36]	@ 0x24
9001483c:	68a9      	ldr	r1, [r5, #8]
9001483e:	9306      	str	r3, [sp, #24]
90014840:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90014842:	9205      	str	r2, [sp, #20]
90014844:	9304      	str	r3, [sp, #16]
90014846:	f8cd a004 	str.w	sl, [sp, #4]
9001484a:	e9cd 8702 	strd	r8, r7, [sp, #8]
9001484e:	44b0      	add	r8, r6
90014850:	9f14      	ldr	r7, [sp, #80]	@ 0x50
90014852:	fa0f f388 	sxth.w	r3, r8
90014856:	9300      	str	r3, [sp, #0]
90014858:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001485a:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001485e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90014860:	681a      	ldr	r2, [r3, #0]
90014862:	980e      	ldr	r0, [sp, #56]	@ 0x38
90014864:	685b      	ldr	r3, [r3, #4]
90014866:	47b8      	blx	r7
90014868:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001486a:	3301      	adds	r3, #1
9001486c:	930d      	str	r3, [sp, #52]	@ 0x34
9001486e:	e6e3      	b.n	90014638 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90014870:	2700      	movs	r7, #0
90014872:	e7cb      	b.n	9001480c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90014874:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90014876:	f8d2 c008 	ldr.w	ip, [r2, #8]
9001487a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001487c:	f8dc 1000 	ldr.w	r1, [ip]
90014880:	e9cd 6204 	strd	r6, r2, [sp, #16]
90014884:	79aa      	ldrb	r2, [r5, #6]
90014886:	9203      	str	r2, [sp, #12]
90014888:	7baa      	ldrb	r2, [r5, #14]
9001488a:	9202      	str	r2, [sp, #8]
9001488c:	68aa      	ldr	r2, [r5, #8]
9001488e:	e9cd 0200 	strd	r0, r2, [sp]
90014892:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90014894:	4660      	mov	r0, ip
90014896:	688f      	ldr	r7, [r1, #8]
90014898:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001489a:	47b8      	blx	r7
9001489c:	e7e4      	b.n	90014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001489e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900148a0:	3501      	adds	r5, #1
900148a2:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900148a4:	429d      	cmp	r5, r3
900148a6:	f6bf af5e 	bge.w	90014766 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900148aa:	4659      	mov	r1, fp
900148ac:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900148ae:	f7f0 f935 	bl	90004b1c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900148b2:	4604      	mov	r4, r0
900148b4:	b110      	cbz	r0, 900148bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900148b6:	280a      	cmp	r0, #10
900148b8:	d1f2      	bne.n	900148a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
900148ba:	e753      	b.n	90014764 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900148bc:	2400      	movs	r4, #0
900148be:	e752      	b.n	90014766 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
900148c0:	f1bb 0f00 	cmp.w	fp, #0
900148c4:	f43f af43 	beq.w	9001474e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
900148c8:	e75d      	b.n	90014786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

900148ca <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
900148ca:	b530      	push	{r4, r5, lr}
900148cc:	8ac4      	ldrh	r4, [r0, #22]
900148ce:	8b45      	ldrh	r5, [r0, #26]
900148d0:	8343      	strh	r3, [r0, #26]
900148d2:	442c      	add	r4, r5
900148d4:	1ae4      	subs	r4, r4, r3
900148d6:	8b83      	ldrh	r3, [r0, #28]
900148d8:	82c4      	strh	r4, [r0, #22]
900148da:	8b04      	ldrh	r4, [r0, #24]
900148dc:	4422      	add	r2, r4
900148de:	440c      	add	r4, r1
900148e0:	1a59      	subs	r1, r3, r1
900148e2:	83c2      	strh	r2, [r0, #30]
900148e4:	8304      	strh	r4, [r0, #24]
900148e6:	8381      	strh	r1, [r0, #28]
900148e8:	bd30      	pop	{r4, r5, pc}

900148ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
900148ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900148ee:	4604      	mov	r4, r0
900148f0:	8a47      	ldrh	r7, [r0, #18]
900148f2:	68c0      	ldr	r0, [r0, #12]
900148f4:	b085      	sub	sp, #20
900148f6:	6803      	ldr	r3, [r0, #0]
900148f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900148fa:	4798      	blx	r3
900148fc:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90014900:	7a63      	ldrb	r3, [r4, #9]
90014902:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90014906:	3b01      	subs	r3, #1
90014908:	42b7      	cmp	r7, r6
9001490a:	bfac      	ite	ge
9001490c:	f04f 0900 	movge.w	r9, #0
90014910:	f04f 0901 	movlt.w	r9, #1
90014914:	2b05      	cmp	r3, #5
90014916:	d804      	bhi.n	90014922 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90014918:	e8df f003 	tbb	[pc, r3]
9001491c:	470f0854 	.word	0x470f0854
90014920:	4c4c      	.short	0x4c4c
90014922:	2500      	movs	r5, #0
90014924:	46a9      	mov	r9, r5
90014926:	462e      	mov	r6, r5
90014928:	462f      	mov	r7, r5
9001492a:	e00e      	b.n	9001494a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001492c:	42b7      	cmp	r7, r6
9001492e:	f04f 0500 	mov.w	r5, #0
90014932:	bfb4      	ite	lt
90014934:	2600      	movlt	r6, #0
90014936:	2601      	movge	r6, #1
90014938:	e7f6      	b.n	90014928 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
9001493a:	42b7      	cmp	r7, r6
9001493c:	464d      	mov	r5, r9
9001493e:	f04f 0900 	mov.w	r9, #0
90014942:	bfb4      	ite	lt
90014944:	2600      	movlt	r6, #0
90014946:	2601      	movge	r6, #1
90014948:	464f      	mov	r7, r9
9001494a:	f04f 0800 	mov.w	r8, #0
9001494e:	f8a4 8016 	strh.w	r8, [r4, #22]
90014952:	f8a4 8018 	strh.w	r8, [r4, #24]
90014956:	f8cd 8004 	str.w	r8, [sp, #4]
9001495a:	2300      	movs	r3, #0
9001495c:	9303      	str	r3, [sp, #12]
9001495e:	8823      	ldrh	r3, [r4, #0]
90014960:	2b20      	cmp	r3, #32
90014962:	d033      	beq.n	900149cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90014964:	f242 010b 	movw	r1, #8203	@ 0x200b
90014968:	1a5a      	subs	r2, r3, r1
9001496a:	f1d2 0a00 	rsbs	sl, r2, #0
9001496e:	eb4a 0a02 	adc.w	sl, sl, r2
90014972:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90014976:	4293      	cmp	r3, r2
90014978:	d008      	beq.n	9001498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001497a:	428b      	cmp	r3, r1
9001497c:	9a01      	ldr	r2, [sp, #4]
9001497e:	bf0e      	itee	eq
90014980:	f04f 0a01 	moveq.w	sl, #1
90014984:	461a      	movne	r2, r3
90014986:	f04f 0a00 	movne.w	sl, #0
9001498a:	9201      	str	r2, [sp, #4]
9001498c:	ab03      	add	r3, sp, #12
9001498e:	68e2      	ldr	r2, [r4, #12]
90014990:	7a21      	ldrb	r1, [r4, #8]
90014992:	6860      	ldr	r0, [r4, #4]
90014994:	f003 f850 	bl	90017a38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90014998:	8020      	strh	r0, [r4, #0]
9001499a:	b9d8      	cbnz	r0, 900149d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
9001499c:	8ba2      	ldrh	r2, [r4, #28]
9001499e:	2300      	movs	r3, #0
900149a0:	4611      	mov	r1, r2
900149a2:	4620      	mov	r0, r4
900149a4:	f7ff ff91 	bl	900148ca <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
900149a8:	e06e      	b.n	90014a88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900149aa:	2500      	movs	r5, #0
900149ac:	2701      	movs	r7, #1
900149ae:	46a9      	mov	r9, r5
900149b0:	462e      	mov	r6, r5
900149b2:	e7ca      	b.n	9001494a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900149b4:	42b7      	cmp	r7, r6
900149b6:	f04f 0500 	mov.w	r5, #0
900149ba:	bfb4      	ite	lt
900149bc:	2700      	movlt	r7, #0
900149be:	2701      	movge	r7, #1
900149c0:	462e      	mov	r6, r5
900149c2:	e7c2      	b.n	9001494a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900149c4:	2500      	movs	r5, #0
900149c6:	2601      	movs	r6, #1
900149c8:	46a9      	mov	r9, r5
900149ca:	e7ad      	b.n	90014928 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900149cc:	9301      	str	r3, [sp, #4]
900149ce:	f04f 0a01 	mov.w	sl, #1
900149d2:	e7db      	b.n	9001498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900149d4:	8b63      	ldrh	r3, [r4, #26]
900149d6:	280a      	cmp	r0, #10
900149d8:	f103 0301 	add.w	r3, r3, #1
900149dc:	8363      	strh	r3, [r4, #26]
900149de:	d0dd      	beq.n	9001499c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
900149e0:	9a03      	ldr	r2, [sp, #12]
900149e2:	bb62      	cbnz	r2, 90014a3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
900149e4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900149e8:	4298      	cmp	r0, r3
900149ea:	d003      	beq.n	900149f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900149ec:	f242 030b 	movw	r3, #8203	@ 0x200b
900149f0:	4298      	cmp	r0, r3
900149f2:	d1b2      	bne.n	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900149f4:	8823      	ldrh	r3, [r4, #0]
900149f6:	8ba1      	ldrh	r1, [r4, #28]
900149f8:	2b20      	cmp	r3, #32
900149fa:	d003      	beq.n	90014a04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
900149fc:	f242 000b 	movw	r0, #8203	@ 0x200b
90014a00:	4283      	cmp	r3, r0
90014a02:	d131      	bne.n	90014a68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90014a04:	f1ba 0f00 	cmp.w	sl, #0
90014a08:	bf0a      	itet	eq
90014a0a:	4688      	moveq	r8, r1
90014a0c:	4650      	movne	r0, sl
90014a0e:	2001      	moveq	r0, #1
90014a10:	440a      	add	r2, r1
90014a12:	8b23      	ldrh	r3, [r4, #24]
90014a14:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90014a18:	b292      	uxth	r2, r2
90014a1a:	83a2      	strh	r2, [r4, #28]
90014a1c:	4413      	add	r3, r2
90014a1e:	f1b9 0f00 	cmp.w	r9, #0
90014a22:	d102      	bne.n	90014a2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90014a24:	2d00      	cmp	r5, #0
90014a26:	d042      	beq.n	90014aae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90014a28:	b300      	cbz	r0, 90014a6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90014a2a:	8c21      	ldrh	r1, [r4, #32]
90014a2c:	4419      	add	r1, r3
90014a2e:	458c      	cmp	ip, r1
90014a30:	da37      	bge.n	90014aa2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014a32:	8ae1      	ldrh	r1, [r4, #22]
90014a34:	2900      	cmp	r1, #0
90014a36:	d034      	beq.n	90014aa2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014a38:	4563      	cmp	r3, ip
90014a3a:	dd8e      	ble.n	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014a3c:	e01d      	b.n	90014a7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90014a3e:	8893      	ldrh	r3, [r2, #4]
90014a40:	9901      	ldr	r1, [sp, #4]
90014a42:	8023      	strh	r3, [r4, #0]
90014a44:	f892 b00d 	ldrb.w	fp, [r2, #13]
90014a48:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90014a4c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90014a50:	f892 b00a 	ldrb.w	fp, [r2, #10]
90014a54:	ea4b 0b00 	orr.w	fp, fp, r0
90014a58:	68e0      	ldr	r0, [r4, #12]
90014a5a:	6803      	ldr	r3, [r0, #0]
90014a5c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90014a5e:	4798      	blx	r3
90014a60:	eb0b 0200 	add.w	r2, fp, r0
90014a64:	b292      	uxth	r2, r2
90014a66:	e7c5      	b.n	900149f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90014a68:	2000      	movs	r0, #0
90014a6a:	e7d1      	b.n	90014a10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90014a6c:	4563      	cmp	r3, ip
90014a6e:	f77f af74 	ble.w	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014a72:	8ae3      	ldrh	r3, [r4, #22]
90014a74:	2b00      	cmp	r3, #0
90014a76:	f43f af70 	beq.w	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014a7a:	2301      	movs	r3, #1
90014a7c:	8c22      	ldrh	r2, [r4, #32]
90014a7e:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90014a82:	8be3      	ldrh	r3, [r4, #30]
90014a84:	4413      	add	r3, r2
90014a86:	83e3      	strh	r3, [r4, #30]
90014a88:	68e0      	ldr	r0, [r4, #12]
90014a8a:	6803      	ldr	r3, [r0, #0]
90014a8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014a8e:	4798      	blx	r3
90014a90:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90014a94:	4418      	add	r0, r3
90014a96:	8a63      	ldrh	r3, [r4, #18]
90014a98:	1a18      	subs	r0, r3, r0
90014a9a:	8260      	strh	r0, [r4, #18]
90014a9c:	b005      	add	sp, #20
90014a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014aa2:	2300      	movs	r3, #0
90014aa4:	4611      	mov	r1, r2
90014aa6:	4620      	mov	r0, r4
90014aa8:	f7ff ff0f 	bl	900148ca <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014aac:	e755      	b.n	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014aae:	4563      	cmp	r3, ip
90014ab0:	dd14      	ble.n	90014adc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90014ab2:	b117      	cbz	r7, 90014aba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90014ab4:	2301      	movs	r3, #1
90014ab6:	460a      	mov	r2, r1
90014ab8:	e772      	b.n	900149a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90014aba:	2e00      	cmp	r6, #0
90014abc:	f43f af4d 	beq.w	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014ac0:	2800      	cmp	r0, #0
90014ac2:	f47f af4a 	bne.w	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014ac6:	f1ba 0f00 	cmp.w	sl, #0
90014aca:	d002      	beq.n	90014ad2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90014acc:	2301      	movs	r3, #1
90014ace:	4642      	mov	r2, r8
90014ad0:	e767      	b.n	900149a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90014ad2:	8ae3      	ldrh	r3, [r4, #22]
90014ad4:	2b00      	cmp	r3, #0
90014ad6:	f43f af40 	beq.w	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014ada:	e7d5      	b.n	90014a88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90014adc:	2800      	cmp	r0, #0
90014ade:	f47f af3c 	bne.w	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014ae2:	f1ba 0f00 	cmp.w	sl, #0
90014ae6:	f43f af38 	beq.w	9001495a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014aea:	2301      	movs	r3, #1
90014aec:	4642      	mov	r2, r8
90014aee:	e7da      	b.n	90014aa6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90014af0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90014af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014af4:	b0e3      	sub	sp, #396	@ 0x18c
90014af6:	461c      	mov	r4, r3
90014af8:	4683      	mov	fp, r0
90014afa:	4688      	mov	r8, r1
90014afc:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90014afe:	2b00      	cmp	r3, #0
90014b00:	f000 8112 	beq.w	90014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014b04:	6823      	ldr	r3, [r4, #0]
90014b06:	2b00      	cmp	r3, #0
90014b08:	f000 810e 	beq.w	90014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014b0c:	7ba3      	ldrb	r3, [r4, #14]
90014b0e:	2b00      	cmp	r3, #0
90014b10:	f000 810a 	beq.w	90014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014b14:	ad0a      	add	r5, sp, #40	@ 0x28
90014b16:	6810      	ldr	r0, [r2, #0]
90014b18:	6851      	ldr	r1, [r2, #4]
90014b1a:	462b      	mov	r3, r5
90014b1c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90014b20:	c303      	stmia	r3!, {r0, r1}
90014b22:	2100      	movs	r1, #0
90014b24:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90014b28:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90014b2c:	4628      	mov	r0, r5
90014b2e:	910c      	str	r1, [sp, #48]	@ 0x30
90014b30:	a90c      	add	r1, sp, #48	@ 0x30
90014b32:	79a2      	ldrb	r2, [r4, #6]
90014b34:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90014b38:	f7ff fd1d 	bl	90014576 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90014b3c:	a90c      	add	r1, sp, #48	@ 0x30
90014b3e:	79a2      	ldrb	r2, [r4, #6]
90014b40:	4608      	mov	r0, r1
90014b42:	f7ff fd18 	bl	90014576 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90014b46:	a817      	add	r0, sp, #92	@ 0x5c
90014b48:	f002 fc2e 	bl	900173a8 <_ZN8touchgfx12TextProviderC1Ev>
90014b4c:	6820      	ldr	r0, [r4, #0]
90014b4e:	6803      	ldr	r3, [r0, #0]
90014b50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90014b52:	4798      	blx	r3
90014b54:	4606      	mov	r6, r0
90014b56:	6820      	ldr	r0, [r4, #0]
90014b58:	6803      	ldr	r3, [r0, #0]
90014b5a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90014b5c:	4798      	blx	r3
90014b5e:	4633      	mov	r3, r6
90014b60:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90014b62:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90014b64:	9000      	str	r0, [sp, #0]
90014b66:	a817      	add	r0, sp, #92	@ 0x5c
90014b68:	f002 fc71 	bl	9001744e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014b6c:	6820      	ldr	r0, [r4, #0]
90014b6e:	f894 a004 	ldrb.w	sl, [r4, #4]
90014b72:	6803      	ldr	r3, [r0, #0]
90014b74:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014b76:	4798      	blx	r3
90014b78:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90014b7c:	6823      	ldr	r3, [r4, #0]
90014b7e:	4607      	mov	r7, r0
90014b80:	4406      	add	r6, r0
90014b82:	a830      	add	r0, sp, #192	@ 0xc0
90014b84:	f893 9009 	ldrb.w	r9, [r3, #9]
90014b88:	f002 fc0e 	bl	900173a8 <_ZN8touchgfx12TextProviderC1Ev>
90014b8c:	7c23      	ldrb	r3, [r4, #16]
90014b8e:	b17b      	cbz	r3, 90014bb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90014b90:	6820      	ldr	r0, [r4, #0]
90014b92:	6803      	ldr	r3, [r0, #0]
90014b94:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90014b96:	4798      	blx	r3
90014b98:	9009      	str	r0, [sp, #36]	@ 0x24
90014b9a:	6820      	ldr	r0, [r4, #0]
90014b9c:	6802      	ldr	r2, [r0, #0]
90014b9e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90014ba0:	4790      	blx	r2
90014ba2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014ba4:	9000      	str	r0, [sp, #0]
90014ba6:	a830      	add	r0, sp, #192	@ 0xc0
90014ba8:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90014baa:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90014bac:	f002 fc4f 	bl	9001744e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014bb0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90014bb4:	a80e      	add	r0, sp, #56	@ 0x38
90014bb6:	7be2      	ldrb	r2, [r4, #15]
90014bb8:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90014bbc:	1a8a      	subs	r2, r1, r2
90014bbe:	7c21      	ldrb	r1, [r4, #16]
90014bc0:	9103      	str	r1, [sp, #12]
90014bc2:	b292      	uxth	r2, r2
90014bc4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90014bc8:	9102      	str	r1, [sp, #8]
90014bca:	6821      	ldr	r1, [r4, #0]
90014bcc:	9101      	str	r1, [sp, #4]
90014bce:	7961      	ldrb	r1, [r4, #5]
90014bd0:	9100      	str	r1, [sp, #0]
90014bd2:	a930      	add	r1, sp, #192	@ 0xc0
90014bd4:	f7ff fc50 	bl	90014478 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90014bd8:	2e00      	cmp	r6, #0
90014bda:	dc5b      	bgt.n	90014c94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90014bdc:	af17      	add	r7, sp, #92	@ 0x5c
90014bde:	f04f 0900 	mov.w	r9, #0
90014be2:	7c23      	ldrb	r3, [r4, #16]
90014be4:	2b00      	cmp	r3, #0
90014be6:	f000 80b1 	beq.w	90014d4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90014bea:	a80e      	add	r0, sp, #56	@ 0x38
90014bec:	f7ff fe7d 	bl	900148ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014bf0:	f1ba 0f00 	cmp.w	sl, #0
90014bf4:	f000 80a5 	beq.w	90014d42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90014bf8:	7c23      	ldrb	r3, [r4, #16]
90014bfa:	2264      	movs	r2, #100	@ 0x64
90014bfc:	4639      	mov	r1, r7
90014bfe:	a849      	add	r0, sp, #292	@ 0x124
90014c00:	9309      	str	r3, [sp, #36]	@ 0x24
90014c02:	f012 fc76 	bl	900274f2 <memcpy>
90014c06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014c08:	2b00      	cmp	r3, #0
90014c0a:	f000 80a7 	beq.w	90014d5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90014c0e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90014c12:	7922      	ldrb	r2, [r4, #4]
90014c14:	2a01      	cmp	r2, #1
90014c16:	f040 808a 	bne.w	90014d2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90014c1a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90014c1e:	1ac0      	subs	r0, r0, r3
90014c20:	2302      	movs	r3, #2
90014c22:	fb90 f0f3 	sdiv	r0, r0, r3
90014c26:	b200      	sxth	r0, r0
90014c28:	7c23      	ldrb	r3, [r4, #16]
90014c2a:	2b00      	cmp	r3, #0
90014c2c:	f000 808b 	beq.w	90014d46 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90014c30:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90014c34:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90014c38:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90014c3c:	e9cd 2105 	strd	r2, r1, [sp, #20]
90014c40:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90014c44:	2100      	movs	r1, #0
90014c46:	4410      	add	r0, r2
90014c48:	4642      	mov	r2, r8
90014c4a:	b200      	sxth	r0, r0
90014c4c:	e9cd 9703 	strd	r9, r7, [sp, #12]
90014c50:	9000      	str	r0, [sp, #0]
90014c52:	4658      	mov	r0, fp
90014c54:	e9cd 5401 	strd	r5, r4, [sp, #4]
90014c58:	f7ff fcbe 	bl	900145d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90014c5c:	2800      	cmp	r0, #0
90014c5e:	d163      	bne.n	90014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014c60:	b2b2      	uxth	r2, r6
90014c62:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90014c66:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90014c6a:	4413      	add	r3, r2
90014c6c:	1a8a      	subs	r2, r1, r2
90014c6e:	b21b      	sxth	r3, r3
90014c70:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90014c74:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90014c78:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90014c7c:	2a00      	cmp	r2, #0
90014c7e:	d153      	bne.n	90014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014c80:	6822      	ldr	r2, [r4, #0]
90014c82:	8869      	ldrh	r1, [r5, #2]
90014c84:	7a12      	ldrb	r2, [r2, #8]
90014c86:	1a9b      	subs	r3, r3, r2
90014c88:	88ea      	ldrh	r2, [r5, #6]
90014c8a:	440a      	add	r2, r1
90014c8c:	b212      	sxth	r2, r2
90014c8e:	4293      	cmp	r3, r2
90014c90:	dda7      	ble.n	90014be2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90014c92:	e049      	b.n	90014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014c94:	7c23      	ldrb	r3, [r4, #16]
90014c96:	444f      	add	r7, r9
90014c98:	b1c3      	cbz	r3, 90014ccc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90014c9a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90014c9e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90014ca2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014ca6:	443b      	add	r3, r7
90014ca8:	4293      	cmp	r3, r2
90014caa:	da97      	bge.n	90014bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014cac:	a80e      	add	r0, sp, #56	@ 0x38
90014cae:	f7ff fe1c 	bl	900148ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014cb2:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90014cb6:	3b01      	subs	r3, #1
90014cb8:	b29b      	uxth	r3, r3
90014cba:	454b      	cmp	r3, r9
90014cbc:	9309      	str	r3, [sp, #36]	@ 0x24
90014cbe:	d021      	beq.n	90014d04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90014cc0:	7961      	ldrb	r1, [r4, #5]
90014cc2:	a817      	add	r0, sp, #92	@ 0x5c
90014cc4:	f7ef ff2a 	bl	90004b1c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90014cc8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014cca:	e7f4      	b.n	90014cb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90014ccc:	fa1f f986 	uxth.w	r9, r6
90014cd0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90014cd4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014cd8:	443b      	add	r3, r7
90014cda:	4293      	cmp	r3, r2
90014cdc:	f6bf af7e 	bge.w	90014bdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014ce0:	a817      	add	r0, sp, #92	@ 0x5c
90014ce2:	f002 ff75 	bl	90017bd0 <_ZN8touchgfx12TextProvider11getNextCharEv>
90014ce6:	b1f8      	cbz	r0, 90014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014ce8:	280a      	cmp	r0, #10
90014cea:	d1f1      	bne.n	90014cd0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90014cec:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90014cf0:	444b      	add	r3, r9
90014cf2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90014cf6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90014cfa:	eba3 0309 	sub.w	r3, r3, r9
90014cfe:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90014d02:	e7e5      	b.n	90014cd0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90014d04:	b2b3      	uxth	r3, r6
90014d06:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90014d0a:	441a      	add	r2, r3
90014d0c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90014d10:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90014d14:	1ad3      	subs	r3, r2, r3
90014d16:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90014d1a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90014d1e:	b11b      	cbz	r3, 90014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014d20:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90014d24:	2b00      	cmp	r3, #0
90014d26:	d0ba      	beq.n	90014c9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90014d28:	b063      	add	sp, #396	@ 0x18c
90014d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014d2e:	2a02      	cmp	r2, #2
90014d30:	d105      	bne.n	90014d3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90014d32:	7be2      	ldrb	r2, [r4, #15]
90014d34:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90014d38:	1a80      	subs	r0, r0, r2
90014d3a:	1ac0      	subs	r0, r0, r3
90014d3c:	e773      	b.n	90014c26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90014d3e:	2000      	movs	r0, #0
90014d40:	e772      	b.n	90014c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90014d42:	7be0      	ldrb	r0, [r4, #15]
90014d44:	e770      	b.n	90014c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90014d46:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90014d4a:	e773      	b.n	90014c34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90014d4c:	f1ba 0f00 	cmp.w	sl, #0
90014d50:	d0f7      	beq.n	90014d42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90014d52:	2264      	movs	r2, #100	@ 0x64
90014d54:	4639      	mov	r1, r7
90014d56:	a849      	add	r0, sp, #292	@ 0x124
90014d58:	f012 fbcb 	bl	900274f2 <memcpy>
90014d5c:	2300      	movs	r3, #0
90014d5e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90014d62:	6821      	ldr	r1, [r4, #0]
90014d64:	a849      	add	r0, sp, #292	@ 0x124
90014d66:	f7ff fbca 	bl	900144fe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014d6a:	b203      	sxth	r3, r0
90014d6c:	e751      	b.n	90014c12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90014d6e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90014d6e:	2b03      	cmp	r3, #3
90014d70:	d818      	bhi.n	90014da4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90014d72:	e8df f003 	tbb	[pc, r3]
90014d76:	0602      	.short	0x0602
90014d78:	130d      	.short	0x130d
90014d7a:	f9b0 2000 	ldrsh.w	r2, [r0]
90014d7e:	1850      	adds	r0, r2, r1
90014d80:	4770      	bx	lr
90014d82:	8803      	ldrh	r3, [r0, #0]
90014d84:	8880      	ldrh	r0, [r0, #4]
90014d86:	4418      	add	r0, r3
90014d88:	b200      	sxth	r0, r0
90014d8a:	1a80      	subs	r0, r0, r2
90014d8c:	3801      	subs	r0, #1
90014d8e:	4770      	bx	lr
90014d90:	8803      	ldrh	r3, [r0, #0]
90014d92:	8880      	ldrh	r0, [r0, #4]
90014d94:	4418      	add	r0, r3
90014d96:	b200      	sxth	r0, r0
90014d98:	1a40      	subs	r0, r0, r1
90014d9a:	e7f7      	b.n	90014d8c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90014d9c:	f9b0 0000 	ldrsh.w	r0, [r0]
90014da0:	4410      	add	r0, r2
90014da2:	4770      	bx	lr
90014da4:	2000      	movs	r0, #0
90014da6:	4770      	bx	lr

90014da8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90014da8:	2b03      	cmp	r3, #3
90014daa:	d817      	bhi.n	90014ddc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90014dac:	e8df f003 	tbb	[pc, r3]
90014db0:	10090602 	.word	0x10090602
90014db4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014db8:	1850      	adds	r0, r2, r1
90014dba:	4770      	bx	lr
90014dbc:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014dc0:	e7fa      	b.n	90014db8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90014dc2:	8843      	ldrh	r3, [r0, #2]
90014dc4:	88c0      	ldrh	r0, [r0, #6]
90014dc6:	4418      	add	r0, r3
90014dc8:	b200      	sxth	r0, r0
90014dca:	1a80      	subs	r0, r0, r2
90014dcc:	3801      	subs	r0, #1
90014dce:	4770      	bx	lr
90014dd0:	8843      	ldrh	r3, [r0, #2]
90014dd2:	88c0      	ldrh	r0, [r0, #6]
90014dd4:	4418      	add	r0, r3
90014dd6:	b200      	sxth	r0, r0
90014dd8:	1a40      	subs	r0, r0, r1
90014dda:	e7f7      	b.n	90014dcc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90014ddc:	2000      	movs	r0, #0
90014dde:	4770      	bx	lr

90014de0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90014de0:	4b01      	ldr	r3, [pc, #4]	@ (90014de8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90014de2:	2200      	movs	r2, #0
90014de4:	601a      	str	r2, [r3, #0]
90014de6:	4770      	bx	lr
90014de8:	24021c6c 	.word	0x24021c6c

90014dec <_ZN8touchgfx16TouchCalibration4clzuEm>:
90014dec:	4603      	mov	r3, r0
90014dee:	b1c8      	cbz	r0, 90014e24 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90014df0:	0c02      	lsrs	r2, r0, #16
90014df2:	0412      	lsls	r2, r2, #16
90014df4:	b9a2      	cbnz	r2, 90014e20 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90014df6:	0403      	lsls	r3, r0, #16
90014df8:	2010      	movs	r0, #16
90014dfa:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90014dfe:	bf04      	itt	eq
90014e00:	021b      	lsleq	r3, r3, #8
90014e02:	3008      	addeq	r0, #8
90014e04:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90014e08:	bf04      	itt	eq
90014e0a:	011b      	lsleq	r3, r3, #4
90014e0c:	3004      	addeq	r0, #4
90014e0e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90014e12:	bf04      	itt	eq
90014e14:	009b      	lsleq	r3, r3, #2
90014e16:	3002      	addeq	r0, #2
90014e18:	2b00      	cmp	r3, #0
90014e1a:	db04      	blt.n	90014e26 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90014e1c:	3001      	adds	r0, #1
90014e1e:	4770      	bx	lr
90014e20:	2000      	movs	r0, #0
90014e22:	e7ea      	b.n	90014dfa <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90014e24:	2020      	movs	r0, #32
90014e26:	4770      	bx	lr

90014e28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90014e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014e2c:	b087      	sub	sp, #28
90014e2e:	460d      	mov	r5, r1
90014e30:	4616      	mov	r6, r2
90014e32:	4698      	mov	r8, r3
90014e34:	4601      	mov	r1, r0
90014e36:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90014e3a:	b120      	cbz	r0, 90014e46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014e3c:	b11a      	cbz	r2, 90014e46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014e3e:	2d1f      	cmp	r5, #31
90014e40:	d801      	bhi.n	90014e46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014e42:	2b1f      	cmp	r3, #31
90014e44:	d904      	bls.n	90014e50 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90014e46:	2000      	movs	r0, #0
90014e48:	6038      	str	r0, [r7, #0]
90014e4a:	b007      	add	sp, #28
90014e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014e50:	b97d      	cbnz	r5, 90014e72 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90014e52:	b143      	cbz	r3, 90014e66 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90014e54:	4602      	mov	r2, r0
90014e56:	462b      	mov	r3, r5
90014e58:	4641      	mov	r1, r8
90014e5a:	4630      	mov	r0, r6
90014e5c:	e9cd 4700 	strd	r4, r7, [sp]
90014e60:	f7ff ffe2 	bl	90014e28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014e64:	e7f1      	b.n	90014e4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014e66:	f04f 33ff 	mov.w	r3, #4294967295
90014e6a:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90014e6e:	603b      	str	r3, [r7, #0]
90014e70:	e7eb      	b.n	90014e4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014e72:	fa32 fa05 	lsrs.w	sl, r2, r5
90014e76:	d106      	bne.n	90014e86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90014e78:	4346      	muls	r6, r0
90014e7a:	fbb6 f0f4 	udiv	r0, r6, r4
90014e7e:	fb04 6610 	mls	r6, r4, r0, r6
90014e82:	603e      	str	r6, [r7, #0]
90014e84:	e7e1      	b.n	90014e4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90014e86:	2201      	movs	r2, #1
90014e88:	fa00 fb05 	lsl.w	fp, r0, r5
90014e8c:	40aa      	lsls	r2, r5
90014e8e:	fbbb f9f4 	udiv	r9, fp, r4
90014e92:	3a01      	subs	r2, #1
90014e94:	fb0a f309 	mul.w	r3, sl, r9
90014e98:	fb04 b919 	mls	r9, r4, r9, fp
90014e9c:	4016      	ands	r6, r2
90014e9e:	9303      	str	r3, [sp, #12]
90014ea0:	4630      	mov	r0, r6
90014ea2:	f7ff ffa3 	bl	90014dec <_ZN8touchgfx16TouchCalibration4clzuEm>
90014ea6:	462b      	mov	r3, r5
90014ea8:	460a      	mov	r2, r1
90014eaa:	4601      	mov	r1, r0
90014eac:	4630      	mov	r0, r6
90014eae:	e9cd 4700 	strd	r4, r7, [sp]
90014eb2:	f7ff ffb9 	bl	90014e28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014eb6:	4606      	mov	r6, r0
90014eb8:	4648      	mov	r0, r9
90014eba:	eb05 0108 	add.w	r1, r5, r8
90014ebe:	f7ff ff95 	bl	90014dec <_ZN8touchgfx16TouchCalibration4clzuEm>
90014ec2:	ab05      	add	r3, sp, #20
90014ec4:	464a      	mov	r2, r9
90014ec6:	e9cd 4300 	strd	r4, r3, [sp]
90014eca:	4603      	mov	r3, r0
90014ecc:	4650      	mov	r0, sl
90014ece:	f7ff ffab 	bl	90014e28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014ed2:	6839      	ldr	r1, [r7, #0]
90014ed4:	9a05      	ldr	r2, [sp, #20]
90014ed6:	9b03      	ldr	r3, [sp, #12]
90014ed8:	4411      	add	r1, r2
90014eda:	fbb1 f2f4 	udiv	r2, r1, r4
90014ede:	18d3      	adds	r3, r2, r3
90014ee0:	fb04 1412 	mls	r4, r4, r2, r1
90014ee4:	441e      	add	r6, r3
90014ee6:	603c      	str	r4, [r7, #0]
90014ee8:	4430      	add	r0, r6
90014eea:	e7ae      	b.n	90014e4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90014eec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90014eec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014ef0:	b085      	sub	sp, #20
90014ef2:	f1b0 0900 	subs.w	r9, r0, #0
90014ef6:	461d      	mov	r5, r3
90014ef8:	4617      	mov	r7, r2
90014efa:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90014efc:	bfbb      	ittet	lt
90014efe:	f1c9 0900 	rsblt	r9, r9, #0
90014f02:	f04f 36ff 	movlt.w	r6, #4294967295
90014f06:	2601      	movge	r6, #1
90014f08:	6823      	ldrlt	r3, [r4, #0]
90014f0a:	bfbc      	itt	lt
90014f0c:	425b      	neglt	r3, r3
90014f0e:	6023      	strlt	r3, [r4, #0]
90014f10:	2a00      	cmp	r2, #0
90014f12:	da04      	bge.n	90014f1e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90014f14:	6823      	ldr	r3, [r4, #0]
90014f16:	4257      	negs	r7, r2
90014f18:	4276      	negs	r6, r6
90014f1a:	425b      	negs	r3, r3
90014f1c:	6023      	str	r3, [r4, #0]
90014f1e:	2d00      	cmp	r5, #0
90014f20:	4638      	mov	r0, r7
90014f22:	bfba      	itte	lt
90014f24:	426d      	neglt	r5, r5
90014f26:	f04f 38ff 	movlt.w	r8, #4294967295
90014f2a:	f04f 0801 	movge.w	r8, #1
90014f2e:	f7ff ff5d 	bl	90014dec <_ZN8touchgfx16TouchCalibration4clzuEm>
90014f32:	ab03      	add	r3, sp, #12
90014f34:	463a      	mov	r2, r7
90014f36:	e9cd 5300 	strd	r5, r3, [sp]
90014f3a:	4603      	mov	r3, r0
90014f3c:	4648      	mov	r0, r9
90014f3e:	f7ff ff73 	bl	90014e28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014f42:	6823      	ldr	r3, [r4, #0]
90014f44:	9a03      	ldr	r2, [sp, #12]
90014f46:	4546      	cmp	r6, r8
90014f48:	441a      	add	r2, r3
90014f4a:	fb92 f3f5 	sdiv	r3, r2, r5
90014f4e:	4418      	add	r0, r3
90014f50:	fb05 2313 	mls	r3, r5, r3, r2
90014f54:	bf18      	it	ne
90014f56:	4240      	negne	r0, r0
90014f58:	1c72      	adds	r2, r6, #1
90014f5a:	6023      	str	r3, [r4, #0]
90014f5c:	d105      	bne.n	90014f6a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90014f5e:	2b00      	cmp	r3, #0
90014f60:	f1c3 0200 	rsb	r2, r3, #0
90014f64:	db0b      	blt.n	90014f7e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90014f66:	6022      	str	r2, [r4, #0]
90014f68:	e006      	b.n	90014f78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014f6a:	2e01      	cmp	r6, #1
90014f6c:	d104      	bne.n	90014f78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014f6e:	2b00      	cmp	r3, #0
90014f70:	da02      	bge.n	90014f78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014f72:	442b      	add	r3, r5
90014f74:	3801      	subs	r0, #1
90014f76:	6023      	str	r3, [r4, #0]
90014f78:	b005      	add	sp, #20
90014f7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014f7e:	3801      	subs	r0, #1
90014f80:	1b52      	subs	r2, r2, r5
90014f82:	e7f0      	b.n	90014f66 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90014f84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90014f84:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90014f88:	4c1c      	ldr	r4, [pc, #112]	@ (90014ffc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90014f8a:	4605      	mov	r5, r0
90014f8c:	6807      	ldr	r7, [r0, #0]
90014f8e:	69a3      	ldr	r3, [r4, #24]
90014f90:	b92b      	cbnz	r3, 90014f9e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90014f92:	6840      	ldr	r0, [r0, #4]
90014f94:	e9c5 7000 	strd	r7, r0, [r5]
90014f98:	b004      	add	sp, #16
90014f9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014f9e:	f04f 0802 	mov.w	r8, #2
90014fa2:	68a2      	ldr	r2, [r4, #8]
90014fa4:	ae04      	add	r6, sp, #16
90014fa6:	6820      	ldr	r0, [r4, #0]
90014fa8:	fb93 f1f8 	sdiv	r1, r3, r8
90014fac:	440a      	add	r2, r1
90014fae:	69e1      	ldr	r1, [r4, #28]
90014fb0:	f846 2d04 	str.w	r2, [r6, #-4]!
90014fb4:	463a      	mov	r2, r7
90014fb6:	9600      	str	r6, [sp, #0]
90014fb8:	f7ff ff98 	bl	90014eec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014fbc:	69a3      	ldr	r3, [r4, #24]
90014fbe:	4607      	mov	r7, r0
90014fc0:	686a      	ldr	r2, [r5, #4]
90014fc2:	6a21      	ldr	r1, [r4, #32]
90014fc4:	9600      	str	r6, [sp, #0]
90014fc6:	6860      	ldr	r0, [r4, #4]
90014fc8:	f7ff ff90 	bl	90014eec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014fcc:	69a3      	ldr	r3, [r4, #24]
90014fce:	6962      	ldr	r2, [r4, #20]
90014fd0:	4407      	add	r7, r0
90014fd2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90014fd4:	9600      	str	r6, [sp, #0]
90014fd6:	68e0      	ldr	r0, [r4, #12]
90014fd8:	fb93 f8f8 	sdiv	r8, r3, r8
90014fdc:	4442      	add	r2, r8
90014fde:	9203      	str	r2, [sp, #12]
90014fe0:	682a      	ldr	r2, [r5, #0]
90014fe2:	f7ff ff83 	bl	90014eec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014fe6:	4680      	mov	r8, r0
90014fe8:	9600      	str	r6, [sp, #0]
90014fea:	69a3      	ldr	r3, [r4, #24]
90014fec:	686a      	ldr	r2, [r5, #4]
90014fee:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90014ff0:	6920      	ldr	r0, [r4, #16]
90014ff2:	f7ff ff7b 	bl	90014eec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014ff6:	4440      	add	r0, r8
90014ff8:	e7cc      	b.n	90014f94 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90014ffa:	bf00      	nop
90014ffc:	24021c70 	.word	0x24021c70

90015000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90015000:	4b07      	ldr	r3, [pc, #28]	@ (90015020 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90015002:	781b      	ldrb	r3, [r3, #0]
90015004:	2b01      	cmp	r3, #1
90015006:	d109      	bne.n	9001501c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90015008:	f9b1 3000 	ldrsh.w	r3, [r1]
9001500c:	f9b0 2000 	ldrsh.w	r2, [r0]
90015010:	8003      	strh	r3, [r0, #0]
90015012:	4b04      	ldr	r3, [pc, #16]	@ (90015024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90015014:	881b      	ldrh	r3, [r3, #0]
90015016:	3b01      	subs	r3, #1
90015018:	1a9b      	subs	r3, r3, r2
9001501a:	800b      	strh	r3, [r1, #0]
9001501c:	4770      	bx	lr
9001501e:	bf00      	nop
90015020:	24021c54 	.word	0x24021c54
90015024:	24021c50 	.word	0x24021c50

90015028 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90015028:	4b07      	ldr	r3, [pc, #28]	@ (90015048 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
9001502a:	b510      	push	{r4, lr}
9001502c:	781b      	ldrb	r3, [r3, #0]
9001502e:	2b01      	cmp	r3, #1
90015030:	d108      	bne.n	90015044 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90015032:	4b06      	ldr	r3, [pc, #24]	@ (9001504c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90015034:	880c      	ldrh	r4, [r1, #0]
90015036:	881b      	ldrh	r3, [r3, #0]
90015038:	f9b0 2000 	ldrsh.w	r2, [r0]
9001503c:	3b01      	subs	r3, #1
9001503e:	1b1b      	subs	r3, r3, r4
90015040:	8003      	strh	r3, [r0, #0]
90015042:	800a      	strh	r2, [r1, #0]
90015044:	bd10      	pop	{r4, pc}
90015046:	bf00      	nop
90015048:	24021c54 	.word	0x24021c54
9001504c:	24021c50 	.word	0x24021c50

90015050 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90015050:	4b0a      	ldr	r3, [pc, #40]	@ (9001507c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90015052:	b510      	push	{r4, lr}
90015054:	781b      	ldrb	r3, [r3, #0]
90015056:	2b01      	cmp	r3, #1
90015058:	d10e      	bne.n	90015078 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
9001505a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001505e:	8843      	ldrh	r3, [r0, #2]
90015060:	f9b0 4000 	ldrsh.w	r4, [r0]
90015064:	18ca      	adds	r2, r1, r3
90015066:	4b06      	ldr	r3, [pc, #24]	@ (90015080 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90015068:	8044      	strh	r4, [r0, #2]
9001506a:	881b      	ldrh	r3, [r3, #0]
9001506c:	1a9b      	subs	r3, r3, r2
9001506e:	8003      	strh	r3, [r0, #0]
90015070:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015074:	8081      	strh	r1, [r0, #4]
90015076:	80c3      	strh	r3, [r0, #6]
90015078:	bd10      	pop	{r4, pc}
9001507a:	bf00      	nop
9001507c:	24021c54 	.word	0x24021c54
90015080:	24021c50 	.word	0x24021c50

90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90015084:	4b08      	ldr	r3, [pc, #32]	@ (900150a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90015086:	781b      	ldrb	r3, [r3, #0]
90015088:	2b01      	cmp	r3, #1
9001508a:	d10c      	bne.n	900150a6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
9001508c:	8803      	ldrh	r3, [r0, #0]
9001508e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90015092:	8842      	ldrh	r2, [r0, #2]
90015094:	8002      	strh	r2, [r0, #0]
90015096:	185a      	adds	r2, r3, r1
90015098:	4b04      	ldr	r3, [pc, #16]	@ (900150ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
9001509a:	881b      	ldrh	r3, [r3, #0]
9001509c:	1a9b      	subs	r3, r3, r2
9001509e:	8043      	strh	r3, [r0, #2]
900150a0:	88c3      	ldrh	r3, [r0, #6]
900150a2:	80c1      	strh	r1, [r0, #6]
900150a4:	8083      	strh	r3, [r0, #4]
900150a6:	4770      	bx	lr
900150a8:	24021c54 	.word	0x24021c54
900150ac:	24021c50 	.word	0x24021c50

900150b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
900150b0:	4b07      	ldr	r3, [pc, #28]	@ (900150d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
900150b2:	b510      	push	{r4, lr}
900150b4:	781b      	ldrb	r3, [r3, #0]
900150b6:	2b01      	cmp	r3, #1
900150b8:	d108      	bne.n	900150cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
900150ba:	f9b1 3000 	ldrsh.w	r3, [r1]
900150be:	f9b0 4000 	ldrsh.w	r4, [r0]
900150c2:	8003      	strh	r3, [r0, #0]
900150c4:	8893      	ldrh	r3, [r2, #4]
900150c6:	3b01      	subs	r3, #1
900150c8:	1b1b      	subs	r3, r3, r4
900150ca:	800b      	strh	r3, [r1, #0]
900150cc:	bd10      	pop	{r4, pc}
900150ce:	bf00      	nop
900150d0:	24021c54 	.word	0x24021c54

900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
900150d4:	4b0a      	ldr	r3, [pc, #40]	@ (90015100 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
900150d6:	460a      	mov	r2, r1
900150d8:	b510      	push	{r4, lr}
900150da:	781b      	ldrb	r3, [r3, #0]
900150dc:	2b01      	cmp	r3, #1
900150de:	d10d      	bne.n	900150fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
900150e0:	8881      	ldrh	r1, [r0, #4]
900150e2:	8803      	ldrh	r3, [r0, #0]
900150e4:	440b      	add	r3, r1
900150e6:	4601      	mov	r1, r0
900150e8:	3b01      	subs	r3, #1
900150ea:	f821 3b02 	strh.w	r3, [r1], #2
900150ee:	f7ff ffdf 	bl	900150b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
900150f2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900150f6:	88c2      	ldrh	r2, [r0, #6]
900150f8:	80c3      	strh	r3, [r0, #6]
900150fa:	8082      	strh	r2, [r0, #4]
900150fc:	bd10      	pop	{r4, pc}
900150fe:	bf00      	nop
90015100:	24021c54 	.word	0x24021c54

90015104 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90015104:	4770      	bx	lr
	...

90015108 <_ZN8touchgfx11Application13requestRedrawEv>:
90015108:	4b06      	ldr	r3, [pc, #24]	@ (90015124 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
9001510a:	2100      	movs	r1, #0
9001510c:	f9b3 2000 	ldrsh.w	r2, [r3]
90015110:	4b05      	ldr	r3, [pc, #20]	@ (90015128 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90015112:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90015116:	f9b3 3000 	ldrsh.w	r3, [r3]
9001511a:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
9001511e:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90015122:	4770      	bx	lr
90015124:	24021c50 	.word	0x24021c50
90015128:	24021c52 	.word	0x24021c52

9001512c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
9001512c:	4b03      	ldr	r3, [pc, #12]	@ (9001513c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
9001512e:	6818      	ldr	r0, [r3, #0]
90015130:	b110      	cbz	r0, 90015138 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90015132:	6803      	ldr	r3, [r0, #0]
90015134:	699b      	ldr	r3, [r3, #24]
90015136:	4718      	bx	r3
90015138:	4770      	bx	lr
9001513a:	bf00      	nop
9001513c:	24021ca0 	.word	0x24021ca0

90015140 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90015140:	4770      	bx	lr
	...

90015144 <_ZN8touchgfx11Application4drawEv>:
90015144:	4b09      	ldr	r3, [pc, #36]	@ (9001516c <_ZN8touchgfx11Application4drawEv+0x28>)
90015146:	b507      	push	{r0, r1, r2, lr}
90015148:	f9b3 2000 	ldrsh.w	r2, [r3]
9001514c:	2100      	movs	r1, #0
9001514e:	4b08      	ldr	r3, [pc, #32]	@ (90015170 <_ZN8touchgfx11Application4drawEv+0x2c>)
90015150:	9100      	str	r1, [sp, #0]
90015152:	4669      	mov	r1, sp
90015154:	f9b3 3000 	ldrsh.w	r3, [r3]
90015158:	f8ad 2004 	strh.w	r2, [sp, #4]
9001515c:	f8ad 3006 	strh.w	r3, [sp, #6]
90015160:	6803      	ldr	r3, [r0, #0]
90015162:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90015164:	4798      	blx	r3
90015166:	b003      	add	sp, #12
90015168:	f85d fb04 	ldr.w	pc, [sp], #4
9001516c:	24021c50 	.word	0x24021c50
90015170:	24021c52 	.word	0x24021c52

90015174 <_ZN8touchgfx11Application10invalidateEv>:
90015174:	4b09      	ldr	r3, [pc, #36]	@ (9001519c <_ZN8touchgfx11Application10invalidateEv+0x28>)
90015176:	b082      	sub	sp, #8
90015178:	2100      	movs	r1, #0
9001517a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001517e:	4b08      	ldr	r3, [pc, #32]	@ (900151a0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90015180:	f8ad 2004 	strh.w	r2, [sp, #4]
90015184:	aa02      	add	r2, sp, #8
90015186:	f9b3 3000 	ldrsh.w	r3, [r3]
9001518a:	9100      	str	r1, [sp, #0]
9001518c:	f8ad 3006 	strh.w	r3, [sp, #6]
90015190:	6803      	ldr	r3, [r0, #0]
90015192:	e912 0006 	ldmdb	r2, {r1, r2}
90015196:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90015198:	b002      	add	sp, #8
9001519a:	4718      	bx	r3
9001519c:	24021c50 	.word	0x24021c50
900151a0:	24021c52 	.word	0x24021c52

900151a4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
900151a4:	4b03      	ldr	r3, [pc, #12]	@ (900151b4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
900151a6:	6818      	ldr	r0, [r3, #0]
900151a8:	b110      	cbz	r0, 900151b0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
900151aa:	6803      	ldr	r3, [r0, #0]
900151ac:	69db      	ldr	r3, [r3, #28]
900151ae:	4718      	bx	r3
900151b0:	4770      	bx	lr
900151b2:	bf00      	nop
900151b4:	24021ca0 	.word	0x24021ca0

900151b8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
900151b8:	4b03      	ldr	r3, [pc, #12]	@ (900151c8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
900151ba:	6818      	ldr	r0, [r3, #0]
900151bc:	b110      	cbz	r0, 900151c4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
900151be:	6803      	ldr	r3, [r0, #0]
900151c0:	6a1b      	ldr	r3, [r3, #32]
900151c2:	4718      	bx	r3
900151c4:	4770      	bx	lr
900151c6:	bf00      	nop
900151c8:	24021ca0 	.word	0x24021ca0

900151cc <_ZN8touchgfx11Application16clearCachedAreasEv>:
900151cc:	2300      	movs	r3, #0
900151ce:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
900151d2:	4770      	bx	lr

900151d4 <_ZN8touchgfx11Application14handleKeyEventEh>:
900151d4:	4b03      	ldr	r3, [pc, #12]	@ (900151e4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
900151d6:	6818      	ldr	r0, [r3, #0]
900151d8:	b110      	cbz	r0, 900151e0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
900151da:	6803      	ldr	r3, [r0, #0]
900151dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900151de:	4718      	bx	r3
900151e0:	4770      	bx	lr
900151e2:	bf00      	nop
900151e4:	24021ca0 	.word	0x24021ca0

900151e8 <_ZN8touchgfx11ApplicationD1Ev>:
900151e8:	4770      	bx	lr

900151ea <_ZN8touchgfx11ApplicationD0Ev>:
900151ea:	b510      	push	{r4, lr}
900151ec:	4604      	mov	r4, r0
900151ee:	f44f 719e 	mov.w	r1, #316	@ 0x13c
900151f2:	f011 fa89 	bl	90026708 <_ZdlPvj>
900151f6:	4620      	mov	r0, r4
900151f8:	bd10      	pop	{r4, pc}

900151fa <_ZNK8touchgfx4Rect9intersectERKS0_>:
900151fa:	b510      	push	{r4, lr}
900151fc:	f9b1 4000 	ldrsh.w	r4, [r1]
90015200:	888a      	ldrh	r2, [r1, #4]
90015202:	f9b0 3000 	ldrsh.w	r3, [r0]
90015206:	4422      	add	r2, r4
90015208:	b212      	sxth	r2, r2
9001520a:	4293      	cmp	r3, r2
9001520c:	da15      	bge.n	9001523a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001520e:	8882      	ldrh	r2, [r0, #4]
90015210:	4413      	add	r3, r2
90015212:	b21b      	sxth	r3, r3
90015214:	429c      	cmp	r4, r3
90015216:	da10      	bge.n	9001523a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90015218:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
9001521c:	88c9      	ldrh	r1, [r1, #6]
9001521e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90015222:	4419      	add	r1, r3
90015224:	b209      	sxth	r1, r1
90015226:	428a      	cmp	r2, r1
90015228:	da07      	bge.n	9001523a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001522a:	88c0      	ldrh	r0, [r0, #6]
9001522c:	4410      	add	r0, r2
9001522e:	b200      	sxth	r0, r0
90015230:	4283      	cmp	r3, r0
90015232:	bfac      	ite	ge
90015234:	2000      	movge	r0, #0
90015236:	2001      	movlt	r0, #1
90015238:	bd10      	pop	{r4, pc}
9001523a:	2000      	movs	r0, #0
9001523c:	e7fc      	b.n	90015238 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001523e <_ZN8touchgfx4Rect10restrictToEss>:
9001523e:	f9b0 3000 	ldrsh.w	r3, [r0]
90015242:	2b00      	cmp	r3, #0
90015244:	b510      	push	{r4, lr}
90015246:	da04      	bge.n	90015252 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90015248:	8884      	ldrh	r4, [r0, #4]
9001524a:	4423      	add	r3, r4
9001524c:	8083      	strh	r3, [r0, #4]
9001524e:	2300      	movs	r3, #0
90015250:	8003      	strh	r3, [r0, #0]
90015252:	f9b0 4000 	ldrsh.w	r4, [r0]
90015256:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001525a:	1b09      	subs	r1, r1, r4
9001525c:	428b      	cmp	r3, r1
9001525e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90015262:	bfc8      	it	gt
90015264:	8081      	strhgt	r1, [r0, #4]
90015266:	2b00      	cmp	r3, #0
90015268:	da04      	bge.n	90015274 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001526a:	88c1      	ldrh	r1, [r0, #6]
9001526c:	440b      	add	r3, r1
9001526e:	80c3      	strh	r3, [r0, #6]
90015270:	2300      	movs	r3, #0
90015272:	8043      	strh	r3, [r0, #2]
90015274:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90015278:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
9001527c:	1a52      	subs	r2, r2, r1
9001527e:	4293      	cmp	r3, r2
90015280:	bfc8      	it	gt
90015282:	80c2      	strhgt	r2, [r0, #6]
90015284:	bd10      	pop	{r4, pc}
	...

90015288 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90015288:	4b10      	ldr	r3, [pc, #64]	@ (900152cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001528a:	b510      	push	{r4, lr}
9001528c:	460c      	mov	r4, r1
9001528e:	f9b3 2000 	ldrsh.w	r2, [r3]
90015292:	4b0f      	ldr	r3, [pc, #60]	@ (900152d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90015294:	4620      	mov	r0, r4
90015296:	f9b3 1000 	ldrsh.w	r1, [r3]
9001529a:	f7ff ffd0 	bl	9001523e <_ZN8touchgfx4Rect10restrictToEss>
9001529e:	4b0d      	ldr	r3, [pc, #52]	@ (900152d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
900152a0:	6818      	ldr	r0, [r3, #0]
900152a2:	b190      	cbz	r0, 900152ca <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
900152a4:	6803      	ldr	r3, [r0, #0]
900152a6:	4621      	mov	r1, r4
900152a8:	689b      	ldr	r3, [r3, #8]
900152aa:	4798      	blx	r3
900152ac:	4b0a      	ldr	r3, [pc, #40]	@ (900152d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
900152ae:	6818      	ldr	r0, [r3, #0]
900152b0:	b118      	cbz	r0, 900152ba <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
900152b2:	6803      	ldr	r3, [r0, #0]
900152b4:	4621      	mov	r1, r4
900152b6:	689b      	ldr	r3, [r3, #8]
900152b8:	4798      	blx	r3
900152ba:	4b08      	ldr	r3, [pc, #32]	@ (900152dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
900152bc:	4621      	mov	r1, r4
900152be:	6818      	ldr	r0, [r3, #0]
900152c0:	6803      	ldr	r3, [r0, #0]
900152c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900152c6:	69db      	ldr	r3, [r3, #28]
900152c8:	4718      	bx	r3
900152ca:	bd10      	pop	{r4, pc}
900152cc:	24021c52 	.word	0x24021c52
900152d0:	24021c50 	.word	0x24021c50
900152d4:	24021ca0 	.word	0x24021ca0
900152d8:	24021c9c 	.word	0x24021c9c
900152dc:	24021c5c 	.word	0x24021c5c

900152e0 <_ZNK8touchgfx4Rect8includesERKS0_>:
900152e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900152e2:	4606      	mov	r6, r0
900152e4:	4608      	mov	r0, r1
900152e6:	460f      	mov	r7, r1
900152e8:	f7fa fe27 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
900152ec:	b9e8      	cbnz	r0, 9001532a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900152ee:	f9b7 5000 	ldrsh.w	r5, [r7]
900152f2:	f9b6 4000 	ldrsh.w	r4, [r6]
900152f6:	42a5      	cmp	r5, r4
900152f8:	db17      	blt.n	9001532a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900152fa:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900152fe:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90015302:	429a      	cmp	r2, r3
90015304:	db11      	blt.n	9001532a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90015306:	88b9      	ldrh	r1, [r7, #4]
90015308:	440d      	add	r5, r1
9001530a:	88b1      	ldrh	r1, [r6, #4]
9001530c:	440c      	add	r4, r1
9001530e:	b22d      	sxth	r5, r5
90015310:	b224      	sxth	r4, r4
90015312:	42a5      	cmp	r5, r4
90015314:	dc09      	bgt.n	9001532a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90015316:	88f8      	ldrh	r0, [r7, #6]
90015318:	4410      	add	r0, r2
9001531a:	88f2      	ldrh	r2, [r6, #6]
9001531c:	4413      	add	r3, r2
9001531e:	b200      	sxth	r0, r0
90015320:	b21b      	sxth	r3, r3
90015322:	4298      	cmp	r0, r3
90015324:	bfcc      	ite	gt
90015326:	2000      	movgt	r0, #0
90015328:	2001      	movle	r0, #1
9001532a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001532c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
9001532c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001532e:	4604      	mov	r4, r0
90015330:	4608      	mov	r0, r1
90015332:	460d      	mov	r5, r1
90015334:	f7fa fe01 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90015338:	b978      	cbnz	r0, 9001535a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001533a:	4620      	mov	r0, r4
9001533c:	f7fa fdfd 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90015340:	f9b5 6000 	ldrsh.w	r6, [r5]
90015344:	b150      	cbz	r0, 9001535c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90015346:	8026      	strh	r6, [r4, #0]
90015348:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001534c:	8063      	strh	r3, [r4, #2]
9001534e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90015352:	80a3      	strh	r3, [r4, #4]
90015354:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90015358:	80e3      	strh	r3, [r4, #6]
9001535a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001535c:	f9b4 1000 	ldrsh.w	r1, [r4]
90015360:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015364:	42b1      	cmp	r1, r6
90015366:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001536a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001536e:	460f      	mov	r7, r1
90015370:	88ed      	ldrh	r5, [r5, #6]
90015372:	bfa8      	it	ge
90015374:	4637      	movge	r7, r6
90015376:	4293      	cmp	r3, r2
90015378:	4618      	mov	r0, r3
9001537a:	4466      	add	r6, ip
9001537c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90015380:	bfa8      	it	ge
90015382:	4610      	movge	r0, r2
90015384:	442a      	add	r2, r5
90015386:	88e5      	ldrh	r5, [r4, #6]
90015388:	4461      	add	r1, ip
9001538a:	b236      	sxth	r6, r6
9001538c:	8027      	strh	r7, [r4, #0]
9001538e:	442b      	add	r3, r5
90015390:	b209      	sxth	r1, r1
90015392:	b212      	sxth	r2, r2
90015394:	8060      	strh	r0, [r4, #2]
90015396:	b21b      	sxth	r3, r3
90015398:	428e      	cmp	r6, r1
9001539a:	bfac      	ite	ge
9001539c:	ebc7 0106 	rsbge	r1, r7, r6
900153a0:	ebc7 0101 	rsblt	r1, r7, r1
900153a4:	429a      	cmp	r2, r3
900153a6:	bfac      	ite	ge
900153a8:	ebc0 0202 	rsbge	r2, r0, r2
900153ac:	ebc0 0203 	rsblt	r2, r0, r3
900153b0:	80a1      	strh	r1, [r4, #4]
900153b2:	80e2      	strh	r2, [r4, #6]
900153b4:	e7d1      	b.n	9001535a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

900153b8 <_ZN8touchgfx11Application11getInstanceEv>:
900153b8:	4b01      	ldr	r3, [pc, #4]	@ (900153c0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
900153ba:	6818      	ldr	r0, [r3, #0]
900153bc:	4770      	bx	lr
900153be:	bf00      	nop
900153c0:	24021cb0 	.word	0x24021cb0

900153c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
900153c4:	2300      	movs	r3, #0
900153c6:	b510      	push	{r4, lr}
900153c8:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
900153cc:	4604      	mov	r4, r0
900153ce:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900153d2:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900153d6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900153da:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
900153de:	429a      	cmp	r2, r3
900153e0:	d90e      	bls.n	90015400 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900153e2:	18e2      	adds	r2, r4, r3
900153e4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
900153e8:	b122      	cbz	r2, 900153f4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900153ea:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900153ee:	6803      	ldr	r3, [r0, #0]
900153f0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900153f2:	4798      	blx	r3
900153f4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900153f8:	3301      	adds	r3, #1
900153fa:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900153fe:	e7ea      	b.n	900153d6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90015400:	bd10      	pop	{r4, pc}

90015402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90015402:	2300      	movs	r3, #0
90015404:	f100 0284 	add.w	r2, r0, #132	@ 0x84
90015408:	30a4      	adds	r0, #164	@ 0xa4
9001540a:	f820 3c24 	strh.w	r3, [r0, #-36]
9001540e:	f802 3b01 	strb.w	r3, [r2], #1
90015412:	4282      	cmp	r2, r0
90015414:	d1fb      	bne.n	9001540e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90015416:	4770      	bx	lr

90015418 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90015418:	b570      	push	{r4, r5, r6, lr}
9001541a:	4c0b      	ldr	r4, [pc, #44]	@ (90015448 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001541c:	4605      	mov	r5, r0
9001541e:	460e      	mov	r6, r1
90015420:	6820      	ldr	r0, [r4, #0]
90015422:	b110      	cbz	r0, 9001542a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90015424:	6803      	ldr	r3, [r0, #0]
90015426:	695b      	ldr	r3, [r3, #20]
90015428:	4798      	blx	r3
9001542a:	1d28      	adds	r0, r5, #4
9001542c:	f7ff ffe9 	bl	90015402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90015430:	6026      	str	r6, [r4, #0]
90015432:	6833      	ldr	r3, [r6, #0]
90015434:	4630      	mov	r0, r6
90015436:	68db      	ldr	r3, [r3, #12]
90015438:	4798      	blx	r3
9001543a:	682b      	ldr	r3, [r5, #0]
9001543c:	4628      	mov	r0, r5
9001543e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015440:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015444:	4718      	bx	r3
90015446:	bf00      	nop
90015448:	24021ca0 	.word	0x24021ca0

9001544c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
9001544c:	2300      	movs	r3, #0
9001544e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
90015452:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
90015456:	461a      	mov	r2, r3
90015458:	b5f0      	push	{r4, r5, r6, r7, lr}
9001545a:	461c      	mov	r4, r3
9001545c:	461d      	mov	r5, r3
9001545e:	459c      	cmp	ip, r3
90015460:	dd1a      	ble.n	90015498 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90015462:	18c6      	adds	r6, r0, r3
90015464:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90015468:	b16e      	cbz	r6, 90015486 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001546a:	429a      	cmp	r2, r3
9001546c:	d008      	beq.n	90015480 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
9001546e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90015472:	fa1f fe82 	uxth.w	lr, r2
90015476:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001547a:	1887      	adds	r7, r0, r2
9001547c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90015480:	3201      	adds	r2, #1
90015482:	3301      	adds	r3, #1
90015484:	e7eb      	b.n	9001545e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90015486:	4299      	cmp	r1, r3
90015488:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
9001548c:	bfa8      	it	ge
9001548e:	3501      	addge	r5, #1
90015490:	429e      	cmp	r6, r3
90015492:	bfc8      	it	gt
90015494:	3401      	addgt	r4, #1
90015496:	e7f4      	b.n	90015482 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90015498:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
9001549c:	1b49      	subs	r1, r1, r5
9001549e:	1b1b      	subs	r3, r3, r4
900154a0:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
900154a4:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900154a8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900154ac:	4293      	cmp	r3, r2
900154ae:	dd03      	ble.n	900154b8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900154b0:	3b01      	subs	r3, #1
900154b2:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
900154b6:	e7f7      	b.n	900154a8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900154b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900154bc <_ZN8touchgfx11Application15handleTickEventEv>:
900154bc:	b570      	push	{r4, r5, r6, lr}
900154be:	4d16      	ldr	r5, [pc, #88]	@ (90015518 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900154c0:	4604      	mov	r4, r0
900154c2:	6828      	ldr	r0, [r5, #0]
900154c4:	b140      	cbz	r0, 900154d8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900154c6:	7a03      	ldrb	r3, [r0, #8]
900154c8:	b933      	cbnz	r3, 900154d8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900154ca:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900154ce:	6803      	ldr	r3, [r0, #0]
900154d0:	689b      	ldr	r3, [r3, #8]
900154d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900154d6:	4718      	bx	r3
900154d8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900154dc:	4e0f      	ldr	r6, [pc, #60]	@ (9001551c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900154de:	b973      	cbnz	r3, 900154fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900154e0:	b168      	cbz	r0, 900154fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900154e2:	7a03      	ldrb	r3, [r0, #8]
900154e4:	b15b      	cbz	r3, 900154fe <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900154e6:	6830      	ldr	r0, [r6, #0]
900154e8:	b110      	cbz	r0, 900154f0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900154ea:	6803      	ldr	r3, [r0, #0]
900154ec:	691b      	ldr	r3, [r3, #16]
900154ee:	4798      	blx	r3
900154f0:	6828      	ldr	r0, [r5, #0]
900154f2:	6803      	ldr	r3, [r0, #0]
900154f4:	68db      	ldr	r3, [r3, #12]
900154f6:	4798      	blx	r3
900154f8:	2301      	movs	r3, #1
900154fa:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900154fe:	3404      	adds	r4, #4
90015500:	4620      	mov	r0, r4
90015502:	f7ff ff5f 	bl	900153c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90015506:	4620      	mov	r0, r4
90015508:	f7ff ffa0 	bl	9001544c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001550c:	6830      	ldr	r0, [r6, #0]
9001550e:	b110      	cbz	r0, 90015516 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90015510:	6803      	ldr	r3, [r0, #0]
90015512:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90015514:	e7dd      	b.n	900154d2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90015516:	bd70      	pop	{r4, r5, r6, pc}
90015518:	24021ca4 	.word	0x24021ca4
9001551c:	24021ca0 	.word	0x24021ca0

90015520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90015520:	4603      	mov	r3, r0
90015522:	f100 0140 	add.w	r1, r0, #64	@ 0x40
90015526:	2200      	movs	r2, #0
90015528:	801a      	strh	r2, [r3, #0]
9001552a:	3308      	adds	r3, #8
9001552c:	f823 2c06 	strh.w	r2, [r3, #-6]
90015530:	f823 2c04 	strh.w	r2, [r3, #-4]
90015534:	f823 2c02 	strh.w	r2, [r3, #-2]
90015538:	428b      	cmp	r3, r1
9001553a:	d1f5      	bne.n	90015528 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001553c:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90015540:	4770      	bx	lr
	...

90015544 <_ZN8touchgfx11ApplicationC1Ev>:
90015544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90015546:	4b1d      	ldr	r3, [pc, #116]	@ (900155bc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90015548:	4606      	mov	r6, r0
9001554a:	4604      	mov	r4, r0
9001554c:	2500      	movs	r5, #0
9001554e:	f846 3b04 	str.w	r3, [r6], #4
90015552:	22a8      	movs	r2, #168	@ 0xa8
90015554:	2100      	movs	r1, #0
90015556:	4630      	mov	r0, r6
90015558:	f011 feea 	bl	90027330 <memset>
9001555c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
90015560:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90015564:	4f16      	ldr	r7, [pc, #88]	@ (900155c0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90015566:	f7ff ffdb 	bl	90015520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001556a:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
9001556e:	f7ff ffd7 	bl	90015520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015572:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
90015576:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
9001557a:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
9001557e:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
90015582:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
90015586:	490f      	ldr	r1, [pc, #60]	@ (900155c4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90015588:	480f      	ldr	r0, [pc, #60]	@ (900155c8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001558a:	f010 fa4d 	bl	90025a28 <CRC_Lock>
9001558e:	4b0f      	ldr	r3, [pc, #60]	@ (900155cc <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90015590:	b158      	cbz	r0, 900155aa <_ZN8touchgfx11ApplicationC1Ev+0x66>
90015592:	801d      	strh	r5, [r3, #0]
90015594:	2300      	movs	r3, #0
90015596:	4a0e      	ldr	r2, [pc, #56]	@ (900155d0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90015598:	4630      	mov	r0, r6
9001559a:	6013      	str	r3, [r2, #0]
9001559c:	4a0d      	ldr	r2, [pc, #52]	@ (900155d4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001559e:	603b      	str	r3, [r7, #0]
900155a0:	6013      	str	r3, [r2, #0]
900155a2:	f7ff ff2e 	bl	90015402 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900155a6:	4620      	mov	r0, r4
900155a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900155aa:	f44f 6280 	mov.w	r2, #1024	@ 0x400
900155ae:	2002      	movs	r0, #2
900155b0:	801a      	strh	r2, [r3, #0]
900155b2:	6038      	str	r0, [r7, #0]
900155b4:	f001 fd7e 	bl	900170b4 <_ZN8touchgfx6Screen4drawEv>
900155b8:	e7ec      	b.n	90015594 <_ZN8touchgfx11ApplicationC1Ev+0x50>
900155ba:	bf00      	nop
900155bc:	9002a814 	.word	0x9002a814
900155c0:	24021ca0 	.word	0x24021ca0
900155c4:	b5e8b5cd 	.word	0xb5e8b5cd
900155c8:	f407a5c2 	.word	0xf407a5c2
900155cc:	24000088 	.word	0x24000088
900155d0:	24021cb0 	.word	0x24021cb0
900155d4:	24021ca4 	.word	0x24021ca4

900155d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
900155d8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
900155dc:	3b01      	subs	r3, #1
900155de:	b29b      	uxth	r3, r3
900155e0:	428b      	cmp	r3, r1
900155e2:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
900155e6:	b510      	push	{r4, lr}
900155e8:	d908      	bls.n	900155fc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
900155ea:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
900155ee:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
900155f2:	681a      	ldr	r2, [r3, #0]
900155f4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
900155f8:	685a      	ldr	r2, [r3, #4]
900155fa:	6062      	str	r2, [r4, #4]
900155fc:	bd10      	pop	{r4, pc}
	...

90015600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90015600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015604:	b08f      	sub	sp, #60	@ 0x3c
90015606:	4b8f      	ldr	r3, [pc, #572]	@ (90015844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90015608:	4683      	mov	fp, r0
9001560a:	ac0a      	add	r4, sp, #40	@ 0x28
9001560c:	e884 0006 	stmia.w	r4, {r1, r2}
90015610:	f9b3 2000 	ldrsh.w	r2, [r3]
90015614:	4620      	mov	r0, r4
90015616:	4b8c      	ldr	r3, [pc, #560]	@ (90015848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90015618:	f9b3 1000 	ldrsh.w	r1, [r3]
9001561c:	f7ff fe0f 	bl	9001523e <_ZN8touchgfx4Rect10restrictToEss>
90015620:	4620      	mov	r0, r4
90015622:	f7fa fc8a 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90015626:	2800      	cmp	r0, #0
90015628:	d16a      	bne.n	90015700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001562a:	9403      	str	r4, [sp, #12]
9001562c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90015630:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90015634:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90015638:	9301      	str	r3, [sp, #4]
9001563a:	35a4      	adds	r5, #164	@ 0xa4
9001563c:	b15c      	cbz	r4, 90015656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001563e:	4629      	mov	r1, r5
90015640:	9803      	ldr	r0, [sp, #12]
90015642:	f7ff fe4d 	bl	900152e0 <_ZNK8touchgfx4Rect8includesERKS0_>
90015646:	3c01      	subs	r4, #1
90015648:	b118      	cbz	r0, 90015652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001564a:	b2a1      	uxth	r1, r4
9001564c:	9801      	ldr	r0, [sp, #4]
9001564e:	f7ff ffc3 	bl	900155d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015652:	3d08      	subs	r5, #8
90015654:	e7f2      	b.n	9001563c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90015656:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
9001565a:	f10a 33ff 	add.w	r3, sl, #4294967295
9001565e:	f8cd a010 	str.w	sl, [sp, #16]
90015662:	9302      	str	r3, [sp, #8]
90015664:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90015668:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
9001566c:	9306      	str	r3, [sp, #24]
9001566e:	445c      	add	r4, fp
90015670:	2500      	movs	r5, #0
90015672:	4626      	mov	r6, r4
90015674:	f8cd a014 	str.w	sl, [sp, #20]
90015678:	462f      	mov	r7, r5
9001567a:	9b05      	ldr	r3, [sp, #20]
9001567c:	2b00      	cmp	r3, #0
9001567e:	d073      	beq.n	90015768 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90015680:	9903      	ldr	r1, [sp, #12]
90015682:	4630      	mov	r0, r6
90015684:	f7ff fdb9 	bl	900151fa <_ZNK8touchgfx4Rect9intersectERKS0_>
90015688:	b350      	cbz	r0, 900156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001568a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
9001568e:	f9b6 c000 	ldrsh.w	ip, [r6]
90015692:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
90015696:	45e6      	cmp	lr, ip
90015698:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
9001569c:	db33      	blt.n	90015706 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001569e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900156a2:	88b3      	ldrh	r3, [r6, #4]
900156a4:	4472      	add	r2, lr
900156a6:	4463      	add	r3, ip
900156a8:	b212      	sxth	r2, r2
900156aa:	b21b      	sxth	r3, r3
900156ac:	429a      	cmp	r2, r3
900156ae:	dc2a      	bgt.n	90015706 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900156b0:	fa1f f289 	uxth.w	r2, r9
900156b4:	88f3      	ldrh	r3, [r6, #6]
900156b6:	45c8      	cmp	r8, r9
900156b8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
900156bc:	4413      	add	r3, r2
900156be:	fa1f fc88 	uxth.w	ip, r8
900156c2:	b29b      	uxth	r3, r3
900156c4:	fa0f fe83 	sxth.w	lr, r3
900156c8:	db0f      	blt.n	900156ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900156ca:	eba3 030c 	sub.w	r3, r3, ip
900156ce:	1ac9      	subs	r1, r1, r3
900156d0:	b209      	sxth	r1, r1
900156d2:	2900      	cmp	r1, #0
900156d4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900156d8:	dd12      	ble.n	90015700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900156da:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
900156de:	4605      	mov	r5, r0
900156e0:	9b05      	ldr	r3, [sp, #20]
900156e2:	3e08      	subs	r6, #8
900156e4:	3b01      	subs	r3, #1
900156e6:	9305      	str	r3, [sp, #20]
900156e8:	e7c7      	b.n	9001567a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
900156ea:	4461      	add	r1, ip
900156ec:	b209      	sxth	r1, r1
900156ee:	4571      	cmp	r1, lr
900156f0:	dc38      	bgt.n	90015764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900156f2:	eba2 020c 	sub.w	r2, r2, ip
900156f6:	b212      	sxth	r2, r2
900156f8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
900156fc:	2a00      	cmp	r2, #0
900156fe:	dcee      	bgt.n	900156de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015700:	b00f      	add	sp, #60	@ 0x3c
90015702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015706:	45c8      	cmp	r8, r9
90015708:	db2c      	blt.n	90015764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001570a:	88f3      	ldrh	r3, [r6, #6]
9001570c:	4499      	add	r9, r3
9001570e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90015712:	4498      	add	r8, r3
90015714:	fa0f f989 	sxth.w	r9, r9
90015718:	fa0f f888 	sxth.w	r8, r8
9001571c:	45c1      	cmp	r9, r8
9001571e:	db21      	blt.n	90015764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015720:	fa1f f28c 	uxth.w	r2, ip
90015724:	88b3      	ldrh	r3, [r6, #4]
90015726:	45e6      	cmp	lr, ip
90015728:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001572c:	4413      	add	r3, r2
9001572e:	fa1f f88e 	uxth.w	r8, lr
90015732:	b29b      	uxth	r3, r3
90015734:	fa0f f983 	sxth.w	r9, r3
90015738:	db0a      	blt.n	90015750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001573a:	eba3 0308 	sub.w	r3, r3, r8
9001573e:	1ac9      	subs	r1, r1, r3
90015740:	b209      	sxth	r1, r1
90015742:	2900      	cmp	r1, #0
90015744:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90015748:	ddda      	ble.n	90015700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001574a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
9001574e:	e7c6      	b.n	900156de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015750:	4441      	add	r1, r8
90015752:	b209      	sxth	r1, r1
90015754:	4549      	cmp	r1, r9
90015756:	dc05      	bgt.n	90015764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015758:	eba2 0208 	sub.w	r2, r2, r8
9001575c:	b212      	sxth	r2, r2
9001575e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90015762:	e7cb      	b.n	900156fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90015764:	4607      	mov	r7, r0
90015766:	e7bb      	b.n	900156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90015768:	2d00      	cmp	r5, #0
9001576a:	d181      	bne.n	90015670 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
9001576c:	2f00      	cmp	r7, #0
9001576e:	f000 81dd 	beq.w	90015b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015772:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
90015776:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
9001577a:	b2b3      	uxth	r3, r6
9001577c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90015780:	9305      	str	r3, [sp, #20]
90015782:	9a05      	ldr	r2, [sp, #20]
90015784:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90015788:	4413      	add	r3, r2
9001578a:	b2ba      	uxth	r2, r7
9001578c:	4492      	add	sl, r2
9001578e:	b29b      	uxth	r3, r3
90015790:	fa1f fa8a 	uxth.w	sl, sl
90015794:	fa0f f883 	sxth.w	r8, r3
90015798:	fa0f f98a 	sxth.w	r9, sl
9001579c:	e9cd 2307 	strd	r2, r3, [sp, #28]
900157a0:	9b04      	ldr	r3, [sp, #16]
900157a2:	2b00      	cmp	r3, #0
900157a4:	d052      	beq.n	9001584c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
900157a6:	9903      	ldr	r1, [sp, #12]
900157a8:	4620      	mov	r0, r4
900157aa:	f7ff fd26 	bl	900151fa <_ZNK8touchgfx4Rect9intersectERKS0_>
900157ae:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
900157b2:	b1c0      	cbz	r0, 900157e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900157b4:	f9b4 e000 	ldrsh.w	lr, [r4]
900157b8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900157bc:	4576      	cmp	r6, lr
900157be:	dc22      	bgt.n	90015806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900157c0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900157c4:	44f4      	add	ip, lr
900157c6:	fa0f fc8c 	sxth.w	ip, ip
900157ca:	45e0      	cmp	r8, ip
900157cc:	db1b      	blt.n	90015806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900157ce:	428f      	cmp	r7, r1
900157d0:	fa1f fc81 	uxth.w	ip, r1
900157d4:	88e1      	ldrh	r1, [r4, #6]
900157d6:	dc0d      	bgt.n	900157f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900157d8:	ebaa 0c0c 	sub.w	ip, sl, ip
900157dc:	f8a4 9002 	strh.w	r9, [r4, #2]
900157e0:	eba1 010c 	sub.w	r1, r1, ip
900157e4:	80e1      	strh	r1, [r4, #6]
900157e6:	4628      	mov	r0, r5
900157e8:	9904      	ldr	r1, [sp, #16]
900157ea:	3c08      	subs	r4, #8
900157ec:	4605      	mov	r5, r0
900157ee:	3901      	subs	r1, #1
900157f0:	9104      	str	r1, [sp, #16]
900157f2:	e7d3      	b.n	9001579c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
900157f4:	4461      	add	r1, ip
900157f6:	b209      	sxth	r1, r1
900157f8:	4549      	cmp	r1, r9
900157fa:	dcf5      	bgt.n	900157e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900157fc:	eba2 0c0c 	sub.w	ip, r2, ip
90015800:	f8a4 c006 	strh.w	ip, [r4, #6]
90015804:	e7ef      	b.n	900157e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015806:	428f      	cmp	r7, r1
90015808:	dcee      	bgt.n	900157e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001580a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001580e:	4461      	add	r1, ip
90015810:	b209      	sxth	r1, r1
90015812:	4589      	cmp	r9, r1
90015814:	dbe8      	blt.n	900157e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015816:	4576      	cmp	r6, lr
90015818:	fa1f fc8e 	uxth.w	ip, lr
9001581c:	88a1      	ldrh	r1, [r4, #4]
9001581e:	dc07      	bgt.n	90015830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90015820:	eba3 0c0c 	sub.w	ip, r3, ip
90015824:	f8a4 8000 	strh.w	r8, [r4]
90015828:	eba1 010c 	sub.w	r1, r1, ip
9001582c:	80a1      	strh	r1, [r4, #4]
9001582e:	e7da      	b.n	900157e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015830:	4461      	add	r1, ip
90015832:	b209      	sxth	r1, r1
90015834:	4588      	cmp	r8, r1
90015836:	dbd7      	blt.n	900157e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015838:	9905      	ldr	r1, [sp, #20]
9001583a:	eba1 0c0c 	sub.w	ip, r1, ip
9001583e:	f8a4 c004 	strh.w	ip, [r4, #4]
90015842:	e7d0      	b.n	900157e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015844:	24021c52 	.word	0x24021c52
90015848:	24021c50 	.word	0x24021c50
9001584c:	2d00      	cmp	r5, #0
9001584e:	f000 816d 	beq.w	90015b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015852:	9b06      	ldr	r3, [sp, #24]
90015854:	445b      	add	r3, fp
90015856:	461c      	mov	r4, r3
90015858:	9b02      	ldr	r3, [sp, #8]
9001585a:	3301      	adds	r3, #1
9001585c:	f000 8166 	beq.w	90015b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015860:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
90015864:	9803      	ldr	r0, [sp, #12]
90015866:	4629      	mov	r1, r5
90015868:	f7ff fd3a 	bl	900152e0 <_ZNK8touchgfx4Rect8includesERKS0_>
9001586c:	b120      	cbz	r0, 90015878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001586e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90015872:	9801      	ldr	r0, [sp, #4]
90015874:	f7ff feb0 	bl	900155d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015878:	9903      	ldr	r1, [sp, #12]
9001587a:	4628      	mov	r0, r5
9001587c:	f7ff fcbd 	bl	900151fa <_ZNK8touchgfx4Rect9intersectERKS0_>
90015880:	2800      	cmp	r0, #0
90015882:	f000 809c 	beq.w	900159be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90015886:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
9001588a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
9001588e:	fa1f f189 	uxth.w	r1, r9
90015892:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90015896:	9309      	str	r3, [sp, #36]	@ 0x24
90015898:	eb01 0c03 	add.w	ip, r1, r3
9001589c:	b283      	uxth	r3, r0
9001589e:	4548      	cmp	r0, r9
900158a0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
900158a4:	fa1f fa8c 	uxth.w	sl, ip
900158a8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
900158ac:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
900158b0:	eb03 050c 	add.w	r5, r3, ip
900158b4:	b2ad      	uxth	r5, r5
900158b6:	9505      	str	r5, [sp, #20]
900158b8:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900158bc:	9504      	str	r5, [sp, #16]
900158be:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
900158c2:	f340 8099 	ble.w	900159f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
900158c6:	1a5b      	subs	r3, r3, r1
900158c8:	4596      	cmp	lr, r2
900158ca:	fa0f f08a 	sxth.w	r0, sl
900158ce:	b29b      	uxth	r3, r3
900158d0:	b21e      	sxth	r6, r3
900158d2:	dd2e      	ble.n	90015932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
900158d4:	9f02      	ldr	r7, [sp, #8]
900158d6:	fa1f fe8e 	uxth.w	lr, lr
900158da:	b292      	uxth	r2, r2
900158dc:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
900158e0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900158e4:	9f04      	ldr	r7, [sp, #16]
900158e6:	ebae 0102 	sub.w	r1, lr, r2
900158ea:	44a6      	add	lr, r4
900158ec:	1a3f      	subs	r7, r7, r0
900158ee:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
900158f2:	b289      	uxth	r1, r1
900158f4:	4402      	add	r2, r0
900158f6:	fa0f fe8e 	sxth.w	lr, lr
900158fa:	b20d      	sxth	r5, r1
900158fc:	b212      	sxth	r2, r2
900158fe:	436f      	muls	r7, r5
90015900:	ebae 0202 	sub.w	r2, lr, r2
90015904:	4372      	muls	r2, r6
90015906:	4297      	cmp	r7, r2
90015908:	db09      	blt.n	9001591e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001590a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
9001590e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
90015912:	449c      	add	ip, r3
90015914:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90015918:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001591c:	e686      	b.n	9001562c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001591e:	4421      	add	r1, r4
90015920:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90015924:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90015928:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001592c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90015930:	e67c      	b.n	9001562c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015932:	9f04      	ldr	r7, [sp, #16]
90015934:	42b8      	cmp	r0, r7
90015936:	da27      	bge.n	90015988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90015938:	9902      	ldr	r1, [sp, #8]
9001593a:	1a3f      	subs	r7, r7, r0
9001593c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
90015940:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90015944:	eb05 010e 	add.w	r1, r5, lr
90015948:	fa1f f881 	uxth.w	r8, r1
9001594c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
90015950:	4411      	add	r1, r2
90015952:	fa0f f988 	sxth.w	r9, r8
90015956:	eba2 020e 	sub.w	r2, r2, lr
9001595a:	eba1 0108 	sub.w	r1, r1, r8
9001595e:	4372      	muls	r2, r6
90015960:	b289      	uxth	r1, r1
90015962:	fa0f f881 	sxth.w	r8, r1
90015966:	fb08 f707 	mul.w	r7, r8, r7
9001596a:	42ba      	cmp	r2, r7
9001596c:	dc06      	bgt.n	9001597c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
9001596e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
90015972:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90015976:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
9001597a:	e7ca      	b.n	90015912 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
9001597c:	4429      	add	r1, r5
9001597e:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
90015982:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015986:	e651      	b.n	9001562c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015988:	9805      	ldr	r0, [sp, #20]
9001598a:	2d06      	cmp	r5, #6
9001598c:	ebaa 0000 	sub.w	r0, sl, r0
90015990:	b280      	uxth	r0, r0
90015992:	fa0f fe80 	sxth.w	lr, r0
90015996:	d817      	bhi.n	900159c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90015998:	9b04      	ldr	r3, [sp, #16]
9001599a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
9001599e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900159a2:	1c6b      	adds	r3, r5, #1
900159a4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
900159a8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
900159ac:	9b01      	ldr	r3, [sp, #4]
900159ae:	9801      	ldr	r0, [sp, #4]
900159b0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900159b4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900159b8:	805a      	strh	r2, [r3, #2]
900159ba:	809e      	strh	r6, [r3, #4]
900159bc:	80d9      	strh	r1, [r3, #6]
900159be:	9b02      	ldr	r3, [sp, #8]
900159c0:	3c08      	subs	r4, #8
900159c2:	3b01      	subs	r3, #1
900159c4:	9302      	str	r3, [sp, #8]
900159c6:	e747      	b.n	90015858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
900159c8:	9a02      	ldr	r2, [sp, #8]
900159ca:	45b6      	cmp	lr, r6
900159cc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900159d0:	db0d      	blt.n	900159ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
900159d2:	449c      	add	ip, r3
900159d4:	445a      	add	r2, fp
900159d6:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900159da:	fa1f fc8c 	uxth.w	ip, ip
900159de:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
900159e2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900159e6:	448c      	add	ip, r1
900159e8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
900159ec:	e61e      	b.n	9001562c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900159ee:	445a      	add	r2, fp
900159f0:	4484      	add	ip, r0
900159f2:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
900159f6:	e78f      	b.n	90015918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900159f8:	fa1f f18e 	uxth.w	r1, lr
900159fc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90015a00:	b293      	uxth	r3, r2
90015a02:	4596      	cmp	lr, r2
90015a04:	eb01 0806 	add.w	r8, r1, r6
90015a08:	9306      	str	r3, [sp, #24]
90015a0a:	fa1f f888 	uxth.w	r8, r8
90015a0e:	9f06      	ldr	r7, [sp, #24]
90015a10:	fa0f f388 	sxth.w	r3, r8
90015a14:	9307      	str	r3, [sp, #28]
90015a16:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90015a1a:	443b      	add	r3, r7
90015a1c:	b29b      	uxth	r3, r3
90015a1e:	9308      	str	r3, [sp, #32]
90015a20:	da24      	bge.n	90015a6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90015a22:	9905      	ldr	r1, [sp, #20]
90015a24:	eba3 0308 	sub.w	r3, r3, r8
90015a28:	eba2 020e 	sub.w	r2, r2, lr
90015a2c:	eba9 0000 	sub.w	r0, r9, r0
90015a30:	ebaa 0401 	sub.w	r4, sl, r1
90015a34:	b29b      	uxth	r3, r3
90015a36:	b2a4      	uxth	r4, r4
90015a38:	b219      	sxth	r1, r3
90015a3a:	b225      	sxth	r5, r4
90015a3c:	4348      	muls	r0, r1
90015a3e:	436a      	muls	r2, r5
90015a40:	4282      	cmp	r2, r0
90015a42:	9a02      	ldr	r2, [sp, #8]
90015a44:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015a48:	445a      	add	r2, fp
90015a4a:	dc06      	bgt.n	90015a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90015a4c:	9b07      	ldr	r3, [sp, #28]
90015a4e:	44a4      	add	ip, r4
90015a50:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90015a54:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90015a58:	e75e      	b.n	90015918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015a5a:	9904      	ldr	r1, [sp, #16]
90015a5c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
90015a60:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90015a64:	4433      	add	r3, r6
90015a66:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015a6a:	e5df      	b.n	9001562c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015a6c:	9f06      	ldr	r7, [sp, #24]
90015a6e:	9b04      	ldr	r3, [sp, #16]
90015a70:	1bc9      	subs	r1, r1, r7
90015a72:	fa0f f78a 	sxth.w	r7, sl
90015a76:	b289      	uxth	r1, r1
90015a78:	429f      	cmp	r7, r3
90015a7a:	fa0f fe81 	sxth.w	lr, r1
90015a7e:	dd23      	ble.n	90015ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90015a80:	9a05      	ldr	r2, [sp, #20]
90015a82:	eba9 0000 	sub.w	r0, r9, r0
90015a86:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90015a8a:	ebaa 0202 	sub.w	r2, sl, r2
90015a8e:	9d07      	ldr	r5, [sp, #28]
90015a90:	fb0e f000 	mul.w	r0, lr, r0
90015a94:	b292      	uxth	r2, r2
90015a96:	eba5 0a03 	sub.w	sl, r5, r3
90015a9a:	9b02      	ldr	r3, [sp, #8]
90015a9c:	b214      	sxth	r4, r2
90015a9e:	00db      	lsls	r3, r3, #3
90015aa0:	fb04 fa0a 	mul.w	sl, r4, sl
90015aa4:	445b      	add	r3, fp
90015aa6:	4550      	cmp	r0, sl
90015aa8:	db03      	blt.n	90015ab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90015aaa:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90015aae:	4494      	add	ip, r2
90015ab0:	e732      	b.n	90015918 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015ab2:	9a04      	ldr	r2, [sp, #16]
90015ab4:	4431      	add	r1, r6
90015ab6:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90015aba:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90015abe:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90015ac2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90015ac6:	e75c      	b.n	90015982 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90015ac8:	9b08      	ldr	r3, [sp, #32]
90015aca:	2d06      	cmp	r5, #6
90015acc:	eba3 0308 	sub.w	r3, r3, r8
90015ad0:	b29b      	uxth	r3, r3
90015ad2:	b218      	sxth	r0, r3
90015ad4:	d813      	bhi.n	90015afe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90015ad6:	9b07      	ldr	r3, [sp, #28]
90015ad8:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90015adc:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90015ae0:	1c6b      	adds	r3, r5, #1
90015ae2:	9901      	ldr	r1, [sp, #4]
90015ae4:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90015ae8:	9b01      	ldr	r3, [sp, #4]
90015aea:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90015aee:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015af2:	805a      	strh	r2, [r3, #2]
90015af4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90015af6:	f8a3 e006 	strh.w	lr, [r3, #6]
90015afa:	809a      	strh	r2, [r3, #4]
90015afc:	e75f      	b.n	900159be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90015afe:	9c02      	ldr	r4, [sp, #8]
90015b00:	4570      	cmp	r0, lr
90015b02:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90015b06:	db0d      	blt.n	90015b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90015b08:	4431      	add	r1, r6
90015b0a:	9b06      	ldr	r3, [sp, #24]
90015b0c:	445c      	add	r4, fp
90015b0e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90015b12:	b289      	uxth	r1, r1
90015b14:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90015b18:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90015b1c:	4419      	add	r1, r3
90015b1e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90015b22:	e583      	b.n	9001562c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015b24:	445c      	add	r4, fp
90015b26:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90015b2a:	e79b      	b.n	90015a64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90015b2c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90015b30:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90015b34:	1e65      	subs	r5, r4, #1
90015b36:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90015b3a:	b2ad      	uxth	r5, r5
90015b3c:	42b5      	cmp	r5, r6
90015b3e:	d044      	beq.n	90015bca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90015b40:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90015b44:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90015b48:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90015b4c:	4282      	cmp	r2, r0
90015b4e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90015b52:	d11f      	bne.n	90015b94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015b54:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90015b58:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90015b5c:	459c      	cmp	ip, r3
90015b5e:	d119      	bne.n	90015b94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015b60:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90015b64:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90015b68:	19d8      	adds	r0, r3, r7
90015b6a:	b200      	sxth	r0, r0
90015b6c:	4288      	cmp	r0, r1
90015b6e:	d109      	bne.n	90015b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90015b70:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90015b74:	4413      	add	r3, r2
90015b76:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90015b7a:	4629      	mov	r1, r5
90015b7c:	9801      	ldr	r0, [sp, #4]
90015b7e:	f7ff fd2b 	bl	900155d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015b82:	e003      	b.n	90015b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015b84:	4411      	add	r1, r2
90015b86:	b209      	sxth	r1, r1
90015b88:	42b9      	cmp	r1, r7
90015b8a:	d0f3      	beq.n	90015b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90015b8c:	3d01      	subs	r5, #1
90015b8e:	3c08      	subs	r4, #8
90015b90:	b2ad      	uxth	r5, r5
90015b92:	e7d3      	b.n	90015b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90015b94:	42b9      	cmp	r1, r7
90015b96:	d1f9      	bne.n	90015b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015b98:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90015b9c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90015ba0:	4299      	cmp	r1, r3
90015ba2:	d1f3      	bne.n	90015b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015ba4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90015ba8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90015bac:	181f      	adds	r7, r3, r0
90015bae:	b23f      	sxth	r7, r7
90015bb0:	42ba      	cmp	r2, r7
90015bb2:	d105      	bne.n	90015bc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90015bb4:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90015bb8:	440b      	add	r3, r1
90015bba:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90015bbe:	e7dc      	b.n	90015b7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90015bc0:	440a      	add	r2, r1
90015bc2:	b212      	sxth	r2, r2
90015bc4:	4290      	cmp	r0, r2
90015bc6:	d1e1      	bne.n	90015b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015bc8:	e7f6      	b.n	90015bb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90015bca:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90015bce:	2e07      	cmp	r6, #7
90015bd0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90015bd4:	d812      	bhi.n	90015bfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90015bd6:	1c75      	adds	r5, r6, #1
90015bd8:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90015bdc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90015be0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90015be4:	9d01      	ldr	r5, [sp, #4]
90015be6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90015bea:	442c      	add	r4, r5
90015bec:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90015bf0:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90015bf4:	8061      	strh	r1, [r4, #2]
90015bf6:	80a2      	strh	r2, [r4, #4]
90015bf8:	80e3      	strh	r3, [r4, #6]
90015bfa:	e581      	b.n	90015700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90015bfc:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90015c00:	3e01      	subs	r6, #1
90015c02:	445c      	add	r4, fp
90015c04:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90015c08:	f04f 37ff 	mov.w	r7, #4294967295
90015c0c:	2500      	movs	r5, #0
90015c0e:	9305      	str	r3, [sp, #20]
90015c10:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90015c14:	1e72      	subs	r2, r6, #1
90015c16:	9302      	str	r3, [sp, #8]
90015c18:	4691      	mov	r9, r2
90015c1a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90015c1e:	9304      	str	r3, [sp, #16]
90015c20:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90015c24:	f1b9 3fff 	cmp.w	r9, #4294967295
90015c28:	6818      	ldr	r0, [r3, #0]
90015c2a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90015c2e:	9207      	str	r2, [sp, #28]
90015c30:	bf16      	itet	ne
90015c32:	9905      	ldrne	r1, [sp, #20]
90015c34:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90015c38:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90015c3c:	9306      	str	r3, [sp, #24]
90015c3e:	f8be 1006 	ldrh.w	r1, [lr, #6]
90015c42:	f8be 8004 	ldrh.w	r8, [lr, #4]
90015c46:	fb18 f801 	smulbb	r8, r8, r1
90015c4a:	6859      	ldr	r1, [r3, #4]
90015c4c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90015c50:	4671      	mov	r1, lr
90015c52:	a80c      	add	r0, sp, #48	@ 0x30
90015c54:	f7ff fb6a 	bl	9001532c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015c58:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90015c5c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90015c60:	f04f 0c08 	mov.w	ip, #8
90015c64:	9b04      	ldr	r3, [sp, #16]
90015c66:	9a02      	ldr	r2, [sp, #8]
90015c68:	fb10 f001 	smulbb	r0, r0, r1
90015c6c:	fb02 8803 	mla	r8, r2, r3, r8
90015c70:	eba0 0108 	sub.w	r1, r0, r8
90015c74:	fb90 f0fc 	sdiv	r0, r0, ip
90015c78:	4288      	cmp	r0, r1
90015c7a:	dc20      	bgt.n	90015cbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90015c7c:	4551      	cmp	r1, sl
90015c7e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90015c82:	da03      	bge.n	90015c8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90015c84:	b1d9      	cbz	r1, 90015cbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90015c86:	468a      	mov	sl, r1
90015c88:	464f      	mov	r7, r9
90015c8a:	4635      	mov	r5, r6
90015c8c:	f109 39ff 	add.w	r9, r9, #4294967295
90015c90:	f119 0f02 	cmn.w	r9, #2
90015c94:	d1c6      	bne.n	90015c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90015c96:	4616      	mov	r6, r2
90015c98:	3201      	adds	r2, #1
90015c9a:	f1a4 0408 	sub.w	r4, r4, #8
90015c9e:	d1b7      	bne.n	90015c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90015ca0:	9b01      	ldr	r3, [sp, #4]
90015ca2:	b2ac      	uxth	r4, r5
90015ca4:	00ed      	lsls	r5, r5, #3
90015ca6:	1958      	adds	r0, r3, r5
90015ca8:	1c7b      	adds	r3, r7, #1
90015caa:	d10b      	bne.n	90015cc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90015cac:	4601      	mov	r1, r0
90015cae:	9803      	ldr	r0, [sp, #12]
90015cb0:	f7ff fb3c 	bl	9001532c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015cb4:	4621      	mov	r1, r4
90015cb6:	9801      	ldr	r0, [sp, #4]
90015cb8:	f7ff fc8e 	bl	900155d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015cbc:	e4b6      	b.n	9001562c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015cbe:	464f      	mov	r7, r9
90015cc0:	4635      	mov	r5, r6
90015cc2:	e7ed      	b.n	90015ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90015cc4:	9b01      	ldr	r3, [sp, #4]
90015cc6:	00ff      	lsls	r7, r7, #3
90015cc8:	445d      	add	r5, fp
90015cca:	19d9      	adds	r1, r3, r7
90015ccc:	445f      	add	r7, fp
90015cce:	f7ff fb2d 	bl	9001532c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015cd2:	9b03      	ldr	r3, [sp, #12]
90015cd4:	cb03      	ldmia	r3!, {r0, r1}
90015cd6:	9b03      	ldr	r3, [sp, #12]
90015cd8:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90015cdc:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90015ce0:	f855 0fac 	ldr.w	r0, [r5, #172]!
90015ce4:	6869      	ldr	r1, [r5, #4]
90015ce6:	c303      	stmia	r3!, {r0, r1}
90015ce8:	e7e4      	b.n	90015cb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90015cea:	bf00      	nop

90015cec <_ZN8touchgfx11Application15drawCachedAreasEv>:
90015cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015cf0:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90015cf4:	b09b      	sub	sp, #108	@ 0x6c
90015cf6:	4604      	mov	r4, r0
90015cf8:	4630      	mov	r0, r6
90015cfa:	f7fa f91e 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90015cfe:	4605      	mov	r5, r0
90015d00:	b948      	cbnz	r0, 90015d16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90015d02:	6823      	ldr	r3, [r4, #0]
90015d04:	4620      	mov	r0, r4
90015d06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90015d08:	e896 0006 	ldmia.w	r6, {r1, r2}
90015d0c:	4798      	blx	r3
90015d0e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90015d12:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90015d16:	4bc5      	ldr	r3, [pc, #788]	@ (9001602c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90015d18:	681b      	ldr	r3, [r3, #0]
90015d1a:	2b00      	cmp	r3, #0
90015d1c:	d03f      	beq.n	90015d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90015d1e:	4dc4      	ldr	r5, [pc, #784]	@ (90016030 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90015d20:	4628      	mov	r0, r5
90015d22:	f7fa f90a 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90015d26:	4606      	mov	r6, r0
90015d28:	2800      	cmp	r0, #0
90015d2a:	d138      	bne.n	90015d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90015d2c:	4628      	mov	r0, r5
90015d2e:	f7ff f98f 	bl	90015050 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015d32:	6823      	ldr	r3, [r4, #0]
90015d34:	6829      	ldr	r1, [r5, #0]
90015d36:	4620      	mov	r0, r4
90015d38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90015d3a:	686a      	ldr	r2, [r5, #4]
90015d3c:	4798      	blx	r3
90015d3e:	802e      	strh	r6, [r5, #0]
90015d40:	806e      	strh	r6, [r5, #2]
90015d42:	80ae      	strh	r6, [r5, #4]
90015d44:	80ee      	strh	r6, [r5, #6]
90015d46:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
90015d4a:	4dba      	ldr	r5, [pc, #744]	@ (90016034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90015d4c:	4640      	mov	r0, r8
90015d4e:	f7ff fbe7 	bl	90015520 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015d52:	882e      	ldrh	r6, [r5, #0]
90015d54:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90015d58:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90015d5c:	4633      	mov	r3, r6
90015d5e:	42bb      	cmp	r3, r7
90015d60:	d224      	bcs.n	90015dac <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90015d62:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
90015d66:	2907      	cmp	r1, #7
90015d68:	d816      	bhi.n	90015d98 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90015d6a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90015d6e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90015d72:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90015d76:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90015d7a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90015d7e:	1c4a      	adds	r2, r1, #1
90015d80:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
90015d84:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90015d88:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90015d8c:	f8a2 a002 	strh.w	sl, [r2, #2]
90015d90:	f8a2 e004 	strh.w	lr, [r2, #4]
90015d94:	f8a2 c006 	strh.w	ip, [r2, #6]
90015d98:	3301      	adds	r3, #1
90015d9a:	b29b      	uxth	r3, r3
90015d9c:	e7df      	b.n	90015d5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90015d9e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90015da2:	2b00      	cmp	r3, #0
90015da4:	d1cf      	bne.n	90015d46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90015da6:	b01b      	add	sp, #108	@ 0x6c
90015da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015dac:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90015db0:	42b3      	cmp	r3, r6
90015db2:	d90c      	bls.n	90015dce <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90015db4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90015db8:	6822      	ldr	r2, [r4, #0]
90015dba:	3601      	adds	r6, #1
90015dbc:	4620      	mov	r0, r4
90015dbe:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90015dc0:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90015dc4:	b2b6      	uxth	r6, r6
90015dc6:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90015dca:	47b8      	blx	r7
90015dcc:	e7ee      	b.n	90015dac <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90015dce:	4a9a      	ldr	r2, [pc, #616]	@ (90016038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90015dd0:	6813      	ldr	r3, [r2, #0]
90015dd2:	4691      	mov	r9, r2
90015dd4:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
90015dd8:	2b01      	cmp	r3, #1
90015dda:	f040 80e0 	bne.w	90015f9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90015dde:	8829      	ldrh	r1, [r5, #0]
90015de0:	2600      	movs	r6, #0
90015de2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
90015de6:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90015dea:	33ae      	adds	r3, #174	@ 0xae
90015dec:	428f      	cmp	r7, r1
90015dee:	f103 0308 	add.w	r3, r3, #8
90015df2:	dd0a      	ble.n	90015e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90015df4:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90015df8:	3101      	adds	r1, #1
90015dfa:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90015dfe:	4402      	add	r2, r0
90015e00:	b212      	sxth	r2, r2
90015e02:	4296      	cmp	r6, r2
90015e04:	bfb8      	it	lt
90015e06:	4616      	movlt	r6, r2
90015e08:	e7f0      	b.n	90015dec <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90015e0a:	4b8c      	ldr	r3, [pc, #560]	@ (9001603c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90015e0c:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 90016038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90015e10:	881b      	ldrh	r3, [r3, #0]
90015e12:	2b0f      	cmp	r3, #15
90015e14:	bf8c      	ite	hi
90015e16:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90015e1a:	f04f 0b01 	movls.w	fp, #1
90015e1e:	2300      	movs	r3, #0
90015e20:	e9cd 3305 	strd	r3, r3, [sp, #20]
90015e24:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90015e28:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90015e2c:	4b82      	ldr	r3, [pc, #520]	@ (90016038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90015e2e:	4438      	add	r0, r7
90015e30:	b207      	sxth	r7, r0
90015e32:	6818      	ldr	r0, [r3, #0]
90015e34:	42b7      	cmp	r7, r6
90015e36:	6803      	ldr	r3, [r0, #0]
90015e38:	f280 8083 	bge.w	90015f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90015e3c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90015e40:	4798      	blx	r3
90015e42:	eb07 030b 	add.w	r3, r7, fp
90015e46:	4298      	cmp	r0, r3
90015e48:	da07      	bge.n	90015e5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90015e4a:	42b0      	cmp	r0, r6
90015e4c:	da05      	bge.n	90015e5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90015e4e:	4287      	cmp	r7, r0
90015e50:	dd6c      	ble.n	90015f2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90015e52:	2f00      	cmp	r7, #0
90015e54:	dd6a      	ble.n	90015f2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90015e56:	4630      	mov	r0, r6
90015e58:	e004      	b.n	90015e64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90015e5a:	4287      	cmp	r7, r0
90015e5c:	dcfb      	bgt.n	90015e56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90015e5e:	42b0      	cmp	r0, r6
90015e60:	bfa8      	it	ge
90015e62:	4630      	movge	r0, r6
90015e64:	4b76      	ldr	r3, [pc, #472]	@ (90016040 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90015e66:	1bc0      	subs	r0, r0, r7
90015e68:	2200      	movs	r2, #0
90015e6a:	f8ad 7016 	strh.w	r7, [sp, #22]
90015e6e:	f9b3 3000 	ldrsh.w	r3, [r3]
90015e72:	882f      	ldrh	r7, [r5, #0]
90015e74:	f8ad 2014 	strh.w	r2, [sp, #20]
90015e78:	f8ad 3018 	strh.w	r3, [sp, #24]
90015e7c:	f8ad 001a 	strh.w	r0, [sp, #26]
90015e80:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90015e84:	42bb      	cmp	r3, r7
90015e86:	d9cd      	bls.n	90015e24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015e88:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90015e8c:	ab07      	add	r3, sp, #28
90015e8e:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015e92:	6851      	ldr	r1, [r2, #4]
90015e94:	c303      	stmia	r3!, {r0, r1}
90015e96:	a905      	add	r1, sp, #20
90015e98:	a807      	add	r0, sp, #28
90015e9a:	f7ff f9ae 	bl	900151fa <_ZNK8touchgfx4Rect9intersectERKS0_>
90015e9e:	2800      	cmp	r0, #0
90015ea0:	d04c      	beq.n	90015f3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90015ea2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90015ea6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90015eaa:	f8bd a020 	ldrh.w	sl, [sp, #32]
90015eae:	4686      	mov	lr, r0
90015eb0:	4290      	cmp	r0, r2
90015eb2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90015eb6:	4450      	add	r0, sl
90015eb8:	f8bd a018 	ldrh.w	sl, [sp, #24]
90015ebc:	bfb8      	it	lt
90015ebe:	4696      	movlt	lr, r2
90015ec0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90015ec4:	4452      	add	r2, sl
90015ec6:	b280      	uxth	r0, r0
90015ec8:	4299      	cmp	r1, r3
90015eca:	468c      	mov	ip, r1
90015ecc:	b292      	uxth	r2, r2
90015ece:	9302      	str	r3, [sp, #8]
90015ed0:	bfb8      	it	lt
90015ed2:	469c      	movlt	ip, r3
90015ed4:	b203      	sxth	r3, r0
90015ed6:	fa0f fa82 	sxth.w	sl, r2
90015eda:	f8ad e01c 	strh.w	lr, [sp, #28]
90015ede:	f8ad c01e 	strh.w	ip, [sp, #30]
90015ee2:	4553      	cmp	r3, sl
90015ee4:	bfb8      	it	lt
90015ee6:	4602      	movlt	r2, r0
90015ee8:	9b02      	ldr	r3, [sp, #8]
90015eea:	eba2 020e 	sub.w	r2, r2, lr
90015eee:	f8ad 2020 	strh.w	r2, [sp, #32]
90015ef2:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90015ef6:	4411      	add	r1, r2
90015ef8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90015efc:	4413      	add	r3, r2
90015efe:	b289      	uxth	r1, r1
90015f00:	b29b      	uxth	r3, r3
90015f02:	b208      	sxth	r0, r1
90015f04:	b21a      	sxth	r2, r3
90015f06:	4290      	cmp	r0, r2
90015f08:	bfb8      	it	lt
90015f0a:	460b      	movlt	r3, r1
90015f0c:	eba3 030c 	sub.w	r3, r3, ip
90015f10:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90015f14:	a807      	add	r0, sp, #28
90015f16:	f7fa f810 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90015f1a:	b920      	cbnz	r0, 90015f26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90015f1c:	6823      	ldr	r3, [r4, #0]
90015f1e:	a907      	add	r1, sp, #28
90015f20:	4620      	mov	r0, r4
90015f22:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90015f24:	4798      	blx	r3
90015f26:	3701      	adds	r7, #1
90015f28:	b2bf      	uxth	r7, r7
90015f2a:	e7a9      	b.n	90015e80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90015f2c:	f8d9 0000 	ldr.w	r0, [r9]
90015f30:	2101      	movs	r1, #1
90015f32:	6803      	ldr	r3, [r0, #0]
90015f34:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90015f38:	4798      	blx	r3
90015f3a:	e773      	b.n	90015e24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015f3c:	e9cd 0007 	strd	r0, r0, [sp, #28]
90015f40:	e7e8      	b.n	90015f14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90015f42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90015f44:	4798      	blx	r3
90015f46:	4b3f      	ldr	r3, [pc, #252]	@ (90016044 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90015f48:	781b      	ldrb	r3, [r3, #0]
90015f4a:	2b00      	cmp	r3, #0
90015f4c:	f43f af2b 	beq.w	90015da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015f50:	2300      	movs	r3, #0
90015f52:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90015f56:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90015f5a:	882b      	ldrh	r3, [r5, #0]
90015f5c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
90015f60:	42ab      	cmp	r3, r5
90015f62:	f4bf af20 	bcs.w	90015da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015f66:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90015f6a:	2907      	cmp	r1, #7
90015f6c:	d814      	bhi.n	90015f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90015f6e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90015f72:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90015f76:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90015f7a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90015f7e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90015f82:	1c4a      	adds	r2, r1, #1
90015f84:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90015f88:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90015f8c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90015f90:	f8a2 c002 	strh.w	ip, [r2, #2]
90015f94:	8097      	strh	r7, [r2, #4]
90015f96:	80d6      	strh	r6, [r2, #6]
90015f98:	3301      	adds	r3, #1
90015f9a:	b29b      	uxth	r3, r3
90015f9c:	e7e0      	b.n	90015f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90015f9e:	2b02      	cmp	r3, #2
90015fa0:	f040 8133 	bne.w	9001620a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90015fa4:	4b28      	ldr	r3, [pc, #160]	@ (90016048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90015fa6:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
90015faa:	781b      	ldrb	r3, [r3, #0]
90015fac:	2b01      	cmp	r3, #1
90015fae:	f000 8098 	beq.w	900160e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015fb2:	882a      	ldrh	r2, [r5, #0]
90015fb4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
90015fb8:	3201      	adds	r2, #1
90015fba:	b292      	uxth	r2, r2
90015fbc:	2900      	cmp	r1, #0
90015fbe:	d0c2      	beq.n	90015f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015fc0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
90015fc4:	4694      	mov	ip, r2
90015fc6:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
90015fca:	f04f 0900 	mov.w	r9, #0
90015fce:	441e      	add	r6, r3
90015fd0:	b236      	sxth	r6, r6
90015fd2:	fa1f f38c 	uxth.w	r3, ip
90015fd6:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90015fda:	4299      	cmp	r1, r3
90015fdc:	f240 80be 	bls.w	9001615c <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90015fe0:	4427      	add	r7, r4
90015fe2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90015fe6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
90015fea:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
90015fee:	4283      	cmp	r3, r0
90015ff0:	f340 80a0 	ble.w	90016134 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90015ff4:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
90015ff8:	46e1      	mov	r9, ip
90015ffa:	4406      	add	r6, r0
90015ffc:	b236      	sxth	r6, r6
90015ffe:	429e      	cmp	r6, r3
90016000:	bfa8      	it	ge
90016002:	461e      	movge	r6, r3
90016004:	f10c 0c01 	add.w	ip, ip, #1
90016008:	e7e3      	b.n	90015fd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
9001600a:	d10a      	bne.n	90016022 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
9001600c:	4562      	cmp	r2, ip
9001600e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
90016012:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
90016016:	bfb8      	it	lt
90016018:	4662      	movlt	r2, ip
9001601a:	4288      	cmp	r0, r1
9001601c:	bfb8      	it	lt
9001601e:	461f      	movlt	r7, r3
90016020:	e086      	b.n	90016130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90016022:	428a      	cmp	r2, r1
90016024:	bfb8      	it	lt
90016026:	460a      	movlt	r2, r1
90016028:	e082      	b.n	90016130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001602a:	bf00      	nop
9001602c:	24021c9c 	.word	0x24021c9c
90016030:	24021ca8 	.word	0x24021ca8
90016034:	24000088 	.word	0x24000088
90016038:	24021c5c 	.word	0x24021c5c
9001603c:	24021c52 	.word	0x24021c52
90016040:	24021c50 	.word	0x24021c50
90016044:	24021c5a 	.word	0x24021c5a
90016048:	24021c54 	.word	0x24021c54
9001604c:	19a1      	adds	r1, r4, r6
9001604e:	ab07      	add	r3, sp, #28
90016050:	f851 0fac 	ldr.w	r0, [r1, #172]!
90016054:	6849      	ldr	r1, [r1, #4]
90016056:	c303      	stmia	r3!, {r0, r1}
90016058:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001605c:	a807      	add	r0, sp, #28
9001605e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90016062:	2b13      	cmp	r3, #19
90016064:	440b      	add	r3, r1
90016066:	bfd8      	it	le
90016068:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
9001606c:	1a9b      	subs	r3, r3, r2
9001606e:	f8ad 201c 	strh.w	r2, [sp, #28]
90016072:	f8ad 3020 	strh.w	r3, [sp, #32]
90016076:	f7ff f805 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001607a:	a807      	add	r0, sp, #28
9001607c:	f7f9 ff5d 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
90016080:	bb78      	cbnz	r0, 900160e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90016082:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
90016086:	4426      	add	r6, r4
90016088:	f8d9 0000 	ldr.w	r0, [r9]
9001608c:	f1bc 0f14 	cmp.w	ip, #20
90016090:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90016094:	f8d0 e000 	ldr.w	lr, [r0]
90016098:	bfa8      	it	ge
9001609a:	f04f 0c14 	movge.w	ip, #20
9001609e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
900160a2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
900160a6:	fa1f fc8c 	uxth.w	ip, ip
900160aa:	f8cd c000 	str.w	ip, [sp]
900160ae:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
900160b2:	47d8      	blx	fp
900160b4:	4683      	mov	fp, r0
900160b6:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
900160ba:	a807      	add	r0, sp, #28
900160bc:	f7fe ffc8 	bl	90015050 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900160c0:	6823      	ldr	r3, [r4, #0]
900160c2:	4620      	mov	r0, r4
900160c4:	a907      	add	r1, sp, #28
900160c6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900160c8:	4798      	blx	r3
900160ca:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
900160ce:	eba0 000b 	sub.w	r0, r0, fp
900160d2:	b200      	sxth	r0, r0
900160d4:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
900160d8:	b918      	cbnz	r0, 900160e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900160da:	b2b9      	uxth	r1, r7
900160dc:	4650      	mov	r0, sl
900160de:	f7ff fa7b 	bl	900155d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900160e2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
900160e6:	f1bb 0f00 	cmp.w	fp, #0
900160ea:	f43f af2c 	beq.w	90015f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900160ee:	882b      	ldrh	r3, [r5, #0]
900160f0:	2700      	movs	r7, #0
900160f2:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
900160f6:	3301      	adds	r3, #1
900160f8:	b29b      	uxth	r3, r3
900160fa:	b299      	uxth	r1, r3
900160fc:	00fe      	lsls	r6, r7, #3
900160fe:	458b      	cmp	fp, r1
90016100:	d9a4      	bls.n	9001604c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90016102:	4426      	add	r6, r4
90016104:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90016108:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
9001610c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
90016110:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
90016114:	4408      	add	r0, r1
90016116:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
9001611a:	4461      	add	r1, ip
9001611c:	b200      	sxth	r0, r0
9001611e:	b209      	sxth	r1, r1
90016120:	4288      	cmp	r0, r1
90016122:	f6bf af72 	bge.w	9001600a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90016126:	4584      	cmp	ip, r0
90016128:	4662      	mov	r2, ip
9001612a:	461f      	mov	r7, r3
9001612c:	bfb8      	it	lt
9001612e:	4602      	movlt	r2, r0
90016130:	3301      	adds	r3, #1
90016132:	e7e2      	b.n	900160fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90016134:	d10e      	bne.n	90016154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90016136:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
9001613a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
9001613e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
90016142:	4473      	add	r3, lr
90016144:	b21b      	sxth	r3, r3
90016146:	429e      	cmp	r6, r3
90016148:	bfa8      	it	ge
9001614a:	461e      	movge	r6, r3
9001614c:	4287      	cmp	r7, r0
9001614e:	bfb8      	it	lt
90016150:	46e1      	movlt	r9, ip
90016152:	e757      	b.n	90016004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90016154:	4286      	cmp	r6, r0
90016156:	bfa8      	it	ge
90016158:	4606      	movge	r6, r0
9001615a:	e753      	b.n	90016004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
9001615c:	eb0a 0007 	add.w	r0, sl, r7
90016160:	4427      	add	r7, r4
90016162:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
90016166:	f1bb 0f13 	cmp.w	fp, #19
9001616a:	bfdc      	itt	le
9001616c:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
90016170:	445e      	addle	r6, fp
90016172:	e9cd 2102 	strd	r2, r1, [sp, #8]
90016176:	bfd8      	it	le
90016178:	b236      	sxthle	r6, r6
9001617a:	f7f9 fede 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9001617e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90016182:	2800      	cmp	r0, #0
90016184:	f47f af1a 	bne.w	90015fbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90016188:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
9001618c:	fa1f fb8b 	uxth.w	fp, fp
90016190:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
90016194:	1ab6      	subs	r6, r6, r2
90016196:	4829      	ldr	r0, [pc, #164]	@ (9001623c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90016198:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
9001619c:	2e14      	cmp	r6, #20
9001619e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
900161a2:	6800      	ldr	r0, [r0, #0]
900161a4:	bfa8      	it	ge
900161a6:	2614      	movge	r6, #20
900161a8:	f8ad 101c 	strh.w	r1, [sp, #28]
900161ac:	f8ad 201e 	strh.w	r2, [sp, #30]
900161b0:	b289      	uxth	r1, r1
900161b2:	f8ad 3020 	strh.w	r3, [sp, #32]
900161b6:	b2b6      	uxth	r6, r6
900161b8:	f8d0 c000 	ldr.w	ip, [r0]
900161bc:	b292      	uxth	r2, r2
900161be:	455e      	cmp	r6, fp
900161c0:	bf94      	ite	ls
900161c2:	9600      	strls	r6, [sp, #0]
900161c4:	f8cd b000 	strhi.w	fp, [sp]
900161c8:	b29b      	uxth	r3, r3
900161ca:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
900161ce:	47b0      	blx	r6
900161d0:	6823      	ldr	r3, [r4, #0]
900161d2:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
900161d6:	a907      	add	r1, sp, #28
900161d8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900161da:	4620      	mov	r0, r4
900161dc:	4798      	blx	r3
900161de:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
900161e2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
900161e6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
900161ea:	1a5b      	subs	r3, r3, r1
900161ec:	440a      	add	r2, r1
900161ee:	b21b      	sxth	r3, r3
900161f0:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
900161f4:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
900161f8:	2b00      	cmp	r3, #0
900161fa:	f47f aeda 	bne.w	90015fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
900161fe:	fa1f f189 	uxth.w	r1, r9
90016202:	4650      	mov	r0, sl
90016204:	f7ff f9e8 	bl	900155d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016208:	e6d3      	b.n	90015fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001620a:	882e      	ldrh	r6, [r5, #0]
9001620c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016210:	42b3      	cmp	r3, r6
90016212:	f67f ae98 	bls.w	90015f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90016216:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
9001621a:	ab07      	add	r3, sp, #28
9001621c:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016220:	6851      	ldr	r1, [r2, #4]
90016222:	c303      	stmia	r3!, {r0, r1}
90016224:	a807      	add	r0, sp, #28
90016226:	f7f9 fe88 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9001622a:	b920      	cbnz	r0, 90016236 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
9001622c:	6823      	ldr	r3, [r4, #0]
9001622e:	a907      	add	r1, sp, #28
90016230:	4620      	mov	r0, r4
90016232:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016234:	4798      	blx	r3
90016236:	3601      	adds	r6, #1
90016238:	b2b6      	uxth	r6, r6
9001623a:	e7e7      	b.n	9001620c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
9001623c:	24021c5c 	.word	0x24021c5c

90016240 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90016240:	4b03      	ldr	r3, [pc, #12]	@ (90016250 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90016242:	2200      	movs	r2, #0
90016244:	801a      	strh	r2, [r3, #0]
90016246:	805a      	strh	r2, [r3, #2]
90016248:	809a      	strh	r2, [r3, #4]
9001624a:	80da      	strh	r2, [r3, #6]
9001624c:	4770      	bx	lr
9001624e:	bf00      	nop
90016250:	24021ca8 	.word	0x24021ca8

90016254 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90016254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016258:	b09d      	sub	sp, #116	@ 0x74
9001625a:	4606      	mov	r6, r0
9001625c:	4614      	mov	r4, r2
9001625e:	468a      	mov	sl, r1
90016260:	a803      	add	r0, sp, #12
90016262:	461d      	mov	r5, r3
90016264:	f001 f8a0 	bl	900173a8 <_ZN8touchgfx12TextProviderC1Ev>
90016268:	6833      	ldr	r3, [r6, #0]
9001626a:	4630      	mov	r0, r6
9001626c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90016270:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016272:	4798      	blx	r3
90016274:	6833      	ldr	r3, [r6, #0]
90016276:	4607      	mov	r7, r0
90016278:	4630      	mov	r0, r6
9001627a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001627c:	4798      	blx	r3
9001627e:	462a      	mov	r2, r5
90016280:	2500      	movs	r5, #0
90016282:	4621      	mov	r1, r4
90016284:	9000      	str	r0, [sp, #0]
90016286:	463b      	mov	r3, r7
90016288:	462c      	mov	r4, r5
9001628a:	46a9      	mov	r9, r5
9001628c:	46a8      	mov	r8, r5
9001628e:	a803      	add	r0, sp, #12
90016290:	f001 f8dd 	bl	9001744e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016294:	2300      	movs	r3, #0
90016296:	9302      	str	r3, [sp, #8]
90016298:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001629c:	429c      	cmp	r4, r3
9001629e:	d002      	beq.n	900162a6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
900162a0:	455c      	cmp	r4, fp
900162a2:	bf18      	it	ne
900162a4:	4625      	movne	r5, r4
900162a6:	ab02      	add	r3, sp, #8
900162a8:	4632      	mov	r2, r6
900162aa:	4651      	mov	r1, sl
900162ac:	a803      	add	r0, sp, #12
900162ae:	f001 fbc3 	bl	90017a38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900162b2:	4604      	mov	r4, r0
900162b4:	b108      	cbz	r0, 900162ba <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
900162b6:	280a      	cmp	r0, #10
900162b8:	d10a      	bne.n	900162d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
900162ba:	45c1      	cmp	r9, r8
900162bc:	bf38      	it	cc
900162be:	46c1      	movcc	r9, r8
900162c0:	f04f 0800 	mov.w	r8, #0
900162c4:	2c00      	cmp	r4, #0
900162c6:	d1e5      	bne.n	90016294 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900162c8:	4648      	mov	r0, r9
900162ca:	b01d      	add	sp, #116	@ 0x74
900162cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900162d0:	9a02      	ldr	r2, [sp, #8]
900162d2:	2a00      	cmp	r2, #0
900162d4:	d0de      	beq.n	90016294 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900162d6:	7b57      	ldrb	r7, [r2, #13]
900162d8:	4629      	mov	r1, r5
900162da:	6833      	ldr	r3, [r6, #0]
900162dc:	007f      	lsls	r7, r7, #1
900162de:	8894      	ldrh	r4, [r2, #4]
900162e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900162e2:	f407 7080 	and.w	r0, r7, #256	@ 0x100
900162e6:	7a97      	ldrb	r7, [r2, #10]
900162e8:	4307      	orrs	r7, r0
900162ea:	4630      	mov	r0, r6
900162ec:	4798      	blx	r3
900162ee:	4438      	add	r0, r7
900162f0:	4480      	add	r8, r0
900162f2:	fa1f f888 	uxth.w	r8, r8
900162f6:	e7e5      	b.n	900162c4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900162f8 <_ZNK8touchgfx4Font12getCharWidthEt>:
900162f8:	b508      	push	{r3, lr}
900162fa:	6803      	ldr	r3, [r0, #0]
900162fc:	68db      	ldr	r3, [r3, #12]
900162fe:	4798      	blx	r3
90016300:	b128      	cbz	r0, 9001630e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90016302:	7b43      	ldrb	r3, [r0, #13]
90016304:	7a80      	ldrb	r0, [r0, #10]
90016306:	005b      	lsls	r3, r3, #1
90016308:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001630c:	4318      	orrs	r0, r3
9001630e:	bd08      	pop	{r3, pc}

90016310 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90016310:	b40e      	push	{r1, r2, r3}
90016312:	b5f0      	push	{r4, r5, r6, r7, lr}
90016314:	b09e      	sub	sp, #120	@ 0x78
90016316:	4605      	mov	r5, r0
90016318:	ab23      	add	r3, sp, #140	@ 0x8c
9001631a:	a805      	add	r0, sp, #20
9001631c:	f853 4b04 	ldr.w	r4, [r3], #4
90016320:	9303      	str	r3, [sp, #12]
90016322:	f001 f841 	bl	900173a8 <_ZN8touchgfx12TextProviderC1Ev>
90016326:	682b      	ldr	r3, [r5, #0]
90016328:	4628      	mov	r0, r5
9001632a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001632c:	4798      	blx	r3
9001632e:	682b      	ldr	r3, [r5, #0]
90016330:	4606      	mov	r6, r0
90016332:	4628      	mov	r0, r5
90016334:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90016336:	4798      	blx	r3
90016338:	4633      	mov	r3, r6
9001633a:	4621      	mov	r1, r4
9001633c:	ae1e      	add	r6, sp, #120	@ 0x78
9001633e:	2400      	movs	r4, #0
90016340:	9000      	str	r0, [sp, #0]
90016342:	9a03      	ldr	r2, [sp, #12]
90016344:	a805      	add	r0, sp, #20
90016346:	f001 f882 	bl	9001744e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001634a:	f846 4d68 	str.w	r4, [r6, #-104]!
9001634e:	462a      	mov	r2, r5
90016350:	4633      	mov	r3, r6
90016352:	4621      	mov	r1, r4
90016354:	a805      	add	r0, sp, #20
90016356:	f001 fb6f 	bl	90017a38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001635a:	b300      	cbz	r0, 9001639e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
9001635c:	280a      	cmp	r0, #10
9001635e:	d01a      	beq.n	90016396 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90016360:	9f04      	ldr	r7, [sp, #16]
90016362:	b1c7      	cbz	r7, 90016396 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90016364:	7b78      	ldrb	r0, [r7, #13]
90016366:	7a3b      	ldrb	r3, [r7, #8]
90016368:	00c1      	lsls	r1, r0, #3
9001636a:	88ea      	ldrh	r2, [r5, #6]
9001636c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90016370:	4319      	orrs	r1, r3
90016372:	0643      	lsls	r3, r0, #25
90016374:	ea4f 1000 	mov.w	r0, r0, lsl #4
90016378:	bf48      	it	mi
9001637a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
9001637e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
90016382:	bf48      	it	mi
90016384:	b219      	sxthmi	r1, r3
90016386:	79fb      	ldrb	r3, [r7, #7]
90016388:	4303      	orrs	r3, r0
9001638a:	4413      	add	r3, r2
9001638c:	1a5b      	subs	r3, r3, r1
9001638e:	b21b      	sxth	r3, r3
90016390:	429c      	cmp	r4, r3
90016392:	bfb8      	it	lt
90016394:	461c      	movlt	r4, r3
90016396:	4633      	mov	r3, r6
90016398:	462a      	mov	r2, r5
9001639a:	2100      	movs	r1, #0
9001639c:	e7da      	b.n	90016354 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001639e:	b2a0      	uxth	r0, r4
900163a0:	b01e      	add	sp, #120	@ 0x78
900163a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900163a6:	b003      	add	sp, #12
900163a8:	4770      	bx	lr

900163aa <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
900163aa:	7a43      	ldrb	r3, [r0, #9]
900163ac:	8880      	ldrh	r0, [r0, #4]
900163ae:	4418      	add	r0, r3
900163b0:	b280      	uxth	r0, r0
900163b2:	4770      	bx	lr

900163b4 <_ZNK8touchgfx4Font13getFontHeightEv>:
900163b4:	6803      	ldr	r3, [r0, #0]
900163b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900163b8:	4718      	bx	r3

900163ba <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
900163ba:	b40e      	push	{r1, r2, r3}
900163bc:	b570      	push	{r4, r5, r6, lr}
900163be:	b09d      	sub	sp, #116	@ 0x74
900163c0:	4604      	mov	r4, r0
900163c2:	ab21      	add	r3, sp, #132	@ 0x84
900163c4:	a803      	add	r0, sp, #12
900163c6:	f853 5b04 	ldr.w	r5, [r3], #4
900163ca:	9302      	str	r3, [sp, #8]
900163cc:	f000 ffec 	bl	900173a8 <_ZN8touchgfx12TextProviderC1Ev>
900163d0:	6823      	ldr	r3, [r4, #0]
900163d2:	4620      	mov	r0, r4
900163d4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900163d6:	4798      	blx	r3
900163d8:	6823      	ldr	r3, [r4, #0]
900163da:	4606      	mov	r6, r0
900163dc:	4620      	mov	r0, r4
900163de:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900163e0:	2401      	movs	r4, #1
900163e2:	4798      	blx	r3
900163e4:	4633      	mov	r3, r6
900163e6:	9000      	str	r0, [sp, #0]
900163e8:	4629      	mov	r1, r5
900163ea:	9a02      	ldr	r2, [sp, #8]
900163ec:	a803      	add	r0, sp, #12
900163ee:	f001 f82e 	bl	9001744e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900163f2:	a803      	add	r0, sp, #12
900163f4:	f001 fbec 	bl	90017bd0 <_ZN8touchgfx12TextProvider11getNextCharEv>
900163f8:	b2a3      	uxth	r3, r4
900163fa:	b138      	cbz	r0, 9001640c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900163fc:	280a      	cmp	r0, #10
900163fe:	a803      	add	r0, sp, #12
90016400:	bf04      	itt	eq
90016402:	3301      	addeq	r3, #1
90016404:	b21c      	sxtheq	r4, r3
90016406:	f001 fbe3 	bl	90017bd0 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001640a:	e7f5      	b.n	900163f8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001640c:	4618      	mov	r0, r3
9001640e:	b01d      	add	sp, #116	@ 0x74
90016410:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016414:	b003      	add	sp, #12
90016416:	4770      	bx	lr

90016418 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90016418:	b40e      	push	{r1, r2, r3}
9001641a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001641c:	b09e      	sub	sp, #120	@ 0x78
9001641e:	4604      	mov	r4, r0
90016420:	ab23      	add	r3, sp, #140	@ 0x8c
90016422:	a805      	add	r0, sp, #20
90016424:	f853 5b04 	ldr.w	r5, [r3], #4
90016428:	9303      	str	r3, [sp, #12]
9001642a:	f000 ffbd 	bl	900173a8 <_ZN8touchgfx12TextProviderC1Ev>
9001642e:	6823      	ldr	r3, [r4, #0]
90016430:	4620      	mov	r0, r4
90016432:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016434:	4798      	blx	r3
90016436:	6823      	ldr	r3, [r4, #0]
90016438:	4606      	mov	r6, r0
9001643a:	4620      	mov	r0, r4
9001643c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001643e:	4798      	blx	r3
90016440:	4633      	mov	r3, r6
90016442:	4629      	mov	r1, r5
90016444:	9000      	str	r0, [sp, #0]
90016446:	9a03      	ldr	r2, [sp, #12]
90016448:	a805      	add	r0, sp, #20
9001644a:	f001 f800 	bl	9001744e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001644e:	ad1e      	add	r5, sp, #120	@ 0x78
90016450:	2100      	movs	r1, #0
90016452:	f647 76ff 	movw	r6, #32767	@ 0x7fff
90016456:	4622      	mov	r2, r4
90016458:	a805      	add	r0, sp, #20
9001645a:	f845 1d68 	str.w	r1, [r5, #-104]!
9001645e:	462b      	mov	r3, r5
90016460:	f001 faea 	bl	90017a38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90016464:	b1d8      	cbz	r0, 9001649e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90016466:	280a      	cmp	r0, #10
90016468:	d012      	beq.n	90016490 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001646a:	9804      	ldr	r0, [sp, #16]
9001646c:	b180      	cbz	r0, 90016490 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001646e:	7b47      	ldrb	r7, [r0, #13]
90016470:	88e2      	ldrh	r2, [r4, #6]
90016472:	00fb      	lsls	r3, r7, #3
90016474:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90016478:	7a03      	ldrb	r3, [r0, #8]
9001647a:	430b      	orrs	r3, r1
9001647c:	0679      	lsls	r1, r7, #25
9001647e:	bf44      	itt	mi
90016480:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90016484:	b21b      	sxthmi	r3, r3
90016486:	1ad3      	subs	r3, r2, r3
90016488:	b21b      	sxth	r3, r3
9001648a:	429e      	cmp	r6, r3
9001648c:	bfa8      	it	ge
9001648e:	461e      	movge	r6, r3
90016490:	462b      	mov	r3, r5
90016492:	4622      	mov	r2, r4
90016494:	2100      	movs	r1, #0
90016496:	a805      	add	r0, sp, #20
90016498:	f001 face 	bl	90017a38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001649c:	e7e2      	b.n	90016464 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001649e:	4630      	mov	r0, r6
900164a0:	b01e      	add	sp, #120	@ 0x78
900164a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900164a6:	b003      	add	sp, #12
900164a8:	4770      	bx	lr

900164aa <_ZNK8touchgfx8Drawable10invalidateEv>:
900164aa:	b513      	push	{r0, r1, r4, lr}
900164ac:	6803      	ldr	r3, [r0, #0]
900164ae:	2400      	movs	r4, #0
900164b0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900164b4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900164b8:	f8ad 1004 	strh.w	r1, [sp, #4]
900164bc:	4669      	mov	r1, sp
900164be:	691b      	ldr	r3, [r3, #16]
900164c0:	9400      	str	r4, [sp, #0]
900164c2:	f8ad 2006 	strh.w	r2, [sp, #6]
900164c6:	4798      	blx	r3
900164c8:	b002      	add	sp, #8
900164ca:	bd10      	pop	{r4, pc}

900164cc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
900164cc:	b538      	push	{r3, r4, r5, lr}
900164ce:	680b      	ldr	r3, [r1, #0]
900164d0:	460c      	mov	r4, r1
900164d2:	4605      	mov	r5, r0
900164d4:	68db      	ldr	r3, [r3, #12]
900164d6:	4798      	blx	r3
900164d8:	6823      	ldr	r3, [r4, #0]
900164da:	4620      	mov	r0, r4
900164dc:	4629      	mov	r1, r5
900164de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900164e0:	4798      	blx	r3
900164e2:	4628      	mov	r0, r5
900164e4:	bd38      	pop	{r3, r4, r5, pc}

900164e6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900164e6:	b410      	push	{r4}
900164e8:	880a      	ldrh	r2, [r1, #0]
900164ea:	8884      	ldrh	r4, [r0, #4]
900164ec:	4422      	add	r2, r4
900164ee:	800a      	strh	r2, [r1, #0]
900164f0:	884a      	ldrh	r2, [r1, #2]
900164f2:	88c4      	ldrh	r4, [r0, #6]
900164f4:	4422      	add	r2, r4
900164f6:	804a      	strh	r2, [r1, #2]
900164f8:	6940      	ldr	r0, [r0, #20]
900164fa:	b120      	cbz	r0, 90016506 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
900164fc:	6803      	ldr	r3, [r0, #0]
900164fe:	f85d 4b04 	ldr.w	r4, [sp], #4
90016502:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016504:	4718      	bx	r3
90016506:	f85d 4b04 	ldr.w	r4, [sp], #4
9001650a:	4770      	bx	lr

9001650c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001650c:	b570      	push	{r4, r5, r6, lr}
9001650e:	8882      	ldrh	r2, [r0, #4]
90016510:	460c      	mov	r4, r1
90016512:	880b      	ldrh	r3, [r1, #0]
90016514:	4605      	mov	r5, r0
90016516:	4413      	add	r3, r2
90016518:	800b      	strh	r3, [r1, #0]
9001651a:	884b      	ldrh	r3, [r1, #2]
9001651c:	88c2      	ldrh	r2, [r0, #6]
9001651e:	4413      	add	r3, r2
90016520:	804b      	strh	r3, [r1, #2]
90016522:	1d01      	adds	r1, r0, #4
90016524:	4620      	mov	r0, r4
90016526:	f7f9 fcc5 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001652a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001652e:	2b00      	cmp	r3, #0
90016530:	dd0b      	ble.n	9001654a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016532:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90016536:	2b00      	cmp	r3, #0
90016538:	dd07      	ble.n	9001654a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001653a:	6968      	ldr	r0, [r5, #20]
9001653c:	b128      	cbz	r0, 9001654a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001653e:	6803      	ldr	r3, [r0, #0]
90016540:	4621      	mov	r1, r4
90016542:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90016544:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016548:	4718      	bx	r3
9001654a:	bd70      	pop	{r4, r5, r6, pc}

9001654c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001654c:	b570      	push	{r4, r5, r6, lr}
9001654e:	8882      	ldrh	r2, [r0, #4]
90016550:	460c      	mov	r4, r1
90016552:	880b      	ldrh	r3, [r1, #0]
90016554:	4605      	mov	r5, r0
90016556:	4413      	add	r3, r2
90016558:	800b      	strh	r3, [r1, #0]
9001655a:	884b      	ldrh	r3, [r1, #2]
9001655c:	88c2      	ldrh	r2, [r0, #6]
9001655e:	4413      	add	r3, r2
90016560:	804b      	strh	r3, [r1, #2]
90016562:	1d01      	adds	r1, r0, #4
90016564:	4620      	mov	r0, r4
90016566:	f7f9 fca5 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001656a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001656e:	2b00      	cmp	r3, #0
90016570:	dd19      	ble.n	900165a6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90016572:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90016576:	2b00      	cmp	r3, #0
90016578:	dd15      	ble.n	900165a6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001657a:	6968      	ldr	r0, [r5, #20]
9001657c:	b128      	cbz	r0, 9001658a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001657e:	6803      	ldr	r3, [r0, #0]
90016580:	4621      	mov	r1, r4
90016582:	691b      	ldr	r3, [r3, #16]
90016584:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016588:	4718      	bx	r3
9001658a:	4b07      	ldr	r3, [pc, #28]	@ (900165a8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001658c:	681b      	ldr	r3, [r3, #0]
9001658e:	3304      	adds	r3, #4
90016590:	429d      	cmp	r5, r3
90016592:	d108      	bne.n	900165a6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90016594:	f7fe ff10 	bl	900153b8 <_ZN8touchgfx11Application11getInstanceEv>
90016598:	6803      	ldr	r3, [r0, #0]
9001659a:	6821      	ldr	r1, [r4, #0]
9001659c:	6862      	ldr	r2, [r4, #4]
9001659e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900165a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900165a4:	4718      	bx	r3
900165a6:	bd70      	pop	{r4, r5, r6, pc}
900165a8:	24021ca0 	.word	0x24021ca0

900165ac <_ZN8touchgfx8Drawable12moveRelativeEss>:
900165ac:	b570      	push	{r4, r5, r6, lr}
900165ae:	4604      	mov	r4, r0
900165b0:	4616      	mov	r6, r2
900165b2:	460d      	mov	r5, r1
900165b4:	b901      	cbnz	r1, 900165b8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
900165b6:	b192      	cbz	r2, 900165de <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
900165b8:	6823      	ldr	r3, [r4, #0]
900165ba:	4620      	mov	r0, r4
900165bc:	699b      	ldr	r3, [r3, #24]
900165be:	4798      	blx	r3
900165c0:	88e2      	ldrh	r2, [r4, #6]
900165c2:	88a1      	ldrh	r1, [r4, #4]
900165c4:	4620      	mov	r0, r4
900165c6:	4432      	add	r2, r6
900165c8:	4429      	add	r1, r5
900165ca:	b212      	sxth	r2, r2
900165cc:	b209      	sxth	r1, r1
900165ce:	f7f9 ff47 	bl	90010460 <_ZN8touchgfx8Drawable5setXYEss>
900165d2:	6823      	ldr	r3, [r4, #0]
900165d4:	4620      	mov	r0, r4
900165d6:	699b      	ldr	r3, [r3, #24]
900165d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900165dc:	4718      	bx	r3
900165de:	bd70      	pop	{r4, r5, r6, pc}

900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
900165e0:	b510      	push	{r4, lr}
900165e2:	2300      	movs	r3, #0
900165e4:	4604      	mov	r4, r0
900165e6:	4608      	mov	r0, r1
900165e8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
900165ec:	8023      	strh	r3, [r4, #0]
900165ee:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900165f2:	8063      	strh	r3, [r4, #2]
900165f4:	6803      	ldr	r3, [r0, #0]
900165f6:	80a1      	strh	r1, [r4, #4]
900165f8:	4621      	mov	r1, r4
900165fa:	80e2      	strh	r2, [r4, #6]
900165fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900165fe:	4798      	blx	r3
90016600:	4620      	mov	r0, r4
90016602:	bd10      	pop	{r4, pc}

90016604 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
90016604:	4770      	bx	lr

90016606 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
90016606:	b510      	push	{r4, lr}
90016608:	4604      	mov	r4, r0
9001660a:	211c      	movs	r1, #28
9001660c:	f010 f87c 	bl	90026708 <_ZdlPvj>
90016610:	4620      	mov	r0, r4
90016612:	bd10      	pop	{r4, pc}

90016614 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
90016614:	4a04      	ldr	r2, [pc, #16]	@ (90016628 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
90016616:	6002      	str	r2, [r0, #0]
90016618:	2200      	movs	r2, #0
9001661a:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001661e:	e9c0 2203 	strd	r2, r2, [r0, #12]
90016622:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016626:	4770      	bx	lr
90016628:	9002a868 	.word	0x9002a868

9001662c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
9001662c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016630:	4604      	mov	r4, r0
90016632:	b087      	sub	sp, #28
90016634:	4696      	mov	lr, r2
90016636:	6880      	ldr	r0, [r0, #8]
90016638:	8b22      	ldrh	r2, [r4, #24]
9001663a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
9001663e:	9105      	str	r1, [sp, #20]
90016640:	1c51      	adds	r1, r2, #1
90016642:	8321      	strh	r1, [r4, #24]
90016644:	2101      	movs	r1, #1
90016646:	5481      	strb	r1, [r0, r2]
90016648:	4689      	mov	r9, r1
9001664a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001664e:	8b60      	ldrh	r0, [r4, #26]
90016650:	ee06 2a90 	vmov	s13, r2
90016654:	68e2      	ldr	r2, [r4, #12]
90016656:	1845      	adds	r5, r0, r1
90016658:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001665c:	eb02 0280 	add.w	r2, r2, r0, lsl #2
90016660:	8365      	strh	r5, [r4, #26]
90016662:	edc2 6a00 	vstr	s13, [r2]
90016666:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001666a:	8b60      	ldrh	r0, [r4, #26]
9001666c:	ee07 2a10 	vmov	s14, r2
90016670:	68e2      	ldr	r2, [r4, #12]
90016672:	1845      	adds	r5, r0, r1
90016674:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90016678:	eb02 0280 	add.w	r2, r2, r0, lsl #2
9001667c:	8365      	strh	r5, [r4, #26]
9001667e:	1d18      	adds	r0, r3, #4
90016680:	460d      	mov	r5, r1
90016682:	ed82 7a00 	vstr	s14, [r2]
90016686:	f8be 2000 	ldrh.w	r2, [lr]
9001668a:	9203      	str	r2, [sp, #12]
9001668c:	2200      	movs	r2, #0
9001668e:	4613      	mov	r3, r2
90016690:	4694      	mov	ip, r2
90016692:	9201      	str	r2, [sp, #4]
90016694:	9202      	str	r2, [sp, #8]
90016696:	f8b4 8018 	ldrh.w	r8, [r4, #24]
9001669a:	9e05      	ldr	r6, [sp, #20]
9001669c:	f108 0701 	add.w	r7, r8, #1
900166a0:	f8d4 a008 	ldr.w	sl, [r4, #8]
900166a4:	428e      	cmp	r6, r1
900166a6:	b2bf      	uxth	r7, r7
900166a8:	eb0a 0b08 	add.w	fp, sl, r8
900166ac:	f340 80b6 	ble.w	9001681c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
900166b0:	9b03      	ldr	r3, [sp, #12]
900166b2:	f9b0 c000 	ldrsh.w	ip, [r0]
900166b6:	fa43 fb05 	asr.w	fp, r3, r5
900166ba:	f00b 0b01 	and.w	fp, fp, #1
900166be:	fa5f f38b 	uxtb.w	r3, fp
900166c2:	9304      	str	r3, [sp, #16]
900166c4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900166c8:	f1bb 0f00 	cmp.w	fp, #0
900166cc:	d057      	beq.n	9001677e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
900166ce:	ee07 ca90 	vmov	s15, ip
900166d2:	8327      	strh	r7, [r4, #24]
900166d4:	eef8 5ae7 	vcvt.f32.s32	s11, s15
900166d8:	ee07 3a90 	vmov	s15, r3
900166dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900166e0:	f1b9 0f00 	cmp.w	r9, #0
900166e4:	d028      	beq.n	90016738 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
900166e6:	f04f 0602 	mov.w	r6, #2
900166ea:	f80a 6008 	strb.w	r6, [sl, r8]
900166ee:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900166f2:	68e7      	ldr	r7, [r4, #12]
900166f4:	f108 0901 	add.w	r9, r8, #1
900166f8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900166fc:	f8a4 901a 	strh.w	r9, [r4, #26]
90016700:	edc7 5a00 	vstr	s11, [r7]
90016704:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016708:	68e7      	ldr	r7, [r4, #12]
9001670a:	f108 0901 	add.w	r9, r8, #1
9001670e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016712:	f8a4 901a 	strh.w	r9, [r4, #26]
90016716:	edc7 7a00 	vstr	s15, [r7]
9001671a:	3501      	adds	r5, #1
9001671c:	2d10      	cmp	r5, #16
9001671e:	d106      	bne.n	9001672e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
90016720:	9d02      	ldr	r5, [sp, #8]
90016722:	3501      	adds	r5, #1
90016724:	9502      	str	r5, [sp, #8]
90016726:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
9001672a:	9503      	str	r5, [sp, #12]
9001672c:	2500      	movs	r5, #0
9001672e:	3101      	adds	r1, #1
90016730:	3004      	adds	r0, #4
90016732:	f8dd 9010 	ldr.w	r9, [sp, #16]
90016736:	e7ae      	b.n	90016696 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
90016738:	f04f 0605 	mov.w	r6, #5
9001673c:	ed9d 5a01 	vldr	s10, [sp, #4]
90016740:	f80a 6008 	strb.w	r6, [sl, r8]
90016744:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
90016748:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001674c:	68e7      	ldr	r7, [r4, #12]
9001674e:	f108 0901 	add.w	r9, r8, #1
90016752:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016756:	f8a4 901a 	strh.w	r9, [r4, #26]
9001675a:	ed87 5a00 	vstr	s10, [r7]
9001675e:	ee05 2a10 	vmov	s10, r2
90016762:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90016766:	68e7      	ldr	r7, [r4, #12]
90016768:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001676c:	f108 0901 	add.w	r9, r8, #1
90016770:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016774:	f8a4 901a 	strh.w	r9, [r4, #26]
90016778:	ed87 5a00 	vstr	s10, [r7]
9001677c:	e7b7      	b.n	900166ee <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
9001677e:	f1b9 0f00 	cmp.w	r9, #0
90016782:	d147      	bne.n	90016814 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
90016784:	f04f 0605 	mov.w	r6, #5
90016788:	eddd 7a01 	vldr	s15, [sp, #4]
9001678c:	8327      	strh	r7, [r4, #24]
9001678e:	f80a 6008 	strb.w	r6, [sl, r8]
90016792:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016796:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001679a:	68e7      	ldr	r7, [r4, #12]
9001679c:	f108 0901 	add.w	r9, r8, #1
900167a0:	9e01      	ldr	r6, [sp, #4]
900167a2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900167a6:	f8a4 901a 	strh.w	r9, [r4, #26]
900167aa:	4466      	add	r6, ip
900167ac:	edc7 7a00 	vstr	s15, [r7]
900167b0:	ee07 2a90 	vmov	s15, r2
900167b4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900167b8:	441a      	add	r2, r3
900167ba:	68e7      	ldr	r7, [r4, #12]
900167bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900167c0:	f108 0901 	add.w	r9, r8, #1
900167c4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900167c8:	f8a4 901a 	strh.w	r9, [r4, #26]
900167cc:	edc7 7a00 	vstr	s15, [r7]
900167d0:	ee07 6a90 	vmov	s15, r6
900167d4:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900167d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900167dc:	68e7      	ldr	r7, [r4, #12]
900167de:	f108 0901 	add.w	r9, r8, #1
900167e2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900167e6:	ee67 7a86 	vmul.f32	s15, s15, s12
900167ea:	f8a4 901a 	strh.w	r9, [r4, #26]
900167ee:	edc7 7a00 	vstr	s15, [r7]
900167f2:	ee07 2a90 	vmov	s15, r2
900167f6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900167fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900167fe:	68e7      	ldr	r7, [r4, #12]
90016800:	f108 0901 	add.w	r9, r8, #1
90016804:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90016808:	ee67 7a86 	vmul.f32	s15, s15, s12
9001680c:	f8a4 901a 	strh.w	r9, [r4, #26]
90016810:	edc7 7a00 	vstr	s15, [r7]
90016814:	461a      	mov	r2, r3
90016816:	f8cd c004 	str.w	ip, [sp, #4]
9001681a:	e77e      	b.n	9001671a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
9001681c:	f1b9 0f00 	cmp.w	r9, #0
90016820:	d028      	beq.n	90016874 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
90016822:	ee07 ca90 	vmov	s15, ip
90016826:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001682a:	eef4 6a67 	vcmp.f32	s13, s15
9001682e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016832:	d108      	bne.n	90016846 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
90016834:	ee07 3a90 	vmov	s15, r3
90016838:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001683c:	eeb4 7a67 	vcmp.f32	s14, s15
90016840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016844:	d016      	beq.n	90016874 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
90016846:	2302      	movs	r3, #2
90016848:	8327      	strh	r7, [r4, #24]
9001684a:	f88b 3000 	strb.w	r3, [fp]
9001684e:	8b62      	ldrh	r2, [r4, #26]
90016850:	68e3      	ldr	r3, [r4, #12]
90016852:	1c51      	adds	r1, r2, #1
90016854:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016858:	8361      	strh	r1, [r4, #26]
9001685a:	edc3 6a00 	vstr	s13, [r3]
9001685e:	8b62      	ldrh	r2, [r4, #26]
90016860:	68e3      	ldr	r3, [r4, #12]
90016862:	1c51      	adds	r1, r2, #1
90016864:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90016868:	8361      	strh	r1, [r4, #26]
9001686a:	ed83 7a00 	vstr	s14, [r3]
9001686e:	b007      	add	sp, #28
90016870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016874:	2305      	movs	r3, #5
90016876:	eddd 7a01 	vldr	s15, [sp, #4]
9001687a:	8327      	strh	r7, [r4, #24]
9001687c:	f88b 3000 	strb.w	r3, [fp]
90016880:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016884:	8b61      	ldrh	r1, [r4, #26]
90016886:	68e3      	ldr	r3, [r4, #12]
90016888:	1c4d      	adds	r5, r1, #1
9001688a:	eb03 0381 	add.w	r3, r3, r1, lsl #2
9001688e:	8365      	strh	r5, [r4, #26]
90016890:	edc3 7a00 	vstr	s15, [r3]
90016894:	ee07 2a90 	vmov	s15, r2
90016898:	8b61      	ldrh	r1, [r4, #26]
9001689a:	68e3      	ldr	r3, [r4, #12]
9001689c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900168a0:	1c4d      	adds	r5, r1, #1
900168a2:	eb03 0381 	add.w	r3, r3, r1, lsl #2
900168a6:	8365      	strh	r5, [r4, #26]
900168a8:	edc3 7a00 	vstr	s15, [r3]
900168ac:	e7cf      	b.n	9001684e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

900168b0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
900168b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900168b4:	4604      	mov	r4, r0
900168b6:	b08e      	sub	sp, #56	@ 0x38
900168b8:	4699      	mov	r9, r3
900168ba:	4688      	mov	r8, r1
900168bc:	4615      	mov	r5, r2
900168be:	9e16      	ldr	r6, [sp, #88]	@ 0x58
900168c0:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
900168c4:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
900168c6:	f7ec fdb9 	bl	9000343c <_ZN8touchgfx14VectorRenderer11getInstanceEv>
900168ca:	6060      	str	r0, [r4, #4]
900168cc:	f1b9 0f00 	cmp.w	r9, #0
900168d0:	f000 80e8 	beq.w	90016aa4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
900168d4:	2800      	cmp	r0, #0
900168d6:	f000 80e5 	beq.w	90016aa4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
900168da:	a805      	add	r0, sp, #20
900168dc:	f000 f8f9 	bl	90016ad2 <_ZN8touchgfx9Matrix3x3C1Ev>
900168e0:	6833      	ldr	r3, [r6, #0]
900168e2:	4630      	mov	r0, r6
900168e4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
900168e6:	4798      	blx	r3
900168e8:	a805      	add	r0, sp, #20
900168ea:	eef0 0a40 	vmov.f32	s1, s0
900168ee:	f000 f8f4 	bl	90016ada <_ZN8touchgfx9Matrix3x35scaleEff>
900168f2:	6860      	ldr	r0, [r4, #4]
900168f4:	f1ba 0f03 	cmp.w	sl, #3
900168f8:	d83b      	bhi.n	90016972 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
900168fa:	e8df f00a 	tbb	[pc, sl]
900168fe:	1002      	.short	0x1002
90016900:	9f71      	.short	0x9f71
90016902:	6803      	ldr	r3, [r0, #0]
90016904:	462a      	mov	r2, r5
90016906:	4641      	mov	r1, r8
90016908:	689b      	ldr	r3, [r3, #8]
9001690a:	4798      	blx	r3
9001690c:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90016910:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90016914:	ee07 7a90 	vmov	s15, r7
90016918:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
9001691c:	e026      	b.n	9001696c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
9001691e:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90016922:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90016926:	8869      	ldrh	r1, [r5, #2]
90016928:	1a9b      	subs	r3, r3, r2
9001692a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001692e:	aa03      	add	r2, sp, #12
90016930:	1a5b      	subs	r3, r3, r1
90016932:	4641      	mov	r1, r8
90016934:	f8ad 300c 	strh.w	r3, [sp, #12]
90016938:	882b      	ldrh	r3, [r5, #0]
9001693a:	f8ad 300e 	strh.w	r3, [sp, #14]
9001693e:	88ab      	ldrh	r3, [r5, #4]
90016940:	f8ad 3012 	strh.w	r3, [sp, #18]
90016944:	6803      	ldr	r3, [r0, #0]
90016946:	689b      	ldr	r3, [r3, #8]
90016948:	4798      	blx	r3
9001694a:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90016aac <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
9001694e:	a805      	add	r0, sp, #20
90016950:	f000 f8e8 	bl	90016b24 <_ZN8touchgfx9Matrix3x36rotateEf>
90016954:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90016958:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9001695a:	ee07 7a90 	vmov	s15, r7
9001695e:	1a9b      	subs	r3, r3, r2
90016960:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90016964:	ee00 3a10 	vmov	s0, r3
90016968:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
9001696c:	a805      	add	r0, sp, #20
9001696e:	f000 f927 	bl	90016bc0 <_ZN8touchgfx9Matrix3x39translateEff>
90016972:	6860      	ldr	r0, [r4, #4]
90016974:	a905      	add	r1, sp, #20
90016976:	2500      	movs	r5, #0
90016978:	f109 0602 	add.w	r6, r9, #2
9001697c:	6803      	ldr	r3, [r0, #0]
9001697e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90016980:	4798      	blx	r3
90016982:	6860      	ldr	r0, [r4, #4]
90016984:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90016986:	6803      	ldr	r3, [r0, #0]
90016988:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
9001698c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001698e:	4798      	blx	r3
90016990:	6860      	ldr	r0, [r4, #4]
90016992:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90016996:	6803      	ldr	r3, [r0, #0]
90016998:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001699a:	4798      	blx	r3
9001699c:	6860      	ldr	r0, [r4, #4]
9001699e:	2101      	movs	r1, #1
900169a0:	6803      	ldr	r3, [r0, #0]
900169a2:	68db      	ldr	r3, [r3, #12]
900169a4:	4798      	blx	r3
900169a6:	f8b9 7000 	ldrh.w	r7, [r9]
900169aa:	f104 0310 	add.w	r3, r4, #16
900169ae:	61a5      	str	r5, [r4, #24]
900169b0:	f104 0208 	add.w	r2, r4, #8
900169b4:	f104 0114 	add.w	r1, r4, #20
900169b8:	f104 000c 	add.w	r0, r4, #12
900169bc:	f7ee f976 	bl	90004cac <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
900169c0:	42af      	cmp	r7, r5
900169c2:	dd60      	ble.n	90016a86 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
900169c4:	8831      	ldrh	r1, [r6, #0]
900169c6:	1cb2      	adds	r2, r6, #2
900169c8:	4620      	mov	r0, r4
900169ca:	3501      	adds	r5, #1
900169cc:	f101 030f 	add.w	r3, r1, #15
900169d0:	f3c3 1307 	ubfx	r3, r3, #4, #8
900169d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900169d8:	f7ff fe28 	bl	9001662c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
900169dc:	4606      	mov	r6, r0
900169de:	e7ef      	b.n	900169c0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
900169e0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900169e4:	f8b8 3004 	ldrh.w	r3, [r8, #4]
900169e8:	8829      	ldrh	r1, [r5, #0]
900169ea:	1a9b      	subs	r3, r3, r2
900169ec:	f8ad 2010 	strh.w	r2, [sp, #16]
900169f0:	aa03      	add	r2, sp, #12
900169f2:	1a5b      	subs	r3, r3, r1
900169f4:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900169f8:	886d      	ldrh	r5, [r5, #2]
900169fa:	f8ad 300c 	strh.w	r3, [sp, #12]
900169fe:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90016a02:	f8ad 1012 	strh.w	r1, [sp, #18]
90016a06:	1a5b      	subs	r3, r3, r1
90016a08:	4641      	mov	r1, r8
90016a0a:	1b5b      	subs	r3, r3, r5
90016a0c:	f8ad 300e 	strh.w	r3, [sp, #14]
90016a10:	6803      	ldr	r3, [r0, #0]
90016a12:	689b      	ldr	r3, [r3, #8]
90016a14:	4798      	blx	r3
90016a16:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90016ab0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90016a1a:	a805      	add	r0, sp, #20
90016a1c:	f000 f882 	bl	90016b24 <_ZN8touchgfx9Matrix3x36rotateEf>
90016a20:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016a24:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90016a26:	1a9b      	subs	r3, r3, r2
90016a28:	ee00 3a90 	vmov	s1, r3
90016a2c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90016a30:	1bdb      	subs	r3, r3, r7
90016a32:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90016a36:	ee00 3a10 	vmov	s0, r3
90016a3a:	e795      	b.n	90016968 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90016a3c:	886b      	ldrh	r3, [r5, #2]
90016a3e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90016a42:	f8ad 300c 	strh.w	r3, [sp, #12]
90016a46:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90016a4a:	8829      	ldrh	r1, [r5, #0]
90016a4c:	1a9b      	subs	r3, r3, r2
90016a4e:	f8ad 2012 	strh.w	r2, [sp, #18]
90016a52:	aa03      	add	r2, sp, #12
90016a54:	1a5b      	subs	r3, r3, r1
90016a56:	4641      	mov	r1, r8
90016a58:	f8ad 300e 	strh.w	r3, [sp, #14]
90016a5c:	88eb      	ldrh	r3, [r5, #6]
90016a5e:	f8ad 3010 	strh.w	r3, [sp, #16]
90016a62:	6803      	ldr	r3, [r0, #0]
90016a64:	689b      	ldr	r3, [r3, #8]
90016a66:	4798      	blx	r3
90016a68:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90016ab4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90016a6c:	a805      	add	r0, sp, #20
90016a6e:	f000 f859 	bl	90016b24 <_ZN8touchgfx9Matrix3x36rotateEf>
90016a72:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90016a76:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90016a7a:	1bdb      	subs	r3, r3, r7
90016a7c:	ee00 3a90 	vmov	s1, r3
90016a80:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90016a84:	e748      	b.n	90016918 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90016a86:	6860      	ldr	r0, [r4, #4]
90016a88:	2100      	movs	r1, #0
90016a8a:	8b22      	ldrh	r2, [r4, #24]
90016a8c:	6803      	ldr	r3, [r0, #0]
90016a8e:	9101      	str	r1, [sp, #4]
90016a90:	8b61      	ldrh	r1, [r4, #26]
90016a92:	9100      	str	r1, [sp, #0]
90016a94:	6a1d      	ldr	r5, [r3, #32]
90016a96:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90016a9a:	47a8      	blx	r5
90016a9c:	6860      	ldr	r0, [r4, #4]
90016a9e:	6803      	ldr	r3, [r0, #0]
90016aa0:	69db      	ldr	r3, [r3, #28]
90016aa2:	4798      	blx	r3
90016aa4:	b00e      	add	sp, #56	@ 0x38
90016aa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016aaa:	bf00      	nop
90016aac:	42b40000 	.word	0x42b40000
90016ab0:	43340000 	.word	0x43340000
90016ab4:	43870000 	.word	0x43870000

90016ab8 <_ZN8touchgfx9Matrix3x35resetEv>:
90016ab8:	2300      	movs	r3, #0
90016aba:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90016abe:	6043      	str	r3, [r0, #4]
90016ac0:	6002      	str	r2, [r0, #0]
90016ac2:	6083      	str	r3, [r0, #8]
90016ac4:	60c3      	str	r3, [r0, #12]
90016ac6:	6102      	str	r2, [r0, #16]
90016ac8:	6143      	str	r3, [r0, #20]
90016aca:	6183      	str	r3, [r0, #24]
90016acc:	61c3      	str	r3, [r0, #28]
90016ace:	6202      	str	r2, [r0, #32]
90016ad0:	4770      	bx	lr

90016ad2 <_ZN8touchgfx9Matrix3x3C1Ev>:
90016ad2:	b508      	push	{r3, lr}
90016ad4:	f7ff fff0 	bl	90016ab8 <_ZN8touchgfx9Matrix3x35resetEv>
90016ad8:	bd08      	pop	{r3, pc}

90016ada <_ZN8touchgfx9Matrix3x35scaleEff>:
90016ada:	edd0 7a00 	vldr	s15, [r0]
90016ade:	ee67 7a80 	vmul.f32	s15, s15, s0
90016ae2:	edc0 7a00 	vstr	s15, [r0]
90016ae6:	edd0 7a01 	vldr	s15, [r0, #4]
90016aea:	ee67 7a80 	vmul.f32	s15, s15, s0
90016aee:	edc0 7a01 	vstr	s15, [r0, #4]
90016af2:	edd0 7a02 	vldr	s15, [r0, #8]
90016af6:	ee27 0a80 	vmul.f32	s0, s15, s0
90016afa:	edd0 7a03 	vldr	s15, [r0, #12]
90016afe:	ee67 7aa0 	vmul.f32	s15, s15, s1
90016b02:	ed80 0a02 	vstr	s0, [r0, #8]
90016b06:	edc0 7a03 	vstr	s15, [r0, #12]
90016b0a:	edd0 7a04 	vldr	s15, [r0, #16]
90016b0e:	ee67 7aa0 	vmul.f32	s15, s15, s1
90016b12:	edc0 7a04 	vstr	s15, [r0, #16]
90016b16:	edd0 7a05 	vldr	s15, [r0, #20]
90016b1a:	ee67 0aa0 	vmul.f32	s1, s15, s1
90016b1e:	edc0 0a05 	vstr	s1, [r0, #20]
90016b22:	4770      	bx	lr

90016b24 <_ZN8touchgfx9Matrix3x36rotateEf>:
90016b24:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90016bb8 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90016b28:	ee20 0a27 	vmul.f32	s0, s0, s15
90016b2c:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90016bbc <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90016b30:	b510      	push	{r4, lr}
90016b32:	ed2d 8b02 	vpush	{d8}
90016b36:	eec0 8a27 	vdiv.f32	s17, s0, s15
90016b3a:	4604      	mov	r4, r0
90016b3c:	eeb0 0a68 	vmov.f32	s0, s17
90016b40:	f00f ff1a 	bl	90026978 <cosf>
90016b44:	eeb0 8a40 	vmov.f32	s16, s0
90016b48:	eeb0 0a68 	vmov.f32	s0, s17
90016b4c:	f00f fe50 	bl	900267f0 <sinf>
90016b50:	edd4 6a03 	vldr	s13, [r4, #12]
90016b54:	edd4 4a00 	vldr	s9, [r4]
90016b58:	ee60 7a66 	vnmul.f32	s15, s0, s13
90016b5c:	ed94 7a04 	vldr	s14, [r4, #16]
90016b60:	ed94 5a01 	vldr	s10, [r4, #4]
90016b64:	ee66 6a88 	vmul.f32	s13, s13, s16
90016b68:	edd4 5a02 	vldr	s11, [r4, #8]
90016b6c:	eee8 7a24 	vfma.f32	s15, s16, s9
90016b70:	eee0 6a24 	vfma.f32	s13, s0, s9
90016b74:	edc4 7a00 	vstr	s15, [r4]
90016b78:	ee60 7a47 	vnmul.f32	s15, s0, s14
90016b7c:	ee27 7a08 	vmul.f32	s14, s14, s16
90016b80:	edc4 6a03 	vstr	s13, [r4, #12]
90016b84:	eee8 7a05 	vfma.f32	s15, s16, s10
90016b88:	eea0 7a05 	vfma.f32	s14, s0, s10
90016b8c:	edc4 7a01 	vstr	s15, [r4, #4]
90016b90:	edd4 7a05 	vldr	s15, [r4, #20]
90016b94:	ed84 7a04 	vstr	s14, [r4, #16]
90016b98:	ee20 6a67 	vnmul.f32	s12, s0, s15
90016b9c:	ee67 7a88 	vmul.f32	s15, s15, s16
90016ba0:	eea8 6a25 	vfma.f32	s12, s16, s11
90016ba4:	eee0 7a25 	vfma.f32	s15, s0, s11
90016ba8:	ecbd 8b02 	vpop	{d8}
90016bac:	ed84 6a02 	vstr	s12, [r4, #8]
90016bb0:	edc4 7a05 	vstr	s15, [r4, #20]
90016bb4:	bd10      	pop	{r4, pc}
90016bb6:	bf00      	nop
90016bb8:	40490fdb 	.word	0x40490fdb
90016bbc:	43340000 	.word	0x43340000

90016bc0 <_ZN8touchgfx9Matrix3x39translateEff>:
90016bc0:	ed90 6a06 	vldr	s12, [r0, #24]
90016bc4:	edd0 7a00 	vldr	s15, [r0]
90016bc8:	edd0 6a07 	vldr	s13, [r0, #28]
90016bcc:	eee6 7a00 	vfma.f32	s15, s12, s0
90016bd0:	ed90 7a08 	vldr	s14, [r0, #32]
90016bd4:	edc0 7a00 	vstr	s15, [r0]
90016bd8:	edd0 7a01 	vldr	s15, [r0, #4]
90016bdc:	eee6 7a80 	vfma.f32	s15, s13, s0
90016be0:	edc0 7a01 	vstr	s15, [r0, #4]
90016be4:	edd0 7a02 	vldr	s15, [r0, #8]
90016be8:	eee7 7a00 	vfma.f32	s15, s14, s0
90016bec:	edc0 7a02 	vstr	s15, [r0, #8]
90016bf0:	edd0 7a03 	vldr	s15, [r0, #12]
90016bf4:	eee6 7a20 	vfma.f32	s15, s12, s1
90016bf8:	edc0 7a03 	vstr	s15, [r0, #12]
90016bfc:	edd0 7a04 	vldr	s15, [r0, #16]
90016c00:	eee6 7aa0 	vfma.f32	s15, s13, s1
90016c04:	edc0 7a04 	vstr	s15, [r0, #16]
90016c08:	edd0 7a05 	vldr	s15, [r0, #20]
90016c0c:	eee7 7a20 	vfma.f32	s15, s14, s1
90016c10:	edc0 7a05 	vstr	s15, [r0, #20]
90016c14:	4770      	bx	lr

90016c16 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90016c16:	edd0 6a01 	vldr	s13, [r0, #4]
90016c1a:	b084      	sub	sp, #16
90016c1c:	edd0 7a04 	vldr	s15, [r0, #16]
90016c20:	ed90 7a03 	vldr	s14, [r0, #12]
90016c24:	ee60 7aa7 	vmul.f32	s15, s1, s15
90016c28:	ee60 0aa6 	vmul.f32	s1, s1, s13
90016c2c:	edd0 6a00 	vldr	s13, [r0]
90016c30:	eee7 7a00 	vfma.f32	s15, s14, s0
90016c34:	ed90 7a05 	vldr	s14, [r0, #20]
90016c38:	eee6 0a80 	vfma.f32	s1, s13, s0
90016c3c:	ed90 0a02 	vldr	s0, [r0, #8]
90016c40:	ee30 0a80 	vadd.f32	s0, s1, s0
90016c44:	ee77 0a87 	vadd.f32	s1, s15, s14
90016c48:	b004      	add	sp, #16
90016c4a:	4770      	bx	lr

90016c4c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90016c4c:	b530      	push	{r4, r5, lr}
90016c4e:	8083      	strh	r3, [r0, #4]
90016c50:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90016c54:	f89d 5018 	ldrb.w	r5, [sp, #24]
90016c58:	80c3      	strh	r3, [r0, #6]
90016c5a:	f89d 3010 	ldrb.w	r3, [sp, #16]
90016c5e:	6141      	str	r1, [r0, #20]
90016c60:	7203      	strb	r3, [r0, #8]
90016c62:	f89d 3014 	ldrb.w	r3, [sp, #20]
90016c66:	8302      	strh	r2, [r0, #24]
90016c68:	7243      	strb	r3, [r0, #9]
90016c6a:	7a83      	ldrb	r3, [r0, #10]
90016c6c:	f365 0306 	bfi	r3, r5, #0, #7
90016c70:	f89d 501c 	ldrb.w	r5, [sp, #28]
90016c74:	f365 13c7 	bfi	r3, r5, #7, #1
90016c78:	7283      	strb	r3, [r0, #10]
90016c7a:	f89d 3020 	ldrb.w	r3, [sp, #32]
90016c7e:	72c3      	strb	r3, [r0, #11]
90016c80:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90016c84:	7303      	strb	r3, [r0, #12]
90016c86:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90016c8a:	81c3      	strh	r3, [r0, #14]
90016c8c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90016c90:	8203      	strh	r3, [r0, #16]
90016c92:	4b01      	ldr	r3, [pc, #4]	@ (90016c98 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90016c94:	6003      	str	r3, [r0, #0]
90016c96:	bd30      	pop	{r4, r5, pc}
90016c98:	9002a87c 	.word	0x9002a87c

90016c9c <_ZNK8touchgfx9ConstFont4findEt>:
90016c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
90016c9e:	6944      	ldr	r4, [r0, #20]
90016ca0:	b3bc      	cbz	r4, 90016d12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016ca2:	88a3      	ldrh	r3, [r4, #4]
90016ca4:	8b02      	ldrh	r2, [r0, #24]
90016ca6:	1acb      	subs	r3, r1, r3
90016ca8:	f102 32ff 	add.w	r2, r2, #4294967295
90016cac:	d431      	bmi.n	90016d12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016cae:	4293      	cmp	r3, r2
90016cb0:	dd0c      	ble.n	90016ccc <_ZNK8touchgfx9ConstFont4findEt+0x30>
90016cb2:	230e      	movs	r3, #14
90016cb4:	fb03 4302 	mla	r3, r3, r2, r4
90016cb8:	889b      	ldrh	r3, [r3, #4]
90016cba:	1a5b      	subs	r3, r3, r1
90016cbc:	1ad3      	subs	r3, r2, r3
90016cbe:	429a      	cmp	r2, r3
90016cc0:	db27      	blt.n	90016d12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016cc2:	2b00      	cmp	r3, #0
90016cc4:	bfbc      	itt	lt
90016cc6:	2302      	movlt	r3, #2
90016cc8:	fb92 f3f3 	sdivlt	r3, r2, r3
90016ccc:	2500      	movs	r5, #0
90016cce:	260e      	movs	r6, #14
90016cd0:	4295      	cmp	r5, r2
90016cd2:	dc1e      	bgt.n	90016d12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016cd4:	fb06 4003 	mla	r0, r6, r3, r4
90016cd8:	8887      	ldrh	r7, [r0, #4]
90016cda:	42b9      	cmp	r1, r7
90016cdc:	d01a      	beq.n	90016d14 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90016cde:	d20d      	bcs.n	90016cfc <_ZNK8touchgfx9ConstFont4findEt+0x60>
90016ce0:	1e5a      	subs	r2, r3, #1
90016ce2:	4295      	cmp	r5, r2
90016ce4:	dc15      	bgt.n	90016d12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016ce6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90016cea:	1a5b      	subs	r3, r3, r1
90016cec:	1ad3      	subs	r3, r2, r3
90016cee:	429a      	cmp	r2, r3
90016cf0:	db0f      	blt.n	90016d12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016cf2:	429d      	cmp	r5, r3
90016cf4:	ddec      	ble.n	90016cd0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016cf6:	1953      	adds	r3, r2, r5
90016cf8:	105b      	asrs	r3, r3, #1
90016cfa:	e7e9      	b.n	90016cd0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016cfc:	1c5d      	adds	r5, r3, #1
90016cfe:	42aa      	cmp	r2, r5
90016d00:	db07      	blt.n	90016d12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d02:	8a43      	ldrh	r3, [r0, #18]
90016d04:	1acb      	subs	r3, r1, r3
90016d06:	442b      	add	r3, r5
90016d08:	429d      	cmp	r5, r3
90016d0a:	dc02      	bgt.n	90016d12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016d0c:	429a      	cmp	r2, r3
90016d0e:	dadf      	bge.n	90016cd0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016d10:	e7f1      	b.n	90016cf6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90016d12:	2000      	movs	r0, #0
90016d14:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016d16 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90016d16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016d18:	4604      	mov	r4, r0
90016d1a:	4617      	mov	r7, r2
90016d1c:	461e      	mov	r6, r3
90016d1e:	b911      	cbnz	r1, 90016d26 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90016d20:	2500      	movs	r5, #0
90016d22:	4628      	mov	r0, r5
90016d24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016d26:	290a      	cmp	r1, #10
90016d28:	d0fa      	beq.n	90016d20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016d2a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90016d2e:	4291      	cmp	r1, r2
90016d30:	d0f6      	beq.n	90016d20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016d32:	f242 020b 	movw	r2, #8203	@ 0x200b
90016d36:	4291      	cmp	r1, r2
90016d38:	d0f2      	beq.n	90016d20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016d3a:	f7ff ffaf 	bl	90016c9c <_ZNK8touchgfx9ConstFont4findEt>
90016d3e:	4605      	mov	r5, r0
90016d40:	b950      	cbnz	r0, 90016d58 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90016d42:	6823      	ldr	r3, [r4, #0]
90016d44:	4620      	mov	r0, r4
90016d46:	691b      	ldr	r3, [r3, #16]
90016d48:	4798      	blx	r3
90016d4a:	4601      	mov	r1, r0
90016d4c:	4620      	mov	r0, r4
90016d4e:	f7ff ffa5 	bl	90016c9c <_ZNK8touchgfx9ConstFont4findEt>
90016d52:	4605      	mov	r5, r0
90016d54:	2800      	cmp	r0, #0
90016d56:	d0e3      	beq.n	90016d20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016d58:	6823      	ldr	r3, [r4, #0]
90016d5a:	4629      	mov	r1, r5
90016d5c:	4620      	mov	r0, r4
90016d5e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90016d60:	4798      	blx	r3
90016d62:	6038      	str	r0, [r7, #0]
90016d64:	6823      	ldr	r3, [r4, #0]
90016d66:	4620      	mov	r0, r4
90016d68:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90016d6a:	4798      	blx	r3
90016d6c:	7030      	strb	r0, [r6, #0]
90016d6e:	e7d8      	b.n	90016d22 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90016d70 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90016d70:	2000      	movs	r0, #0
90016d72:	4770      	bx	lr

90016d74 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90016d74:	2001      	movs	r0, #1
90016d76:	4770      	bx	lr

90016d78 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90016d78:	2002      	movs	r0, #2
90016d7a:	4770      	bx	lr

90016d7c <_ZN8touchgfx6ScreenD1Ev>:
90016d7c:	4770      	bx	lr

90016d7e <_ZN8touchgfx6Screen11setupScreenEv>:
90016d7e:	4770      	bx	lr

90016d80 <_ZN8touchgfx12GestureEventD1Ev>:
90016d80:	4770      	bx	lr

90016d82 <_ZN8touchgfx9DragEventD1Ev>:
90016d82:	4770      	bx	lr

90016d84 <_ZN8touchgfx10ClickEventD1Ev>:
90016d84:	4770      	bx	lr

90016d86 <_ZN8touchgfx10ClickEventD0Ev>:
90016d86:	b510      	push	{r4, lr}
90016d88:	4604      	mov	r4, r0
90016d8a:	210c      	movs	r1, #12
90016d8c:	f00f fcbc 	bl	90026708 <_ZdlPvj>
90016d90:	4620      	mov	r0, r4
90016d92:	bd10      	pop	{r4, pc}

90016d94 <_ZN8touchgfx9DragEventD0Ev>:
90016d94:	b510      	push	{r4, lr}
90016d96:	4604      	mov	r4, r0
90016d98:	2110      	movs	r1, #16
90016d9a:	f00f fcb5 	bl	90026708 <_ZdlPvj>
90016d9e:	4620      	mov	r0, r4
90016da0:	bd10      	pop	{r4, pc}

90016da2 <_ZN8touchgfx12GestureEventD0Ev>:
90016da2:	b510      	push	{r4, lr}
90016da4:	4604      	mov	r4, r0
90016da6:	210c      	movs	r1, #12
90016da8:	f00f fcae 	bl	90026708 <_ZdlPvj>
90016dac:	4620      	mov	r0, r4
90016dae:	bd10      	pop	{r4, pc}

90016db0 <_ZN8touchgfx6ScreenD0Ev>:
90016db0:	b510      	push	{r4, lr}
90016db2:	4604      	mov	r4, r0
90016db4:	213c      	movs	r1, #60	@ 0x3c
90016db6:	f00f fca7 	bl	90026708 <_ZdlPvj>
90016dba:	4620      	mov	r0, r4
90016dbc:	bd10      	pop	{r4, pc}
	...

90016dc0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90016dc0:	b530      	push	{r4, r5, lr}
90016dc2:	460d      	mov	r5, r1
90016dc4:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90016dc6:	b087      	sub	sp, #28
90016dc8:	4604      	mov	r4, r0
90016dca:	b301      	cbz	r1, 90016e0e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90016dcc:	a801      	add	r0, sp, #4
90016dce:	f7ff fc07 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016dd2:	892a      	ldrh	r2, [r5, #8]
90016dd4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90016dd8:	7928      	ldrb	r0, [r5, #4]
90016dda:	1ad2      	subs	r2, r2, r3
90016ddc:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90016dde:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016de2:	441a      	add	r2, r3
90016de4:	896b      	ldrh	r3, [r5, #10]
90016de6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90016dea:	f88d 0010 	strb.w	r0, [sp, #16]
90016dee:	1b5b      	subs	r3, r3, r5
90016df0:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90016df2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90016df4:	442b      	add	r3, r5
90016df6:	4d07      	ldr	r5, [pc, #28]	@ (90016e14 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90016df8:	f8ad 1012 	strh.w	r1, [sp, #18]
90016dfc:	a903      	add	r1, sp, #12
90016dfe:	9503      	str	r5, [sp, #12]
90016e00:	f8ad 2014 	strh.w	r2, [sp, #20]
90016e04:	f8ad 3016 	strh.w	r3, [sp, #22]
90016e08:	6803      	ldr	r3, [r0, #0]
90016e0a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016e0c:	4798      	blx	r3
90016e0e:	b007      	add	sp, #28
90016e10:	bd30      	pop	{r4, r5, pc}
90016e12:	bf00      	nop
90016e14:	9002a90c 	.word	0x9002a90c

90016e18 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90016e18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016e1c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90016e1e:	b08a      	sub	sp, #40	@ 0x28
90016e20:	4604      	mov	r4, r0
90016e22:	460d      	mov	r5, r1
90016e24:	b113      	cbz	r3, 90016e2c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90016e26:	790b      	ldrb	r3, [r1, #4]
90016e28:	2b00      	cmp	r3, #0
90016e2a:	d044      	beq.n	90016eb6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016e2c:	f104 0804 	add.w	r8, r4, #4
90016e30:	a803      	add	r0, sp, #12
90016e32:	4641      	mov	r1, r8
90016e34:	f7ff fbd4 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016e38:	792b      	ldrb	r3, [r5, #4]
90016e3a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90016e3e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90016e42:	b983      	cbnz	r3, 90016e66 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90016e44:	f104 0336 	add.w	r3, r4, #54	@ 0x36
90016e48:	892a      	ldrh	r2, [r5, #8]
90016e4a:	88e9      	ldrh	r1, [r5, #6]
90016e4c:	4640      	mov	r0, r8
90016e4e:	1b92      	subs	r2, r2, r6
90016e50:	9301      	str	r3, [sp, #4]
90016e52:	1bc9      	subs	r1, r1, r7
90016e54:	f104 0334 	add.w	r3, r4, #52	@ 0x34
90016e58:	b212      	sxth	r2, r2
90016e5a:	9300      	str	r3, [sp, #0]
90016e5c:	b209      	sxth	r1, r1
90016e5e:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90016e62:	f7f8 ff45 	bl	9000fcf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90016e66:	6b21      	ldr	r1, [r4, #48]	@ 0x30
90016e68:	b329      	cbz	r1, 90016eb6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016e6a:	a805      	add	r0, sp, #20
90016e6c:	f7ff fbb8 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016e70:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90016e74:	792b      	ldrb	r3, [r5, #4]
90016e76:	a907      	add	r1, sp, #28
90016e78:	1abf      	subs	r7, r7, r2
90016e7a:	88ea      	ldrh	r2, [r5, #6]
90016e7c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90016e7e:	4417      	add	r7, r2
90016e80:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90016e82:	f88d 3020 	strb.w	r3, [sp, #32]
90016e86:	4417      	add	r7, r2
90016e88:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90016e8c:	1ab6      	subs	r6, r6, r2
90016e8e:	892a      	ldrh	r2, [r5, #8]
90016e90:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90016e94:	4416      	add	r6, r2
90016e96:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90016e98:	4416      	add	r6, r2
90016e9a:	4a08      	ldr	r2, [pc, #32]	@ (90016ebc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90016e9c:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
90016ea0:	2600      	movs	r6, #0
90016ea2:	9207      	str	r2, [sp, #28]
90016ea4:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
90016ea8:	6803      	ldr	r3, [r0, #0]
90016eaa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016eac:	4798      	blx	r3
90016eae:	792b      	ldrb	r3, [r5, #4]
90016eb0:	b10b      	cbz	r3, 90016eb6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016eb2:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
90016eb6:	b00a      	add	sp, #40	@ 0x28
90016eb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016ebc:	9002a8e4 	.word	0x9002a8e4

90016ec0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90016ec0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016ec4:	460c      	mov	r4, r1
90016ec6:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90016ec8:	b088      	sub	sp, #32
90016eca:	4605      	mov	r5, r0
90016ecc:	2900      	cmp	r1, #0
90016ece:	d06d      	beq.n	90016fac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90016ed0:	4668      	mov	r0, sp
90016ed2:	f7ff fb85 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016ed6:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
90016ed8:	88e3      	ldrh	r3, [r4, #6]
90016eda:	f9bd 8000 	ldrsh.w	r8, [sp]
90016ede:	440b      	add	r3, r1
90016ee0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90016ee4:	b21b      	sxth	r3, r3
90016ee6:	4543      	cmp	r3, r8
90016ee8:	db31      	blt.n	90016f4e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016eea:	f8bd c004 	ldrh.w	ip, [sp, #4]
90016eee:	44c4      	add	ip, r8
90016ef0:	fa0f fc8c 	sxth.w	ip, ip
90016ef4:	4563      	cmp	r3, ip
90016ef6:	da2a      	bge.n	90016f4e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016ef8:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
90016efa:	8926      	ldrh	r6, [r4, #8]
90016efc:	4416      	add	r6, r2
90016efe:	b236      	sxth	r6, r6
90016f00:	42be      	cmp	r6, r7
90016f02:	db24      	blt.n	90016f4e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016f04:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90016f08:	4438      	add	r0, r7
90016f0a:	b200      	sxth	r0, r0
90016f0c:	4286      	cmp	r6, r0
90016f0e:	da1e      	bge.n	90016f4e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016f10:	8963      	ldrh	r3, [r4, #10]
90016f12:	4419      	add	r1, r3
90016f14:	b209      	sxth	r1, r1
90016f16:	4541      	cmp	r1, r8
90016f18:	db08      	blt.n	90016f2c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016f1a:	4561      	cmp	r1, ip
90016f1c:	da06      	bge.n	90016f2c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016f1e:	89a3      	ldrh	r3, [r4, #12]
90016f20:	441a      	add	r2, r3
90016f22:	b212      	sxth	r2, r2
90016f24:	42ba      	cmp	r2, r7
90016f26:	db01      	blt.n	90016f2c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016f28:	4282      	cmp	r2, r0
90016f2a:	db10      	blt.n	90016f4e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016f2c:	4b21      	ldr	r3, [pc, #132]	@ (90016fb4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90016f2e:	a904      	add	r1, sp, #16
90016f30:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90016f32:	9304      	str	r3, [sp, #16]
90016f34:	2302      	movs	r3, #2
90016f36:	f88d 3014 	strb.w	r3, [sp, #20]
90016f3a:	2300      	movs	r3, #0
90016f3c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016f40:	f8ad 3018 	strh.w	r3, [sp, #24]
90016f44:	f8ad 301a 	strh.w	r3, [sp, #26]
90016f48:	6803      	ldr	r3, [r0, #0]
90016f4a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016f4c:	4798      	blx	r3
90016f4e:	1d29      	adds	r1, r5, #4
90016f50:	a802      	add	r0, sp, #8
90016f52:	f7ff fb45 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016f56:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90016f5a:	88e0      	ldrh	r0, [r4, #6]
90016f5c:	eba3 0808 	sub.w	r8, r3, r8
90016f60:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90016f64:	7921      	ldrb	r1, [r4, #4]
90016f66:	fa1f f888 	uxth.w	r8, r8
90016f6a:	1bdf      	subs	r7, r3, r7
90016f6c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90016f70:	b2bb      	uxth	r3, r7
90016f72:	4440      	add	r0, r8
90016f74:	8922      	ldrh	r2, [r4, #8]
90016f76:	8967      	ldrh	r7, [r4, #10]
90016f78:	4460      	add	r0, ip
90016f7a:	89a4      	ldrh	r4, [r4, #12]
90016f7c:	441a      	add	r2, r3
90016f7e:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90016f80:	44b8      	add	r8, r7
90016f82:	4423      	add	r3, r4
90016f84:	f8ad 0016 	strh.w	r0, [sp, #22]
90016f88:	4432      	add	r2, r6
90016f8a:	44e0      	add	r8, ip
90016f8c:	4433      	add	r3, r6
90016f8e:	4c0a      	ldr	r4, [pc, #40]	@ (90016fb8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90016f90:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90016f92:	f88d 1014 	strb.w	r1, [sp, #20]
90016f96:	a904      	add	r1, sp, #16
90016f98:	9404      	str	r4, [sp, #16]
90016f9a:	f8ad 2018 	strh.w	r2, [sp, #24]
90016f9e:	f8ad 801a 	strh.w	r8, [sp, #26]
90016fa2:	f8ad 301c 	strh.w	r3, [sp, #28]
90016fa6:	6803      	ldr	r3, [r0, #0]
90016fa8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90016faa:	4798      	blx	r3
90016fac:	b008      	add	sp, #32
90016fae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016fb2:	bf00      	nop
90016fb4:	9002a8e4 	.word	0x9002a8e4
90016fb8:	9002a8f8 	.word	0x9002a8f8

90016fbc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
90016fbc:	b537      	push	{r0, r1, r2, r4, r5, lr}
90016fbe:	4604      	mov	r4, r0
90016fc0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90016fc4:	3201      	adds	r2, #1
90016fc6:	d112      	bne.n	90016fee <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90016fc8:	2500      	movs	r5, #0
90016fca:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90016fce:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016fd2:	6803      	ldr	r3, [r0, #0]
90016fd4:	9500      	str	r5, [sp, #0]
90016fd6:	466d      	mov	r5, sp
90016fd8:	f8ad 1004 	strh.w	r1, [sp, #4]
90016fdc:	f8ad 2006 	strh.w	r2, [sp, #6]
90016fe0:	4629      	mov	r1, r5
90016fe2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90016fe4:	4798      	blx	r3
90016fe6:	e895 0003 	ldmia.w	r5, {r0, r1}
90016fea:	e884 0003 	stmia.w	r4, {r0, r1}
90016fee:	4620      	mov	r0, r4
90016ff0:	b003      	add	sp, #12
90016ff2:	bd30      	pop	{r4, r5, pc}

90016ff4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90016ff4:	b513      	push	{r0, r1, r4, lr}
90016ff6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
90016ffa:	4604      	mov	r4, r0
90016ffc:	3301      	adds	r3, #1
90016ffe:	d109      	bne.n	90017014 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90017000:	4601      	mov	r1, r0
90017002:	4668      	mov	r0, sp
90017004:	f7ff faec 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017008:	f8bd 3000 	ldrh.w	r3, [sp]
9001700c:	8423      	strh	r3, [r4, #32]
9001700e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017012:	8463      	strh	r3, [r4, #34]	@ 0x22
90017014:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90017018:	b002      	add	sp, #8
9001701a:	bd10      	pop	{r4, pc}

9001701c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001701c:	b513      	push	{r0, r1, r4, lr}
9001701e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
90017022:	4604      	mov	r4, r0
90017024:	3301      	adds	r3, #1
90017026:	d109      	bne.n	9001703c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90017028:	4601      	mov	r1, r0
9001702a:	4668      	mov	r0, sp
9001702c:	f7ff fad8 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017030:	f8bd 3000 	ldrh.w	r3, [sp]
90017034:	8423      	strh	r3, [r4, #32]
90017036:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001703a:	8463      	strh	r3, [r4, #34]	@ 0x22
9001703c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
90017040:	b002      	add	sp, #8
90017042:	bd10      	pop	{r4, pc}

90017044 <_ZN8touchgfx6ScreenC1Ev>:
90017044:	b570      	push	{r4, r5, r6, lr}
90017046:	4b17      	ldr	r3, [pc, #92]	@ (900170a4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90017048:	4605      	mov	r5, r0
9001704a:	4a17      	ldr	r2, [pc, #92]	@ (900170a8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001704c:	2101      	movs	r1, #1
9001704e:	f845 3b04 	str.w	r3, [r5], #4
90017052:	2300      	movs	r3, #0
90017054:	6042      	str	r2, [r0, #4]
90017056:	4604      	mov	r4, r0
90017058:	8103      	strh	r3, [r0, #8]
9001705a:	8143      	strh	r3, [r0, #10]
9001705c:	8183      	strh	r3, [r0, #12]
9001705e:	81c3      	strh	r3, [r0, #14]
90017060:	8203      	strh	r3, [r0, #16]
90017062:	8243      	strh	r3, [r0, #18]
90017064:	8283      	strh	r3, [r0, #20]
90017066:	82c3      	strh	r3, [r0, #22]
90017068:	6203      	str	r3, [r0, #32]
9001706a:	8483      	strh	r3, [r0, #36]	@ 0x24
9001706c:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001706e:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90017072:	6343      	str	r3, [r0, #52]	@ 0x34
90017074:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
90017078:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
9001707c:	e9c0 3306 	strd	r3, r3, [r0, #24]
90017080:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
90017084:	4b09      	ldr	r3, [pc, #36]	@ (900170ac <_ZN8touchgfx6ScreenC1Ev+0x68>)
90017086:	4628      	mov	r0, r5
90017088:	f9b3 6000 	ldrsh.w	r6, [r3]
9001708c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001708e:	4a08      	ldr	r2, [pc, #32]	@ (900170b0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90017090:	f9b2 1000 	ldrsh.w	r1, [r2]
90017094:	4798      	blx	r3
90017096:	6863      	ldr	r3, [r4, #4]
90017098:	4628      	mov	r0, r5
9001709a:	4631      	mov	r1, r6
9001709c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001709e:	4798      	blx	r3
900170a0:	4620      	mov	r0, r4
900170a2:	bd70      	pop	{r4, r5, r6, pc}
900170a4:	9002a920 	.word	0x9002a920
900170a8:	9002a464 	.word	0x9002a464
900170ac:	24021c52 	.word	0x24021c52
900170b0:	24021c50 	.word	0x24021c50

900170b4 <_ZN8touchgfx6Screen4drawEv>:
900170b4:	4b09      	ldr	r3, [pc, #36]	@ (900170dc <_ZN8touchgfx6Screen4drawEv+0x28>)
900170b6:	b507      	push	{r0, r1, r2, lr}
900170b8:	f9b3 2000 	ldrsh.w	r2, [r3]
900170bc:	2100      	movs	r1, #0
900170be:	4b08      	ldr	r3, [pc, #32]	@ (900170e0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900170c0:	9100      	str	r1, [sp, #0]
900170c2:	4669      	mov	r1, sp
900170c4:	f9b3 3000 	ldrsh.w	r3, [r3]
900170c8:	f8ad 2004 	strh.w	r2, [sp, #4]
900170cc:	f8ad 3006 	strh.w	r3, [sp, #6]
900170d0:	6803      	ldr	r3, [r0, #0]
900170d2:	689b      	ldr	r3, [r3, #8]
900170d4:	4798      	blx	r3
900170d6:	b003      	add	sp, #12
900170d8:	f85d fb04 	ldr.w	pc, [sp], #4
900170dc:	24021c50 	.word	0x24021c50
900170e0:	24021c52 	.word	0x24021c52

900170e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900170e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900170e8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900170ec:	b089      	sub	sp, #36	@ 0x24
900170ee:	4680      	mov	r8, r0
900170f0:	460c      	mov	r4, r1
900170f2:	2b00      	cmp	r3, #0
900170f4:	4615      	mov	r5, r2
900170f6:	dd0e      	ble.n	90017116 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900170f8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900170fc:	2b00      	cmp	r3, #0
900170fe:	dd0a      	ble.n	90017116 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90017100:	4628      	mov	r0, r5
90017102:	f7ff ff5b 	bl	90016fbc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017106:	4621      	mov	r1, r4
90017108:	f7fe f877 	bl	900151fa <_ZNK8touchgfx4Rect9intersectERKS0_>
9001710c:	69eb      	ldr	r3, [r5, #28]
9001710e:	b928      	cbnz	r0, 9001711c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90017110:	461d      	mov	r5, r3
90017112:	2b00      	cmp	r3, #0
90017114:	d1f4      	bne.n	90017100 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90017116:	b009      	add	sp, #36	@ 0x24
90017118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001711c:	ae04      	add	r6, sp, #16
9001711e:	2b00      	cmp	r3, #0
90017120:	f000 80b5 	beq.w	9001728e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017124:	682b      	ldr	r3, [r5, #0]
90017126:	4629      	mov	r1, r5
90017128:	a802      	add	r0, sp, #8
9001712a:	68db      	ldr	r3, [r3, #12]
9001712c:	4798      	blx	r3
9001712e:	4628      	mov	r0, r5
90017130:	f7ff ff60 	bl	90016ff4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90017134:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90017138:	4407      	add	r7, r0
9001713a:	4628      	mov	r0, r5
9001713c:	f7ff ff6e 	bl	9001701c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90017140:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90017144:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90017148:	b23f      	sxth	r7, r7
9001714a:	4418      	add	r0, r3
9001714c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90017150:	4621      	mov	r1, r4
90017152:	f8ad 2014 	strh.w	r2, [sp, #20]
90017156:	f8ad 0012 	strh.w	r0, [sp, #18]
9001715a:	4630      	mov	r0, r6
9001715c:	f8ad 3016 	strh.w	r3, [sp, #22]
90017160:	f8ad 7010 	strh.w	r7, [sp, #16]
90017164:	f7f8 fea6 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
90017168:	4628      	mov	r0, r5
9001716a:	f7ff ff27 	bl	90016fbc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001716e:	ab06      	add	r3, sp, #24
90017170:	4602      	mov	r2, r0
90017172:	e896 0003 	ldmia.w	r6, {r0, r1}
90017176:	e883 0003 	stmia.w	r3, {r0, r1}
9001717a:	4611      	mov	r1, r2
9001717c:	4618      	mov	r0, r3
9001717e:	f7f8 fe99 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
90017182:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90017186:	f9b4 1000 	ldrsh.w	r1, [r4]
9001718a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001718e:	4299      	cmp	r1, r3
90017190:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90017194:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90017198:	d10b      	bne.n	900171b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001719a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001719e:	4552      	cmp	r2, sl
900171a0:	d107      	bne.n	900171b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900171a2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
900171a6:	455a      	cmp	r2, fp
900171a8:	d103      	bne.n	900171b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900171aa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900171ae:	454a      	cmp	r2, r9
900171b0:	d06d      	beq.n	9001728e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900171b2:	f1bb 0f00 	cmp.w	fp, #0
900171b6:	dd65      	ble.n	90017284 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900171b8:	f1b9 0f00 	cmp.w	r9, #0
900171bc:	dd62      	ble.n	90017284 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900171be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900171c2:	fa1f f08a 	uxth.w	r0, sl
900171c6:	4552      	cmp	r2, sl
900171c8:	9000      	str	r0, [sp, #0]
900171ca:	da12      	bge.n	900171f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900171cc:	9301      	str	r3, [sp, #4]
900171ce:	9b00      	ldr	r3, [sp, #0]
900171d0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900171d4:	f8ad 2012 	strh.w	r2, [sp, #18]
900171d8:	1a9a      	subs	r2, r3, r2
900171da:	f8ad 1010 	strh.w	r1, [sp, #16]
900171de:	4631      	mov	r1, r6
900171e0:	f8ad 0014 	strh.w	r0, [sp, #20]
900171e4:	4640      	mov	r0, r8
900171e6:	f8ad 2016 	strh.w	r2, [sp, #22]
900171ea:	69ea      	ldr	r2, [r5, #28]
900171ec:	f7ff ff7a 	bl	900170e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900171f0:	9b01      	ldr	r3, [sp, #4]
900171f2:	f9b4 2000 	ldrsh.w	r2, [r4]
900171f6:	b29f      	uxth	r7, r3
900171f8:	429a      	cmp	r2, r3
900171fa:	da0d      	bge.n	90017218 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900171fc:	f8ad 2010 	strh.w	r2, [sp, #16]
90017200:	1aba      	subs	r2, r7, r2
90017202:	f8ad a012 	strh.w	sl, [sp, #18]
90017206:	4631      	mov	r1, r6
90017208:	f8ad 2014 	strh.w	r2, [sp, #20]
9001720c:	4640      	mov	r0, r8
9001720e:	f8ad 9016 	strh.w	r9, [sp, #22]
90017212:	69ea      	ldr	r2, [r5, #28]
90017214:	f7ff ff66 	bl	900170e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017218:	8822      	ldrh	r2, [r4, #0]
9001721a:	445f      	add	r7, fp
9001721c:	88a3      	ldrh	r3, [r4, #4]
9001721e:	b2bf      	uxth	r7, r7
90017220:	4413      	add	r3, r2
90017222:	b23a      	sxth	r2, r7
90017224:	b29b      	uxth	r3, r3
90017226:	b219      	sxth	r1, r3
90017228:	4291      	cmp	r1, r2
9001722a:	dd0d      	ble.n	90017248 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001722c:	1bdb      	subs	r3, r3, r7
9001722e:	f8ad 2010 	strh.w	r2, [sp, #16]
90017232:	f8ad a012 	strh.w	sl, [sp, #18]
90017236:	4631      	mov	r1, r6
90017238:	f8ad 3014 	strh.w	r3, [sp, #20]
9001723c:	4640      	mov	r0, r8
9001723e:	f8ad 9016 	strh.w	r9, [sp, #22]
90017242:	69ea      	ldr	r2, [r5, #28]
90017244:	f7ff ff4e 	bl	900170e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90017248:	88e2      	ldrh	r2, [r4, #6]
9001724a:	8863      	ldrh	r3, [r4, #2]
9001724c:	4413      	add	r3, r2
9001724e:	9a00      	ldr	r2, [sp, #0]
90017250:	444a      	add	r2, r9
90017252:	b29b      	uxth	r3, r3
90017254:	fa1f f982 	uxth.w	r9, r2
90017258:	b219      	sxth	r1, r3
9001725a:	fa0f f289 	sxth.w	r2, r9
9001725e:	428a      	cmp	r2, r1
90017260:	da15      	bge.n	9001728e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90017262:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90017266:	eba3 0309 	sub.w	r3, r3, r9
9001726a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001726e:	f8ad 1014 	strh.w	r1, [sp, #20]
90017272:	4631      	mov	r1, r6
90017274:	f8ad 0010 	strh.w	r0, [sp, #16]
90017278:	f8ad 2012 	strh.w	r2, [sp, #18]
9001727c:	f8ad 3016 	strh.w	r3, [sp, #22]
90017280:	69ea      	ldr	r2, [r5, #28]
90017282:	e001      	b.n	90017288 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90017284:	69ea      	ldr	r2, [r5, #28]
90017286:	4621      	mov	r1, r4
90017288:	4640      	mov	r0, r8
9001728a:	f7ff ff2b 	bl	900170e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001728e:	4628      	mov	r0, r5
90017290:	f7ff fe94 	bl	90016fbc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90017294:	6861      	ldr	r1, [r4, #4]
90017296:	4602      	mov	r2, r0
90017298:	4633      	mov	r3, r6
9001729a:	6820      	ldr	r0, [r4, #0]
9001729c:	c303      	stmia	r3!, {r0, r1}
9001729e:	4611      	mov	r1, r2
900172a0:	4630      	mov	r0, r6
900172a2:	f7f8 fe07 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
900172a6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900172aa:	2b00      	cmp	r3, #0
900172ac:	f77f af33 	ble.w	90017116 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900172b0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900172b4:	2b00      	cmp	r3, #0
900172b6:	f77f af2e 	ble.w	90017116 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900172ba:	4628      	mov	r0, r5
900172bc:	f7ff fe9a 	bl	90016ff4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900172c0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900172c4:	1a18      	subs	r0, r3, r0
900172c6:	f8ad 0010 	strh.w	r0, [sp, #16]
900172ca:	4628      	mov	r0, r5
900172cc:	f7ff fea6 	bl	9001701c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900172d0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900172d4:	4631      	mov	r1, r6
900172d6:	1a18      	subs	r0, r3, r0
900172d8:	f8ad 0012 	strh.w	r0, [sp, #18]
900172dc:	4628      	mov	r0, r5
900172de:	682b      	ldr	r3, [r5, #0]
900172e0:	689b      	ldr	r3, [r3, #8]
900172e2:	4798      	blx	r3
900172e4:	e717      	b.n	90017116 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900172e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900172e6:	b570      	push	{r4, r5, r6, lr}
900172e8:	1d06      	adds	r6, r0, #4
900172ea:	b086      	sub	sp, #24
900172ec:	460c      	mov	r4, r1
900172ee:	2300      	movs	r3, #0
900172f0:	4631      	mov	r1, r6
900172f2:	4605      	mov	r5, r0
900172f4:	a802      	add	r0, sp, #8
900172f6:	9301      	str	r3, [sp, #4]
900172f8:	f7ff f972 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900172fc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90017300:	8822      	ldrh	r2, [r4, #0]
90017302:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90017306:	1ad2      	subs	r2, r2, r3
90017308:	8863      	ldrh	r3, [r4, #2]
9001730a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001730e:	1a5b      	subs	r3, r3, r1
90017310:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90017314:	f8ad 2010 	strh.w	r2, [sp, #16]
90017318:	aa01      	add	r2, sp, #4
9001731a:	f8ad 0014 	strh.w	r0, [sp, #20]
9001731e:	4630      	mov	r0, r6
90017320:	f8ad 1016 	strh.w	r1, [sp, #22]
90017324:	a904      	add	r1, sp, #16
90017326:	f8ad 3012 	strh.w	r3, [sp, #18]
9001732a:	f7f8 fe9b 	bl	90010064 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001732e:	9a01      	ldr	r2, [sp, #4]
90017330:	b11a      	cbz	r2, 9001733a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90017332:	4621      	mov	r1, r4
90017334:	4628      	mov	r0, r5
90017336:	f7ff fed5 	bl	900170e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001733a:	b006      	add	sp, #24
9001733c:	bd70      	pop	{r4, r5, r6, pc}

9001733e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001733e:	4602      	mov	r2, r0
90017340:	b530      	push	{r4, r5, lr}
90017342:	4604      	mov	r4, r0
90017344:	b085      	sub	sp, #20
90017346:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001734a:	460d      	mov	r5, r1
9001734c:	466b      	mov	r3, sp
9001734e:	6851      	ldr	r1, [r2, #4]
90017350:	c303      	stmia	r3!, {r0, r1}
90017352:	4629      	mov	r1, r5
90017354:	4668      	mov	r0, sp
90017356:	f7f8 fdad 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001735a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001735e:	b12b      	cbz	r3, 9001736c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90017360:	4669      	mov	r1, sp
90017362:	4620      	mov	r0, r4
90017364:	f7ff ffbf 	bl	900172e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90017368:	b005      	add	sp, #20
9001736a:	bd30      	pop	{r4, r5, pc}
9001736c:	3404      	adds	r4, #4
9001736e:	a802      	add	r0, sp, #8
90017370:	4621      	mov	r1, r4
90017372:	f7ff f935 	bl	900165e0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017376:	f8bd 3000 	ldrh.w	r3, [sp]
9001737a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001737e:	4669      	mov	r1, sp
90017380:	4620      	mov	r0, r4
90017382:	1a9b      	subs	r3, r3, r2
90017384:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90017388:	f8ad 3000 	strh.w	r3, [sp]
9001738c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90017390:	1a9b      	subs	r3, r3, r2
90017392:	f8ad 3002 	strh.w	r3, [sp, #2]
90017396:	f7f8 fe2c 	bl	9000fff2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001739a:	e7e5      	b.n	90017368 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001739c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001739c:	460b      	mov	r3, r1
9001739e:	680a      	ldr	r2, [r1, #0]
900173a0:	1d01      	adds	r1, r0, #4
900173a2:	6992      	ldr	r2, [r2, #24]
900173a4:	4618      	mov	r0, r3
900173a6:	4710      	bx	r2

900173a8 <_ZN8touchgfx12TextProviderC1Ev>:
900173a8:	b538      	push	{r3, r4, r5, lr}
900173aa:	2500      	movs	r5, #0
900173ac:	2302      	movs	r3, #2
900173ae:	4604      	mov	r4, r0
900173b0:	220e      	movs	r2, #14
900173b2:	7403      	strb	r3, [r0, #16]
900173b4:	4629      	mov	r1, r5
900173b6:	6145      	str	r5, [r0, #20]
900173b8:	7605      	strb	r5, [r0, #24]
900173ba:	83c5      	strh	r5, [r0, #30]
900173bc:	8405      	strh	r5, [r0, #32]
900173be:	86c5      	strh	r5, [r0, #54]	@ 0x36
900173c0:	8705      	strh	r5, [r0, #56]	@ 0x38
900173c2:	87c5      	strh	r5, [r0, #62]	@ 0x3e
900173c4:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
900173c8:	e9c0 5500 	strd	r5, r5, [r0]
900173cc:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
900173d0:	304c      	adds	r0, #76	@ 0x4c
900173d2:	f00f ffad 	bl	90027330 <memset>
900173d6:	2301      	movs	r3, #1
900173d8:	4620      	mov	r0, r4
900173da:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
900173de:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900173e2:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
900173e6:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
900173ea:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
900173ee:	f7ed fbe5 	bl	90004bbc <_ZN8touchgfx12TextProvider18initializeInternalEv>
900173f2:	4620      	mov	r0, r4
900173f4:	bd38      	pop	{r3, r4, r5, pc}

900173f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
900173f6:	b530      	push	{r4, r5, lr}
900173f8:	2500      	movs	r5, #0
900173fa:	2401      	movs	r4, #1
900173fc:	6843      	ldr	r3, [r0, #4]
900173fe:	b913      	cbnz	r3, 90017406 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90017400:	6803      	ldr	r3, [r0, #0]
90017402:	b313      	cbz	r3, 9001744a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017404:	6043      	str	r3, [r0, #4]
90017406:	7e03      	ldrb	r3, [r0, #24]
90017408:	b143      	cbz	r3, 9001741c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001740a:	6943      	ldr	r3, [r0, #20]
9001740c:	b12b      	cbz	r3, 9001741a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001740e:	881a      	ldrh	r2, [r3, #0]
90017410:	b11a      	cbz	r2, 9001741a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90017412:	1c9a      	adds	r2, r3, #2
90017414:	6142      	str	r2, [r0, #20]
90017416:	8818      	ldrh	r0, [r3, #0]
90017418:	bd30      	pop	{r4, r5, pc}
9001741a:	7605      	strb	r5, [r0, #24]
9001741c:	6843      	ldr	r3, [r0, #4]
9001741e:	8819      	ldrh	r1, [r3, #0]
90017420:	b199      	cbz	r1, 9001744a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90017422:	1c9a      	adds	r2, r3, #2
90017424:	2902      	cmp	r1, #2
90017426:	6042      	str	r2, [r0, #4]
90017428:	d1f5      	bne.n	90017416 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001742a:	7c03      	ldrb	r3, [r0, #16]
9001742c:	2b01      	cmp	r3, #1
9001742e:	d8e5      	bhi.n	900173fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017430:	1c5a      	adds	r2, r3, #1
90017432:	3302      	adds	r3, #2
90017434:	7402      	strb	r2, [r0, #16]
90017436:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001743a:	6143      	str	r3, [r0, #20]
9001743c:	2b00      	cmp	r3, #0
9001743e:	d0dd      	beq.n	900173fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017440:	881b      	ldrh	r3, [r3, #0]
90017442:	2b00      	cmp	r3, #0
90017444:	d0da      	beq.n	900173fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90017446:	7604      	strb	r4, [r0, #24]
90017448:	e7d8      	b.n	900173fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001744a:	2000      	movs	r0, #0
9001744c:	e7e4      	b.n	90017418 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001744e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001744e:	6001      	str	r1, [r0, #0]
90017450:	2100      	movs	r1, #0
90017452:	b430      	push	{r4, r5}
90017454:	6041      	str	r1, [r0, #4]
90017456:	6815      	ldr	r5, [r2, #0]
90017458:	6085      	str	r5, [r0, #8]
9001745a:	6852      	ldr	r2, [r2, #4]
9001745c:	6443      	str	r3, [r0, #68]	@ 0x44
9001745e:	9b02      	ldr	r3, [sp, #8]
90017460:	60c2      	str	r2, [r0, #12]
90017462:	7401      	strb	r1, [r0, #16]
90017464:	6141      	str	r1, [r0, #20]
90017466:	7601      	strb	r1, [r0, #24]
90017468:	8701      	strh	r1, [r0, #56]	@ 0x38
9001746a:	8401      	strh	r1, [r0, #32]
9001746c:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
90017470:	6483      	str	r3, [r0, #72]	@ 0x48
90017472:	bc30      	pop	{r4, r5}
90017474:	f7ed bba2 	b.w	90004bbc <_ZN8touchgfx12TextProvider18initializeInternalEv>

90017478 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90017478:	b5f0      	push	{r4, r5, r6, r7, lr}
9001747a:	4605      	mov	r5, r0
9001747c:	4608      	mov	r0, r1
9001747e:	b1f1      	cbz	r1, 900174be <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90017480:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
90017484:	460b      	mov	r3, r1
90017486:	f101 0708 	add.w	r7, r1, #8
9001748a:	4622      	mov	r2, r4
9001748c:	6818      	ldr	r0, [r3, #0]
9001748e:	3308      	adds	r3, #8
90017490:	f853 1c04 	ldr.w	r1, [r3, #-4]
90017494:	4626      	mov	r6, r4
90017496:	42bb      	cmp	r3, r7
90017498:	c603      	stmia	r6!, {r0, r1}
9001749a:	4634      	mov	r4, r6
9001749c:	d1f6      	bne.n	9001748c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001749e:	6818      	ldr	r0, [r3, #0]
900174a0:	6030      	str	r0, [r6, #0]
900174a2:	4610      	mov	r0, r2
900174a4:	889b      	ldrh	r3, [r3, #4]
900174a6:	80b3      	strh	r3, [r6, #4]
900174a8:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900174ac:	015b      	lsls	r3, r3, #5
900174ae:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900174b2:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
900174b6:	430b      	orrs	r3, r1
900174b8:	425b      	negs	r3, r3
900174ba:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
900174be:	bdf0      	pop	{r4, r5, r6, r7, pc}

900174c0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
900174c0:	b538      	push	{r3, r4, r5, lr}
900174c2:	460c      	mov	r4, r1
900174c4:	6811      	ldr	r1, [r2, #0]
900174c6:	4610      	mov	r0, r2
900174c8:	68cd      	ldr	r5, [r1, #12]
900174ca:	4619      	mov	r1, r3
900174cc:	47a8      	blx	r5
900174ce:	2800      	cmp	r0, #0
900174d0:	bf08      	it	eq
900174d2:	4620      	moveq	r0, r4
900174d4:	bd38      	pop	{r3, r4, r5, pc}
	...

900174d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
900174d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900174da:	4604      	mov	r4, r0
900174dc:	4615      	mov	r5, r2
900174de:	4608      	mov	r0, r1
900174e0:	b93a      	cbnz	r2, 900174f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
900174e2:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
900174e6:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
900174ea:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
900174ee:	4628      	mov	r0, r5
900174f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900174f2:	f892 c00d 	ldrb.w	ip, [r2, #13]
900174f6:	f46f 6763 	mvn.w	r7, #3632	@ 0xe30
900174fa:	8893      	ldrh	r3, [r2, #4]
900174fc:	ea4f 160c 	mov.w	r6, ip, lsl #4
90017500:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90017504:	79ee      	ldrb	r6, [r5, #7]
90017506:	4316      	orrs	r6, r2
90017508:	19da      	adds	r2, r3, r7
9001750a:	b291      	uxth	r1, r2
9001750c:	b2b7      	uxth	r7, r6
9001750e:	291d      	cmp	r1, #29
90017510:	d87b      	bhi.n	9001760a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90017512:	2201      	movs	r2, #1
90017514:	10f6      	asrs	r6, r6, #3
90017516:	408a      	lsls	r2, r1
90017518:	4974      	ldr	r1, [pc, #464]	@ (900176ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
9001751a:	420a      	tst	r2, r1
9001751c:	d12e      	bne.n	9001757c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001751e:	f412 7f60 	tst.w	r2, #896	@ 0x380
90017522:	d072      	beq.n	9001760a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90017524:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
90017528:	462b      	mov	r3, r5
9001752a:	f105 0e08 	add.w	lr, r5, #8
9001752e:	4615      	mov	r5, r2
90017530:	6818      	ldr	r0, [r3, #0]
90017532:	3308      	adds	r3, #8
90017534:	f853 1c04 	ldr.w	r1, [r3, #-4]
90017538:	4694      	mov	ip, r2
9001753a:	4573      	cmp	r3, lr
9001753c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90017540:	4662      	mov	r2, ip
90017542:	d1f5      	bne.n	90017530 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90017544:	6818      	ldr	r0, [r3, #0]
90017546:	f8cc 0000 	str.w	r0, [ip]
9001754a:	889b      	ldrh	r3, [r3, #4]
9001754c:	f8ac 3004 	strh.w	r3, [ip, #4]
90017550:	b2b3      	uxth	r3, r6
90017552:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
90017556:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
9001755a:	1aca      	subs	r2, r1, r3
9001755c:	1bcf      	subs	r7, r1, r7
9001755e:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
90017562:	b292      	uxth	r2, r2
90017564:	1afb      	subs	r3, r7, r3
90017566:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
9001756a:	10d2      	asrs	r2, r2, #3
9001756c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
90017570:	4302      	orrs	r2, r0
90017572:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
90017576:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001757a:	e7b8      	b.n	900174ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001757c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001757e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017582:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
90017584:	f640 6333 	movw	r3, #3635	@ 0xe33
90017588:	4299      	cmp	r1, r3
9001758a:	d110      	bne.n	900175ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
9001758c:	6803      	ldr	r3, [r0, #0]
9001758e:	68db      	ldr	r3, [r3, #12]
90017590:	4798      	blx	r3
90017592:	7b41      	ldrb	r1, [r0, #13]
90017594:	00cb      	lsls	r3, r1, #3
90017596:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001759a:	7a03      	ldrb	r3, [r0, #8]
9001759c:	0648      	lsls	r0, r1, #25
9001759e:	ea43 0302 	orr.w	r3, r3, r2
900175a2:	bf44      	itt	mi
900175a4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900175a8:	b21b      	sxthmi	r3, r3
900175aa:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900175ae:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
900175b2:	462a      	mov	r2, r5
900175b4:	f105 0c08 	add.w	ip, r5, #8
900175b8:	443b      	add	r3, r7
900175ba:	4433      	add	r3, r6
900175bc:	f104 064c 	add.w	r6, r4, #76	@ 0x4c
900175c0:	b29b      	uxth	r3, r3
900175c2:	4635      	mov	r5, r6
900175c4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
900175c8:	6810      	ldr	r0, [r2, #0]
900175ca:	3208      	adds	r2, #8
900175cc:	f852 1c04 	ldr.w	r1, [r2, #-4]
900175d0:	4637      	mov	r7, r6
900175d2:	4562      	cmp	r2, ip
900175d4:	c703      	stmia	r7!, {r0, r1}
900175d6:	463e      	mov	r6, r7
900175d8:	d1f6      	bne.n	900175c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
900175da:	6810      	ldr	r0, [r2, #0]
900175dc:	6038      	str	r0, [r7, #0]
900175de:	8892      	ldrh	r2, [r2, #4]
900175e0:	80ba      	strh	r2, [r7, #4]
900175e2:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
900175e6:	10db      	asrs	r3, r3, #3
900175e8:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
900175ec:	f003 0360 	and.w	r3, r3, #96	@ 0x60
900175f0:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
900175f4:	4313      	orrs	r3, r2
900175f6:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
900175fa:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
900175fe:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
90017602:	1a9b      	subs	r3, r3, r2
90017604:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
90017608:	e771      	b.n	900174ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001760a:	f023 0204 	bic.w	r2, r3, #4
9001760e:	f640 611b 	movw	r1, #3611	@ 0xe1b
90017612:	428a      	cmp	r2, r1
90017614:	d003      	beq.n	9001761e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
90017616:	f640 621d 	movw	r2, #3613	@ 0xe1d
9001761a:	4293      	cmp	r3, r2
9001761c:	d120      	bne.n	90017660 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
9001761e:	3b01      	subs	r3, #1
90017620:	4602      	mov	r2, r0
90017622:	4629      	mov	r1, r5
90017624:	4620      	mov	r0, r4
90017626:	b29b      	uxth	r3, r3
90017628:	f7ff ff4a 	bl	900174c0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001762c:	7b41      	ldrb	r1, [r0, #13]
9001762e:	00cb      	lsls	r3, r1, #3
90017630:	0649      	lsls	r1, r1, #25
90017632:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017636:	7a03      	ldrb	r3, [r0, #8]
90017638:	ea43 0302 	orr.w	r3, r3, r2
9001763c:	bf44      	itt	mi
9001763e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017642:	b21b      	sxthmi	r3, r3
90017644:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017648:	7b6b      	ldrb	r3, [r5, #13]
9001764a:	7aaa      	ldrb	r2, [r5, #10]
9001764c:	005b      	lsls	r3, r3, #1
9001764e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017652:	4313      	orrs	r3, r2
90017654:	115a      	asrs	r2, r3, #5
90017656:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001765a:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001765e:	e035      	b.n	900176cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
90017660:	ea4f 02cc 	mov.w	r2, ip, lsl #3
90017664:	f01c 0f40 	tst.w	ip, #64	@ 0x40
90017668:	f402 7180 	and.w	r1, r2, #256	@ 0x100
9001766c:	7a2a      	ldrb	r2, [r5, #8]
9001766e:	ea42 0201 	orr.w	r2, r2, r1
90017672:	f640 6109 	movw	r1, #3593	@ 0xe09
90017676:	bf1c      	itt	ne
90017678:	f5a2 7200 	subne.w	r2, r2, #512	@ 0x200
9001767c:	b212      	sxthne	r2, r2
9001767e:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
90017682:	f023 0210 	bic.w	r2, r3, #16
90017686:	428a      	cmp	r2, r1
90017688:	d003      	beq.n	90017692 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001768a:	f640 6213 	movw	r2, #3603	@ 0xe13
9001768e:	4293      	cmp	r3, r2
90017690:	d129      	bne.n	900176e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
90017692:	7b6e      	ldrb	r6, [r5, #13]
90017694:	4629      	mov	r1, r5
90017696:	0076      	lsls	r6, r6, #1
90017698:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001769c:	7aae      	ldrb	r6, [r5, #10]
9001769e:	4316      	orrs	r6, r2
900176a0:	f640 6213 	movw	r2, #3603	@ 0xe13
900176a4:	4293      	cmp	r3, r2
900176a6:	4602      	mov	r2, r0
900176a8:	4620      	mov	r0, r4
900176aa:	bf16      	itet	ne
900176ac:	f103 33ff 	addne.w	r3, r3, #4294967295
900176b0:	f640 630c 	movweq	r3, #3596	@ 0xe0c
900176b4:	b29b      	uxthne	r3, r3
900176b6:	f7ff ff03 	bl	900174c0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
900176ba:	7b43      	ldrb	r3, [r0, #13]
900176bc:	7a82      	ldrb	r2, [r0, #10]
900176be:	005b      	lsls	r3, r3, #1
900176c0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900176c4:	4313      	orrs	r3, r2
900176c6:	1af6      	subs	r6, r6, r3
900176c8:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
900176cc:	7b69      	ldrb	r1, [r5, #13]
900176ce:	00cb      	lsls	r3, r1, #3
900176d0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900176d4:	7a2b      	ldrb	r3, [r5, #8]
900176d6:	4313      	orrs	r3, r2
900176d8:	064a      	lsls	r2, r1, #25
900176da:	bf44      	itt	mi
900176dc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900176e0:	b21b      	sxthmi	r3, r3
900176e2:	1bdb      	subs	r3, r3, r7
900176e4:	e747      	b.n	90017576 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
900176e6:	2300      	movs	r3, #0
900176e8:	e7b7      	b.n	9001765a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
900176ea:	bf00      	nop
900176ec:	3fc00079 	.word	0x3fc00079

900176f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
900176f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900176f4:	4604      	mov	r4, r0
900176f6:	b942      	cbnz	r2, 9001770a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
900176f8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
900176fc:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
90017700:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90017704:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90017708:	e047      	b.n	9001779a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001770a:	7b51      	ldrb	r1, [r2, #13]
9001770c:	8893      	ldrh	r3, [r2, #4]
9001770e:	010d      	lsls	r5, r1, #4
90017710:	f405 7080 	and.w	r0, r5, #256	@ 0x100
90017714:	79d5      	ldrb	r5, [r2, #7]
90017716:	4305      	orrs	r5, r0
90017718:	2d04      	cmp	r5, #4
9001771a:	bfcc      	ite	gt
9001771c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90017720:	f04f 0e01 	movle.w	lr, #1
90017724:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
90017728:	f200 80ab 	bhi.w	90017882 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001772c:	f240 60e7 	movw	r0, #1767	@ 0x6e7
90017730:	4283      	cmp	r3, r0
90017732:	d216      	bcs.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017734:	f240 605b 	movw	r0, #1627	@ 0x65b
90017738:	4283      	cmp	r3, r0
9001773a:	d859      	bhi.n	900177f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001773c:	f240 6057 	movw	r0, #1623	@ 0x657
90017740:	4283      	cmp	r3, r0
90017742:	d20e      	bcs.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017744:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90017748:	d24a      	bcs.n	900177e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001774a:	f240 604e 	movw	r0, #1614	@ 0x64e
9001774e:	4283      	cmp	r3, r0
90017750:	d207      	bcs.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017752:	f240 601a 	movw	r0, #1562	@ 0x61a
90017756:	4283      	cmp	r3, r0
90017758:	d02a      	beq.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001775a:	d821      	bhi.n	900177a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001775c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
90017760:	d35b      	bcc.n	9001781a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017762:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
90017766:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001776a:	f040 80d0 	bne.w	9001790e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001776e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
90017772:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017776:	f040 80ca 	bne.w	9001790e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001777a:	00cb      	lsls	r3, r1, #3
9001777c:	0649      	lsls	r1, r1, #25
9001777e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90017782:	7a13      	ldrb	r3, [r2, #8]
90017784:	ea43 0300 	orr.w	r3, r3, r0
90017788:	bf44      	itt	mi
9001778a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001778e:	b21b      	sxthmi	r3, r3
90017790:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017794:	1b5d      	subs	r5, r3, r5
90017796:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001779a:	4610      	mov	r0, r2
9001779c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900177a0:	f240 604b 	movw	r0, #1611	@ 0x64b
900177a4:	4283      	cmp	r3, r0
900177a6:	d338      	bcc.n	9001781a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900177a8:	f240 604c 	movw	r0, #1612	@ 0x64c
900177ac:	4283      	cmp	r3, r0
900177ae:	d9d8      	bls.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900177b0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
900177b4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
900177b8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900177bc:	f040 80f3 	bne.w	900179a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
900177c0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900177c4:	f040 80ef 	bne.w	900179a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
900177c8:	00cb      	lsls	r3, r1, #3
900177ca:	064e      	lsls	r6, r1, #25
900177cc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
900177d0:	7a13      	ldrb	r3, [r2, #8]
900177d2:	ea43 0300 	orr.w	r3, r3, r0
900177d6:	bf44      	itt	mi
900177d8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900177dc:	b21b      	sxthmi	r3, r3
900177de:	e7d9      	b.n	90017794 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
900177e0:	f240 6054 	movw	r0, #1620	@ 0x654
900177e4:	4283      	cmp	r3, r0
900177e6:	d8e3      	bhi.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900177e8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
900177ec:	d9e0      	bls.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900177ee:	e7b8      	b.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900177f0:	f240 6074 	movw	r0, #1652	@ 0x674
900177f4:	4283      	cmp	r3, r0
900177f6:	d0b4      	beq.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900177f8:	d82d      	bhi.n	90017856 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
900177fa:	f240 605e 	movw	r0, #1630	@ 0x65e
900177fe:	4283      	cmp	r3, r0
90017800:	d804      	bhi.n	9001780c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90017802:	f240 605d 	movw	r0, #1629	@ 0x65d
90017806:	4283      	cmp	r3, r0
90017808:	d3d2      	bcc.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001780a:	e7aa      	b.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001780c:	f240 605f 	movw	r0, #1631	@ 0x65f
90017810:	4283      	cmp	r3, r0
90017812:	d0cd      	beq.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017814:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90017818:	d0a3      	beq.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001781a:	00cb      	lsls	r3, r1, #3
9001781c:	0649      	lsls	r1, r1, #25
9001781e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90017822:	7a13      	ldrb	r3, [r2, #8]
90017824:	ea43 0300 	orr.w	r3, r3, r0
90017828:	bf44      	itt	mi
9001782a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001782e:	b21b      	sxthmi	r3, r3
90017830:	1b5d      	subs	r5, r3, r5
90017832:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90017836:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001783a:	7b53      	ldrb	r3, [r2, #13]
9001783c:	015b      	lsls	r3, r3, #5
9001783e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90017842:	7993      	ldrb	r3, [r2, #6]
90017844:	430b      	orrs	r3, r1
90017846:	2105      	movs	r1, #5
90017848:	005b      	lsls	r3, r3, #1
9001784a:	fb93 f3f1 	sdiv	r3, r3, r1
9001784e:	f992 1009 	ldrsb.w	r1, [r2, #9]
90017852:	440b      	add	r3, r1
90017854:	e756      	b.n	90017704 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90017856:	f240 60e2 	movw	r0, #1762	@ 0x6e2
9001785a:	4283      	cmp	r3, r0
9001785c:	d809      	bhi.n	90017872 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001785e:	f240 60df 	movw	r0, #1759	@ 0x6df
90017862:	4283      	cmp	r3, r0
90017864:	f4bf af7d 	bcs.w	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017868:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001786c:	2b05      	cmp	r3, #5
9001786e:	d8d4      	bhi.n	9001781a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90017870:	e777      	b.n	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017872:	f240 60e3 	movw	r0, #1763	@ 0x6e3
90017876:	4283      	cmp	r3, r0
90017878:	d09a      	beq.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001787a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001787e:	4283      	cmp	r3, r0
90017880:	e7ca      	b.n	90017818 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90017882:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90017886:	d22b      	bcs.n	900178e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90017888:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001788c:	4283      	cmp	r3, r0
9001788e:	d28f      	bcs.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017890:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90017894:	4283      	cmp	r3, r0
90017896:	d816      	bhi.n	900178c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90017898:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001789c:	4283      	cmp	r3, r0
9001789e:	f4bf af60 	bcs.w	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900178a2:	f240 60ec 	movw	r0, #1772	@ 0x6ec
900178a6:	4283      	cmp	r3, r0
900178a8:	d80a      	bhi.n	900178c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
900178aa:	f240 60eb 	movw	r0, #1771	@ 0x6eb
900178ae:	4283      	cmp	r3, r0
900178b0:	f4bf af57 	bcs.w	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900178b4:	f240 60ea 	movw	r0, #1770	@ 0x6ea
900178b8:	4283      	cmp	r3, r0
900178ba:	f43f af79 	beq.w	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900178be:	e7ac      	b.n	9001781a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900178c0:	f240 60ed 	movw	r0, #1773	@ 0x6ed
900178c4:	e7f8      	b.n	900178b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
900178c6:	f640 00e8 	movw	r0, #2280	@ 0x8e8
900178ca:	4283      	cmp	r3, r0
900178cc:	d802      	bhi.n	900178d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
900178ce:	f640 00e7 	movw	r0, #2279	@ 0x8e7
900178d2:	e798      	b.n	90017806 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
900178d4:	f640 00e9 	movw	r0, #2281	@ 0x8e9
900178d8:	4283      	cmp	r3, r0
900178da:	f47f af42 	bne.w	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900178de:	e767      	b.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900178e0:	f640 00f6 	movw	r0, #2294	@ 0x8f6
900178e4:	4283      	cmp	r3, r0
900178e6:	f43f af63 	beq.w	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900178ea:	d802      	bhi.n	900178f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
900178ec:	f640 00f2 	movw	r0, #2290	@ 0x8f2
900178f0:	e7f2      	b.n	900178d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
900178f2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
900178f6:	4283      	cmp	r3, r0
900178f8:	d805      	bhi.n	90017906 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
900178fa:	f640 00f9 	movw	r0, #2297	@ 0x8f9
900178fe:	4283      	cmp	r3, r0
90017900:	f4ff af2f 	bcc.w	90017762 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90017904:	e754      	b.n	900177b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90017906:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001790a:	4283      	cmp	r3, r0
9001790c:	e7af      	b.n	9001786e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001790e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90017912:	4617      	mov	r7, r2
90017914:	f102 0808 	add.w	r8, r2, #8
90017918:	4666      	mov	r6, ip
9001791a:	6838      	ldr	r0, [r7, #0]
9001791c:	3708      	adds	r7, #8
9001791e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90017922:	46e6      	mov	lr, ip
90017924:	4547      	cmp	r7, r8
90017926:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001792a:	46f4      	mov	ip, lr
9001792c:	d1f5      	bne.n	9001791a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001792e:	6838      	ldr	r0, [r7, #0]
90017930:	f8ce 0000 	str.w	r0, [lr]
90017934:	88b9      	ldrh	r1, [r7, #4]
90017936:	f8ae 1004 	strh.w	r1, [lr, #4]
9001793a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001793e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90017942:	d009      	beq.n	90017958 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90017944:	7b51      	ldrb	r1, [r2, #13]
90017946:	7992      	ldrb	r2, [r2, #6]
90017948:	0149      	lsls	r1, r1, #5
9001794a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001794e:	4311      	orrs	r1, r2
90017950:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90017954:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90017958:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001795c:	b2ad      	uxth	r5, r5
9001795e:	d00d      	beq.n	9001797c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90017960:	442b      	add	r3, r5
90017962:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90017966:	b29b      	uxth	r3, r3
90017968:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001796c:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017970:	10db      	asrs	r3, r3, #3
90017972:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017976:	4313      	orrs	r3, r2
90017978:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001797c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90017980:	00cb      	lsls	r3, r1, #3
90017982:	064f      	lsls	r7, r1, #25
90017984:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017988:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001798c:	ea43 0302 	orr.w	r3, r3, r2
90017990:	bf44      	itt	mi
90017992:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017996:	b21b      	sxthmi	r3, r3
90017998:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001799c:	1b5b      	subs	r3, r3, r5
9001799e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
900179a2:	4632      	mov	r2, r6
900179a4:	e6f9      	b.n	9001779a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
900179a6:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
900179aa:	4617      	mov	r7, r2
900179ac:	f102 0908 	add.w	r9, r2, #8
900179b0:	4666      	mov	r6, ip
900179b2:	6838      	ldr	r0, [r7, #0]
900179b4:	3708      	adds	r7, #8
900179b6:	f857 1c04 	ldr.w	r1, [r7, #-4]
900179ba:	46e0      	mov	r8, ip
900179bc:	454f      	cmp	r7, r9
900179be:	e8a8 0003 	stmia.w	r8!, {r0, r1}
900179c2:	46c4      	mov	ip, r8
900179c4:	d1f5      	bne.n	900179b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
900179c6:	6838      	ldr	r0, [r7, #0]
900179c8:	f8c8 0000 	str.w	r0, [r8]
900179cc:	88b9      	ldrh	r1, [r7, #4]
900179ce:	f8a8 1004 	strh.w	r1, [r8, #4]
900179d2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
900179d6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
900179da:	d009      	beq.n	900179f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
900179dc:	7b51      	ldrb	r1, [r2, #13]
900179de:	7992      	ldrb	r2, [r2, #6]
900179e0:	0149      	lsls	r1, r1, #5
900179e2:	f401 7180 	and.w	r1, r1, #256	@ 0x100
900179e6:	4311      	orrs	r1, r2
900179e8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
900179ec:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
900179f0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900179f4:	d00e      	beq.n	90017a14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
900179f6:	eba3 030e 	sub.w	r3, r3, lr
900179fa:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
900179fe:	b29b      	uxth	r3, r3
90017a00:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90017a04:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90017a08:	10db      	asrs	r3, r3, #3
90017a0a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90017a0e:	4313      	orrs	r3, r2
90017a10:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90017a14:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90017a18:	00cb      	lsls	r3, r1, #3
90017a1a:	0648      	lsls	r0, r1, #25
90017a1c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90017a20:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90017a24:	ea43 0302 	orr.w	r3, r3, r2
90017a28:	bf44      	itt	mi
90017a2a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90017a2e:	b21b      	sxthmi	r3, r3
90017a30:	1b5d      	subs	r5, r3, r5
90017a32:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90017a36:	e7b4      	b.n	900179a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90017a38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90017a38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017a3c:	461e      	mov	r6, r3
90017a3e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017a40:	4604      	mov	r4, r0
90017a42:	4617      	mov	r7, r2
90017a44:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017a48:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017a4c:	f7ed f866 	bl	90004b1c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017a50:	4605      	mov	r5, r0
90017a52:	b918      	cbnz	r0, 90017a5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90017a54:	6030      	str	r0, [r6, #0]
90017a56:	4628      	mov	r0, r5
90017a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017a5c:	683b      	ldr	r3, [r7, #0]
90017a5e:	4601      	mov	r1, r0
90017a60:	4638      	mov	r0, r7
90017a62:	68db      	ldr	r3, [r3, #12]
90017a64:	4798      	blx	r3
90017a66:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90017a6a:	4602      	mov	r2, r0
90017a6c:	6030      	str	r0, [r6, #0]
90017a6e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90017a72:	d213      	bcs.n	90017a9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90017a74:	4643      	mov	r3, r8
90017a76:	4639      	mov	r1, r7
90017a78:	4620      	mov	r0, r4
90017a7a:	f7ff fe39 	bl	900176f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017a7e:	6030      	str	r0, [r6, #0]
90017a80:	6833      	ldr	r3, [r6, #0]
90017a82:	b143      	cbz	r3, 90017a96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90017a84:	7b5a      	ldrb	r2, [r3, #13]
90017a86:	7a9b      	ldrb	r3, [r3, #10]
90017a88:	0052      	lsls	r2, r2, #1
90017a8a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90017a8e:	4313      	orrs	r3, r2
90017a90:	bf0c      	ite	eq
90017a92:	2301      	moveq	r3, #1
90017a94:	2300      	movne	r3, #0
90017a96:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90017a9a:	e7dc      	b.n	90017a56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90017a9c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90017aa0:	b29b      	uxth	r3, r3
90017aa2:	2b7f      	cmp	r3, #127	@ 0x7f
90017aa4:	d804      	bhi.n	90017ab0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90017aa6:	4639      	mov	r1, r7
90017aa8:	4620      	mov	r0, r4
90017aaa:	f7ff fd15 	bl	900174d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90017aae:	e7e6      	b.n	90017a7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90017ab0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90017ab4:	2b00      	cmp	r3, #0
90017ab6:	d0e3      	beq.n	90017a80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017ab8:	f640 1302 	movw	r3, #2306	@ 0x902
90017abc:	429d      	cmp	r5, r3
90017abe:	d1df      	bne.n	90017a80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017ac0:	4601      	mov	r1, r0
90017ac2:	4620      	mov	r0, r4
90017ac4:	f7ff fcd8 	bl	90017478 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017ac8:	e7d9      	b.n	90017a7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90017aca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90017aca:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90017ace:	461e      	mov	r6, r3
90017ad0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017ad2:	4604      	mov	r4, r0
90017ad4:	4617      	mov	r7, r2
90017ad6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017ada:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017ade:	f7ed f81d 	bl	90004b1c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017ae2:	4605      	mov	r5, r0
90017ae4:	b918      	cbnz	r0, 90017aee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90017ae6:	6030      	str	r0, [r6, #0]
90017ae8:	4628      	mov	r0, r5
90017aea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90017aee:	683b      	ldr	r3, [r7, #0]
90017af0:	4601      	mov	r1, r0
90017af2:	4638      	mov	r0, r7
90017af4:	f8d3 9008 	ldr.w	r9, [r3, #8]
90017af8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90017afc:	47c8      	blx	r9
90017afe:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90017b02:	4602      	mov	r2, r0
90017b04:	6030      	str	r0, [r6, #0]
90017b06:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90017b0a:	d213      	bcs.n	90017b34 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90017b0c:	4643      	mov	r3, r8
90017b0e:	4639      	mov	r1, r7
90017b10:	4620      	mov	r0, r4
90017b12:	f7ff fded 	bl	900176f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017b16:	6030      	str	r0, [r6, #0]
90017b18:	6833      	ldr	r3, [r6, #0]
90017b1a:	b143      	cbz	r3, 90017b2e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90017b1c:	7b5a      	ldrb	r2, [r3, #13]
90017b1e:	7a9b      	ldrb	r3, [r3, #10]
90017b20:	0052      	lsls	r2, r2, #1
90017b22:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90017b26:	4313      	orrs	r3, r2
90017b28:	bf0c      	ite	eq
90017b2a:	2301      	moveq	r3, #1
90017b2c:	2300      	movne	r3, #0
90017b2e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90017b32:	e7d9      	b.n	90017ae8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90017b34:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90017b38:	b29b      	uxth	r3, r3
90017b3a:	2b7f      	cmp	r3, #127	@ 0x7f
90017b3c:	d804      	bhi.n	90017b48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90017b3e:	4639      	mov	r1, r7
90017b40:	4620      	mov	r0, r4
90017b42:	f7ff fcc9 	bl	900174d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90017b46:	e7e6      	b.n	90017b16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90017b48:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90017b4c:	2b00      	cmp	r3, #0
90017b4e:	d0e3      	beq.n	90017b18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90017b50:	f640 1302 	movw	r3, #2306	@ 0x902
90017b54:	429d      	cmp	r5, r3
90017b56:	d1df      	bne.n	90017b18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90017b58:	4601      	mov	r1, r0
90017b5a:	4620      	mov	r0, r4
90017b5c:	f7ff fc8c 	bl	90017478 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017b60:	e7d9      	b.n	90017b16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90017b62 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90017b62:	b510      	push	{r4, lr}
90017b64:	4604      	mov	r4, r0
90017b66:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
90017b6a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017b6c:	b1e1      	cbz	r1, 90017ba8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017b6e:	2b0a      	cmp	r3, #10
90017b70:	d02d      	beq.n	90017bce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90017b72:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90017b74:	3901      	subs	r1, #1
90017b76:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90017b7a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90017b7c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90017b80:	1c51      	adds	r1, r2, #1
90017b82:	b289      	uxth	r1, r1
90017b84:	2901      	cmp	r1, #1
90017b86:	bf8a      	itet	hi
90017b88:	f102 32ff 	addhi.w	r2, r2, #4294967295
90017b8c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90017b8e:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90017b90:	1c5a      	adds	r2, r3, #1
90017b92:	8722      	strh	r2, [r4, #56]	@ 0x38
90017b94:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90017b96:	4413      	add	r3, r2
90017b98:	b29b      	uxth	r3, r3
90017b9a:	2b09      	cmp	r3, #9
90017b9c:	bf88      	it	hi
90017b9e:	3b0a      	subhi	r3, #10
90017ba0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017ba4:	8458      	strh	r0, [r3, #34]	@ 0x22
90017ba6:	e7de      	b.n	90017b66 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90017ba8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017baa:	2b0a      	cmp	r3, #10
90017bac:	d00f      	beq.n	90017bce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90017bae:	4620      	mov	r0, r4
90017bb0:	f7ff fc21 	bl	900173f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90017bb4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90017bb6:	1c5a      	adds	r2, r3, #1
90017bb8:	8722      	strh	r2, [r4, #56]	@ 0x38
90017bba:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90017bbc:	4413      	add	r3, r2
90017bbe:	b29b      	uxth	r3, r3
90017bc0:	2b09      	cmp	r3, #9
90017bc2:	bf88      	it	hi
90017bc4:	3b0a      	subhi	r3, #10
90017bc6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017bca:	8458      	strh	r0, [r3, #34]	@ 0x22
90017bcc:	e7ec      	b.n	90017ba8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017bce:	bd10      	pop	{r4, pc}

90017bd0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90017bd0:	b538      	push	{r3, r4, r5, lr}
90017bd2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90017bd4:	4604      	mov	r4, r0
90017bd6:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90017bda:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
90017bdc:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
90017bde:	3a01      	subs	r2, #1
90017be0:	8702      	strh	r2, [r0, #56]	@ 0x38
90017be2:	1c5a      	adds	r2, r3, #1
90017be4:	b292      	uxth	r2, r2
90017be6:	2a09      	cmp	r2, #9
90017be8:	bf8a      	itet	hi
90017bea:	3b09      	subhi	r3, #9
90017bec:	86c2      	strhls	r2, [r0, #54]	@ 0x36
90017bee:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90017bf0:	f7ff ffb7 	bl	90017b62 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90017bf4:	8c23      	ldrh	r3, [r4, #32]
90017bf6:	2b01      	cmp	r3, #1
90017bf8:	bf9c      	itt	ls
90017bfa:	3301      	addls	r3, #1
90017bfc:	8423      	strhls	r3, [r4, #32]
90017bfe:	8be3      	ldrh	r3, [r4, #30]
90017c00:	b90b      	cbnz	r3, 90017c06 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90017c02:	2302      	movs	r3, #2
90017c04:	83e3      	strh	r3, [r4, #30]
90017c06:	8be3      	ldrh	r3, [r4, #30]
90017c08:	4628      	mov	r0, r5
90017c0a:	3b01      	subs	r3, #1
90017c0c:	b29b      	uxth	r3, r3
90017c0e:	83e3      	strh	r3, [r4, #30]
90017c10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90017c14:	8365      	strh	r5, [r4, #26]
90017c16:	bd38      	pop	{r3, r4, r5, pc}

90017c18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90017c18:	428a      	cmp	r2, r1
90017c1a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017c1e:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90017c20:	d932      	bls.n	90017c88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90017c22:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90017c24:	1a54      	subs	r4, r2, r1
90017c26:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
90017c2a:	19ee      	adds	r6, r5, r7
90017c2c:	fa1f fe84 	uxth.w	lr, r4
90017c30:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90017c34:	3e01      	subs	r6, #1
90017c36:	b2b4      	uxth	r4, r6
90017c38:	eba4 090e 	sub.w	r9, r4, lr
90017c3c:	fa1f f989 	uxth.w	r9, r9
90017c40:	2c09      	cmp	r4, #9
90017c42:	4626      	mov	r6, r4
90017c44:	bf88      	it	hi
90017c46:	f1a4 060a 	subhi.w	r6, r4, #10
90017c4a:	f1bc 0f00 	cmp.w	ip, #0
90017c4e:	f104 34ff 	add.w	r4, r4, #4294967295
90017c52:	bf08      	it	eq
90017c54:	f04f 0c02 	moveq.w	ip, #2
90017c58:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90017c5c:	b2a4      	uxth	r4, r4
90017c5e:	f10c 3cff 	add.w	ip, ip, #4294967295
90017c62:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90017c66:	454c      	cmp	r4, r9
90017c68:	fa1f fc8c 	uxth.w	ip, ip
90017c6c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90017c70:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90017c74:	d1e4      	bne.n	90017c40 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90017c76:	eba5 050e 	sub.w	r5, r5, lr
90017c7a:	eb0e 0408 	add.w	r4, lr, r8
90017c7e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90017c82:	8705      	strh	r5, [r0, #56]	@ 0x38
90017c84:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
90017c88:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
90017c8a:	250a      	movs	r5, #10
90017c8c:	1a64      	subs	r4, r4, r1
90017c8e:	4439      	add	r1, r7
90017c90:	b289      	uxth	r1, r1
90017c92:	8704      	strh	r4, [r0, #56]	@ 0x38
90017c94:	2909      	cmp	r1, #9
90017c96:	bf88      	it	hi
90017c98:	390a      	subhi	r1, #10
90017c9a:	86c1      	strh	r1, [r0, #54]	@ 0x36
90017c9c:	b18a      	cbz	r2, 90017cc2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90017c9e:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90017ca0:	3a01      	subs	r2, #1
90017ca2:	3101      	adds	r1, #1
90017ca4:	b292      	uxth	r2, r2
90017ca6:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90017caa:	8701      	strh	r1, [r0, #56]	@ 0x38
90017cac:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90017cae:	b901      	cbnz	r1, 90017cb2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90017cb0:	86c5      	strh	r5, [r0, #54]	@ 0x36
90017cb2:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90017cb4:	3901      	subs	r1, #1
90017cb6:	b289      	uxth	r1, r1
90017cb8:	86c1      	strh	r1, [r0, #54]	@ 0x36
90017cba:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90017cbe:	844c      	strh	r4, [r1, #34]	@ 0x22
90017cc0:	e7ec      	b.n	90017c9c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90017cc2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017cc6:	f7ff bf4c 	b.w	90017b62 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90017cca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90017cca:	b570      	push	{r4, r5, r6, lr}
90017ccc:	2500      	movs	r5, #0
90017cce:	4295      	cmp	r5, r2
90017cd0:	d011      	beq.n	90017cf6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90017cd2:	8bc4      	ldrh	r4, [r0, #30]
90017cd4:	f831 6b02 	ldrh.w	r6, [r1], #2
90017cd8:	4414      	add	r4, r2
90017cda:	3c01      	subs	r4, #1
90017cdc:	1b64      	subs	r4, r4, r5
90017cde:	b2a4      	uxth	r4, r4
90017ce0:	2c01      	cmp	r4, #1
90017ce2:	bf88      	it	hi
90017ce4:	3c02      	subhi	r4, #2
90017ce6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90017cea:	8b64      	ldrh	r4, [r4, #26]
90017cec:	42b4      	cmp	r4, r6
90017cee:	d117      	bne.n	90017d20 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90017cf0:	3501      	adds	r5, #1
90017cf2:	b2ad      	uxth	r5, r5
90017cf4:	e7eb      	b.n	90017cce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90017cf6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90017cfa:	2400      	movs	r4, #0
90017cfc:	4413      	add	r3, r2
90017cfe:	b2a2      	uxth	r2, r4
90017d00:	429a      	cmp	r2, r3
90017d02:	da0f      	bge.n	90017d24 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90017d04:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90017d06:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90017d0a:	3401      	adds	r4, #1
90017d0c:	4432      	add	r2, r6
90017d0e:	b292      	uxth	r2, r2
90017d10:	2a09      	cmp	r2, #9
90017d12:	bf88      	it	hi
90017d14:	3a0a      	subhi	r2, #10
90017d16:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90017d1a:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
90017d1c:	42aa      	cmp	r2, r5
90017d1e:	d0ee      	beq.n	90017cfe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90017d20:	2000      	movs	r0, #0
90017d22:	bd70      	pop	{r4, r5, r6, pc}
90017d24:	2001      	movs	r0, #1
90017d26:	e7fc      	b.n	90017d22 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90017d28 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90017d28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017d2c:	4605      	mov	r5, r0
90017d2e:	4616      	mov	r6, r2
90017d30:	1c8c      	adds	r4, r1, #2
90017d32:	8809      	ldrh	r1, [r1, #0]
90017d34:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90017d38:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90017d3c:	42b3      	cmp	r3, r6
90017d3e:	d124      	bne.n	90017d8a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90017d40:	f3c1 2903 	ubfx	r9, r1, #8, #4
90017d44:	f3c1 1803 	ubfx	r8, r1, #4, #4
90017d48:	f001 070f 	and.w	r7, r1, #15
90017d4c:	4652      	mov	r2, sl
90017d4e:	f8cd 8000 	str.w	r8, [sp]
90017d52:	464b      	mov	r3, r9
90017d54:	4621      	mov	r1, r4
90017d56:	4628      	mov	r0, r5
90017d58:	f7ff ffb7 	bl	90017cca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90017d5c:	4683      	mov	fp, r0
90017d5e:	b168      	cbz	r0, 90017d7c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90017d60:	eb0a 0109 	add.w	r1, sl, r9
90017d64:	463a      	mov	r2, r7
90017d66:	4628      	mov	r0, r5
90017d68:	4441      	add	r1, r8
90017d6a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90017d6e:	4649      	mov	r1, r9
90017d70:	f7ff ff52 	bl	90017c18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90017d74:	4658      	mov	r0, fp
90017d76:	b003      	add	sp, #12
90017d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017d7c:	eb07 010a 	add.w	r1, r7, sl
90017d80:	4449      	add	r1, r9
90017d82:	4441      	add	r1, r8
90017d84:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90017d88:	e7d2      	b.n	90017d30 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90017d8a:	f04f 0b00 	mov.w	fp, #0
90017d8e:	e7f1      	b.n	90017d74 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90017d90 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90017d90:	b570      	push	{r4, r5, r6, lr}
90017d92:	8810      	ldrh	r0, [r2, #0]
90017d94:	4298      	cmp	r0, r3
90017d96:	d817      	bhi.n	90017dc8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017d98:	1e48      	subs	r0, r1, #1
90017d9a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90017d9e:	4298      	cmp	r0, r3
90017da0:	d312      	bcc.n	90017dc8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017da2:	2400      	movs	r4, #0
90017da4:	428c      	cmp	r4, r1
90017da6:	d20f      	bcs.n	90017dc8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017da8:	1860      	adds	r0, r4, r1
90017daa:	1040      	asrs	r0, r0, #1
90017dac:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90017db0:	0085      	lsls	r5, r0, #2
90017db2:	42b3      	cmp	r3, r6
90017db4:	d902      	bls.n	90017dbc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90017db6:	3001      	adds	r0, #1
90017db8:	b284      	uxth	r4, r0
90017dba:	e7f3      	b.n	90017da4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017dbc:	d201      	bcs.n	90017dc2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90017dbe:	b281      	uxth	r1, r0
90017dc0:	e7f0      	b.n	90017da4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017dc2:	442a      	add	r2, r5
90017dc4:	8850      	ldrh	r0, [r2, #2]
90017dc6:	bd70      	pop	{r4, r5, r6, pc}
90017dc8:	2000      	movs	r0, #0
90017dca:	e7fc      	b.n	90017dc6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90017dcc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90017dcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017dd0:	6c45      	ldr	r5, [r0, #68]	@ 0x44
90017dd2:	4604      	mov	r4, r0
90017dd4:	260b      	movs	r6, #11
90017dd6:	886f      	ldrh	r7, [r5, #2]
90017dd8:	087f      	lsrs	r7, r7, #1
90017dda:	3e01      	subs	r6, #1
90017ddc:	d013      	beq.n	90017e06 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017dde:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90017de0:	462a      	mov	r2, r5
90017de2:	4639      	mov	r1, r7
90017de4:	4620      	mov	r0, r4
90017de6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017dea:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90017dee:	4643      	mov	r3, r8
90017df0:	f7ff ffce 	bl	90017d90 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90017df4:	b138      	cbz	r0, 90017e06 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017df6:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90017dfa:	4642      	mov	r2, r8
90017dfc:	4620      	mov	r0, r4
90017dfe:	f7ff ff93 	bl	90017d28 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90017e02:	2800      	cmp	r0, #0
90017e04:	d1e9      	bne.n	90017dda <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90017e06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90017e0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90017e0c:	b570      	push	{r4, r5, r6, lr}
90017e0e:	694a      	ldr	r2, [r1, #20]
90017e10:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90017e12:	684b      	ldr	r3, [r1, #4]
90017e14:	1b54      	subs	r4, r2, r5
90017e16:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
90017e18:	f000 8106 	beq.w	90018028 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90017e1c:	1b9b      	subs	r3, r3, r6
90017e1e:	d003      	beq.n	90017e28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90017e20:	4363      	muls	r3, r4
90017e22:	2210      	movs	r2, #16
90017e24:	fb93 f3f2 	sdiv	r3, r3, r2
90017e28:	680c      	ldr	r4, [r1, #0]
90017e2a:	698a      	ldr	r2, [r1, #24]
90017e2c:	1b65      	subs	r5, r4, r5
90017e2e:	f000 80fd 	beq.w	9001802c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90017e32:	1b92      	subs	r2, r2, r6
90017e34:	d003      	beq.n	90017e3e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90017e36:	436a      	muls	r2, r5
90017e38:	2410      	movs	r4, #16
90017e3a:	fb92 f2f4 	sdiv	r2, r2, r4
90017e3e:	1a9b      	subs	r3, r3, r2
90017e40:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 90018068 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90017e44:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90017e48:	460a      	mov	r2, r1
90017e4a:	ee07 3a90 	vmov	s15, r3
90017e4e:	f100 040c 	add.w	r4, r0, #12
90017e52:	4603      	mov	r3, r0
90017e54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017e58:	ee67 7a84 	vmul.f32	s15, s15, s8
90017e5c:	ee87 3a27 	vdiv.f32	s6, s14, s15
90017e60:	eeb1 6a43 	vneg.f32	s12, s6
90017e64:	edd2 7a02 	vldr	s15, [r2, #8]
90017e68:	3214      	adds	r2, #20
90017e6a:	eec7 6a27 	vdiv.f32	s13, s14, s15
90017e6e:	ece3 6a01 	vstmia	r3!, {s13}
90017e72:	429c      	cmp	r4, r3
90017e74:	ed52 7a02 	vldr	s15, [r2, #-8]
90017e78:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017e7c:	edc3 7a02 	vstr	s15, [r3, #8]
90017e80:	ed52 7a01 	vldr	s15, [r2, #-4]
90017e84:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017e88:	edc3 7a05 	vstr	s15, [r3, #20]
90017e8c:	d1ea      	bne.n	90017e64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90017e8e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90017e90:	698b      	ldr	r3, [r1, #24]
90017e92:	edd0 4a02 	vldr	s9, [r0, #8]
90017e96:	1a9b      	subs	r3, r3, r2
90017e98:	edd0 3a00 	vldr	s7, [r0]
90017e9c:	edd0 6a01 	vldr	s13, [r0, #4]
90017ea0:	ee07 3a90 	vmov	s15, r3
90017ea4:	684b      	ldr	r3, [r1, #4]
90017ea6:	ee76 6ae4 	vsub.f32	s13, s13, s9
90017eaa:	ed90 5a05 	vldr	s10, [r0, #20]
90017eae:	1a9b      	subs	r3, r3, r2
90017eb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017eb4:	ee73 4ae4 	vsub.f32	s9, s7, s9
90017eb8:	ed90 2a03 	vldr	s4, [r0, #12]
90017ebc:	ee07 3a10 	vmov	s14, r3
90017ec0:	edd0 5a04 	vldr	s11, [r0, #16]
90017ec4:	ee67 7a84 	vmul.f32	s15, s15, s8
90017ec8:	ed90 1a07 	vldr	s2, [r0, #28]
90017ecc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017ed0:	edd0 2a06 	vldr	s5, [r0, #24]
90017ed4:	ee75 5ac5 	vsub.f32	s11, s11, s10
90017ed8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90017edc:	ee27 7a04 	vmul.f32	s14, s14, s8
90017ee0:	ee32 5a45 	vsub.f32	s10, s4, s10
90017ee4:	eee6 7a87 	vfma.f32	s15, s13, s14
90017ee8:	ee67 7a83 	vmul.f32	s15, s15, s6
90017eec:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
90017ef0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90017ef2:	694a      	ldr	r2, [r1, #20]
90017ef4:	1b13      	subs	r3, r2, r4
90017ef6:	ee07 3a10 	vmov	s14, r3
90017efa:	680b      	ldr	r3, [r1, #0]
90017efc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f00:	1b1b      	subs	r3, r3, r4
90017f02:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f06:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90017f0a:	ee07 3a10 	vmov	s14, r3
90017f0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f12:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f16:	eee6 4a87 	vfma.f32	s9, s13, s14
90017f1a:	ee64 4a86 	vmul.f32	s9, s9, s12
90017f1e:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
90017f22:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90017f24:	698b      	ldr	r3, [r1, #24]
90017f26:	1a9b      	subs	r3, r3, r2
90017f28:	ee06 3a90 	vmov	s13, r3
90017f2c:	684b      	ldr	r3, [r1, #4]
90017f2e:	1a9b      	subs	r3, r3, r2
90017f30:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90017f34:	ee07 3a10 	vmov	s14, r3
90017f38:	ee66 6a84 	vmul.f32	s13, s13, s8
90017f3c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f40:	ee65 6a66 	vnmul.f32	s13, s10, s13
90017f44:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f48:	eee5 6a87 	vfma.f32	s13, s11, s14
90017f4c:	ee66 6a83 	vmul.f32	s13, s13, s6
90017f50:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
90017f54:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90017f56:	694a      	ldr	r2, [r1, #20]
90017f58:	1b13      	subs	r3, r2, r4
90017f5a:	ee07 3a10 	vmov	s14, r3
90017f5e:	680b      	ldr	r3, [r1, #0]
90017f60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f64:	1b1b      	subs	r3, r3, r4
90017f66:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f6a:	ee25 5a47 	vnmul.f32	s10, s10, s14
90017f6e:	ee07 3a10 	vmov	s14, r3
90017f72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f76:	ee27 7a04 	vmul.f32	s14, s14, s8
90017f7a:	eea5 5a87 	vfma.f32	s10, s11, s14
90017f7e:	edd0 5a08 	vldr	s11, [r0, #32]
90017f82:	ee31 1a65 	vsub.f32	s2, s2, s11
90017f86:	ee72 5ae5 	vsub.f32	s11, s5, s11
90017f8a:	ee25 5a06 	vmul.f32	s10, s10, s12
90017f8e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
90017f92:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90017f94:	698b      	ldr	r3, [r1, #24]
90017f96:	1a9b      	subs	r3, r3, r2
90017f98:	ee07 3a10 	vmov	s14, r3
90017f9c:	684b      	ldr	r3, [r1, #4]
90017f9e:	1a9b      	subs	r3, r3, r2
90017fa0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017fa4:	ee01 3a90 	vmov	s3, r3
90017fa8:	ee27 7a04 	vmul.f32	s14, s14, s8
90017fac:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90017fb0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90017fb4:	ee61 1a84 	vmul.f32	s3, s3, s8
90017fb8:	eea1 7a21 	vfma.f32	s14, s2, s3
90017fbc:	ee27 7a03 	vmul.f32	s14, s14, s6
90017fc0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
90017fc4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90017fc6:	694a      	ldr	r2, [r1, #20]
90017fc8:	1b13      	subs	r3, r2, r4
90017fca:	ee03 3a10 	vmov	s6, r3
90017fce:	680b      	ldr	r3, [r1, #0]
90017fd0:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90017fd4:	1b1b      	subs	r3, r3, r4
90017fd6:	ee23 3a04 	vmul.f32	s6, s6, s8
90017fda:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90017fde:	ee03 3a10 	vmov	s6, r3
90017fe2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90017fe6:	ee23 4a04 	vmul.f32	s8, s6, s8
90017fea:	eee1 5a04 	vfma.f32	s11, s2, s8
90017fee:	ee25 6a86 	vmul.f32	s12, s11, s12
90017ff2:	ee62 5a67 	vnmul.f32	s11, s4, s15
90017ff6:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
90017ffa:	eee3 5aa6 	vfma.f32	s11, s7, s13
90017ffe:	eef5 5ac0 	vcmpe.f32	s11, #0.0
90018002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018006:	dd13      	ble.n	90018030 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90018008:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001800c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90018010:	63c3      	str	r3, [r0, #60]	@ 0x3c
90018012:	eee3 7a87 	vfma.f32	s15, s7, s14
90018016:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001801a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001801e:	dd15      	ble.n	9001804c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90018020:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
90018024:	6403      	str	r3, [r0, #64]	@ 0x40
90018026:	bd70      	pop	{r4, r5, r6, pc}
90018028:	4623      	mov	r3, r4
9001802a:	e6fd      	b.n	90017e28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001802c:	462a      	mov	r2, r5
9001802e:	e706      	b.n	90017e3e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90018030:	d502      	bpl.n	90018038 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
90018032:	f647 73ff 	movw	r3, #32767	@ 0x7fff
90018036:	e7e9      	b.n	9001800c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
90018038:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001803c:	eea3 2a85 	vfma.f32	s4, s7, s10
90018040:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
90018044:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018048:	dade      	bge.n	90018008 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001804a:	e7f2      	b.n	90018032 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001804c:	d502      	bpl.n	90018054 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001804e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
90018052:	e7e7      	b.n	90018024 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
90018054:	ee62 4ae4 	vnmul.f32	s9, s5, s9
90018058:	eee3 4a86 	vfma.f32	s9, s7, s12
9001805c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90018060:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018064:	dadc      	bge.n	90018020 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
90018066:	e7f2      	b.n	9001804e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
90018068:	3d800000 	.word	0x3d800000

9001806c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001806c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018070:	2714      	movs	r7, #20
90018072:	435f      	muls	r7, r3
90018074:	eb02 0c07 	add.w	ip, r2, r7
90018078:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001807c:	f115 0e0f 	adds.w	lr, r5, #15
90018080:	f100 80a2 	bmi.w	900181c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
90018084:	ea4f 1e2e 	mov.w	lr, lr, asr #4
90018088:	9c08      	ldr	r4, [sp, #32]
9001808a:	2614      	movs	r6, #20
9001808c:	f8c0 e014 	str.w	lr, [r0, #20]
90018090:	4366      	muls	r6, r4
90018092:	eb02 0806 	add.w	r8, r2, r6
90018096:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001809a:	f115 040f 	adds.w	r4, r5, #15
9001809e:	f100 809f 	bmi.w	900181e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
900180a2:	1124      	asrs	r4, r4, #4
900180a4:	eba4 040e 	sub.w	r4, r4, lr
900180a8:	6184      	str	r4, [r0, #24]
900180aa:	2c00      	cmp	r4, #0
900180ac:	f000 808a 	beq.w	900181c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
900180b0:	f8dc 9004 	ldr.w	r9, [ip, #4]
900180b4:	f8d8 4004 	ldr.w	r4, [r8, #4]
900180b8:	5995      	ldr	r5, [r2, r6]
900180ba:	eba4 0809 	sub.w	r8, r4, r9
900180be:	59d4      	ldr	r4, [r2, r7]
900180c0:	eba5 0a04 	sub.w	sl, r5, r4
900180c4:	ea4f 1608 	mov.w	r6, r8, lsl #4
900180c8:	ea4f 150a 	mov.w	r5, sl, lsl #4
900180cc:	fb0e fe05 	mul.w	lr, lr, r5
900180d0:	fb0a ee19 	mls	lr, sl, r9, lr
900180d4:	fb08 e404 	mla	r4, r8, r4, lr
900180d8:	3c01      	subs	r4, #1
900180da:	19a4      	adds	r4, r4, r6
900180dc:	f100 808c 	bmi.w	900181f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
900180e0:	fb94 fef6 	sdiv	lr, r4, r6
900180e4:	fb06 441e 	mls	r4, r6, lr, r4
900180e8:	f8c0 e000 	str.w	lr, [r0]
900180ec:	6104      	str	r4, [r0, #16]
900180ee:	2d00      	cmp	r5, #0
900180f0:	f2c0 8095 	blt.w	9001821e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
900180f4:	fb95 f4f6 	sdiv	r4, r5, r6
900180f8:	fb06 5514 	mls	r5, r6, r4, r5
900180fc:	6044      	str	r4, [r0, #4]
900180fe:	6085      	str	r5, [r0, #8]
90018100:	60c6      	str	r6, [r0, #12]
90018102:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90018106:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001810a:	6945      	ldr	r5, [r0, #20]
9001810c:	59d2      	ldr	r2, [r2, r7]
9001810e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
90018112:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 90018240 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
90018116:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001811a:	ee07 4a10 	vmov	s14, r4
9001811e:	6804      	ldr	r4, [r0, #0]
90018120:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
90018124:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90018128:	ee07 2a90 	vmov	s15, r2
9001812c:	ee27 7a26 	vmul.f32	s14, s14, s13
90018130:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018134:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018138:	edd3 6a00 	vldr	s13, [r3]
9001813c:	eee6 6a07 	vfma.f32	s13, s12, s14
90018140:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
90018144:	eee6 6a27 	vfma.f32	s13, s12, s15
90018148:	edc0 6a07 	vstr	s13, [r0, #28]
9001814c:	edd0 6a01 	vldr	s13, [r0, #4]
90018150:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
90018154:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90018158:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001815c:	eea6 6aa5 	vfma.f32	s12, s13, s11
90018160:	ed80 6a08 	vstr	s12, [r0, #32]
90018164:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
90018166:	6242      	str	r2, [r0, #36]	@ 0x24
90018168:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001816c:	ed93 6a03 	vldr	s12, [r3, #12]
90018170:	eea5 6a87 	vfma.f32	s12, s11, s14
90018174:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
90018178:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001817c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
90018180:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
90018184:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
90018188:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001818c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
90018190:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90018192:	6302      	str	r2, [r0, #48]	@ 0x30
90018194:	ed93 6a06 	vldr	s12, [r3, #24]
90018198:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001819c:	eea5 6a87 	vfma.f32	s12, s11, s14
900181a0:	eeb0 7a46 	vmov.f32	s14, s12
900181a4:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
900181a8:	eea6 7a27 	vfma.f32	s14, s12, s15
900181ac:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
900181b0:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
900181b4:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
900181b8:	eee6 7a87 	vfma.f32	s15, s13, s14
900181bc:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
900181c0:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
900181c2:	63c3      	str	r3, [r0, #60]	@ 0x3c
900181c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900181c8:	2410      	movs	r4, #16
900181ca:	f1c5 0501 	rsb	r5, r5, #1
900181ce:	fb9e fef4 	sdiv	lr, lr, r4
900181d2:	f015 050f 	ands.w	r5, r5, #15
900181d6:	bf18      	it	ne
900181d8:	2501      	movne	r5, #1
900181da:	ebae 0e05 	sub.w	lr, lr, r5
900181de:	e753      	b.n	90018088 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
900181e0:	f04f 0910 	mov.w	r9, #16
900181e4:	f1c5 0501 	rsb	r5, r5, #1
900181e8:	fb94 f4f9 	sdiv	r4, r4, r9
900181ec:	f015 050f 	ands.w	r5, r5, #15
900181f0:	bf18      	it	ne
900181f2:	2501      	movne	r5, #1
900181f4:	1b64      	subs	r4, r4, r5
900181f6:	e755      	b.n	900180a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
900181f8:	4264      	negs	r4, r4
900181fa:	fb94 fef6 	sdiv	lr, r4, r6
900181fe:	f1ce 0800 	rsb	r8, lr, #0
90018202:	fb06 441e 	mls	r4, r6, lr, r4
90018206:	f8c0 8000 	str.w	r8, [r0]
9001820a:	6104      	str	r4, [r0, #16]
9001820c:	2c00      	cmp	r4, #0
9001820e:	f43f af6e 	beq.w	900180ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
90018212:	ea6f 0e0e 	mvn.w	lr, lr
90018216:	1b34      	subs	r4, r6, r4
90018218:	f8c0 e000 	str.w	lr, [r0]
9001821c:	e766      	b.n	900180ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001821e:	426d      	negs	r5, r5
90018220:	fb95 f4f6 	sdiv	r4, r5, r6
90018224:	f1c4 0e00 	rsb	lr, r4, #0
90018228:	fb06 5514 	mls	r5, r6, r4, r5
9001822c:	f8c0 e004 	str.w	lr, [r0, #4]
90018230:	6085      	str	r5, [r0, #8]
90018232:	2d00      	cmp	r5, #0
90018234:	f43f af64 	beq.w	90018100 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
90018238:	43e4      	mvns	r4, r4
9001823a:	1b75      	subs	r5, r6, r5
9001823c:	6044      	str	r4, [r0, #4]
9001823e:	e75e      	b.n	900180fe <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
90018240:	3d800000 	.word	0x3d800000

90018244 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90018244:	4b01      	ldr	r3, [pc, #4]	@ (9001824c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90018246:	6018      	str	r0, [r3, #0]
90018248:	4770      	bx	lr
9001824a:	bf00      	nop
9001824c:	24021cc4 	.word	0x24021cc4

90018250 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90018250:	4b06      	ldr	r3, [pc, #24]	@ (9001826c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90018252:	881a      	ldrh	r2, [r3, #0]
90018254:	4282      	cmp	r2, r0
90018256:	d807      	bhi.n	90018268 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90018258:	4b05      	ldr	r3, [pc, #20]	@ (90018270 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001825a:	881b      	ldrh	r3, [r3, #0]
9001825c:	4413      	add	r3, r2
9001825e:	4298      	cmp	r0, r3
90018260:	bfac      	ite	ge
90018262:	2000      	movge	r0, #0
90018264:	2001      	movlt	r0, #1
90018266:	4770      	bx	lr
90018268:	2000      	movs	r0, #0
9001826a:	4770      	bx	lr
9001826c:	24021ce4 	.word	0x24021ce4
90018270:	24021ce8 	.word	0x24021ce8

90018274 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90018274:	b508      	push	{r3, lr}
90018276:	4601      	mov	r1, r0
90018278:	f7ff ffea 	bl	90018250 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001827c:	b118      	cbz	r0, 90018286 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001827e:	4b02      	ldr	r3, [pc, #8]	@ (90018288 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90018280:	681b      	ldr	r3, [r3, #0]
90018282:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90018286:	bd08      	pop	{r3, pc}
90018288:	24021cc8 	.word	0x24021cc8

9001828c <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001828c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001828e:	4c24      	ldr	r4, [pc, #144]	@ (90018320 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
90018290:	6823      	ldr	r3, [r4, #0]
90018292:	2b00      	cmp	r3, #0
90018294:	d042      	beq.n	9001831c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90018296:	4a23      	ldr	r2, [pc, #140]	@ (90018324 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90018298:	4d23      	ldr	r5, [pc, #140]	@ (90018328 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001829a:	8811      	ldrh	r1, [r2, #0]
9001829c:	f8b5 c000 	ldrh.w	ip, [r5]
900182a0:	4822      	ldr	r0, [pc, #136]	@ (9001832c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
900182a2:	4461      	add	r1, ip
900182a4:	1c4a      	adds	r2, r1, #1
900182a6:	008f      	lsls	r7, r1, #2
900182a8:	f022 0201 	bic.w	r2, r2, #1
900182ac:	19de      	adds	r6, r3, r7
900182ae:	0412      	lsls	r2, r2, #16
900182b0:	6006      	str	r6, [r0, #0]
900182b2:	4e1f      	ldr	r6, [pc, #124]	@ (90018330 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
900182b4:	0c12      	lsrs	r2, r2, #16
900182b6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
900182ba:	19da      	adds	r2, r3, r7
900182bc:	6032      	str	r2, [r6, #0]
900182be:	220e      	movs	r2, #14
900182c0:	fb02 f20c 	mul.w	r2, r2, ip
900182c4:	3203      	adds	r2, #3
900182c6:	f022 0203 	bic.w	r2, r2, #3
900182ca:	443a      	add	r2, r7
900182cc:	4f19      	ldr	r7, [pc, #100]	@ (90018334 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
900182ce:	4413      	add	r3, r2
900182d0:	603b      	str	r3, [r7, #0]
900182d2:	2300      	movs	r3, #0
900182d4:	4f18      	ldr	r7, [pc, #96]	@ (90018338 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
900182d6:	469c      	mov	ip, r3
900182d8:	803b      	strh	r3, [r7, #0]
900182da:	4f18      	ldr	r7, [pc, #96]	@ (9001833c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
900182dc:	683f      	ldr	r7, [r7, #0]
900182de:	1aba      	subs	r2, r7, r2
900182e0:	4f17      	ldr	r7, [pc, #92]	@ (90018340 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
900182e2:	603a      	str	r2, [r7, #0]
900182e4:	f64f 77ff 	movw	r7, #65535	@ 0xffff
900182e8:	4a16      	ldr	r2, [pc, #88]	@ (90018344 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
900182ea:	8013      	strh	r3, [r2, #0]
900182ec:	428b      	cmp	r3, r1
900182ee:	d10d      	bne.n	9001830c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
900182f0:	882d      	ldrh	r5, [r5, #0]
900182f2:	2300      	movs	r3, #0
900182f4:	6830      	ldr	r0, [r6, #0]
900182f6:	240e      	movs	r4, #14
900182f8:	429d      	cmp	r5, r3
900182fa:	d90f      	bls.n	9001831c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
900182fc:	fb04 0203 	mla	r2, r4, r3, r0
90018300:	3301      	adds	r3, #1
90018302:	7b11      	ldrb	r1, [r2, #12]
90018304:	f36f 1145 	bfc	r1, #5, #1
90018308:	7311      	strb	r1, [r2, #12]
9001830a:	e7f5      	b.n	900182f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001830c:	6822      	ldr	r2, [r4, #0]
9001830e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90018312:	6802      	ldr	r2, [r0, #0]
90018314:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90018318:	3301      	adds	r3, #1
9001831a:	e7e7      	b.n	900182ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001831c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001831e:	bf00      	nop
90018320:	24021cc8 	.word	0x24021cc8
90018324:	24021ce4 	.word	0x24021ce4
90018328:	24021ce8 	.word	0x24021ce8
9001832c:	24021cdc 	.word	0x24021cdc
90018330:	24021ccc 	.word	0x24021ccc
90018334:	24021cd4 	.word	0x24021cd4
90018338:	24021ce6 	.word	0x24021ce6
9001833c:	24021cd0 	.word	0x24021cd0
90018340:	24021ce0 	.word	0x24021ce0
90018344:	24021cd8 	.word	0x24021cd8

90018348 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90018348:	4b06      	ldr	r3, [pc, #24]	@ (90018364 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001834a:	681b      	ldr	r3, [r3, #0]
9001834c:	b943      	cbnz	r3, 90018360 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001834e:	b139      	cbz	r1, 90018360 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90018350:	4b05      	ldr	r3, [pc, #20]	@ (90018368 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90018352:	801a      	strh	r2, [r3, #0]
90018354:	4b05      	ldr	r3, [pc, #20]	@ (9001836c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90018356:	6019      	str	r1, [r3, #0]
90018358:	4b05      	ldr	r3, [pc, #20]	@ (90018370 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001835a:	6018      	str	r0, [r3, #0]
9001835c:	f7ff bf96 	b.w	9001828c <_ZN8touchgfx6Bitmap10clearCacheEv>
90018360:	4770      	bx	lr
90018362:	bf00      	nop
90018364:	24021cd4 	.word	0x24021cd4
90018368:	24021ce8 	.word	0x24021ce8
9001836c:	24021cd0 	.word	0x24021cd0
90018370:	24021cc8 	.word	0x24021cc8

90018374 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90018374:	b470      	push	{r4, r5, r6}
90018376:	4c07      	ldr	r4, [pc, #28]	@ (90018394 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90018378:	4605      	mov	r5, r0
9001837a:	4610      	mov	r0, r2
9001837c:	9a03      	ldr	r2, [sp, #12]
9001837e:	6826      	ldr	r6, [r4, #0]
90018380:	b936      	cbnz	r6, 90018390 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
90018382:	6025      	str	r5, [r4, #0]
90018384:	4c04      	ldr	r4, [pc, #16]	@ (90018398 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90018386:	8021      	strh	r1, [r4, #0]
90018388:	4619      	mov	r1, r3
9001838a:	bc70      	pop	{r4, r5, r6}
9001838c:	f7ff bfdc 	b.w	90018348 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
90018390:	bc70      	pop	{r4, r5, r6}
90018392:	4770      	bx	lr
90018394:	24021cec 	.word	0x24021cec
90018398:	24021ce4 	.word	0x24021ce4

9001839c <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001839c:	4a12      	ldr	r2, [pc, #72]	@ (900183e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001839e:	8803      	ldrh	r3, [r0, #0]
900183a0:	8812      	ldrh	r2, [r2, #0]
900183a2:	4293      	cmp	r3, r2
900183a4:	d207      	bcs.n	900183b6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
900183a6:	4a11      	ldr	r2, [pc, #68]	@ (900183ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
900183a8:	2114      	movs	r1, #20
900183aa:	6812      	ldr	r2, [r2, #0]
900183ac:	fb01 2303 	mla	r3, r1, r3, r2
900183b0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
900183b4:	4770      	bx	lr
900183b6:	490e      	ldr	r1, [pc, #56]	@ (900183f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
900183b8:	8809      	ldrh	r1, [r1, #0]
900183ba:	4411      	add	r1, r2
900183bc:	428b      	cmp	r3, r1
900183be:	da04      	bge.n	900183ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
900183c0:	1a9b      	subs	r3, r3, r2
900183c2:	4a0c      	ldr	r2, [pc, #48]	@ (900183f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
900183c4:	210e      	movs	r1, #14
900183c6:	6812      	ldr	r2, [r2, #0]
900183c8:	e7f0      	b.n	900183ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
900183ca:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900183ce:	4293      	cmp	r3, r2
900183d0:	d108      	bne.n	900183e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
900183d2:	4b09      	ldr	r3, [pc, #36]	@ (900183f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
900183d4:	781b      	ldrb	r3, [r3, #0]
900183d6:	b91b      	cbnz	r3, 900183e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
900183d8:	4b08      	ldr	r3, [pc, #32]	@ (900183fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
900183da:	f9b3 0000 	ldrsh.w	r0, [r3]
900183de:	4770      	bx	lr
900183e0:	4b07      	ldr	r3, [pc, #28]	@ (90018400 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
900183e2:	e7fa      	b.n	900183da <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
900183e4:	2000      	movs	r0, #0
900183e6:	4770      	bx	lr
900183e8:	24021ce4 	.word	0x24021ce4
900183ec:	24021cec 	.word	0x24021cec
900183f0:	24021ce8 	.word	0x24021ce8
900183f4:	24021ccc 	.word	0x24021ccc
900183f8:	24021c54 	.word	0x24021c54
900183fc:	24021c56 	.word	0x24021c56
90018400:	24021c58 	.word	0x24021c58

90018404 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90018404:	4a12      	ldr	r2, [pc, #72]	@ (90018450 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90018406:	8803      	ldrh	r3, [r0, #0]
90018408:	8812      	ldrh	r2, [r2, #0]
9001840a:	4293      	cmp	r3, r2
9001840c:	d207      	bcs.n	9001841e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001840e:	4a11      	ldr	r2, [pc, #68]	@ (90018454 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
90018410:	2114      	movs	r1, #20
90018412:	6812      	ldr	r2, [r2, #0]
90018414:	fb01 2303 	mla	r3, r1, r3, r2
90018418:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001841c:	4770      	bx	lr
9001841e:	490e      	ldr	r1, [pc, #56]	@ (90018458 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
90018420:	8809      	ldrh	r1, [r1, #0]
90018422:	4411      	add	r1, r2
90018424:	428b      	cmp	r3, r1
90018426:	da04      	bge.n	90018432 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90018428:	1a9b      	subs	r3, r3, r2
9001842a:	4a0c      	ldr	r2, [pc, #48]	@ (9001845c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001842c:	210e      	movs	r1, #14
9001842e:	6812      	ldr	r2, [r2, #0]
90018430:	e7f0      	b.n	90018414 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
90018432:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90018436:	4293      	cmp	r3, r2
90018438:	d108      	bne.n	9001844c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001843a:	4b09      	ldr	r3, [pc, #36]	@ (90018460 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001843c:	781b      	ldrb	r3, [r3, #0]
9001843e:	b91b      	cbnz	r3, 90018448 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
90018440:	4b08      	ldr	r3, [pc, #32]	@ (90018464 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
90018442:	f9b3 0000 	ldrsh.w	r0, [r3]
90018446:	4770      	bx	lr
90018448:	4b07      	ldr	r3, [pc, #28]	@ (90018468 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001844a:	e7fa      	b.n	90018442 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001844c:	2000      	movs	r0, #0
9001844e:	4770      	bx	lr
90018450:	24021ce4 	.word	0x24021ce4
90018454:	24021cec 	.word	0x24021cec
90018458:	24021ce8 	.word	0x24021ce8
9001845c:	24021ccc 	.word	0x24021ccc
90018460:	24021c54 	.word	0x24021c54
90018464:	24021c58 	.word	0x24021c58
90018468:	24021c56 	.word	0x24021c56

9001846c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001846c:	4a1f      	ldr	r2, [pc, #124]	@ (900184ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001846e:	b510      	push	{r4, lr}
90018470:	880b      	ldrh	r3, [r1, #0]
90018472:	8812      	ldrh	r2, [r2, #0]
90018474:	4293      	cmp	r3, r2
90018476:	d213      	bcs.n	900184a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90018478:	4a1d      	ldr	r2, [pc, #116]	@ (900184f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001847a:	2114      	movs	r1, #20
9001847c:	6812      	ldr	r2, [r2, #0]
9001847e:	fb01 2303 	mla	r3, r1, r3, r2
90018482:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90018486:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001848a:	8a1a      	ldrh	r2, [r3, #16]
9001848c:	8a5b      	ldrh	r3, [r3, #18]
9001848e:	f3c2 020c 	ubfx	r2, r2, #0, #13
90018492:	8004      	strh	r4, [r0, #0]
90018494:	f3c3 030c 	ubfx	r3, r3, #0, #13
90018498:	8041      	strh	r1, [r0, #2]
9001849a:	8082      	strh	r2, [r0, #4]
9001849c:	80c3      	strh	r3, [r0, #6]
9001849e:	e00e      	b.n	900184be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
900184a0:	4914      	ldr	r1, [pc, #80]	@ (900184f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
900184a2:	8809      	ldrh	r1, [r1, #0]
900184a4:	4411      	add	r1, r2
900184a6:	428b      	cmp	r3, r1
900184a8:	da0a      	bge.n	900184c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
900184aa:	1a9b      	subs	r3, r3, r2
900184ac:	4a12      	ldr	r2, [pc, #72]	@ (900184f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
900184ae:	210e      	movs	r1, #14
900184b0:	6812      	ldr	r2, [r2, #0]
900184b2:	fb01 2303 	mla	r3, r1, r3, r2
900184b6:	681a      	ldr	r2, [r3, #0]
900184b8:	6002      	str	r2, [r0, #0]
900184ba:	685a      	ldr	r2, [r3, #4]
900184bc:	6042      	str	r2, [r0, #4]
900184be:	bd10      	pop	{r4, pc}
900184c0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900184c4:	4293      	cmp	r3, r2
900184c6:	d10b      	bne.n	900184e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
900184c8:	4b0c      	ldr	r3, [pc, #48]	@ (900184fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
900184ca:	f9b3 1000 	ldrsh.w	r1, [r3]
900184ce:	4b0c      	ldr	r3, [pc, #48]	@ (90018500 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
900184d0:	8081      	strh	r1, [r0, #4]
900184d2:	f9b3 2000 	ldrsh.w	r2, [r3]
900184d6:	2300      	movs	r3, #0
900184d8:	80c2      	strh	r2, [r0, #6]
900184da:	8003      	strh	r3, [r0, #0]
900184dc:	8043      	strh	r3, [r0, #2]
900184de:	e7ee      	b.n	900184be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
900184e0:	2300      	movs	r3, #0
900184e2:	8003      	strh	r3, [r0, #0]
900184e4:	8043      	strh	r3, [r0, #2]
900184e6:	8083      	strh	r3, [r0, #4]
900184e8:	e7d8      	b.n	9001849c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
900184ea:	bf00      	nop
900184ec:	24021ce4 	.word	0x24021ce4
900184f0:	24021cec 	.word	0x24021cec
900184f4:	24021ce8 	.word	0x24021ce8
900184f8:	24021ccc 	.word	0x24021ccc
900184fc:	24021c50 	.word	0x24021c50
90018500:	24021c52 	.word	0x24021c52

90018504 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90018504:	4a17      	ldr	r2, [pc, #92]	@ (90018564 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90018506:	8803      	ldrh	r3, [r0, #0]
90018508:	8812      	ldrh	r2, [r2, #0]
9001850a:	4293      	cmp	r3, r2
9001850c:	d213      	bcs.n	90018536 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001850e:	4a16      	ldr	r2, [pc, #88]	@ (90018568 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
90018510:	2114      	movs	r1, #20
90018512:	6812      	ldr	r2, [r2, #0]
90018514:	fb01 2303 	mla	r3, r1, r3, r2
90018518:	8a1a      	ldrh	r2, [r3, #16]
9001851a:	8919      	ldrh	r1, [r3, #8]
9001851c:	f3c2 020c 	ubfx	r2, r2, #0, #13
90018520:	428a      	cmp	r2, r1
90018522:	db1d      	blt.n	90018560 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018524:	8a58      	ldrh	r0, [r3, #18]
90018526:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001852a:	895b      	ldrh	r3, [r3, #10]
9001852c:	4298      	cmp	r0, r3
9001852e:	bfac      	ite	ge
90018530:	2000      	movge	r0, #0
90018532:	2001      	movlt	r0, #1
90018534:	4770      	bx	lr
90018536:	490d      	ldr	r1, [pc, #52]	@ (9001856c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90018538:	8809      	ldrh	r1, [r1, #0]
9001853a:	4411      	add	r1, r2
9001853c:	428b      	cmp	r3, r1
9001853e:	da0d      	bge.n	9001855c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
90018540:	1a9b      	subs	r3, r3, r2
90018542:	4a0b      	ldr	r2, [pc, #44]	@ (90018570 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90018544:	210e      	movs	r1, #14
90018546:	6812      	ldr	r2, [r2, #0]
90018548:	fb01 2303 	mla	r3, r1, r3, r2
9001854c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
90018550:	891a      	ldrh	r2, [r3, #8]
90018552:	4291      	cmp	r1, r2
90018554:	db04      	blt.n	90018560 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018556:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001855a:	e7e6      	b.n	9001852a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001855c:	2000      	movs	r0, #0
9001855e:	4770      	bx	lr
90018560:	2001      	movs	r0, #1
90018562:	4770      	bx	lr
90018564:	24021ce4 	.word	0x24021ce4
90018568:	24021cec 	.word	0x24021cec
9001856c:	24021ce8 	.word	0x24021ce8
90018570:	24021ccc 	.word	0x24021ccc

90018574 <_ZNK8touchgfx6Bitmap7getDataEv>:
90018574:	4a12      	ldr	r2, [pc, #72]	@ (900185c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90018576:	8803      	ldrh	r3, [r0, #0]
90018578:	8811      	ldrh	r1, [r2, #0]
9001857a:	428b      	cmp	r3, r1
9001857c:	d20b      	bcs.n	90018596 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001857e:	4a11      	ldr	r2, [pc, #68]	@ (900185c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90018580:	6812      	ldr	r2, [r2, #0]
90018582:	b112      	cbz	r2, 9001858a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90018584:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90018588:	b9c0      	cbnz	r0, 900185bc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001858a:	4a0f      	ldr	r2, [pc, #60]	@ (900185c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001858c:	6811      	ldr	r1, [r2, #0]
9001858e:	2214      	movs	r2, #20
90018590:	4353      	muls	r3, r2
90018592:	58c8      	ldr	r0, [r1, r3]
90018594:	4770      	bx	lr
90018596:	4a0d      	ldr	r2, [pc, #52]	@ (900185cc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90018598:	8812      	ldrh	r2, [r2, #0]
9001859a:	440a      	add	r2, r1
9001859c:	4293      	cmp	r3, r2
9001859e:	da04      	bge.n	900185aa <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
900185a0:	4a08      	ldr	r2, [pc, #32]	@ (900185c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
900185a2:	6812      	ldr	r2, [r2, #0]
900185a4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
900185a8:	4770      	bx	lr
900185aa:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900185ae:	4293      	cmp	r3, r2
900185b0:	d103      	bne.n	900185ba <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
900185b2:	4b07      	ldr	r3, [pc, #28]	@ (900185d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
900185b4:	681b      	ldr	r3, [r3, #0]
900185b6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
900185b8:	4770      	bx	lr
900185ba:	2000      	movs	r0, #0
900185bc:	4770      	bx	lr
900185be:	bf00      	nop
900185c0:	24021ce4 	.word	0x24021ce4
900185c4:	24021cc8 	.word	0x24021cc8
900185c8:	24021cec 	.word	0x24021cec
900185cc:	24021ce8 	.word	0x24021ce8
900185d0:	24021c5c 	.word	0x24021c5c

900185d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
900185d4:	4b24      	ldr	r3, [pc, #144]	@ (90018668 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
900185d6:	8802      	ldrh	r2, [r0, #0]
900185d8:	8818      	ldrh	r0, [r3, #0]
900185da:	4282      	cmp	r2, r0
900185dc:	d221      	bcs.n	90018622 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
900185de:	4b23      	ldr	r3, [pc, #140]	@ (9001866c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
900185e0:	6819      	ldr	r1, [r3, #0]
900185e2:	2314      	movs	r3, #20
900185e4:	fb03 1302 	mla	r3, r3, r2, r1
900185e8:	6858      	ldr	r0, [r3, #4]
900185ea:	2800      	cmp	r0, #0
900185ec:	d03a      	beq.n	90018664 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900185ee:	4920      	ldr	r1, [pc, #128]	@ (90018670 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
900185f0:	6809      	ldr	r1, [r1, #0]
900185f2:	2900      	cmp	r1, #0
900185f4:	d036      	beq.n	90018664 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900185f6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
900185fa:	2900      	cmp	r1, #0
900185fc:	d032      	beq.n	90018664 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900185fe:	891a      	ldrh	r2, [r3, #8]
90018600:	8958      	ldrh	r0, [r3, #10]
90018602:	4350      	muls	r0, r2
90018604:	7c5a      	ldrb	r2, [r3, #17]
90018606:	7cdb      	ldrb	r3, [r3, #19]
90018608:	0952      	lsrs	r2, r2, #5
9001860a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001860e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90018612:	2b0b      	cmp	r3, #11
90018614:	bf18      	it	ne
90018616:	0040      	lslne	r0, r0, #1
90018618:	3003      	adds	r0, #3
9001861a:	f020 0003 	bic.w	r0, r0, #3
9001861e:	4408      	add	r0, r1
90018620:	4770      	bx	lr
90018622:	4b14      	ldr	r3, [pc, #80]	@ (90018674 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90018624:	881b      	ldrh	r3, [r3, #0]
90018626:	4403      	add	r3, r0
90018628:	429a      	cmp	r2, r3
9001862a:	da1a      	bge.n	90018662 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001862c:	4b12      	ldr	r3, [pc, #72]	@ (90018678 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001862e:	1a10      	subs	r0, r2, r0
90018630:	210e      	movs	r1, #14
90018632:	681b      	ldr	r3, [r3, #0]
90018634:	fb01 3000 	mla	r0, r1, r0, r3
90018638:	7b03      	ldrb	r3, [r0, #12]
9001863a:	f003 031f 	and.w	r3, r3, #31
9001863e:	2b0b      	cmp	r3, #11
90018640:	d10b      	bne.n	9001865a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
90018642:	8903      	ldrh	r3, [r0, #8]
90018644:	8940      	ldrh	r0, [r0, #10]
90018646:	4358      	muls	r0, r3
90018648:	4b09      	ldr	r3, [pc, #36]	@ (90018670 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001864a:	3003      	adds	r0, #3
9001864c:	6819      	ldr	r1, [r3, #0]
9001864e:	f020 0303 	bic.w	r3, r0, #3
90018652:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90018656:	4418      	add	r0, r3
90018658:	4770      	bx	lr
9001865a:	2b0d      	cmp	r3, #13
9001865c:	d101      	bne.n	90018662 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001865e:	300d      	adds	r0, #13
90018660:	4770      	bx	lr
90018662:	2000      	movs	r0, #0
90018664:	4770      	bx	lr
90018666:	bf00      	nop
90018668:	24021ce4 	.word	0x24021ce4
9001866c:	24021cec 	.word	0x24021cec
90018670:	24021cc8 	.word	0x24021cc8
90018674:	24021ce8 	.word	0x24021ce8
90018678:	24021ccc 	.word	0x24021ccc

9001867c <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001867c:	4a17      	ldr	r2, [pc, #92]	@ (900186dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001867e:	b510      	push	{r4, lr}
90018680:	8803      	ldrh	r3, [r0, #0]
90018682:	8812      	ldrh	r2, [r2, #0]
90018684:	4293      	cmp	r3, r2
90018686:	d20c      	bcs.n	900186a2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
90018688:	4a15      	ldr	r2, [pc, #84]	@ (900186e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001868a:	2114      	movs	r1, #20
9001868c:	6812      	ldr	r2, [r2, #0]
9001868e:	fb01 2303 	mla	r3, r1, r3, r2
90018692:	7c58      	ldrb	r0, [r3, #17]
90018694:	0942      	lsrs	r2, r0, #5
90018696:	7cd8      	ldrb	r0, [r3, #19]
90018698:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001869c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
900186a0:	bd10      	pop	{r4, pc}
900186a2:	4910      	ldr	r1, [pc, #64]	@ (900186e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
900186a4:	8809      	ldrh	r1, [r1, #0]
900186a6:	4411      	add	r1, r2
900186a8:	428b      	cmp	r3, r1
900186aa:	da09      	bge.n	900186c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
900186ac:	1a9b      	subs	r3, r3, r2
900186ae:	4a0e      	ldr	r2, [pc, #56]	@ (900186e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
900186b0:	210e      	movs	r1, #14
900186b2:	6812      	ldr	r2, [r2, #0]
900186b4:	fb01 2303 	mla	r3, r1, r3, r2
900186b8:	7b18      	ldrb	r0, [r3, #12]
900186ba:	f000 001f 	and.w	r0, r0, #31
900186be:	e7ef      	b.n	900186a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
900186c0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
900186c4:	4293      	cmp	r3, r2
900186c6:	d106      	bne.n	900186d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
900186c8:	f7f7 fed8 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
900186cc:	6803      	ldr	r3, [r0, #0]
900186ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900186d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900186d4:	4718      	bx	r3
900186d6:	2000      	movs	r0, #0
900186d8:	e7e2      	b.n	900186a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
900186da:	bf00      	nop
900186dc:	24021ce4 	.word	0x24021ce4
900186e0:	24021cec 	.word	0x24021cec
900186e4:	24021ce8 	.word	0x24021ce8
900186e8:	24021ccc 	.word	0x24021ccc

900186ec <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
900186ec:	2010      	movs	r0, #16
900186ee:	4770      	bx	lr

900186f0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
900186f0:	4b02      	ldr	r3, [pc, #8]	@ (900186fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
900186f2:	8818      	ldrh	r0, [r3, #0]
900186f4:	0040      	lsls	r0, r0, #1
900186f6:	b280      	uxth	r0, r0
900186f8:	4770      	bx	lr
900186fa:	bf00      	nop
900186fc:	24021c56 	.word	0x24021c56

90018700 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
90018700:	2bff      	cmp	r3, #255	@ 0xff
90018702:	d050      	beq.n	900187a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90018704:	2a0b      	cmp	r2, #11
90018706:	d04a      	beq.n	9001879e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90018708:	d80e      	bhi.n	90018728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001870a:	2a03      	cmp	r2, #3
9001870c:	d03f      	beq.n	9001878e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001870e:	d804      	bhi.n	9001871a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
90018710:	2a01      	cmp	r2, #1
90018712:	d03e      	beq.n	90018792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
90018714:	d93f      	bls.n	90018796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
90018716:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90018718:	4770      	bx	lr
9001871a:	2a09      	cmp	r2, #9
9001871c:	d03f      	beq.n	9001879e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001871e:	d83c      	bhi.n	9001879a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90018720:	2a08      	cmp	r2, #8
90018722:	d03a      	beq.n	9001879a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90018724:	2000      	movs	r0, #0
90018726:	4770      	bx	lr
90018728:	2a2f      	cmp	r2, #47	@ 0x2f
9001872a:	d024      	beq.n	90018776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001872c:	d80d      	bhi.n	9001874a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001872e:	2a2d      	cmp	r2, #45	@ 0x2d
90018730:	d014      	beq.n	9001875c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
90018732:	d826      	bhi.n	90018782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
90018734:	2a2c      	cmp	r2, #44	@ 0x2c
90018736:	d1f5      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018738:	684b      	ldr	r3, [r1, #4]
9001873a:	781b      	ldrb	r3, [r3, #0]
9001873c:	2b01      	cmp	r3, #1
9001873e:	d018      	beq.n	90018772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
90018740:	d323      	bcc.n	9001878a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
90018742:	2b02      	cmp	r3, #2
90018744:	d1ee      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018746:	68c0      	ldr	r0, [r0, #12]
90018748:	4770      	bx	lr
9001874a:	2a31      	cmp	r2, #49	@ 0x31
9001874c:	d004      	beq.n	90018758 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001874e:	d328      	bcc.n	900187a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90018750:	2a32      	cmp	r2, #50	@ 0x32
90018752:	d026      	beq.n	900187a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90018754:	2a33      	cmp	r2, #51	@ 0x33
90018756:	d1e5      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018758:	6f40      	ldr	r0, [r0, #116]	@ 0x74
9001875a:	4770      	bx	lr
9001875c:	684b      	ldr	r3, [r1, #4]
9001875e:	781b      	ldrb	r3, [r3, #0]
90018760:	2b01      	cmp	r3, #1
90018762:	d004      	beq.n	9001876e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
90018764:	d30b      	bcc.n	9001877e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018766:	2b02      	cmp	r3, #2
90018768:	d1dc      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001876a:	6940      	ldr	r0, [r0, #20]
9001876c:	4770      	bx	lr
9001876e:	6a40      	ldr	r0, [r0, #36]	@ 0x24
90018770:	4770      	bx	lr
90018772:	69c0      	ldr	r0, [r0, #28]
90018774:	4770      	bx	lr
90018776:	684b      	ldr	r3, [r1, #4]
90018778:	781b      	ldrb	r3, [r3, #0]
9001877a:	2b00      	cmp	r3, #0
9001877c:	d1d2      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001877e:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90018780:	4770      	bx	lr
90018782:	684b      	ldr	r3, [r1, #4]
90018784:	781b      	ldrb	r3, [r3, #0]
90018786:	2b00      	cmp	r3, #0
90018788:	d1cc      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001878a:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
9001878c:	4770      	bx	lr
9001878e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
90018790:	4770      	bx	lr
90018792:	6d40      	ldr	r0, [r0, #84]	@ 0x54
90018794:	4770      	bx	lr
90018796:	6c40      	ldr	r0, [r0, #68]	@ 0x44
90018798:	4770      	bx	lr
9001879a:	6dc0      	ldr	r0, [r0, #92]	@ 0x5c
9001879c:	4770      	bx	lr
9001879e:	6e40      	ldr	r0, [r0, #100]	@ 0x64
900187a0:	4770      	bx	lr
900187a2:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
900187a4:	4770      	bx	lr
900187a6:	2a0b      	cmp	r2, #11
900187a8:	d049      	beq.n	9001883e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
900187aa:	d80e      	bhi.n	900187ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
900187ac:	2a03      	cmp	r2, #3
900187ae:	d040      	beq.n	90018832 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
900187b0:	d804      	bhi.n	900187bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
900187b2:	2a01      	cmp	r2, #1
900187b4:	d03f      	beq.n	90018836 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
900187b6:	d940      	bls.n	9001883a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
900187b8:	6c00      	ldr	r0, [r0, #64]	@ 0x40
900187ba:	4770      	bx	lr
900187bc:	2a09      	cmp	r2, #9
900187be:	d03e      	beq.n	9001883e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
900187c0:	d801      	bhi.n	900187c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
900187c2:	2a08      	cmp	r2, #8
900187c4:	d1ae      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187c6:	6e00      	ldr	r0, [r0, #96]	@ 0x60
900187c8:	4770      	bx	lr
900187ca:	2a2f      	cmp	r2, #47	@ 0x2f
900187cc:	d024      	beq.n	90018818 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
900187ce:	d80d      	bhi.n	900187ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
900187d0:	2a2d      	cmp	r2, #45	@ 0x2d
900187d2:	d014      	beq.n	900187fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
900187d4:	d826      	bhi.n	90018824 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
900187d6:	2a2c      	cmp	r2, #44	@ 0x2c
900187d8:	d1a4      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187da:	684b      	ldr	r3, [r1, #4]
900187dc:	781b      	ldrb	r3, [r3, #0]
900187de:	2b01      	cmp	r3, #1
900187e0:	d018      	beq.n	90018814 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
900187e2:	d324      	bcc.n	9001882e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
900187e4:	2b02      	cmp	r3, #2
900187e6:	d19d      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187e8:	6900      	ldr	r0, [r0, #16]
900187ea:	4770      	bx	lr
900187ec:	2a31      	cmp	r2, #49	@ 0x31
900187ee:	d004      	beq.n	900187fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
900187f0:	d327      	bcc.n	90018842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
900187f2:	2a32      	cmp	r2, #50	@ 0x32
900187f4:	d025      	beq.n	90018842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
900187f6:	2a33      	cmp	r2, #51	@ 0x33
900187f8:	d194      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900187fa:	6f80      	ldr	r0, [r0, #120]	@ 0x78
900187fc:	4770      	bx	lr
900187fe:	684b      	ldr	r3, [r1, #4]
90018800:	781b      	ldrb	r3, [r3, #0]
90018802:	2b01      	cmp	r3, #1
90018804:	d004      	beq.n	90018810 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90018806:	d30b      	bcc.n	90018820 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
90018808:	2b02      	cmp	r3, #2
9001880a:	d18b      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001880c:	6980      	ldr	r0, [r0, #24]
9001880e:	4770      	bx	lr
90018810:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90018812:	4770      	bx	lr
90018814:	6a00      	ldr	r0, [r0, #32]
90018816:	4770      	bx	lr
90018818:	684b      	ldr	r3, [r1, #4]
9001881a:	781b      	ldrb	r3, [r3, #0]
9001881c:	2b00      	cmp	r3, #0
9001881e:	d181      	bne.n	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018820:	6b80      	ldr	r0, [r0, #56]	@ 0x38
90018822:	4770      	bx	lr
90018824:	684b      	ldr	r3, [r1, #4]
90018826:	781b      	ldrb	r3, [r3, #0]
90018828:	2b00      	cmp	r3, #0
9001882a:	f47f af7b 	bne.w	90018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001882e:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90018830:	4770      	bx	lr
90018832:	6d00      	ldr	r0, [r0, #80]	@ 0x50
90018834:	4770      	bx	lr
90018836:	6d80      	ldr	r0, [r0, #88]	@ 0x58
90018838:	4770      	bx	lr
9001883a:	6c80      	ldr	r0, [r0, #72]	@ 0x48
9001883c:	4770      	bx	lr
9001883e:	6e80      	ldr	r0, [r0, #104]	@ 0x68
90018840:	4770      	bx	lr
90018842:	6f00      	ldr	r0, [r0, #112]	@ 0x70
90018844:	4770      	bx	lr

90018846 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018846:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001884a:	b087      	sub	sp, #28
9001884c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001884e:	9205      	str	r2, [sp, #20]
90018850:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90018854:	9101      	str	r1, [sp, #4]
90018856:	9202      	str	r2, [sp, #8]
90018858:	6841      	ldr	r1, [r0, #4]
9001885a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001885e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
90018862:	fb01 2404 	mla	r4, r1, r4, r2
90018866:	6802      	ldr	r2, [r0, #0]
90018868:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001886c:	f8de 2000 	ldr.w	r2, [lr]
90018870:	9203      	str	r2, [sp, #12]
90018872:	f8de 2004 	ldr.w	r2, [lr, #4]
90018876:	3204      	adds	r2, #4
90018878:	9204      	str	r2, [sp, #16]
9001887a:	9a02      	ldr	r2, [sp, #8]
9001887c:	43d6      	mvns	r6, r2
9001887e:	b2f6      	uxtb	r6, r6
90018880:	9a01      	ldr	r2, [sp, #4]
90018882:	2a00      	cmp	r2, #0
90018884:	dc03      	bgt.n	9001888e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90018886:	9a05      	ldr	r2, [sp, #20]
90018888:	2a00      	cmp	r2, #0
9001888a:	f340 8129 	ble.w	90018ae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001888e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90018890:	f9be c008 	ldrsh.w	ip, [lr, #8]
90018894:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90018898:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001889a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001889e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
900188a2:	2b00      	cmp	r3, #0
900188a4:	dd0e      	ble.n	900188c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900188a6:	1408      	asrs	r0, r1, #16
900188a8:	d405      	bmi.n	900188b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900188aa:	4560      	cmp	r0, ip
900188ac:	da03      	bge.n	900188b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900188ae:	1410      	asrs	r0, r2, #16
900188b0:	d401      	bmi.n	900188b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900188b2:	42b8      	cmp	r0, r7
900188b4:	db07      	blt.n	900188c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900188b6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900188b8:	3b01      	subs	r3, #1
900188ba:	3402      	adds	r4, #2
900188bc:	4401      	add	r1, r0
900188be:	9814      	ldr	r0, [sp, #80]	@ 0x50
900188c0:	4402      	add	r2, r0
900188c2:	e7ee      	b.n	900188a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
900188c4:	d071      	beq.n	900189aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900188c6:	1e58      	subs	r0, r3, #1
900188c8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900188ca:	fb05 1500 	mla	r5, r5, r0, r1
900188ce:	142d      	asrs	r5, r5, #16
900188d0:	d45f      	bmi.n	90018992 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
900188d2:	4565      	cmp	r5, ip
900188d4:	da5d      	bge.n	90018992 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
900188d6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900188d8:	fb05 2000 	mla	r0, r5, r0, r2
900188dc:	1400      	asrs	r0, r0, #16
900188de:	d458      	bmi.n	90018992 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
900188e0:	42b8      	cmp	r0, r7
900188e2:	da56      	bge.n	90018992 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
900188e4:	4699      	mov	r9, r3
900188e6:	46a2      	mov	sl, r4
900188e8:	f8bd b008 	ldrh.w	fp, [sp, #8]
900188ec:	f1b9 0f00 	cmp.w	r9, #0
900188f0:	dd57      	ble.n	900189a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
900188f2:	ea4f 4c22 	mov.w	ip, r2, asr #16
900188f6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900188fa:	9803      	ldr	r0, [sp, #12]
900188fc:	140d      	asrs	r5, r1, #16
900188fe:	f109 39ff 	add.w	r9, r9, #4294967295
90018902:	fb07 000c 	mla	r0, r7, ip, r0
90018906:	5d40      	ldrb	r0, [r0, r5]
90018908:	9d04      	ldr	r5, [sp, #16]
9001890a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001890e:	f8ba 5000 	ldrh.w	r5, [sl]
90018912:	ea4f 2c20 	mov.w	ip, r0, asr #8
90018916:	122f      	asrs	r7, r5, #8
90018918:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001891c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90018920:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90018924:	00ed      	lsls	r5, r5, #3
90018926:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001892a:	fb17 f706 	smulbb	r7, r7, r6
9001892e:	b2ed      	uxtb	r5, r5
90018930:	fb18 f806 	smulbb	r8, r8, r6
90018934:	fb0c 7c0b 	mla	ip, ip, fp, r7
90018938:	10c7      	asrs	r7, r0, #3
9001893a:	fb15 f506 	smulbb	r5, r5, r6
9001893e:	00c0      	lsls	r0, r0, #3
90018940:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90018944:	fa1f fc8c 	uxth.w	ip, ip
90018948:	b2c0      	uxtb	r0, r0
9001894a:	fb07 870b 	mla	r7, r7, fp, r8
9001894e:	fb00 500b 	mla	r0, r0, fp, r5
90018952:	f10c 0501 	add.w	r5, ip, #1
90018956:	b2bf      	uxth	r7, r7
90018958:	b280      	uxth	r0, r0
9001895a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001895e:	f107 0801 	add.w	r8, r7, #1
90018962:	1c45      	adds	r5, r0, #1
90018964:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90018968:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001896c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90018970:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90018972:	ea4f 1858 	mov.w	r8, r8, lsr #5
90018976:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001897a:	4401      	add	r1, r0
9001897c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90018980:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018982:	ea45 0c0c 	orr.w	ip, r5, ip
90018986:	4402      	add	r2, r0
90018988:	ea4c 0c08 	orr.w	ip, ip, r8
9001898c:	f82a cb02 	strh.w	ip, [sl], #2
90018990:	e7ac      	b.n	900188ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90018992:	f04f 0800 	mov.w	r8, #0
90018996:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001899a:	eb03 0008 	add.w	r0, r3, r8
9001899e:	2800      	cmp	r0, #0
900189a0:	dc41      	bgt.n	90018a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900189a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900189a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900189aa:	9b01      	ldr	r3, [sp, #4]
900189ac:	2b00      	cmp	r3, #0
900189ae:	f340 8097 	ble.w	90018ae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900189b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900189b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900189b8:	ee30 0a04 	vadd.f32	s0, s0, s8
900189bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
900189c0:	eef0 6a62 	vmov.f32	s13, s5
900189c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
900189c8:	ee31 1a05 	vadd.f32	s2, s2, s10
900189cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900189d0:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
900189d4:	eef0 6a43 	vmov.f32	s13, s6
900189d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900189dc:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
900189e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
900189e4:	ee61 7a27 	vmul.f32	s15, s2, s15
900189e8:	ee77 2a62 	vsub.f32	s5, s14, s5
900189ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
900189f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900189f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900189f8:	ee12 2a90 	vmov	r2, s5
900189fc:	eef0 2a47 	vmov.f32	s5, s14
90018a00:	fb92 f3f3 	sdiv	r3, r2, r3
90018a04:	ee13 2a10 	vmov	r2, s6
90018a08:	9313      	str	r3, [sp, #76]	@ 0x4c
90018a0a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018a0c:	eeb0 3a67 	vmov.f32	s6, s15
90018a10:	fb92 f3f3 	sdiv	r3, r2, r3
90018a14:	9314      	str	r3, [sp, #80]	@ 0x50
90018a16:	9b01      	ldr	r3, [sp, #4]
90018a18:	9a05      	ldr	r2, [sp, #20]
90018a1a:	3b01      	subs	r3, #1
90018a1c:	9301      	str	r3, [sp, #4]
90018a1e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018a20:	bf08      	it	eq
90018a22:	4613      	moveq	r3, r2
90018a24:	e72c      	b.n	90018880 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90018a26:	140f      	asrs	r7, r1, #16
90018a28:	d453      	bmi.n	90018ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018a2a:	f8de 5008 	ldr.w	r5, [lr, #8]
90018a2e:	42bd      	cmp	r5, r7
90018a30:	dd4f      	ble.n	90018ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018a32:	ea5f 4c22 	movs.w	ip, r2, asr #16
90018a36:	d44c      	bmi.n	90018ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018a38:	f8de 000c 	ldr.w	r0, [lr, #12]
90018a3c:	4560      	cmp	r0, ip
90018a3e:	dd48      	ble.n	90018ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018a40:	9803      	ldr	r0, [sp, #12]
90018a42:	b22d      	sxth	r5, r5
90018a44:	fb0c 0505 	mla	r5, ip, r5, r0
90018a48:	5de8      	ldrb	r0, [r5, r7]
90018a4a:	9d04      	ldr	r5, [sp, #16]
90018a4c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90018a50:	f06f 0501 	mvn.w	r5, #1
90018a54:	fb05 fb08 	mul.w	fp, r5, r8
90018a58:	ea4f 2c20 	mov.w	ip, r0, asr #8
90018a5c:	f834 500b 	ldrh.w	r5, [r4, fp]
90018a60:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90018a64:	122f      	asrs	r7, r5, #8
90018a66:	ea4f 09e5 	mov.w	r9, r5, asr #3
90018a6a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90018a6e:	00ed      	lsls	r5, r5, #3
90018a70:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
90018a74:	fb17 f706 	smulbb	r7, r7, r6
90018a78:	b2ed      	uxtb	r5, r5
90018a7a:	fb19 f906 	smulbb	r9, r9, r6
90018a7e:	fb0c 7c0a 	mla	ip, ip, sl, r7
90018a82:	10c7      	asrs	r7, r0, #3
90018a84:	fb15 f506 	smulbb	r5, r5, r6
90018a88:	00c0      	lsls	r0, r0, #3
90018a8a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90018a8e:	fa1f fc8c 	uxth.w	ip, ip
90018a92:	b2c0      	uxtb	r0, r0
90018a94:	fb07 970a 	mla	r7, r7, sl, r9
90018a98:	fb00 500a 	mla	r0, r0, sl, r5
90018a9c:	f10c 0501 	add.w	r5, ip, #1
90018aa0:	b2bf      	uxth	r7, r7
90018aa2:	b280      	uxth	r0, r0
90018aa4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90018aa8:	f107 0901 	add.w	r9, r7, #1
90018aac:	1c45      	adds	r5, r0, #1
90018aae:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90018ab2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90018ab6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90018aba:	ea4f 1959 	mov.w	r9, r9, lsr #5
90018abe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90018ac2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90018ac6:	ea45 0c0c 	orr.w	ip, r5, ip
90018aca:	ea4c 0c09 	orr.w	ip, ip, r9
90018ace:	f824 c00b 	strh.w	ip, [r4, fp]
90018ad2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90018ad4:	f108 38ff 	add.w	r8, r8, #4294967295
90018ad8:	4401      	add	r1, r0
90018ada:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018adc:	4402      	add	r2, r0
90018ade:	e75c      	b.n	9001899a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90018ae0:	b007      	add	sp, #28
90018ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018ae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018ae6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018aea:	b085      	sub	sp, #20
90018aec:	4693      	mov	fp, r2
90018aee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90018af2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90018af4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90018af6:	6870      	ldr	r0, [r6, #4]
90018af8:	9100      	str	r1, [sp, #0]
90018afa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90018afe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
90018b02:	fb00 2404 	mla	r4, r0, r4, r2
90018b06:	6832      	ldr	r2, [r6, #0]
90018b08:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018b0c:	682a      	ldr	r2, [r5, #0]
90018b0e:	9201      	str	r2, [sp, #4]
90018b10:	686a      	ldr	r2, [r5, #4]
90018b12:	3204      	adds	r2, #4
90018b14:	9202      	str	r2, [sp, #8]
90018b16:	9a00      	ldr	r2, [sp, #0]
90018b18:	2a00      	cmp	r2, #0
90018b1a:	dc03      	bgt.n	90018b24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90018b1c:	f1bb 0f00 	cmp.w	fp, #0
90018b20:	f340 80a0 	ble.w	90018c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90018b24:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90018b26:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018b2a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90018b2e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018b30:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018b34:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90018b38:	2b00      	cmp	r3, #0
90018b3a:	dd0c      	ble.n	90018b56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018b3c:	1406      	asrs	r6, r0, #16
90018b3e:	d405      	bmi.n	90018b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018b40:	454e      	cmp	r6, r9
90018b42:	da03      	bge.n	90018b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018b44:	1416      	asrs	r6, r2, #16
90018b46:	d401      	bmi.n	90018b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018b48:	4546      	cmp	r6, r8
90018b4a:	db05      	blt.n	90018b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018b4c:	4470      	add	r0, lr
90018b4e:	4462      	add	r2, ip
90018b50:	3b01      	subs	r3, #1
90018b52:	3402      	adds	r4, #2
90018b54:	e7f0      	b.n	90018b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90018b56:	d00f      	beq.n	90018b78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018b58:	1e5e      	subs	r6, r3, #1
90018b5a:	fb0e 0706 	mla	r7, lr, r6, r0
90018b5e:	143f      	asrs	r7, r7, #16
90018b60:	d541      	bpl.n	90018be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
90018b62:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90018b66:	4698      	mov	r8, r3
90018b68:	9603      	str	r6, [sp, #12]
90018b6a:	f1b8 0f00 	cmp.w	r8, #0
90018b6e:	dc59      	bgt.n	90018c24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90018b70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018b74:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018b78:	9b00      	ldr	r3, [sp, #0]
90018b7a:	2b00      	cmp	r3, #0
90018b7c:	dd72      	ble.n	90018c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90018b7e:	ee30 0a04 	vadd.f32	s0, s0, s8
90018b82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018b84:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018b88:	eeb0 6a62 	vmov.f32	s12, s5
90018b8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018b90:	ee31 1a05 	vadd.f32	s2, s2, s10
90018b94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018b98:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90018b9c:	eeb0 6a43 	vmov.f32	s12, s6
90018ba0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018ba4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90018ba8:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018bac:	ee61 7a27 	vmul.f32	s15, s2, s15
90018bb0:	ee77 2a62 	vsub.f32	s5, s14, s5
90018bb4:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018bb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018bbc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018bc0:	ee12 2a90 	vmov	r2, s5
90018bc4:	eef0 2a47 	vmov.f32	s5, s14
90018bc8:	fb92 fef3 	sdiv	lr, r2, r3
90018bcc:	ee13 2a10 	vmov	r2, s6
90018bd0:	eeb0 3a67 	vmov.f32	s6, s15
90018bd4:	fb92 fcf3 	sdiv	ip, r2, r3
90018bd8:	9b00      	ldr	r3, [sp, #0]
90018bda:	3b01      	subs	r3, #1
90018bdc:	9300      	str	r3, [sp, #0]
90018bde:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018be0:	bf08      	it	eq
90018be2:	465b      	moveq	r3, fp
90018be4:	e797      	b.n	90018b16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90018be6:	454f      	cmp	r7, r9
90018be8:	dabb      	bge.n	90018b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018bea:	fb0c 2606 	mla	r6, ip, r6, r2
90018bee:	1436      	asrs	r6, r6, #16
90018bf0:	d4b7      	bmi.n	90018b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018bf2:	4546      	cmp	r6, r8
90018bf4:	dab5      	bge.n	90018b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018bf6:	461e      	mov	r6, r3
90018bf8:	46a0      	mov	r8, r4
90018bfa:	2e00      	cmp	r6, #0
90018bfc:	ddb8      	ble.n	90018b70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90018bfe:	1417      	asrs	r7, r2, #16
90018c00:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90018c04:	9901      	ldr	r1, [sp, #4]
90018c06:	ea4f 4920 	mov.w	r9, r0, asr #16
90018c0a:	4462      	add	r2, ip
90018c0c:	4470      	add	r0, lr
90018c0e:	fb0a 1707 	mla	r7, sl, r7, r1
90018c12:	9902      	ldr	r1, [sp, #8]
90018c14:	3e01      	subs	r6, #1
90018c16:	f817 7009 	ldrb.w	r7, [r7, r9]
90018c1a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90018c1e:	f828 7b02 	strh.w	r7, [r8], #2
90018c22:	e7ea      	b.n	90018bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
90018c24:	ea5f 4920 	movs.w	r9, r0, asr #16
90018c28:	d417      	bmi.n	90018c5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018c2a:	68ae      	ldr	r6, [r5, #8]
90018c2c:	454e      	cmp	r6, r9
90018c2e:	dd14      	ble.n	90018c5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018c30:	ea5f 4a22 	movs.w	sl, r2, asr #16
90018c34:	d411      	bmi.n	90018c5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018c36:	68ef      	ldr	r7, [r5, #12]
90018c38:	4557      	cmp	r7, sl
90018c3a:	dd0e      	ble.n	90018c5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018c3c:	9f01      	ldr	r7, [sp, #4]
90018c3e:	b236      	sxth	r6, r6
90018c40:	f06f 0101 	mvn.w	r1, #1
90018c44:	fb0a 7606 	mla	r6, sl, r6, r7
90018c48:	9f02      	ldr	r7, [sp, #8]
90018c4a:	f816 6009 	ldrb.w	r6, [r6, r9]
90018c4e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90018c52:	fb01 f608 	mul.w	r6, r1, r8
90018c56:	9903      	ldr	r1, [sp, #12]
90018c58:	538f      	strh	r7, [r1, r6]
90018c5a:	4470      	add	r0, lr
90018c5c:	4462      	add	r2, ip
90018c5e:	f108 38ff 	add.w	r8, r8, #4294967295
90018c62:	e782      	b.n	90018b6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018c64:	b005      	add	sp, #20
90018c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018c6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018c6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018c6e:	b087      	sub	sp, #28
90018c70:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90018c72:	9205      	str	r2, [sp, #20]
90018c74:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90018c78:	9102      	str	r1, [sp, #8]
90018c7a:	9203      	str	r2, [sp, #12]
90018c7c:	6861      	ldr	r1, [r4, #4]
90018c7e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
90018c82:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
90018c86:	fb01 2000 	mla	r0, r1, r0, r2
90018c8a:	6822      	ldr	r2, [r4, #0]
90018c8c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
90018c90:	9200      	str	r2, [sp, #0]
90018c92:	f8dc 2000 	ldr.w	r2, [ip]
90018c96:	9204      	str	r2, [sp, #16]
90018c98:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018c9c:	3204      	adds	r2, #4
90018c9e:	9201      	str	r2, [sp, #4]
90018ca0:	9a03      	ldr	r2, [sp, #12]
90018ca2:	43d5      	mvns	r5, r2
90018ca4:	b2ed      	uxtb	r5, r5
90018ca6:	9a02      	ldr	r2, [sp, #8]
90018ca8:	2a00      	cmp	r2, #0
90018caa:	dc03      	bgt.n	90018cb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90018cac:	9a05      	ldr	r2, [sp, #20]
90018cae:	2a00      	cmp	r2, #0
90018cb0:	f340 812c 	ble.w	90018f0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018cb4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90018cb6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
90018cba:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90018cbe:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90018cc0:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90018cc4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90018cc8:	2b00      	cmp	r3, #0
90018cca:	dd10      	ble.n	90018cee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018ccc:	140c      	asrs	r4, r1, #16
90018cce:	d405      	bmi.n	90018cdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018cd0:	4574      	cmp	r4, lr
90018cd2:	da03      	bge.n	90018cdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018cd4:	1414      	asrs	r4, r2, #16
90018cd6:	d401      	bmi.n	90018cdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018cd8:	42bc      	cmp	r4, r7
90018cda:	db09      	blt.n	90018cf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90018cdc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90018cde:	3b01      	subs	r3, #1
90018ce0:	9800      	ldr	r0, [sp, #0]
90018ce2:	4421      	add	r1, r4
90018ce4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90018ce6:	3002      	adds	r0, #2
90018ce8:	4422      	add	r2, r4
90018cea:	9000      	str	r0, [sp, #0]
90018cec:	e7ec      	b.n	90018cc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
90018cee:	d071      	beq.n	90018dd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
90018cf0:	1e5c      	subs	r4, r3, #1
90018cf2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90018cf4:	fb06 1604 	mla	r6, r6, r4, r1
90018cf8:	1436      	asrs	r6, r6, #16
90018cfa:	d45d      	bmi.n	90018db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018cfc:	4576      	cmp	r6, lr
90018cfe:	da5b      	bge.n	90018db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018d00:	9e14      	ldr	r6, [sp, #80]	@ 0x50
90018d02:	fb06 2404 	mla	r4, r6, r4, r2
90018d06:	1424      	asrs	r4, r4, #16
90018d08:	d456      	bmi.n	90018db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018d0a:	42bc      	cmp	r4, r7
90018d0c:	da54      	bge.n	90018db8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018d0e:	4698      	mov	r8, r3
90018d10:	f8dd 9000 	ldr.w	r9, [sp]
90018d14:	f8bd a00c 	ldrh.w	sl, [sp, #12]
90018d18:	f1b8 0f00 	cmp.w	r8, #0
90018d1c:	dd54      	ble.n	90018dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90018d1e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90018d22:	1414      	asrs	r4, r2, #16
90018d24:	9804      	ldr	r0, [sp, #16]
90018d26:	140e      	asrs	r6, r1, #16
90018d28:	f108 38ff 	add.w	r8, r8, #4294967295
90018d2c:	fb07 0404 	mla	r4, r7, r4, r0
90018d30:	9801      	ldr	r0, [sp, #4]
90018d32:	f814 e006 	ldrb.w	lr, [r4, r6]
90018d36:	f8b9 4000 	ldrh.w	r4, [r9]
90018d3a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018d3e:	1227      	asrs	r7, r4, #8
90018d40:	eb00 0b0e 	add.w	fp, r0, lr
90018d44:	f810 e00e 	ldrb.w	lr, [r0, lr]
90018d48:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90018d4c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90018d4e:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018d52:	f89b b001 	ldrb.w	fp, [fp, #1]
90018d56:	4401      	add	r1, r0
90018d58:	fb16 f60a 	smulbb	r6, r6, sl
90018d5c:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018d5e:	fb1b fb0a 	smulbb	fp, fp, sl
90018d62:	fb07 6705 	mla	r7, r7, r5, r6
90018d66:	10e6      	asrs	r6, r4, #3
90018d68:	00e4      	lsls	r4, r4, #3
90018d6a:	4402      	add	r2, r0
90018d6c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90018d70:	b2bf      	uxth	r7, r7
90018d72:	b2e4      	uxtb	r4, r4
90018d74:	fb06 b605 	mla	r6, r6, r5, fp
90018d78:	fb14 f405 	smulbb	r4, r4, r5
90018d7c:	b2b6      	uxth	r6, r6
90018d7e:	fb0e 4e0a 	mla	lr, lr, sl, r4
90018d82:	1c7c      	adds	r4, r7, #1
90018d84:	f106 0b01 	add.w	fp, r6, #1
90018d88:	fa1f fe8e 	uxth.w	lr, lr
90018d8c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018d90:	f10e 0401 	add.w	r4, lr, #1
90018d94:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018d98:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90018d9c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
90018da0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018da4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018da8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90018dac:	4327      	orrs	r7, r4
90018dae:	ea47 070b 	orr.w	r7, r7, fp
90018db2:	f829 7b02 	strh.w	r7, [r9], #2
90018db6:	e7af      	b.n	90018d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
90018db8:	f04f 0e00 	mov.w	lr, #0
90018dbc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
90018dc0:	eb03 040e 	add.w	r4, r3, lr
90018dc4:	2c00      	cmp	r4, #0
90018dc6:	dc43      	bgt.n	90018e50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90018dc8:	9a00      	ldr	r2, [sp, #0]
90018dca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018dce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018dd2:	9300      	str	r3, [sp, #0]
90018dd4:	9b02      	ldr	r3, [sp, #8]
90018dd6:	2b00      	cmp	r3, #0
90018dd8:	f340 8098 	ble.w	90018f0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018ddc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90018de0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018de2:	ee30 0a04 	vadd.f32	s0, s0, s8
90018de6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018dea:	eef0 6a62 	vmov.f32	s13, s5
90018dee:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018df2:	ee31 1a05 	vadd.f32	s2, s2, s10
90018df6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018dfa:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
90018dfe:	eef0 6a43 	vmov.f32	s13, s6
90018e02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018e06:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
90018e0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018e0e:	ee61 7a27 	vmul.f32	s15, s2, s15
90018e12:	ee77 2a62 	vsub.f32	s5, s14, s5
90018e16:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018e1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018e1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018e22:	ee12 2a90 	vmov	r2, s5
90018e26:	eef0 2a47 	vmov.f32	s5, s14
90018e2a:	fb92 f3f3 	sdiv	r3, r2, r3
90018e2e:	ee13 2a10 	vmov	r2, s6
90018e32:	9313      	str	r3, [sp, #76]	@ 0x4c
90018e34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018e36:	eeb0 3a67 	vmov.f32	s6, s15
90018e3a:	fb92 f3f3 	sdiv	r3, r2, r3
90018e3e:	9314      	str	r3, [sp, #80]	@ 0x50
90018e40:	9b02      	ldr	r3, [sp, #8]
90018e42:	9a05      	ldr	r2, [sp, #20]
90018e44:	3b01      	subs	r3, #1
90018e46:	9302      	str	r3, [sp, #8]
90018e48:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90018e4a:	bf08      	it	eq
90018e4c:	4613      	moveq	r3, r2
90018e4e:	e72a      	b.n	90018ca6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018e50:	140f      	asrs	r7, r1, #16
90018e52:	d454      	bmi.n	90018efe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018e54:	f8dc 6008 	ldr.w	r6, [ip, #8]
90018e58:	42be      	cmp	r6, r7
90018e5a:	dd50      	ble.n	90018efe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018e5c:	ea5f 4822 	movs.w	r8, r2, asr #16
90018e60:	d44d      	bmi.n	90018efe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018e62:	f8dc 400c 	ldr.w	r4, [ip, #12]
90018e66:	4544      	cmp	r4, r8
90018e68:	dd49      	ble.n	90018efe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018e6a:	9c04      	ldr	r4, [sp, #16]
90018e6c:	b236      	sxth	r6, r6
90018e6e:	f06f 0001 	mvn.w	r0, #1
90018e72:	fb08 4606 	mla	r6, r8, r6, r4
90018e76:	9c01      	ldr	r4, [sp, #4]
90018e78:	fb00 fa0e 	mul.w	sl, r0, lr
90018e7c:	9800      	ldr	r0, [sp, #0]
90018e7e:	f816 8007 	ldrb.w	r8, [r6, r7]
90018e82:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90018e86:	eb04 0b08 	add.w	fp, r4, r8
90018e8a:	f830 400a 	ldrh.w	r4, [r0, sl]
90018e8e:	9801      	ldr	r0, [sp, #4]
90018e90:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018e94:	1227      	asrs	r7, r4, #8
90018e96:	f89b b001 	ldrb.w	fp, [fp, #1]
90018e9a:	fb16 f609 	smulbb	r6, r6, r9
90018e9e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90018ea2:	f810 8008 	ldrb.w	r8, [r0, r8]
90018ea6:	fb1b fb09 	smulbb	fp, fp, r9
90018eaa:	fb07 6705 	mla	r7, r7, r5, r6
90018eae:	10e6      	asrs	r6, r4, #3
90018eb0:	00e4      	lsls	r4, r4, #3
90018eb2:	9800      	ldr	r0, [sp, #0]
90018eb4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90018eb8:	b2bf      	uxth	r7, r7
90018eba:	b2e4      	uxtb	r4, r4
90018ebc:	fb06 b605 	mla	r6, r6, r5, fp
90018ec0:	fb14 f405 	smulbb	r4, r4, r5
90018ec4:	b2b6      	uxth	r6, r6
90018ec6:	fb08 4809 	mla	r8, r8, r9, r4
90018eca:	1c7c      	adds	r4, r7, #1
90018ecc:	f106 0b01 	add.w	fp, r6, #1
90018ed0:	fa1f f888 	uxth.w	r8, r8
90018ed4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018ed8:	f108 0401 	add.w	r4, r8, #1
90018edc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018ee0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90018ee4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
90018ee8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018eec:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018ef0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90018ef4:	4327      	orrs	r7, r4
90018ef6:	ea47 070b 	orr.w	r7, r7, fp
90018efa:	f820 700a 	strh.w	r7, [r0, sl]
90018efe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90018f00:	f10e 3eff 	add.w	lr, lr, #4294967295
90018f04:	4401      	add	r1, r0
90018f06:	9814      	ldr	r0, [sp, #80]	@ 0x50
90018f08:	4402      	add	r2, r0
90018f0a:	e759      	b.n	90018dc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90018f0c:	b007      	add	sp, #28
90018f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90018f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018f18:	b085      	sub	sp, #20
90018f1a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90018f1e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90018f20:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90018f22:	9203      	str	r2, [sp, #12]
90018f24:	6870      	ldr	r0, [r6, #4]
90018f26:	686f      	ldr	r7, [r5, #4]
90018f28:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
90018f2c:	3704      	adds	r7, #4
90018f2e:	9101      	str	r1, [sp, #4]
90018f30:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90018f34:	fb00 2404 	mla	r4, r0, r4, r2
90018f38:	6832      	ldr	r2, [r6, #0]
90018f3a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018f3e:	682a      	ldr	r2, [r5, #0]
90018f40:	9202      	str	r2, [sp, #8]
90018f42:	9a01      	ldr	r2, [sp, #4]
90018f44:	2a00      	cmp	r2, #0
90018f46:	dc03      	bgt.n	90018f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018f48:	9a03      	ldr	r2, [sp, #12]
90018f4a:	2a00      	cmp	r2, #0
90018f4c:	f340 80cc 	ble.w	900190e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018f50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90018f52:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018f56:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90018f5a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018f5c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018f60:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90018f64:	2b00      	cmp	r3, #0
90018f66:	dd0d      	ble.n	90018f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018f68:	1406      	asrs	r6, r0, #16
90018f6a:	d405      	bmi.n	90018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018f6c:	454e      	cmp	r6, r9
90018f6e:	da03      	bge.n	90018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018f70:	1416      	asrs	r6, r2, #16
90018f72:	d401      	bmi.n	90018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018f74:	4546      	cmp	r6, r8
90018f76:	db06      	blt.n	90018f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018f78:	9e12      	ldr	r6, [sp, #72]	@ 0x48
90018f7a:	4460      	add	r0, ip
90018f7c:	3b01      	subs	r3, #1
90018f7e:	3402      	adds	r4, #2
90018f80:	4432      	add	r2, r6
90018f82:	e7ef      	b.n	90018f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
90018f84:	d00f      	beq.n	90018fa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018f86:	1e5e      	subs	r6, r3, #1
90018f88:	fb0c 0e06 	mla	lr, ip, r6, r0
90018f8c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
90018f90:	d543      	bpl.n	9001901a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
90018f92:	4698      	mov	r8, r3
90018f94:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
90018f98:	f1b8 0f00 	cmp.w	r8, #0
90018f9c:	dc71      	bgt.n	90019082 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
90018f9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018fa2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018fa6:	9b01      	ldr	r3, [sp, #4]
90018fa8:	2b00      	cmp	r3, #0
90018faa:	f340 809d 	ble.w	900190e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018fae:	ee30 0a04 	vadd.f32	s0, s0, s8
90018fb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018fb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018fb8:	eeb0 6a62 	vmov.f32	s12, s5
90018fbc:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018fc0:	ee31 1a05 	vadd.f32	s2, s2, s10
90018fc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018fc8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90018fcc:	eeb0 6a43 	vmov.f32	s12, s6
90018fd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018fd4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90018fd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018fdc:	ee61 7a27 	vmul.f32	s15, s2, s15
90018fe0:	ee77 2a62 	vsub.f32	s5, s14, s5
90018fe4:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018fe8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018fec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018ff0:	ee12 2a90 	vmov	r2, s5
90018ff4:	eef0 2a47 	vmov.f32	s5, s14
90018ff8:	fb92 fcf3 	sdiv	ip, r2, r3
90018ffc:	ee13 2a10 	vmov	r2, s6
90019000:	eeb0 3a67 	vmov.f32	s6, s15
90019004:	fb92 f3f3 	sdiv	r3, r2, r3
90019008:	9312      	str	r3, [sp, #72]	@ 0x48
9001900a:	9b01      	ldr	r3, [sp, #4]
9001900c:	9a03      	ldr	r2, [sp, #12]
9001900e:	3b01      	subs	r3, #1
90019010:	9301      	str	r3, [sp, #4]
90019012:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019014:	bf08      	it	eq
90019016:	4613      	moveq	r3, r2
90019018:	e793      	b.n	90018f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001901a:	45ce      	cmp	lr, r9
9001901c:	dab9      	bge.n	90018f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001901e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90019020:	fb01 2606 	mla	r6, r1, r6, r2
90019024:	1436      	asrs	r6, r6, #16
90019026:	d4b4      	bmi.n	90018f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019028:	4546      	cmp	r6, r8
9001902a:	dab2      	bge.n	90018f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001902c:	4698      	mov	r8, r3
9001902e:	46a2      	mov	sl, r4
90019030:	f1b8 0f00 	cmp.w	r8, #0
90019034:	ddb3      	ble.n	90018f9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90019036:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001903a:	1416      	asrs	r6, r2, #16
9001903c:	9902      	ldr	r1, [sp, #8]
9001903e:	ea4f 4e20 	mov.w	lr, r0, asr #16
90019042:	f108 38ff 	add.w	r8, r8, #4294967295
90019046:	4460      	add	r0, ip
90019048:	fb09 1606 	mla	r6, r9, r6, r1
9001904c:	4928      	ldr	r1, [pc, #160]	@ (900190f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001904e:	f816 e00e 	ldrb.w	lr, [r6, lr]
90019052:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90019056:	eb07 0b0e 	add.w	fp, r7, lr
9001905a:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001905e:	f89b 9002 	ldrb.w	r9, [fp, #2]
90019062:	00f6      	lsls	r6, r6, #3
90019064:	ea01 2909 	and.w	r9, r1, r9, lsl #8
90019068:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001906a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001906e:	440a      	add	r2, r1
90019070:	ea49 0606 	orr.w	r6, r9, r6
90019074:	f817 900e 	ldrb.w	r9, [r7, lr]
90019078:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001907c:	f82a 6b02 	strh.w	r6, [sl], #2
90019080:	e7d6      	b.n	90019030 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019082:	ea5f 4920 	movs.w	r9, r0, asr #16
90019086:	d429      	bmi.n	900190dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019088:	68ae      	ldr	r6, [r5, #8]
9001908a:	454e      	cmp	r6, r9
9001908c:	dd26      	ble.n	900190dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001908e:	ea5f 4b22 	movs.w	fp, r2, asr #16
90019092:	d423      	bmi.n	900190dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90019094:	68e9      	ldr	r1, [r5, #12]
90019096:	4559      	cmp	r1, fp
90019098:	dd20      	ble.n	900190dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001909a:	fa0f fe86 	sxth.w	lr, r6
9001909e:	9902      	ldr	r1, [sp, #8]
900190a0:	fb0b 1e0e 	mla	lr, fp, lr, r1
900190a4:	f06f 0101 	mvn.w	r1, #1
900190a8:	f81e e009 	ldrb.w	lr, [lr, r9]
900190ac:	fb01 f908 	mul.w	r9, r1, r8
900190b0:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
900190b4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
900190b8:	eb07 060e 	add.w	r6, r7, lr
900190bc:	f896 b002 	ldrb.w	fp, [r6, #2]
900190c0:	7876      	ldrb	r6, [r6, #1]
900190c2:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
900190c6:	00f6      	lsls	r6, r6, #3
900190c8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
900190cc:	ea4b 0606 	orr.w	r6, fp, r6
900190d0:	f817 b00e 	ldrb.w	fp, [r7, lr]
900190d4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
900190d8:	f82a 6009 	strh.w	r6, [sl, r9]
900190dc:	9912      	ldr	r1, [sp, #72]	@ 0x48
900190de:	4460      	add	r0, ip
900190e0:	f108 38ff 	add.w	r8, r8, #4294967295
900190e4:	440a      	add	r2, r1
900190e6:	e757      	b.n	90018f98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900190e8:	b005      	add	sp, #20
900190ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900190ee:	bf00      	nop
900190f0:	fffff800 	.word	0xfffff800

900190f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900190f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900190f8:	b087      	sub	sp, #28
900190fa:	468b      	mov	fp, r1
900190fc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019100:	9815      	ldr	r0, [sp, #84]	@ 0x54
90019102:	9204      	str	r2, [sp, #16]
90019104:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90019108:	6841      	ldr	r1, [r0, #4]
9001910a:	9205      	str	r2, [sp, #20]
9001910c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
90019110:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
90019114:	fb01 2404 	mla	r4, r1, r4, r2
90019118:	6802      	ldr	r2, [r0, #0]
9001911a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001911e:	f8dc 2000 	ldr.w	r2, [ip]
90019122:	9201      	str	r2, [sp, #4]
90019124:	f8dc 2004 	ldr.w	r2, [ip, #4]
90019128:	3204      	adds	r2, #4
9001912a:	9202      	str	r2, [sp, #8]
9001912c:	f1bb 0f00 	cmp.w	fp, #0
90019130:	dc03      	bgt.n	9001913a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90019132:	9a04      	ldr	r2, [sp, #16]
90019134:	2a00      	cmp	r2, #0
90019136:	f340 8138 	ble.w	900193aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001913a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001913c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90019140:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90019144:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90019146:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001914a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001914e:	2b00      	cmp	r3, #0
90019150:	dd0e      	ble.n	90019170 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019152:	1402      	asrs	r2, r0, #16
90019154:	d405      	bmi.n	90019162 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90019156:	42ba      	cmp	r2, r7
90019158:	da03      	bge.n	90019162 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001915a:	140a      	asrs	r2, r1, #16
9001915c:	d401      	bmi.n	90019162 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001915e:	42b2      	cmp	r2, r6
90019160:	db07      	blt.n	90019172 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019162:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90019164:	3b01      	subs	r3, #1
90019166:	3402      	adds	r4, #2
90019168:	4410      	add	r0, r2
9001916a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001916c:	4411      	add	r1, r2
9001916e:	e7ee      	b.n	9001914e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90019170:	d019      	beq.n	900191a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
90019172:	1e5a      	subs	r2, r3, #1
90019174:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90019176:	fb05 0502 	mla	r5, r5, r2, r0
9001917a:	142d      	asrs	r5, r5, #16
9001917c:	d409      	bmi.n	90019192 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001917e:	42bd      	cmp	r5, r7
90019180:	da07      	bge.n	90019192 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019182:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90019184:	fb05 1202 	mla	r2, r5, r2, r1
90019188:	1412      	asrs	r2, r2, #16
9001918a:	d402      	bmi.n	90019192 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001918c:	42b2      	cmp	r2, r6
9001918e:	f2c0 80ac 	blt.w	900192ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90019192:	f04f 0e00 	mov.w	lr, #0
90019196:	eb03 020e 	add.w	r2, r3, lr
9001919a:	2a00      	cmp	r2, #0
9001919c:	dc3e      	bgt.n	9001921c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001919e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900191a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900191a6:	f1bb 0f00 	cmp.w	fp, #0
900191aa:	f340 80fe 	ble.w	900193aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900191ae:	ee30 0a04 	vadd.f32	s0, s0, s8
900191b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900191b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900191b8:	f1bb 0b01 	subs.w	fp, fp, #1
900191bc:	eeb0 6a62 	vmov.f32	s12, s5
900191c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
900191c4:	ee31 1a05 	vadd.f32	s2, s2, s10
900191c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900191cc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
900191d0:	eeb0 6a43 	vmov.f32	s12, s6
900191d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900191d8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
900191dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
900191e0:	ee61 7a27 	vmul.f32	s15, s2, s15
900191e4:	ee77 2a62 	vsub.f32	s5, s14, s5
900191e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900191ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900191f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900191f4:	ee12 2a90 	vmov	r2, s5
900191f8:	eef0 2a47 	vmov.f32	s5, s14
900191fc:	fb92 f3f3 	sdiv	r3, r2, r3
90019200:	ee13 2a10 	vmov	r2, s6
90019204:	9313      	str	r3, [sp, #76]	@ 0x4c
90019206:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019208:	eeb0 3a67 	vmov.f32	s6, s15
9001920c:	fb92 f3f3 	sdiv	r3, r2, r3
90019210:	9a04      	ldr	r2, [sp, #16]
90019212:	9314      	str	r3, [sp, #80]	@ 0x50
90019214:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019216:	bf08      	it	eq
90019218:	4613      	moveq	r3, r2
9001921a:	e787      	b.n	9001912c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001921c:	1406      	asrs	r6, r0, #16
9001921e:	d45d      	bmi.n	900192dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019220:	f8dc 5008 	ldr.w	r5, [ip, #8]
90019224:	42b5      	cmp	r5, r6
90019226:	dd59      	ble.n	900192dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019228:	140f      	asrs	r7, r1, #16
9001922a:	d457      	bmi.n	900192dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001922c:	f8dc 200c 	ldr.w	r2, [ip, #12]
90019230:	42ba      	cmp	r2, r7
90019232:	dd53      	ble.n	900192dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019234:	9a01      	ldr	r2, [sp, #4]
90019236:	b22d      	sxth	r5, r5
90019238:	fb07 2505 	mla	r5, r7, r5, r2
9001923c:	5daa      	ldrb	r2, [r5, r6]
9001923e:	9d02      	ldr	r5, [sp, #8]
90019240:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90019244:	0e2e      	lsrs	r6, r5, #24
90019246:	d049      	beq.n	900192dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019248:	f06f 0201 	mvn.w	r2, #1
9001924c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019250:	fb02 f20e 	mul.w	r2, r2, lr
90019254:	f834 8002 	ldrh.w	r8, [r4, r2]
90019258:	9203      	str	r2, [sp, #12]
9001925a:	9a05      	ldr	r2, [sp, #20]
9001925c:	ea4f 2728 	mov.w	r7, r8, asr #8
90019260:	4356      	muls	r6, r2
90019262:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019266:	1c72      	adds	r2, r6, #1
90019268:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001926c:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019270:	b2ed      	uxtb	r5, r5
90019272:	1212      	asrs	r2, r2, #8
90019274:	fa1f f982 	uxth.w	r9, r2
90019278:	43d2      	mvns	r2, r2
9001927a:	fb16 f609 	smulbb	r6, r6, r9
9001927e:	b2d2      	uxtb	r2, r2
90019280:	fb15 f509 	smulbb	r5, r5, r9
90019284:	fb07 6702 	mla	r7, r7, r2, r6
90019288:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001928c:	fb1a fa09 	smulbb	sl, sl, r9
90019290:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019294:	b2bf      	uxth	r7, r7
90019296:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001929a:	fa5f f888 	uxtb.w	r8, r8
9001929e:	fb06 a602 	mla	r6, r6, r2, sl
900192a2:	fb08 5502 	mla	r5, r8, r2, r5
900192a6:	1c7a      	adds	r2, r7, #1
900192a8:	b2b6      	uxth	r6, r6
900192aa:	b2ad      	uxth	r5, r5
900192ac:	eb02 2717 	add.w	r7, r2, r7, lsr #8
900192b0:	9a03      	ldr	r2, [sp, #12]
900192b2:	f105 0a01 	add.w	sl, r5, #1
900192b6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
900192ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900192be:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900192c2:	ea4a 0707 	orr.w	r7, sl, r7
900192c6:	f106 0a01 	add.w	sl, r6, #1
900192ca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900192ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900192d2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
900192d6:	ea47 070a 	orr.w	r7, r7, sl
900192da:	52a7      	strh	r7, [r4, r2]
900192dc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900192de:	f10e 3eff 	add.w	lr, lr, #4294967295
900192e2:	4410      	add	r0, r2
900192e4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900192e6:	4411      	add	r1, r2
900192e8:	e755      	b.n	90019196 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
900192ea:	f04f 0800 	mov.w	r8, #0
900192ee:	eba3 0208 	sub.w	r2, r3, r8
900192f2:	2a00      	cmp	r2, #0
900192f4:	f77f af53 	ble.w	9001919e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
900192f8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
900192fc:	140a      	asrs	r2, r1, #16
900192fe:	9f01      	ldr	r7, [sp, #4]
90019300:	1405      	asrs	r5, r0, #16
90019302:	fb06 7202 	mla	r2, r6, r2, r7
90019306:	5d52      	ldrb	r2, [r2, r5]
90019308:	9d02      	ldr	r5, [sp, #8]
9001930a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001930e:	0e2e      	lsrs	r6, r5, #24
90019310:	d044      	beq.n	9001939c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
90019312:	9a05      	ldr	r2, [sp, #20]
90019314:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019318:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001931c:	4356      	muls	r6, r2
9001931e:	ea4f 272e 	mov.w	r7, lr, asr #8
90019322:	1c72      	adds	r2, r6, #1
90019324:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019328:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001932c:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019330:	b2ed      	uxtb	r5, r5
90019332:	1212      	asrs	r2, r2, #8
90019334:	fa1f f982 	uxth.w	r9, r2
90019338:	43d2      	mvns	r2, r2
9001933a:	fb16 f609 	smulbb	r6, r6, r9
9001933e:	b2d2      	uxtb	r2, r2
90019340:	fb15 f509 	smulbb	r5, r5, r9
90019344:	fb07 6702 	mla	r7, r7, r2, r6
90019348:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001934c:	fb1a fa09 	smulbb	sl, sl, r9
90019350:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019354:	b2bf      	uxth	r7, r7
90019356:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001935a:	fa5f fe8e 	uxtb.w	lr, lr
9001935e:	fb06 a602 	mla	r6, r6, r2, sl
90019362:	fb0e 5502 	mla	r5, lr, r2, r5
90019366:	1c7a      	adds	r2, r7, #1
90019368:	b2b6      	uxth	r6, r6
9001936a:	b2ad      	uxth	r5, r5
9001936c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90019370:	f105 0a01 	add.w	sl, r5, #1
90019374:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019378:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001937c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019380:	ea4a 0707 	orr.w	r7, sl, r7
90019384:	f106 0a01 	add.w	sl, r6, #1
90019388:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001938c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019390:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019394:	ea47 070a 	orr.w	r7, r7, sl
90019398:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001939c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001939e:	f108 0801 	add.w	r8, r8, #1
900193a2:	4410      	add	r0, r2
900193a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900193a6:	4411      	add	r1, r2
900193a8:	e7a1      	b.n	900192ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
900193aa:	b007      	add	sp, #28
900193ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900193b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900193b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900193b4:	b085      	sub	sp, #20
900193b6:	468b      	mov	fp, r1
900193b8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900193bc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900193be:	9203      	str	r2, [sp, #12]
900193c0:	6841      	ldr	r1, [r0, #4]
900193c2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
900193c6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
900193ca:	fb01 2404 	mla	r4, r1, r4, r2
900193ce:	6802      	ldr	r2, [r0, #0]
900193d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900193d4:	f8de 2000 	ldr.w	r2, [lr]
900193d8:	9200      	str	r2, [sp, #0]
900193da:	f8de 2004 	ldr.w	r2, [lr, #4]
900193de:	3204      	adds	r2, #4
900193e0:	9201      	str	r2, [sp, #4]
900193e2:	f1bb 0f00 	cmp.w	fp, #0
900193e6:	dc03      	bgt.n	900193f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900193e8:	9a03      	ldr	r2, [sp, #12]
900193ea:	2a00      	cmp	r2, #0
900193ec:	f340 8153 	ble.w	90019696 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
900193f0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900193f2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900193f6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900193fa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900193fc:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90019400:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019404:	2b00      	cmp	r3, #0
90019406:	dd0e      	ble.n	90019426 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019408:	1408      	asrs	r0, r1, #16
9001940a:	d405      	bmi.n	90019418 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001940c:	42b8      	cmp	r0, r7
9001940e:	da03      	bge.n	90019418 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019410:	1410      	asrs	r0, r2, #16
90019412:	d401      	bmi.n	90019418 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019414:	42b0      	cmp	r0, r6
90019416:	db07      	blt.n	90019428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90019418:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001941a:	3b01      	subs	r3, #1
9001941c:	3402      	adds	r4, #2
9001941e:	4401      	add	r1, r0
90019420:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019422:	4402      	add	r2, r0
90019424:	e7ee      	b.n	90019404 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90019426:	d017      	beq.n	90019458 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90019428:	1e58      	subs	r0, r3, #1
9001942a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001942c:	fb05 1500 	mla	r5, r5, r0, r1
90019430:	142d      	asrs	r5, r5, #16
90019432:	d409      	bmi.n	90019448 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019434:	42bd      	cmp	r5, r7
90019436:	da07      	bge.n	90019448 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019438:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001943a:	fb05 2000 	mla	r0, r5, r0, r2
9001943e:	1400      	asrs	r0, r0, #16
90019440:	d402      	bmi.n	90019448 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019442:	42b0      	cmp	r0, r6
90019444:	f2c0 80bc 	blt.w	900195c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
90019448:	2600      	movs	r6, #0
9001944a:	1998      	adds	r0, r3, r6
9001944c:	2800      	cmp	r0, #0
9001944e:	dc3e      	bgt.n	900194ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
90019450:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019454:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019458:	f1bb 0f00 	cmp.w	fp, #0
9001945c:	f340 811b 	ble.w	90019696 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
90019460:	ee30 0a04 	vadd.f32	s0, s0, s8
90019464:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019466:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001946a:	f1bb 0b01 	subs.w	fp, fp, #1
9001946e:	eeb0 6a62 	vmov.f32	s12, s5
90019472:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019476:	ee31 1a05 	vadd.f32	s2, s2, s10
9001947a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001947e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019482:	eeb0 6a43 	vmov.f32	s12, s6
90019486:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001948a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001948e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019492:	ee61 7a27 	vmul.f32	s15, s2, s15
90019496:	ee77 2a62 	vsub.f32	s5, s14, s5
9001949a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001949e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900194a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900194a6:	ee12 2a90 	vmov	r2, s5
900194aa:	eef0 2a47 	vmov.f32	s5, s14
900194ae:	fb92 f3f3 	sdiv	r3, r2, r3
900194b2:	ee13 2a10 	vmov	r2, s6
900194b6:	9311      	str	r3, [sp, #68]	@ 0x44
900194b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900194ba:	eeb0 3a67 	vmov.f32	s6, s15
900194be:	fb92 f3f3 	sdiv	r3, r2, r3
900194c2:	9a03      	ldr	r2, [sp, #12]
900194c4:	9312      	str	r3, [sp, #72]	@ 0x48
900194c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900194c8:	bf08      	it	eq
900194ca:	4613      	moveq	r3, r2
900194cc:	e789      	b.n	900193e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
900194ce:	140f      	asrs	r7, r1, #16
900194d0:	d426      	bmi.n	90019520 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900194d2:	f8de 5008 	ldr.w	r5, [lr, #8]
900194d6:	42bd      	cmp	r5, r7
900194d8:	dd22      	ble.n	90019520 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900194da:	ea5f 4c22 	movs.w	ip, r2, asr #16
900194de:	d41f      	bmi.n	90019520 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900194e0:	f8de 000c 	ldr.w	r0, [lr, #12]
900194e4:	4560      	cmp	r0, ip
900194e6:	dd1b      	ble.n	90019520 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900194e8:	9800      	ldr	r0, [sp, #0]
900194ea:	b22d      	sxth	r5, r5
900194ec:	fb0c 0505 	mla	r5, ip, r5, r0
900194f0:	5de8      	ldrb	r0, [r5, r7]
900194f2:	9d01      	ldr	r5, [sp, #4]
900194f4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
900194f8:	0e07      	lsrs	r7, r0, #24
900194fa:	2fff      	cmp	r7, #255	@ 0xff
900194fc:	d116      	bne.n	9001952c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
900194fe:	f06f 0501 	mvn.w	r5, #1
90019502:	fb05 f706 	mul.w	r7, r5, r6
90019506:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001950a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001950e:	0945      	lsrs	r5, r0, #5
90019510:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90019514:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90019518:	ea4c 0505 	orr.w	r5, ip, r5
9001951c:	4305      	orrs	r5, r0
9001951e:	53e5      	strh	r5, [r4, r7]
90019520:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019522:	3e01      	subs	r6, #1
90019524:	4401      	add	r1, r0
90019526:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019528:	4402      	add	r2, r0
9001952a:	e78e      	b.n	9001944a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001952c:	b2fd      	uxtb	r5, r7
9001952e:	2f00      	cmp	r7, #0
90019530:	d0f6      	beq.n	90019520 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019532:	f06f 0701 	mvn.w	r7, #1
90019536:	fa1f f985 	uxth.w	r9, r5
9001953a:	43ed      	mvns	r5, r5
9001953c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
90019540:	4377      	muls	r7, r6
90019542:	fb1a fa09 	smulbb	sl, sl, r9
90019546:	b2ed      	uxtb	r5, r5
90019548:	f834 8007 	ldrh.w	r8, [r4, r7]
9001954c:	9702      	str	r7, [sp, #8]
9001954e:	f3c0 4707 	ubfx	r7, r0, #16, #8
90019552:	ea4f 2c28 	mov.w	ip, r8, asr #8
90019556:	fb17 f709 	smulbb	r7, r7, r9
9001955a:	b2c0      	uxtb	r0, r0
9001955c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019560:	fb10 f009 	smulbb	r0, r0, r9
90019564:	fb0c 7c05 	mla	ip, ip, r5, r7
90019568:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001956c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019570:	fa1f fc8c 	uxth.w	ip, ip
90019574:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019578:	fa5f f888 	uxtb.w	r8, r8
9001957c:	fb07 a705 	mla	r7, r7, r5, sl
90019580:	fb08 0005 	mla	r0, r8, r5, r0
90019584:	f10c 0501 	add.w	r5, ip, #1
90019588:	b2bf      	uxth	r7, r7
9001958a:	b280      	uxth	r0, r0
9001958c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019590:	f100 0a01 	add.w	sl, r0, #1
90019594:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019598:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001959c:	9802      	ldr	r0, [sp, #8]
9001959e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900195a2:	ea4a 0c0c 	orr.w	ip, sl, ip
900195a6:	f107 0a01 	add.w	sl, r7, #1
900195aa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
900195ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900195b2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
900195b6:	ea4c 0c0a 	orr.w	ip, ip, sl
900195ba:	f824 c000 	strh.w	ip, [r4, r0]
900195be:	e7af      	b.n	90019520 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900195c0:	f04f 0800 	mov.w	r8, #0
900195c4:	eba3 0008 	sub.w	r0, r3, r8
900195c8:	2800      	cmp	r0, #0
900195ca:	f77f af41 	ble.w	90019450 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
900195ce:	f9be 6008 	ldrsh.w	r6, [lr, #8]
900195d2:	1410      	asrs	r0, r2, #16
900195d4:	9f00      	ldr	r7, [sp, #0]
900195d6:	140d      	asrs	r5, r1, #16
900195d8:	fb06 7000 	mla	r0, r6, r0, r7
900195dc:	5d40      	ldrb	r0, [r0, r5]
900195de:	9d01      	ldr	r5, [sp, #4]
900195e0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
900195e4:	0e2e      	lsrs	r6, r5, #24
900195e6:	2eff      	cmp	r6, #255	@ 0xff
900195e8:	d112      	bne.n	90019610 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
900195ea:	482c      	ldr	r0, [pc, #176]	@ (9001969c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
900195ec:	ea00 2615 	and.w	r6, r0, r5, lsr #8
900195f0:	0968      	lsrs	r0, r5, #5
900195f2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900195f6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900195fa:	4330      	orrs	r0, r6
900195fc:	4328      	orrs	r0, r5
900195fe:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
90019602:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019604:	f108 0801 	add.w	r8, r8, #1
90019608:	4401      	add	r1, r0
9001960a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001960c:	4402      	add	r2, r0
9001960e:	e7d9      	b.n	900195c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90019610:	b2f0      	uxtb	r0, r6
90019612:	2e00      	cmp	r6, #0
90019614:	d0f5      	beq.n	90019602 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019616:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001961a:	fa1f f980 	uxth.w	r9, r0
9001961e:	f3c5 4607 	ubfx	r6, r5, #16, #8
90019622:	43c0      	mvns	r0, r0
90019624:	ea4f 272c 	mov.w	r7, ip, asr #8
90019628:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001962c:	fb16 f609 	smulbb	r6, r6, r9
90019630:	b2c0      	uxtb	r0, r0
90019632:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019636:	b2ed      	uxtb	r5, r5
90019638:	fb1a fa09 	smulbb	sl, sl, r9
9001963c:	fb07 6700 	mla	r7, r7, r0, r6
90019640:	ea4f 06ec 	mov.w	r6, ip, asr #3
90019644:	fb15 f509 	smulbb	r5, r5, r9
90019648:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001964c:	b2bf      	uxth	r7, r7
9001964e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019652:	fa5f fc8c 	uxtb.w	ip, ip
90019656:	fb06 a600 	mla	r6, r6, r0, sl
9001965a:	fb0c 5500 	mla	r5, ip, r0, r5
9001965e:	1c78      	adds	r0, r7, #1
90019660:	b2b6      	uxth	r6, r6
90019662:	b2ad      	uxth	r5, r5
90019664:	eb00 2717 	add.w	r7, r0, r7, lsr #8
90019668:	f105 0a01 	add.w	sl, r5, #1
9001966c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90019670:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019674:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019678:	ea4a 0707 	orr.w	r7, sl, r7
9001967c:	f106 0a01 	add.w	sl, r6, #1
90019680:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019684:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019688:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001968c:	ea47 070a 	orr.w	r7, r7, sl
90019690:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019694:	e7b5      	b.n	90019602 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019696:	b005      	add	sp, #20
90019698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001969c:	fffff800 	.word	0xfffff800

900196a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900196a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900196a4:	b087      	sub	sp, #28
900196a6:	468b      	mov	fp, r1
900196a8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900196ac:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900196ae:	9204      	str	r2, [sp, #16]
900196b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900196b4:	6861      	ldr	r1, [r4, #4]
900196b6:	9205      	str	r2, [sp, #20]
900196b8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
900196bc:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
900196c0:	fb01 2000 	mla	r0, r1, r0, r2
900196c4:	6822      	ldr	r2, [r4, #0]
900196c6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
900196ca:	f8de 2000 	ldr.w	r2, [lr]
900196ce:	9201      	str	r2, [sp, #4]
900196d0:	f8de 2004 	ldr.w	r2, [lr, #4]
900196d4:	9202      	str	r2, [sp, #8]
900196d6:	f1bb 0f00 	cmp.w	fp, #0
900196da:	dc03      	bgt.n	900196e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
900196dc:	9a04      	ldr	r2, [sp, #16]
900196de:	2a00      	cmp	r2, #0
900196e0:	f340 8142 	ble.w	90019968 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
900196e4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900196e6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900196ea:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900196ee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900196f0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
900196f4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
900196f8:	2b00      	cmp	r3, #0
900196fa:	dd0e      	ble.n	9001971a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900196fc:	140c      	asrs	r4, r1, #16
900196fe:	d405      	bmi.n	9001970c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019700:	42bc      	cmp	r4, r7
90019702:	da03      	bge.n	9001970c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019704:	1414      	asrs	r4, r2, #16
90019706:	d401      	bmi.n	9001970c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019708:	42b4      	cmp	r4, r6
9001970a:	db07      	blt.n	9001971c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001970c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001970e:	3b01      	subs	r3, #1
90019710:	3002      	adds	r0, #2
90019712:	4421      	add	r1, r4
90019714:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90019716:	4422      	add	r2, r4
90019718:	e7ee      	b.n	900196f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001971a:	d019      	beq.n	90019750 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001971c:	1e5c      	subs	r4, r3, #1
9001971e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90019720:	fb05 1504 	mla	r5, r5, r4, r1
90019724:	142d      	asrs	r5, r5, #16
90019726:	d409      	bmi.n	9001973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019728:	42bd      	cmp	r5, r7
9001972a:	da07      	bge.n	9001973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001972c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001972e:	fb05 2404 	mla	r4, r5, r4, r2
90019732:	1424      	asrs	r4, r4, #16
90019734:	d402      	bmi.n	9001973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019736:	42b4      	cmp	r4, r6
90019738:	f2c0 80b1 	blt.w	9001989e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001973c:	f04f 0800 	mov.w	r8, #0
90019740:	eb03 0408 	add.w	r4, r3, r8
90019744:	2c00      	cmp	r4, #0
90019746:	dc3e      	bgt.n	900197c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
90019748:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001974c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019750:	f1bb 0f00 	cmp.w	fp, #0
90019754:	f340 8108 	ble.w	90019968 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019758:	ee30 0a04 	vadd.f32	s0, s0, s8
9001975c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001975e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019762:	f1bb 0b01 	subs.w	fp, fp, #1
90019766:	eeb0 6a62 	vmov.f32	s12, s5
9001976a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001976e:	ee31 1a05 	vadd.f32	s2, s2, s10
90019772:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019776:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001977a:	eeb0 6a43 	vmov.f32	s12, s6
9001977e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019782:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
90019786:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001978a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001978e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019792:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019796:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001979a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001979e:	ee12 2a90 	vmov	r2, s5
900197a2:	eef0 2a47 	vmov.f32	s5, s14
900197a6:	fb92 f3f3 	sdiv	r3, r2, r3
900197aa:	ee13 2a10 	vmov	r2, s6
900197ae:	9313      	str	r3, [sp, #76]	@ 0x4c
900197b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900197b2:	eeb0 3a67 	vmov.f32	s6, s15
900197b6:	fb92 f3f3 	sdiv	r3, r2, r3
900197ba:	9a04      	ldr	r2, [sp, #16]
900197bc:	9314      	str	r3, [sp, #80]	@ 0x50
900197be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900197c0:	bf08      	it	eq
900197c2:	4613      	moveq	r3, r2
900197c4:	e787      	b.n	900196d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
900197c6:	140e      	asrs	r6, r1, #16
900197c8:	d462      	bmi.n	90019890 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900197ca:	f8de 5008 	ldr.w	r5, [lr, #8]
900197ce:	42b5      	cmp	r5, r6
900197d0:	dd5e      	ble.n	90019890 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900197d2:	1417      	asrs	r7, r2, #16
900197d4:	d45c      	bmi.n	90019890 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900197d6:	f8de 400c 	ldr.w	r4, [lr, #12]
900197da:	42bc      	cmp	r4, r7
900197dc:	dd58      	ble.n	90019890 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900197de:	b22d      	sxth	r5, r5
900197e0:	9c02      	ldr	r4, [sp, #8]
900197e2:	fb07 6505 	mla	r5, r7, r5, r6
900197e6:	5d66      	ldrb	r6, [r4, r5]
900197e8:	2e00      	cmp	r6, #0
900197ea:	d051      	beq.n	90019890 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900197ec:	9c01      	ldr	r4, [sp, #4]
900197ee:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
900197f2:	f06f 0401 	mvn.w	r4, #1
900197f6:	fb04 f408 	mul.w	r4, r4, r8
900197fa:	ea4f 2c29 	mov.w	ip, r9, asr #8
900197fe:	5b05      	ldrh	r5, [r0, r4]
90019800:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019804:	9403      	str	r4, [sp, #12]
90019806:	9c05      	ldr	r4, [sp, #20]
90019808:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001980c:	4366      	muls	r6, r4
9001980e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90019812:	1c74      	adds	r4, r6, #1
90019814:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90019818:	122e      	asrs	r6, r5, #8
9001981a:	1224      	asrs	r4, r4, #8
9001981c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90019820:	00ed      	lsls	r5, r5, #3
90019822:	b2a7      	uxth	r7, r4
90019824:	43e4      	mvns	r4, r4
90019826:	b2ed      	uxtb	r5, r5
90019828:	b2e4      	uxtb	r4, r4
9001982a:	fb16 f604 	smulbb	r6, r6, r4
9001982e:	fb15 f504 	smulbb	r5, r5, r4
90019832:	fb0c 6c07 	mla	ip, ip, r7, r6
90019836:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001983a:	fb1a fa04 	smulbb	sl, sl, r4
9001983e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
90019842:	fa1f fc8c 	uxth.w	ip, ip
90019846:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001984a:	fa5f f989 	uxtb.w	r9, r9
9001984e:	fb06 a607 	mla	r6, r6, r7, sl
90019852:	f10c 0401 	add.w	r4, ip, #1
90019856:	fb09 5507 	mla	r5, r9, r7, r5
9001985a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001985e:	9c03      	ldr	r4, [sp, #12]
90019860:	b2ad      	uxth	r5, r5
90019862:	b2b6      	uxth	r6, r6
90019864:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019868:	f105 0a01 	add.w	sl, r5, #1
9001986c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019870:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019874:	ea4a 0c0c 	orr.w	ip, sl, ip
90019878:	f106 0a01 	add.w	sl, r6, #1
9001987c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019880:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019884:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019888:	ea4c 0c0a 	orr.w	ip, ip, sl
9001988c:	f820 c004 	strh.w	ip, [r0, r4]
90019890:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90019892:	f108 38ff 	add.w	r8, r8, #4294967295
90019896:	4421      	add	r1, r4
90019898:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001989a:	4422      	add	r2, r4
9001989c:	e750      	b.n	90019740 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001989e:	f04f 0900 	mov.w	r9, #0
900198a2:	eba3 0409 	sub.w	r4, r3, r9
900198a6:	2c00      	cmp	r4, #0
900198a8:	f77f af4e 	ble.w	90019748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
900198ac:	f9be 6008 	ldrsh.w	r6, [lr, #8]
900198b0:	140d      	asrs	r5, r1, #16
900198b2:	1414      	asrs	r4, r2, #16
900198b4:	fb06 5404 	mla	r4, r6, r4, r5
900198b8:	9d02      	ldr	r5, [sp, #8]
900198ba:	5d2e      	ldrb	r6, [r5, r4]
900198bc:	2e00      	cmp	r6, #0
900198be:	d04c      	beq.n	9001995a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
900198c0:	9d01      	ldr	r5, [sp, #4]
900198c2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
900198c6:	9c05      	ldr	r4, [sp, #20]
900198c8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
900198cc:	ea4f 2c28 	mov.w	ip, r8, asr #8
900198d0:	4366      	muls	r6, r4
900198d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900198d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900198da:	1c74      	adds	r4, r6, #1
900198dc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
900198e0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
900198e4:	122e      	asrs	r6, r5, #8
900198e6:	1224      	asrs	r4, r4, #8
900198e8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900198ec:	00ed      	lsls	r5, r5, #3
900198ee:	b2a7      	uxth	r7, r4
900198f0:	43e4      	mvns	r4, r4
900198f2:	b2ed      	uxtb	r5, r5
900198f4:	b2e4      	uxtb	r4, r4
900198f6:	fb16 f604 	smulbb	r6, r6, r4
900198fa:	fb15 f504 	smulbb	r5, r5, r4
900198fe:	fb0c 6c07 	mla	ip, ip, r7, r6
90019902:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019906:	fb1a fa04 	smulbb	sl, sl, r4
9001990a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001990e:	fa1f fc8c 	uxth.w	ip, ip
90019912:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019916:	fa5f f888 	uxtb.w	r8, r8
9001991a:	fb06 a607 	mla	r6, r6, r7, sl
9001991e:	f10c 0401 	add.w	r4, ip, #1
90019922:	fb08 5507 	mla	r5, r8, r7, r5
90019926:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001992a:	b2ad      	uxth	r5, r5
9001992c:	b2b6      	uxth	r6, r6
9001992e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019932:	f105 0a01 	add.w	sl, r5, #1
90019936:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001993a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001993e:	ea4a 0c0c 	orr.w	ip, sl, ip
90019942:	f106 0a01 	add.w	sl, r6, #1
90019946:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001994a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001994e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019952:	ea4c 0c0a 	orr.w	ip, ip, sl
90019956:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001995a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001995c:	f109 0901 	add.w	r9, r9, #1
90019960:	4421      	add	r1, r4
90019962:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90019964:	4422      	add	r2, r4
90019966:	e79c      	b.n	900198a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90019968:	b007      	add	sp, #28
9001996a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001996e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001996e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019972:	b085      	sub	sp, #20
90019974:	468b      	mov	fp, r1
90019976:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001997a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001997c:	9203      	str	r2, [sp, #12]
9001997e:	6861      	ldr	r1, [r4, #4]
90019980:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
90019984:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
90019988:	fb01 2000 	mla	r0, r1, r0, r2
9001998c:	6822      	ldr	r2, [r4, #0]
9001998e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90019992:	f8d8 2000 	ldr.w	r2, [r8]
90019996:	9200      	str	r2, [sp, #0]
90019998:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001999c:	9201      	str	r2, [sp, #4]
9001999e:	f1bb 0f00 	cmp.w	fp, #0
900199a2:	dc03      	bgt.n	900199ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900199a4:	9a03      	ldr	r2, [sp, #12]
900199a6:	2a00      	cmp	r2, #0
900199a8:	f340 8146 	ble.w	90019c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
900199ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900199ae:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
900199b2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
900199b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900199b8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
900199bc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
900199c0:	2b00      	cmp	r3, #0
900199c2:	dd0e      	ble.n	900199e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900199c4:	140c      	asrs	r4, r1, #16
900199c6:	d405      	bmi.n	900199d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900199c8:	42bc      	cmp	r4, r7
900199ca:	da03      	bge.n	900199d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900199cc:	1414      	asrs	r4, r2, #16
900199ce:	d401      	bmi.n	900199d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900199d0:	42b4      	cmp	r4, r6
900199d2:	db07      	blt.n	900199e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900199d4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900199d6:	3b01      	subs	r3, #1
900199d8:	3002      	adds	r0, #2
900199da:	4421      	add	r1, r4
900199dc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900199de:	4422      	add	r2, r4
900199e0:	e7ee      	b.n	900199c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900199e2:	d017      	beq.n	90019a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
900199e4:	1e5c      	subs	r4, r3, #1
900199e6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900199e8:	fb05 1504 	mla	r5, r5, r4, r1
900199ec:	142d      	asrs	r5, r5, #16
900199ee:	d409      	bmi.n	90019a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900199f0:	42bd      	cmp	r5, r7
900199f2:	da07      	bge.n	90019a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900199f4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900199f6:	fb05 2404 	mla	r4, r5, r4, r2
900199fa:	1424      	asrs	r4, r4, #16
900199fc:	d402      	bmi.n	90019a04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900199fe:	42b4      	cmp	r4, r6
90019a00:	f2c0 80b3 	blt.w	90019b6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90019a04:	2600      	movs	r6, #0
90019a06:	199c      	adds	r4, r3, r6
90019a08:	2c00      	cmp	r4, #0
90019a0a:	dc3e      	bgt.n	90019a8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019a0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019a10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019a14:	f1bb 0f00 	cmp.w	fp, #0
90019a18:	f340 810e 	ble.w	90019c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90019a1c:	ee30 0a04 	vadd.f32	s0, s0, s8
90019a20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019a22:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019a26:	f1bb 0b01 	subs.w	fp, fp, #1
90019a2a:	eeb0 6a62 	vmov.f32	s12, s5
90019a2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019a32:	ee31 1a05 	vadd.f32	s2, s2, s10
90019a36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019a3a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019a3e:	eeb0 6a43 	vmov.f32	s12, s6
90019a42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019a46:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90019a4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019a4e:	ee61 7a27 	vmul.f32	s15, s2, s15
90019a52:	ee77 2a62 	vsub.f32	s5, s14, s5
90019a56:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019a5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019a5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019a62:	ee12 2a90 	vmov	r2, s5
90019a66:	eef0 2a47 	vmov.f32	s5, s14
90019a6a:	fb92 f3f3 	sdiv	r3, r2, r3
90019a6e:	ee13 2a10 	vmov	r2, s6
90019a72:	9311      	str	r3, [sp, #68]	@ 0x44
90019a74:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019a76:	eeb0 3a67 	vmov.f32	s6, s15
90019a7a:	fb92 f3f3 	sdiv	r3, r2, r3
90019a7e:	9a03      	ldr	r2, [sp, #12]
90019a80:	9312      	str	r3, [sp, #72]	@ 0x48
90019a82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019a84:	bf08      	it	eq
90019a86:	4613      	moveq	r3, r2
90019a88:	e789      	b.n	9001999e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019a8a:	140f      	asrs	r7, r1, #16
90019a8c:	d418      	bmi.n	90019ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019a8e:	f8d8 5008 	ldr.w	r5, [r8, #8]
90019a92:	42bd      	cmp	r5, r7
90019a94:	dd14      	ble.n	90019ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019a96:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019a9a:	d411      	bmi.n	90019ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019a9c:	f8d8 400c 	ldr.w	r4, [r8, #12]
90019aa0:	4564      	cmp	r4, ip
90019aa2:	dd0d      	ble.n	90019ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019aa4:	b22d      	sxth	r5, r5
90019aa6:	9c01      	ldr	r4, [sp, #4]
90019aa8:	fb0c 7505 	mla	r5, ip, r5, r7
90019aac:	5d64      	ldrb	r4, [r4, r5]
90019aae:	2cff      	cmp	r4, #255	@ 0xff
90019ab0:	d10c      	bne.n	90019acc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90019ab2:	9c00      	ldr	r4, [sp, #0]
90019ab4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
90019ab8:	f06f 0401 	mvn.w	r4, #1
90019abc:	4374      	muls	r4, r6
90019abe:	5305      	strh	r5, [r0, r4]
90019ac0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90019ac2:	3e01      	subs	r6, #1
90019ac4:	4421      	add	r1, r4
90019ac6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90019ac8:	4422      	add	r2, r4
90019aca:	e79c      	b.n	90019a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019acc:	2c00      	cmp	r4, #0
90019ace:	d0f7      	beq.n	90019ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019ad0:	9f00      	ldr	r7, [sp, #0]
90019ad2:	fa1f fc84 	uxth.w	ip, r4
90019ad6:	43e4      	mvns	r4, r4
90019ad8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
90019adc:	f06f 0501 	mvn.w	r5, #1
90019ae0:	b2e4      	uxtb	r4, r4
90019ae2:	4375      	muls	r5, r6
90019ae4:	ea4f 2e29 	mov.w	lr, r9, asr #8
90019ae8:	9502      	str	r5, [sp, #8]
90019aea:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90019aee:	5b45      	ldrh	r5, [r0, r5]
90019af0:	122f      	asrs	r7, r5, #8
90019af2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019af6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019afa:	00ed      	lsls	r5, r5, #3
90019afc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90019b00:	fb17 f704 	smulbb	r7, r7, r4
90019b04:	b2ed      	uxtb	r5, r5
90019b06:	fb1a fa04 	smulbb	sl, sl, r4
90019b0a:	fb0e 7e0c 	mla	lr, lr, ip, r7
90019b0e:	ea4f 07e9 	mov.w	r7, r9, asr #3
90019b12:	fb15 f504 	smulbb	r5, r5, r4
90019b16:	ea4f 09c9 	mov.w	r9, r9, lsl #3
90019b1a:	fa1f fe8e 	uxth.w	lr, lr
90019b1e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019b22:	fa5f f989 	uxtb.w	r9, r9
90019b26:	fb07 a70c 	mla	r7, r7, ip, sl
90019b2a:	f10e 0401 	add.w	r4, lr, #1
90019b2e:	fb09 550c 	mla	r5, r9, ip, r5
90019b32:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
90019b36:	9c02      	ldr	r4, [sp, #8]
90019b38:	b2ad      	uxth	r5, r5
90019b3a:	b2bf      	uxth	r7, r7
90019b3c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
90019b40:	f105 0a01 	add.w	sl, r5, #1
90019b44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019b48:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019b4c:	ea4a 0e0e 	orr.w	lr, sl, lr
90019b50:	f107 0a01 	add.w	sl, r7, #1
90019b54:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90019b58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019b5c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019b60:	ea4e 0e0a 	orr.w	lr, lr, sl
90019b64:	f820 e004 	strh.w	lr, [r0, r4]
90019b68:	e7aa      	b.n	90019ac0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019b6a:	f04f 0900 	mov.w	r9, #0
90019b6e:	eba3 0409 	sub.w	r4, r3, r9
90019b72:	2c00      	cmp	r4, #0
90019b74:	f77f af4a 	ble.w	90019a0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019b78:	1414      	asrs	r4, r2, #16
90019b7a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
90019b7e:	140d      	asrs	r5, r1, #16
90019b80:	fb06 5504 	mla	r5, r6, r4, r5
90019b84:	9c01      	ldr	r4, [sp, #4]
90019b86:	5d64      	ldrb	r4, [r4, r5]
90019b88:	2cff      	cmp	r4, #255	@ 0xff
90019b8a:	d10b      	bne.n	90019ba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90019b8c:	9c00      	ldr	r4, [sp, #0]
90019b8e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
90019b92:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
90019b96:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90019b98:	f109 0901 	add.w	r9, r9, #1
90019b9c:	4421      	add	r1, r4
90019b9e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90019ba0:	4422      	add	r2, r4
90019ba2:	e7e4      	b.n	90019b6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90019ba4:	2c00      	cmp	r4, #0
90019ba6:	d0f6      	beq.n	90019b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019ba8:	9e00      	ldr	r6, [sp, #0]
90019baa:	b2a7      	uxth	r7, r4
90019bac:	43e4      	mvns	r4, r4
90019bae:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
90019bb2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90019bb6:	b2e4      	uxtb	r4, r4
90019bb8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90019bbc:	122e      	asrs	r6, r5, #8
90019bbe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019bc2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019bc6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90019bca:	00ed      	lsls	r5, r5, #3
90019bcc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90019bd0:	fb16 f604 	smulbb	r6, r6, r4
90019bd4:	b2ed      	uxtb	r5, r5
90019bd6:	fb1a fa04 	smulbb	sl, sl, r4
90019bda:	fb0c 6c07 	mla	ip, ip, r7, r6
90019bde:	ea4f 06ee 	mov.w	r6, lr, asr #3
90019be2:	fb15 f504 	smulbb	r5, r5, r4
90019be6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019bea:	fa1f fc8c 	uxth.w	ip, ip
90019bee:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90019bf2:	fa5f fe8e 	uxtb.w	lr, lr
90019bf6:	fb06 a607 	mla	r6, r6, r7, sl
90019bfa:	f10c 0401 	add.w	r4, ip, #1
90019bfe:	fb0e 5507 	mla	r5, lr, r7, r5
90019c02:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90019c06:	b2ad      	uxth	r5, r5
90019c08:	b2b6      	uxth	r6, r6
90019c0a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019c0e:	f105 0a01 	add.w	sl, r5, #1
90019c12:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019c16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019c1a:	ea4a 0c0c 	orr.w	ip, sl, ip
90019c1e:	f106 0a01 	add.w	sl, r6, #1
90019c22:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019c26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019c2a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90019c2e:	ea4c 0c0a 	orr.w	ip, ip, sl
90019c32:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90019c36:	e7ae      	b.n	90019b96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019c38:	b005      	add	sp, #20
90019c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019c3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019c3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019c42:	b085      	sub	sp, #20
90019c44:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90019c46:	9203      	str	r2, [sp, #12]
90019c48:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
90019c4c:	9100      	str	r1, [sp, #0]
90019c4e:	9201      	str	r2, [sp, #4]
90019c50:	6841      	ldr	r1, [r0, #4]
90019c52:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
90019c56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90019c5a:	fb01 2404 	mla	r4, r1, r4, r2
90019c5e:	6802      	ldr	r2, [r0, #0]
90019c60:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019c64:	f8de 2000 	ldr.w	r2, [lr]
90019c68:	9202      	str	r2, [sp, #8]
90019c6a:	9a01      	ldr	r2, [sp, #4]
90019c6c:	43d6      	mvns	r6, r2
90019c6e:	b2f6      	uxtb	r6, r6
90019c70:	9a00      	ldr	r2, [sp, #0]
90019c72:	2a00      	cmp	r2, #0
90019c74:	dc03      	bgt.n	90019c7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90019c76:	9a03      	ldr	r2, [sp, #12]
90019c78:	2a00      	cmp	r2, #0
90019c7a:	f340 8124 	ble.w	90019ec6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019c7e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90019c80:	f9be c008 	ldrsh.w	ip, [lr, #8]
90019c84:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
90019c88:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019c8a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90019c8e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019c92:	2b00      	cmp	r3, #0
90019c94:	dd0e      	ble.n	90019cb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019c96:	1408      	asrs	r0, r1, #16
90019c98:	d405      	bmi.n	90019ca6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019c9a:	4560      	cmp	r0, ip
90019c9c:	da03      	bge.n	90019ca6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019c9e:	1410      	asrs	r0, r2, #16
90019ca0:	d401      	bmi.n	90019ca6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019ca2:	42b8      	cmp	r0, r7
90019ca4:	db07      	blt.n	90019cb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90019ca6:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019ca8:	3b01      	subs	r3, #1
90019caa:	3402      	adds	r4, #2
90019cac:	4401      	add	r1, r0
90019cae:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019cb0:	4402      	add	r2, r0
90019cb2:	e7ee      	b.n	90019c92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90019cb4:	d06e      	beq.n	90019d94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90019cb6:	1e58      	subs	r0, r3, #1
90019cb8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90019cba:	fb05 1500 	mla	r5, r5, r0, r1
90019cbe:	142d      	asrs	r5, r5, #16
90019cc0:	d45c      	bmi.n	90019d7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019cc2:	4565      	cmp	r5, ip
90019cc4:	da5a      	bge.n	90019d7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019cc6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90019cc8:	fb05 2000 	mla	r0, r5, r0, r2
90019ccc:	1400      	asrs	r0, r0, #16
90019cce:	d455      	bmi.n	90019d7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019cd0:	42b8      	cmp	r0, r7
90019cd2:	da53      	bge.n	90019d7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019cd4:	4699      	mov	r9, r3
90019cd6:	46a2      	mov	sl, r4
90019cd8:	f8bd b004 	ldrh.w	fp, [sp, #4]
90019cdc:	f1b9 0f00 	cmp.w	r9, #0
90019ce0:	dd54      	ble.n	90019d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019ce2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019ce6:	140d      	asrs	r5, r1, #16
90019ce8:	1410      	asrs	r0, r2, #16
90019cea:	f109 39ff 	add.w	r9, r9, #4294967295
90019cee:	fb07 5000 	mla	r0, r7, r0, r5
90019cf2:	9d02      	ldr	r5, [sp, #8]
90019cf4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019cf8:	f8ba 5000 	ldrh.w	r5, [sl]
90019cfc:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019d00:	122f      	asrs	r7, r5, #8
90019d02:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019d06:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019d0a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019d0e:	00ed      	lsls	r5, r5, #3
90019d10:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
90019d14:	fb17 f706 	smulbb	r7, r7, r6
90019d18:	b2ed      	uxtb	r5, r5
90019d1a:	fb18 f806 	smulbb	r8, r8, r6
90019d1e:	fb0c 7c0b 	mla	ip, ip, fp, r7
90019d22:	10c7      	asrs	r7, r0, #3
90019d24:	fb15 f506 	smulbb	r5, r5, r6
90019d28:	00c0      	lsls	r0, r0, #3
90019d2a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019d2e:	fa1f fc8c 	uxth.w	ip, ip
90019d32:	b2c0      	uxtb	r0, r0
90019d34:	fb07 870b 	mla	r7, r7, fp, r8
90019d38:	fb00 500b 	mla	r0, r0, fp, r5
90019d3c:	f10c 0501 	add.w	r5, ip, #1
90019d40:	b2bf      	uxth	r7, r7
90019d42:	b280      	uxth	r0, r0
90019d44:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019d48:	f107 0801 	add.w	r8, r7, #1
90019d4c:	1c45      	adds	r5, r0, #1
90019d4e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90019d52:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019d56:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019d5a:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019d5c:	ea4f 1858 	mov.w	r8, r8, lsr #5
90019d60:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019d64:	4401      	add	r1, r0
90019d66:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90019d6a:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019d6c:	ea45 0c0c 	orr.w	ip, r5, ip
90019d70:	4402      	add	r2, r0
90019d72:	ea4c 0c08 	orr.w	ip, ip, r8
90019d76:	f82a cb02 	strh.w	ip, [sl], #2
90019d7a:	e7af      	b.n	90019cdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019d7c:	f04f 0800 	mov.w	r8, #0
90019d80:	f8bd a004 	ldrh.w	sl, [sp, #4]
90019d84:	eb03 0008 	add.w	r0, r3, r8
90019d88:	2800      	cmp	r0, #0
90019d8a:	dc41      	bgt.n	90019e10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90019d8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019d90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019d94:	9b00      	ldr	r3, [sp, #0]
90019d96:	2b00      	cmp	r3, #0
90019d98:	f340 8095 	ble.w	90019ec6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019d9c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90019da0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019da2:	ee30 0a04 	vadd.f32	s0, s0, s8
90019da6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019daa:	eef0 6a62 	vmov.f32	s13, s5
90019dae:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019db2:	ee31 1a05 	vadd.f32	s2, s2, s10
90019db6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019dba:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
90019dbe:	eef0 6a43 	vmov.f32	s13, s6
90019dc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019dc6:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
90019dca:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019dce:	ee61 7a27 	vmul.f32	s15, s2, s15
90019dd2:	ee77 2a62 	vsub.f32	s5, s14, s5
90019dd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019dda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019dde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019de2:	ee12 2a90 	vmov	r2, s5
90019de6:	eef0 2a47 	vmov.f32	s5, s14
90019dea:	fb92 f3f3 	sdiv	r3, r2, r3
90019dee:	ee13 2a10 	vmov	r2, s6
90019df2:	9311      	str	r3, [sp, #68]	@ 0x44
90019df4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019df6:	eeb0 3a67 	vmov.f32	s6, s15
90019dfa:	fb92 f3f3 	sdiv	r3, r2, r3
90019dfe:	9312      	str	r3, [sp, #72]	@ 0x48
90019e00:	9b00      	ldr	r3, [sp, #0]
90019e02:	9a03      	ldr	r2, [sp, #12]
90019e04:	3b01      	subs	r3, #1
90019e06:	9300      	str	r3, [sp, #0]
90019e08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019e0a:	bf08      	it	eq
90019e0c:	4613      	moveq	r3, r2
90019e0e:	e72f      	b.n	90019c70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90019e10:	140f      	asrs	r7, r1, #16
90019e12:	d451      	bmi.n	90019eb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019e14:	f8de 5008 	ldr.w	r5, [lr, #8]
90019e18:	42bd      	cmp	r5, r7
90019e1a:	dd4d      	ble.n	90019eb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019e1c:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019e20:	d44a      	bmi.n	90019eb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019e22:	f8de 000c 	ldr.w	r0, [lr, #12]
90019e26:	4560      	cmp	r0, ip
90019e28:	dd46      	ble.n	90019eb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019e2a:	b22d      	sxth	r5, r5
90019e2c:	9802      	ldr	r0, [sp, #8]
90019e2e:	fb0c 7505 	mla	r5, ip, r5, r7
90019e32:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
90019e36:	f06f 0501 	mvn.w	r5, #1
90019e3a:	fb05 fb08 	mul.w	fp, r5, r8
90019e3e:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019e42:	f834 500b 	ldrh.w	r5, [r4, fp]
90019e46:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90019e4a:	122f      	asrs	r7, r5, #8
90019e4c:	ea4f 09e5 	mov.w	r9, r5, asr #3
90019e50:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90019e54:	00ed      	lsls	r5, r5, #3
90019e56:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
90019e5a:	fb17 f706 	smulbb	r7, r7, r6
90019e5e:	b2ed      	uxtb	r5, r5
90019e60:	fb19 f906 	smulbb	r9, r9, r6
90019e64:	fb0c 7c0a 	mla	ip, ip, sl, r7
90019e68:	10c7      	asrs	r7, r0, #3
90019e6a:	fb15 f506 	smulbb	r5, r5, r6
90019e6e:	00c0      	lsls	r0, r0, #3
90019e70:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90019e74:	fa1f fc8c 	uxth.w	ip, ip
90019e78:	b2c0      	uxtb	r0, r0
90019e7a:	fb07 970a 	mla	r7, r7, sl, r9
90019e7e:	fb00 500a 	mla	r0, r0, sl, r5
90019e82:	f10c 0501 	add.w	r5, ip, #1
90019e86:	b2bf      	uxth	r7, r7
90019e88:	b280      	uxth	r0, r0
90019e8a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019e8e:	f107 0901 	add.w	r9, r7, #1
90019e92:	1c45      	adds	r5, r0, #1
90019e94:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90019e98:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90019e9c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019ea0:	ea4f 1959 	mov.w	r9, r9, lsr #5
90019ea4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019ea8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90019eac:	ea45 0c0c 	orr.w	ip, r5, ip
90019eb0:	ea4c 0c09 	orr.w	ip, ip, r9
90019eb4:	f824 c00b 	strh.w	ip, [r4, fp]
90019eb8:	9811      	ldr	r0, [sp, #68]	@ 0x44
90019eba:	f108 38ff 	add.w	r8, r8, #4294967295
90019ebe:	4401      	add	r1, r0
90019ec0:	9812      	ldr	r0, [sp, #72]	@ 0x48
90019ec2:	4402      	add	r2, r0
90019ec4:	e75e      	b.n	90019d84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
90019ec6:	b005      	add	sp, #20
90019ec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019ecc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019ed0:	b085      	sub	sp, #20
90019ed2:	4693      	mov	fp, r2
90019ed4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90019ed8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
90019eda:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90019edc:	6870      	ldr	r0, [r6, #4]
90019ede:	9101      	str	r1, [sp, #4]
90019ee0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
90019ee4:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
90019ee8:	fb00 2404 	mla	r4, r0, r4, r2
90019eec:	6832      	ldr	r2, [r6, #0]
90019eee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019ef2:	682a      	ldr	r2, [r5, #0]
90019ef4:	9202      	str	r2, [sp, #8]
90019ef6:	9a01      	ldr	r2, [sp, #4]
90019ef8:	2a00      	cmp	r2, #0
90019efa:	dc03      	bgt.n	90019f04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019efc:	f1bb 0f00 	cmp.w	fp, #0
90019f00:	f340 809a 	ble.w	9001a038 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019f04:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90019f06:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019f0a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
90019f0e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90019f10:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019f14:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
90019f18:	2b00      	cmp	r3, #0
90019f1a:	dd0c      	ble.n	90019f36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
90019f1c:	1406      	asrs	r6, r0, #16
90019f1e:	d405      	bmi.n	90019f2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019f20:	454e      	cmp	r6, r9
90019f22:	da03      	bge.n	90019f2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019f24:	1416      	asrs	r6, r2, #16
90019f26:	d401      	bmi.n	90019f2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019f28:	4546      	cmp	r6, r8
90019f2a:	db05      	blt.n	90019f38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019f2c:	4470      	add	r0, lr
90019f2e:	4462      	add	r2, ip
90019f30:	3b01      	subs	r3, #1
90019f32:	3402      	adds	r4, #2
90019f34:	e7f0      	b.n	90019f18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90019f36:	d00f      	beq.n	90019f58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90019f38:	1e5e      	subs	r6, r3, #1
90019f3a:	fb0e 0706 	mla	r7, lr, r6, r0
90019f3e:	143f      	asrs	r7, r7, #16
90019f40:	d541      	bpl.n	90019fc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
90019f42:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019f46:	4698      	mov	r8, r3
90019f48:	9603      	str	r6, [sp, #12]
90019f4a:	f1b8 0f00 	cmp.w	r8, #0
90019f4e:	dc56      	bgt.n	90019ffe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
90019f50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019f54:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019f58:	9b01      	ldr	r3, [sp, #4]
90019f5a:	2b00      	cmp	r3, #0
90019f5c:	dd6c      	ble.n	9001a038 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019f5e:	ee30 0a04 	vadd.f32	s0, s0, s8
90019f62:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019f64:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019f68:	eeb0 6a62 	vmov.f32	s12, s5
90019f6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019f70:	ee31 1a05 	vadd.f32	s2, s2, s10
90019f74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019f78:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
90019f7c:	eeb0 6a43 	vmov.f32	s12, s6
90019f80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019f84:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
90019f88:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019f8c:	ee61 7a27 	vmul.f32	s15, s2, s15
90019f90:	ee77 2a62 	vsub.f32	s5, s14, s5
90019f94:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019f98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019f9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019fa0:	ee12 2a90 	vmov	r2, s5
90019fa4:	eef0 2a47 	vmov.f32	s5, s14
90019fa8:	fb92 fef3 	sdiv	lr, r2, r3
90019fac:	ee13 2a10 	vmov	r2, s6
90019fb0:	eeb0 3a67 	vmov.f32	s6, s15
90019fb4:	fb92 fcf3 	sdiv	ip, r2, r3
90019fb8:	9b01      	ldr	r3, [sp, #4]
90019fba:	3b01      	subs	r3, #1
90019fbc:	9301      	str	r3, [sp, #4]
90019fbe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90019fc0:	bf08      	it	eq
90019fc2:	465b      	moveq	r3, fp
90019fc4:	e797      	b.n	90019ef6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90019fc6:	454f      	cmp	r7, r9
90019fc8:	dabb      	bge.n	90019f42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019fca:	fb0c 2606 	mla	r6, ip, r6, r2
90019fce:	1436      	asrs	r6, r6, #16
90019fd0:	d4b7      	bmi.n	90019f42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019fd2:	4546      	cmp	r6, r8
90019fd4:	dab5      	bge.n	90019f42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019fd6:	461e      	mov	r6, r3
90019fd8:	46a0      	mov	r8, r4
90019fda:	2e00      	cmp	r6, #0
90019fdc:	ddb8      	ble.n	90019f50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019fde:	1417      	asrs	r7, r2, #16
90019fe0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90019fe4:	ea4f 4920 	mov.w	r9, r0, asr #16
90019fe8:	9902      	ldr	r1, [sp, #8]
90019fea:	4470      	add	r0, lr
90019fec:	4462      	add	r2, ip
90019fee:	fb0a 9707 	mla	r7, sl, r7, r9
90019ff2:	3e01      	subs	r6, #1
90019ff4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90019ff8:	f828 7b02 	strh.w	r7, [r8], #2
90019ffc:	e7ed      	b.n	90019fda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
90019ffe:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a002:	d414      	bmi.n	9001a02e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a004:	68ae      	ldr	r6, [r5, #8]
9001a006:	454e      	cmp	r6, r9
9001a008:	dd11      	ble.n	9001a02e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a00a:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001a00e:	d40e      	bmi.n	9001a02e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a010:	68ef      	ldr	r7, [r5, #12]
9001a012:	4557      	cmp	r7, sl
9001a014:	dd0b      	ble.n	9001a02e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001a016:	b236      	sxth	r6, r6
9001a018:	f06f 0101 	mvn.w	r1, #1
9001a01c:	9f02      	ldr	r7, [sp, #8]
9001a01e:	fb0a 9606 	mla	r6, sl, r6, r9
9001a022:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001a026:	fb01 f608 	mul.w	r6, r1, r8
9001a02a:	9903      	ldr	r1, [sp, #12]
9001a02c:	538f      	strh	r7, [r1, r6]
9001a02e:	4470      	add	r0, lr
9001a030:	4462      	add	r2, ip
9001a032:	f108 38ff 	add.w	r8, r8, #4294967295
9001a036:	e788      	b.n	90019f4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a038:	b005      	add	sp, #20
9001a03a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a03e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a03e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a042:	b087      	sub	sp, #28
9001a044:	468b      	mov	fp, r1
9001a046:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a04a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a04c:	9203      	str	r2, [sp, #12]
9001a04e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a052:	6841      	ldr	r1, [r0, #4]
9001a054:	9204      	str	r2, [sp, #16]
9001a056:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001a05a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001a05e:	fb01 2505 	mla	r5, r1, r5, r2
9001a062:	6802      	ldr	r2, [r0, #0]
9001a064:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001a068:	f8d9 2000 	ldr.w	r2, [r9]
9001a06c:	9201      	str	r2, [sp, #4]
9001a06e:	f1bb 0f00 	cmp.w	fp, #0
9001a072:	dc03      	bgt.n	9001a07c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a074:	9a03      	ldr	r2, [sp, #12]
9001a076:	2a00      	cmp	r2, #0
9001a078:	f340 8158 	ble.w	9001a32c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001a07c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a07e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a082:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a086:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a088:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a08c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a090:	2b00      	cmp	r3, #0
9001a092:	dd0e      	ble.n	9001a0b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001a094:	1402      	asrs	r2, r0, #16
9001a096:	d405      	bmi.n	9001a0a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a098:	42ba      	cmp	r2, r7
9001a09a:	da03      	bge.n	9001a0a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a09c:	140a      	asrs	r2, r1, #16
9001a09e:	d401      	bmi.n	9001a0a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a0a0:	42b2      	cmp	r2, r6
9001a0a2:	db07      	blt.n	9001a0b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001a0a4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a0a6:	3b01      	subs	r3, #1
9001a0a8:	3502      	adds	r5, #2
9001a0aa:	4410      	add	r0, r2
9001a0ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a0ae:	4411      	add	r1, r2
9001a0b0:	e7ee      	b.n	9001a090 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a0b2:	d017      	beq.n	9001a0e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a0b4:	1e5a      	subs	r2, r3, #1
9001a0b6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a0b8:	fb04 0402 	mla	r4, r4, r2, r0
9001a0bc:	1424      	asrs	r4, r4, #16
9001a0be:	d409      	bmi.n	9001a0d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a0c0:	42bc      	cmp	r4, r7
9001a0c2:	da07      	bge.n	9001a0d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a0c4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a0c6:	fb04 1202 	mla	r2, r4, r2, r1
9001a0ca:	1412      	asrs	r2, r2, #16
9001a0cc:	d402      	bmi.n	9001a0d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001a0ce:	42b2      	cmp	r2, r6
9001a0d0:	f2c0 80bf 	blt.w	9001a252 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001a0d4:	2700      	movs	r7, #0
9001a0d6:	19da      	adds	r2, r3, r7
9001a0d8:	2a00      	cmp	r2, #0
9001a0da:	dc3e      	bgt.n	9001a15a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001a0dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a0e0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001a0e4:	f1bb 0f00 	cmp.w	fp, #0
9001a0e8:	f340 8120 	ble.w	9001a32c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001a0ec:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a0f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a0f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a0f6:	f1bb 0b01 	subs.w	fp, fp, #1
9001a0fa:	eeb0 6a62 	vmov.f32	s12, s5
9001a0fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a102:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a106:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a10a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001a10e:	eeb0 6a43 	vmov.f32	s12, s6
9001a112:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a116:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001a11a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a11e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a122:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a126:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a12a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a12e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a132:	ee12 2a90 	vmov	r2, s5
9001a136:	eef0 2a47 	vmov.f32	s5, s14
9001a13a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a13e:	ee13 2a10 	vmov	r2, s6
9001a142:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a144:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a146:	eeb0 3a67 	vmov.f32	s6, s15
9001a14a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a14e:	9a03      	ldr	r2, [sp, #12]
9001a150:	9314      	str	r3, [sp, #80]	@ 0x50
9001a152:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a154:	bf08      	it	eq
9001a156:	4613      	moveq	r3, r2
9001a158:	e789      	b.n	9001a06e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a15a:	1406      	asrs	r6, r0, #16
9001a15c:	d42d      	bmi.n	9001a1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a15e:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001a162:	42b4      	cmp	r4, r6
9001a164:	dd29      	ble.n	9001a1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a166:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001a16a:	d426      	bmi.n	9001a1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a16c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a170:	4562      	cmp	r2, ip
9001a172:	dd22      	ble.n	9001a1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a174:	b224      	sxth	r4, r4
9001a176:	9a01      	ldr	r2, [sp, #4]
9001a178:	fb0c 6404 	mla	r4, ip, r4, r6
9001a17c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001a180:	0e22      	lsrs	r2, r4, #24
9001a182:	d01a      	beq.n	9001a1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a184:	9e04      	ldr	r6, [sp, #16]
9001a186:	4372      	muls	r2, r6
9001a188:	1c56      	adds	r6, r2, #1
9001a18a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001a18e:	0a26      	lsrs	r6, r4, #8
9001a190:	1212      	asrs	r2, r2, #8
9001a192:	9605      	str	r6, [sp, #20]
9001a194:	2aff      	cmp	r2, #255	@ 0xff
9001a196:	d116      	bne.n	9001a1c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001a198:	f06f 0201 	mvn.w	r2, #1
9001a19c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001a1a0:	fb02 fc07 	mul.w	ip, r2, r7
9001a1a4:	0962      	lsrs	r2, r4, #5
9001a1a6:	f026 0607 	bic.w	r6, r6, #7
9001a1aa:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001a1ae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001a1b2:	4316      	orrs	r6, r2
9001a1b4:	4326      	orrs	r6, r4
9001a1b6:	f825 600c 	strh.w	r6, [r5, ip]
9001a1ba:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a1bc:	3f01      	subs	r7, #1
9001a1be:	4410      	add	r0, r2
9001a1c0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a1c2:	4411      	add	r1, r2
9001a1c4:	e787      	b.n	9001a0d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a1c6:	f06f 0601 	mvn.w	r6, #1
9001a1ca:	fa1f fa82 	uxth.w	sl, r2
9001a1ce:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001a1d2:	43d2      	mvns	r2, r2
9001a1d4:	437e      	muls	r6, r7
9001a1d6:	b2e4      	uxtb	r4, r4
9001a1d8:	fb1c fc0a 	smulbb	ip, ip, sl
9001a1dc:	b2d2      	uxtb	r2, r2
9001a1de:	f835 8006 	ldrh.w	r8, [r5, r6]
9001a1e2:	fb14 f40a 	smulbb	r4, r4, sl
9001a1e6:	9602      	str	r6, [sp, #8]
9001a1e8:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a1ec:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a1f0:	fb16 f60a 	smulbb	r6, r6, sl
9001a1f4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001a1f8:	fb0e ce02 	mla	lr, lr, r2, ip
9001a1fc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a200:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a204:	fa1f fe8e 	uxth.w	lr, lr
9001a208:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001a20c:	fa5f f888 	uxtb.w	r8, r8
9001a210:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a214:	fb08 4402 	mla	r4, r8, r2, r4
9001a218:	f10e 0201 	add.w	r2, lr, #1
9001a21c:	fa1f fc8c 	uxth.w	ip, ip
9001a220:	b2a4      	uxth	r4, r4
9001a222:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a226:	9a02      	ldr	r2, [sp, #8]
9001a228:	1c66      	adds	r6, r4, #1
9001a22a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001a22e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001a232:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a236:	ea46 0e0e 	orr.w	lr, r6, lr
9001a23a:	f10c 0601 	add.w	r6, ip, #1
9001a23e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a242:	0976      	lsrs	r6, r6, #5
9001a244:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001a248:	ea4e 0e06 	orr.w	lr, lr, r6
9001a24c:	f825 e002 	strh.w	lr, [r5, r2]
9001a250:	e7b3      	b.n	9001a1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a252:	f04f 0800 	mov.w	r8, #0
9001a256:	eba3 0208 	sub.w	r2, r3, r8
9001a25a:	2a00      	cmp	r2, #0
9001a25c:	f77f af3e 	ble.w	9001a0dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a260:	1404      	asrs	r4, r0, #16
9001a262:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001a266:	140a      	asrs	r2, r1, #16
9001a268:	fb06 4202 	mla	r2, r6, r2, r4
9001a26c:	9c01      	ldr	r4, [sp, #4]
9001a26e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001a272:	0e22      	lsrs	r2, r4, #24
9001a274:	d015      	beq.n	9001a2a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001a276:	9e04      	ldr	r6, [sp, #16]
9001a278:	4372      	muls	r2, r6
9001a27a:	1c56      	adds	r6, r2, #1
9001a27c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001a280:	0a26      	lsrs	r6, r4, #8
9001a282:	1212      	asrs	r2, r2, #8
9001a284:	2aff      	cmp	r2, #255	@ 0xff
9001a286:	d113      	bne.n	9001a2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001a288:	0962      	lsrs	r2, r4, #5
9001a28a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001a28e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001a292:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001a296:	f026 0607 	bic.w	r6, r6, #7
9001a29a:	4316      	orrs	r6, r2
9001a29c:	4326      	orrs	r6, r4
9001a29e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001a2a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a2a4:	f108 0801 	add.w	r8, r8, #1
9001a2a8:	4410      	add	r0, r2
9001a2aa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a2ac:	4411      	add	r1, r2
9001a2ae:	e7d2      	b.n	9001a256 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001a2b0:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001a2b4:	fa1f fa82 	uxth.w	sl, r2
9001a2b8:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001a2bc:	43d2      	mvns	r2, r2
9001a2be:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a2c2:	fb17 f70a 	smulbb	r7, r7, sl
9001a2c6:	b2d2      	uxtb	r2, r2
9001a2c8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a2cc:	b2e4      	uxtb	r4, r4
9001a2ce:	b2f6      	uxtb	r6, r6
9001a2d0:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a2d4:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a2d8:	fb14 f40a 	smulbb	r4, r4, sl
9001a2dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a2e0:	fa1f fc8c 	uxth.w	ip, ip
9001a2e4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a2e8:	fb16 f60a 	smulbb	r6, r6, sl
9001a2ec:	fa5f fe8e 	uxtb.w	lr, lr
9001a2f0:	fb0e 4402 	mla	r4, lr, r2, r4
9001a2f4:	fb07 6702 	mla	r7, r7, r2, r6
9001a2f8:	f10c 0201 	add.w	r2, ip, #1
9001a2fc:	b2a4      	uxth	r4, r4
9001a2fe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a302:	1c66      	adds	r6, r4, #1
9001a304:	b2bf      	uxth	r7, r7
9001a306:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a30a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001a30e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a312:	ea46 0c0c 	orr.w	ip, r6, ip
9001a316:	1c7e      	adds	r6, r7, #1
9001a318:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001a31c:	0976      	lsrs	r6, r6, #5
9001a31e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001a322:	ea4c 0c06 	orr.w	ip, ip, r6
9001a326:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001a32a:	e7ba      	b.n	9001a2a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001a32c:	b007      	add	sp, #28
9001a32e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a334 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a338:	b085      	sub	sp, #20
9001a33a:	468b      	mov	fp, r1
9001a33c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a340:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a342:	9203      	str	r2, [sp, #12]
9001a344:	6841      	ldr	r1, [r0, #4]
9001a346:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001a34a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a34e:	fb01 2404 	mla	r4, r1, r4, r2
9001a352:	6802      	ldr	r2, [r0, #0]
9001a354:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a358:	f8d8 2000 	ldr.w	r2, [r8]
9001a35c:	9201      	str	r2, [sp, #4]
9001a35e:	f1bb 0f00 	cmp.w	fp, #0
9001a362:	dc03      	bgt.n	9001a36c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001a364:	9a03      	ldr	r2, [sp, #12]
9001a366:	2a00      	cmp	r2, #0
9001a368:	f340 814f 	ble.w	9001a60a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a36c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a36e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001a372:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a376:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a378:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001a37c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a380:	2b00      	cmp	r3, #0
9001a382:	dd0e      	ble.n	9001a3a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a384:	1408      	asrs	r0, r1, #16
9001a386:	d405      	bmi.n	9001a394 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a388:	42b8      	cmp	r0, r7
9001a38a:	da03      	bge.n	9001a394 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a38c:	1410      	asrs	r0, r2, #16
9001a38e:	d401      	bmi.n	9001a394 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a390:	42b0      	cmp	r0, r6
9001a392:	db07      	blt.n	9001a3a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a394:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a396:	3b01      	subs	r3, #1
9001a398:	3402      	adds	r4, #2
9001a39a:	4401      	add	r1, r0
9001a39c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a39e:	4402      	add	r2, r0
9001a3a0:	e7ee      	b.n	9001a380 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001a3a2:	d017      	beq.n	9001a3d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a3a4:	1e58      	subs	r0, r3, #1
9001a3a6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001a3a8:	fb05 1500 	mla	r5, r5, r0, r1
9001a3ac:	142d      	asrs	r5, r5, #16
9001a3ae:	d409      	bmi.n	9001a3c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a3b0:	42bd      	cmp	r5, r7
9001a3b2:	da07      	bge.n	9001a3c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a3b4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001a3b6:	fb05 2000 	mla	r0, r5, r0, r2
9001a3ba:	1400      	asrs	r0, r0, #16
9001a3bc:	d402      	bmi.n	9001a3c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a3be:	42b0      	cmp	r0, r6
9001a3c0:	f2c0 80ba 	blt.w	9001a538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001a3c4:	2600      	movs	r6, #0
9001a3c6:	1998      	adds	r0, r3, r6
9001a3c8:	2800      	cmp	r0, #0
9001a3ca:	dc3e      	bgt.n	9001a44a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001a3cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a3d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a3d4:	f1bb 0f00 	cmp.w	fp, #0
9001a3d8:	f340 8117 	ble.w	9001a60a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a3dc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a3e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a3e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a3e6:	f1bb 0b01 	subs.w	fp, fp, #1
9001a3ea:	eeb0 6a62 	vmov.f32	s12, s5
9001a3ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a3f2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a3f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a3fa:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a3fe:	eeb0 6a43 	vmov.f32	s12, s6
9001a402:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a406:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a40a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a40e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a412:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a416:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a41a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a41e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a422:	ee12 2a90 	vmov	r2, s5
9001a426:	eef0 2a47 	vmov.f32	s5, s14
9001a42a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a42e:	ee13 2a10 	vmov	r2, s6
9001a432:	9311      	str	r3, [sp, #68]	@ 0x44
9001a434:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a436:	eeb0 3a67 	vmov.f32	s6, s15
9001a43a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a43e:	9a03      	ldr	r2, [sp, #12]
9001a440:	9312      	str	r3, [sp, #72]	@ 0x48
9001a442:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a444:	bf08      	it	eq
9001a446:	4613      	moveq	r3, r2
9001a448:	e789      	b.n	9001a35e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001a44a:	140f      	asrs	r7, r1, #16
9001a44c:	d424      	bmi.n	9001a498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a44e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001a452:	42bd      	cmp	r5, r7
9001a454:	dd20      	ble.n	9001a498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a456:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a45a:	d41d      	bmi.n	9001a498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a45c:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001a460:	4560      	cmp	r0, ip
9001a462:	dd19      	ble.n	9001a498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a464:	b22d      	sxth	r5, r5
9001a466:	9801      	ldr	r0, [sp, #4]
9001a468:	fb0c 7505 	mla	r5, ip, r5, r7
9001a46c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001a470:	0e07      	lsrs	r7, r0, #24
9001a472:	2fff      	cmp	r7, #255	@ 0xff
9001a474:	d116      	bne.n	9001a4a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a476:	f06f 0501 	mvn.w	r5, #1
9001a47a:	fb05 f706 	mul.w	r7, r5, r6
9001a47e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001a482:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001a486:	0945      	lsrs	r5, r0, #5
9001a488:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001a48c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001a490:	ea4c 0505 	orr.w	r5, ip, r5
9001a494:	4305      	orrs	r5, r0
9001a496:	53e5      	strh	r5, [r4, r7]
9001a498:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a49a:	3e01      	subs	r6, #1
9001a49c:	4401      	add	r1, r0
9001a49e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a4a0:	4402      	add	r2, r0
9001a4a2:	e790      	b.n	9001a3c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a4a4:	b2fd      	uxtb	r5, r7
9001a4a6:	2f00      	cmp	r7, #0
9001a4a8:	d0f6      	beq.n	9001a498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a4aa:	f06f 0701 	mvn.w	r7, #1
9001a4ae:	fa1f f985 	uxth.w	r9, r5
9001a4b2:	43ed      	mvns	r5, r5
9001a4b4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001a4b8:	4377      	muls	r7, r6
9001a4ba:	fb1a fa09 	smulbb	sl, sl, r9
9001a4be:	b2ed      	uxtb	r5, r5
9001a4c0:	f834 e007 	ldrh.w	lr, [r4, r7]
9001a4c4:	9702      	str	r7, [sp, #8]
9001a4c6:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a4ca:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a4ce:	fb17 f709 	smulbb	r7, r7, r9
9001a4d2:	b2c0      	uxtb	r0, r0
9001a4d4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a4d8:	fb10 f009 	smulbb	r0, r0, r9
9001a4dc:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a4e0:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a4e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a4e8:	fa1f fc8c 	uxth.w	ip, ip
9001a4ec:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a4f0:	fa5f fe8e 	uxtb.w	lr, lr
9001a4f4:	fb07 a705 	mla	r7, r7, r5, sl
9001a4f8:	fb0e 0005 	mla	r0, lr, r5, r0
9001a4fc:	f10c 0501 	add.w	r5, ip, #1
9001a500:	b2bf      	uxth	r7, r7
9001a502:	b280      	uxth	r0, r0
9001a504:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a508:	f100 0a01 	add.w	sl, r0, #1
9001a50c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a510:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a514:	9802      	ldr	r0, [sp, #8]
9001a516:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a51a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a51e:	f107 0a01 	add.w	sl, r7, #1
9001a522:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a526:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a52a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a52e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a532:	f824 c000 	strh.w	ip, [r4, r0]
9001a536:	e7af      	b.n	9001a498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a538:	f04f 0e00 	mov.w	lr, #0
9001a53c:	eba3 000e 	sub.w	r0, r3, lr
9001a540:	2800      	cmp	r0, #0
9001a542:	f77f af43 	ble.w	9001a3cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a546:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001a54a:	140d      	asrs	r5, r1, #16
9001a54c:	1410      	asrs	r0, r2, #16
9001a54e:	fb06 5000 	mla	r0, r6, r0, r5
9001a552:	9d01      	ldr	r5, [sp, #4]
9001a554:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a558:	0e2e      	lsrs	r6, r5, #24
9001a55a:	2eff      	cmp	r6, #255	@ 0xff
9001a55c:	d112      	bne.n	9001a584 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001a55e:	482c      	ldr	r0, [pc, #176]	@ (9001a610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001a560:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a564:	0968      	lsrs	r0, r5, #5
9001a566:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a56a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001a56e:	4330      	orrs	r0, r6
9001a570:	4328      	orrs	r0, r5
9001a572:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001a576:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001a578:	f10e 0e01 	add.w	lr, lr, #1
9001a57c:	4401      	add	r1, r0
9001a57e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001a580:	4402      	add	r2, r0
9001a582:	e7db      	b.n	9001a53c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001a584:	b2f0      	uxtb	r0, r6
9001a586:	2e00      	cmp	r6, #0
9001a588:	d0f5      	beq.n	9001a576 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a58a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a58e:	fa1f f980 	uxth.w	r9, r0
9001a592:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a596:	43c0      	mvns	r0, r0
9001a598:	ea4f 272c 	mov.w	r7, ip, asr #8
9001a59c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a5a0:	fb16 f609 	smulbb	r6, r6, r9
9001a5a4:	b2c0      	uxtb	r0, r0
9001a5a6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a5aa:	b2ed      	uxtb	r5, r5
9001a5ac:	fb1a fa09 	smulbb	sl, sl, r9
9001a5b0:	fb07 6700 	mla	r7, r7, r0, r6
9001a5b4:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001a5b8:	fb15 f509 	smulbb	r5, r5, r9
9001a5bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a5c0:	b2bf      	uxth	r7, r7
9001a5c2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a5c6:	fa5f fc8c 	uxtb.w	ip, ip
9001a5ca:	fb06 a600 	mla	r6, r6, r0, sl
9001a5ce:	fb0c 5500 	mla	r5, ip, r0, r5
9001a5d2:	1c78      	adds	r0, r7, #1
9001a5d4:	b2b6      	uxth	r6, r6
9001a5d6:	b2ad      	uxth	r5, r5
9001a5d8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001a5dc:	f105 0a01 	add.w	sl, r5, #1
9001a5e0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001a5e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a5e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a5ec:	ea4a 0707 	orr.w	r7, sl, r7
9001a5f0:	f106 0a01 	add.w	sl, r6, #1
9001a5f4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a5f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a5fc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001a600:	ea47 070a 	orr.w	r7, r7, sl
9001a604:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001a608:	e7b5      	b.n	9001a576 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a60a:	b005      	add	sp, #20
9001a60c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a610:	fffff800 	.word	0xfffff800

9001a614 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a618:	b087      	sub	sp, #28
9001a61a:	468b      	mov	fp, r1
9001a61c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a620:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a622:	9203      	str	r2, [sp, #12]
9001a624:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a628:	6841      	ldr	r1, [r0, #4]
9001a62a:	9204      	str	r2, [sp, #16]
9001a62c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001a630:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001a634:	fb01 2404 	mla	r4, r1, r4, r2
9001a638:	6802      	ldr	r2, [r0, #0]
9001a63a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a63e:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a642:	3201      	adds	r2, #1
9001a644:	f022 0201 	bic.w	r2, r2, #1
9001a648:	9200      	str	r2, [sp, #0]
9001a64a:	f8d9 2000 	ldr.w	r2, [r9]
9001a64e:	9201      	str	r2, [sp, #4]
9001a650:	f1bb 0f00 	cmp.w	fp, #0
9001a654:	dc03      	bgt.n	9001a65e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a656:	9a03      	ldr	r2, [sp, #12]
9001a658:	2a00      	cmp	r2, #0
9001a65a:	f340 816a 	ble.w	9001a932 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a65e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a660:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a664:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a668:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a66a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a66e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a672:	2b00      	cmp	r3, #0
9001a674:	dd0e      	ble.n	9001a694 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a676:	1402      	asrs	r2, r0, #16
9001a678:	d405      	bmi.n	9001a686 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a67a:	42ba      	cmp	r2, r7
9001a67c:	da03      	bge.n	9001a686 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a67e:	140a      	asrs	r2, r1, #16
9001a680:	d401      	bmi.n	9001a686 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a682:	42b2      	cmp	r2, r6
9001a684:	db07      	blt.n	9001a696 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001a686:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a688:	3b01      	subs	r3, #1
9001a68a:	3402      	adds	r4, #2
9001a68c:	4410      	add	r0, r2
9001a68e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a690:	4411      	add	r1, r2
9001a692:	e7ee      	b.n	9001a672 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a694:	d017      	beq.n	9001a6c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a696:	1e5a      	subs	r2, r3, #1
9001a698:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a69a:	fb05 0502 	mla	r5, r5, r2, r0
9001a69e:	142d      	asrs	r5, r5, #16
9001a6a0:	d409      	bmi.n	9001a6b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a6a2:	42bd      	cmp	r5, r7
9001a6a4:	da07      	bge.n	9001a6b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a6a6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001a6a8:	fb05 1202 	mla	r2, r5, r2, r1
9001a6ac:	1412      	asrs	r2, r2, #16
9001a6ae:	d402      	bmi.n	9001a6b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a6b0:	42b2      	cmp	r2, r6
9001a6b2:	f2c0 80c8 	blt.w	9001a846 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001a6b6:	2700      	movs	r7, #0
9001a6b8:	19da      	adds	r2, r3, r7
9001a6ba:	2a00      	cmp	r2, #0
9001a6bc:	dc3e      	bgt.n	9001a73c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a6be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a6c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a6c6:	f1bb 0f00 	cmp.w	fp, #0
9001a6ca:	f340 8132 	ble.w	9001a932 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a6ce:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a6d2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a6d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a6d8:	f1bb 0b01 	subs.w	fp, fp, #1
9001a6dc:	eeb0 6a62 	vmov.f32	s12, s5
9001a6e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a6e4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a6e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a6ec:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001a6f0:	eeb0 6a43 	vmov.f32	s12, s6
9001a6f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a6f8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001a6fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a700:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a704:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a708:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a70c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a710:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a714:	ee12 2a90 	vmov	r2, s5
9001a718:	eef0 2a47 	vmov.f32	s5, s14
9001a71c:	fb92 f3f3 	sdiv	r3, r2, r3
9001a720:	ee13 2a10 	vmov	r2, s6
9001a724:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a726:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a728:	eeb0 3a67 	vmov.f32	s6, s15
9001a72c:	fb92 f3f3 	sdiv	r3, r2, r3
9001a730:	9a03      	ldr	r2, [sp, #12]
9001a732:	9314      	str	r3, [sp, #80]	@ 0x50
9001a734:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a736:	bf08      	it	eq
9001a738:	4613      	moveq	r3, r2
9001a73a:	e789      	b.n	9001a650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a73c:	1405      	asrs	r5, r0, #16
9001a73e:	d436      	bmi.n	9001a7ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a740:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a744:	42aa      	cmp	r2, r5
9001a746:	dd32      	ble.n	9001a7ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a748:	140e      	asrs	r6, r1, #16
9001a74a:	d430      	bmi.n	9001a7ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a74c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a750:	42b2      	cmp	r2, r6
9001a752:	dd2c      	ble.n	9001a7ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a754:	9a00      	ldr	r2, [sp, #0]
9001a756:	fb06 5502 	mla	r5, r6, r2, r5
9001a75a:	9e01      	ldr	r6, [sp, #4]
9001a75c:	086a      	lsrs	r2, r5, #1
9001a75e:	5cb2      	ldrb	r2, [r6, r2]
9001a760:	07ee      	lsls	r6, r5, #31
9001a762:	bf54      	ite	pl
9001a764:	f002 020f 	andpl.w	r2, r2, #15
9001a768:	1112      	asrmi	r2, r2, #4
9001a76a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a76e:	b2d2      	uxtb	r2, r2
9001a770:	b1ea      	cbz	r2, 9001a7ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a772:	9d04      	ldr	r5, [sp, #16]
9001a774:	436a      	muls	r2, r5
9001a776:	1c55      	adds	r5, r2, #1
9001a778:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a77c:	4d6e      	ldr	r5, [pc, #440]	@ (9001a938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a77e:	1212      	asrs	r2, r2, #8
9001a780:	682d      	ldr	r5, [r5, #0]
9001a782:	2aff      	cmp	r2, #255	@ 0xff
9001a784:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001a788:	9605      	str	r6, [sp, #20]
9001a78a:	d116      	bne.n	9001a7ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001a78c:	f06f 0201 	mvn.w	r2, #1
9001a790:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001a794:	fb02 fc07 	mul.w	ip, r2, r7
9001a798:	096a      	lsrs	r2, r5, #5
9001a79a:	f026 0607 	bic.w	r6, r6, #7
9001a79e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a7a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001a7a6:	4316      	orrs	r6, r2
9001a7a8:	432e      	orrs	r6, r5
9001a7aa:	f824 600c 	strh.w	r6, [r4, ip]
9001a7ae:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a7b0:	3f01      	subs	r7, #1
9001a7b2:	4410      	add	r0, r2
9001a7b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a7b6:	4411      	add	r1, r2
9001a7b8:	e77e      	b.n	9001a6b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001a7ba:	f06f 0601 	mvn.w	r6, #1
9001a7be:	fa1f fa82 	uxth.w	sl, r2
9001a7c2:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001a7c6:	43d2      	mvns	r2, r2
9001a7c8:	437e      	muls	r6, r7
9001a7ca:	b2ed      	uxtb	r5, r5
9001a7cc:	fb1c fc0a 	smulbb	ip, ip, sl
9001a7d0:	b2d2      	uxtb	r2, r2
9001a7d2:	f834 8006 	ldrh.w	r8, [r4, r6]
9001a7d6:	fb15 f50a 	smulbb	r5, r5, sl
9001a7da:	9602      	str	r6, [sp, #8]
9001a7dc:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a7e0:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a7e4:	fb16 f60a 	smulbb	r6, r6, sl
9001a7e8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001a7ec:	fb0e ce02 	mla	lr, lr, r2, ip
9001a7f0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a7f4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a7f8:	fa1f fe8e 	uxth.w	lr, lr
9001a7fc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001a800:	fa5f f888 	uxtb.w	r8, r8
9001a804:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a808:	fb08 5502 	mla	r5, r8, r2, r5
9001a80c:	f10e 0201 	add.w	r2, lr, #1
9001a810:	fa1f fc8c 	uxth.w	ip, ip
9001a814:	b2ad      	uxth	r5, r5
9001a816:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a81a:	9a02      	ldr	r2, [sp, #8]
9001a81c:	1c6e      	adds	r6, r5, #1
9001a81e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001a822:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001a826:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a82a:	ea46 0e0e 	orr.w	lr, r6, lr
9001a82e:	f10c 0601 	add.w	r6, ip, #1
9001a832:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a836:	0976      	lsrs	r6, r6, #5
9001a838:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001a83c:	ea4e 0e06 	orr.w	lr, lr, r6
9001a840:	f824 e002 	strh.w	lr, [r4, r2]
9001a844:	e7b3      	b.n	9001a7ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a846:	f04f 0800 	mov.w	r8, #0
9001a84a:	eba3 0208 	sub.w	r2, r3, r8
9001a84e:	2a00      	cmp	r2, #0
9001a850:	f77f af35 	ble.w	9001a6be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a854:	1402      	asrs	r2, r0, #16
9001a856:	9e00      	ldr	r6, [sp, #0]
9001a858:	140d      	asrs	r5, r1, #16
9001a85a:	fb06 2505 	mla	r5, r6, r5, r2
9001a85e:	9e01      	ldr	r6, [sp, #4]
9001a860:	086a      	lsrs	r2, r5, #1
9001a862:	07ed      	lsls	r5, r5, #31
9001a864:	5cb2      	ldrb	r2, [r6, r2]
9001a866:	bf54      	ite	pl
9001a868:	f002 020f 	andpl.w	r2, r2, #15
9001a86c:	1112      	asrmi	r2, r2, #4
9001a86e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a872:	b2d2      	uxtb	r2, r2
9001a874:	b1c2      	cbz	r2, 9001a8a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a876:	9d04      	ldr	r5, [sp, #16]
9001a878:	436a      	muls	r2, r5
9001a87a:	1c55      	adds	r5, r2, #1
9001a87c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a880:	4d2d      	ldr	r5, [pc, #180]	@ (9001a938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a882:	1212      	asrs	r2, r2, #8
9001a884:	682e      	ldr	r6, [r5, #0]
9001a886:	2aff      	cmp	r2, #255	@ 0xff
9001a888:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001a88c:	d113      	bne.n	9001a8b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a88e:	0972      	lsrs	r2, r6, #5
9001a890:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001a894:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001a898:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001a89c:	f025 0507 	bic.w	r5, r5, #7
9001a8a0:	4315      	orrs	r5, r2
9001a8a2:	4335      	orrs	r5, r6
9001a8a4:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001a8a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a8aa:	f108 0801 	add.w	r8, r8, #1
9001a8ae:	4410      	add	r0, r2
9001a8b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a8b2:	4411      	add	r1, r2
9001a8b4:	e7c9      	b.n	9001a84a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001a8b6:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001a8ba:	fa1f fa82 	uxth.w	sl, r2
9001a8be:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001a8c2:	43d2      	mvns	r2, r2
9001a8c4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a8c8:	fb17 f70a 	smulbb	r7, r7, sl
9001a8cc:	b2d2      	uxtb	r2, r2
9001a8ce:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a8d2:	b2f6      	uxtb	r6, r6
9001a8d4:	b2ed      	uxtb	r5, r5
9001a8d6:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a8da:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a8de:	fb16 f60a 	smulbb	r6, r6, sl
9001a8e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a8e6:	fa1f fc8c 	uxth.w	ip, ip
9001a8ea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a8ee:	fb15 f50a 	smulbb	r5, r5, sl
9001a8f2:	fa5f fe8e 	uxtb.w	lr, lr
9001a8f6:	fb0e 6602 	mla	r6, lr, r2, r6
9001a8fa:	fb07 5702 	mla	r7, r7, r2, r5
9001a8fe:	f10c 0201 	add.w	r2, ip, #1
9001a902:	b2b6      	uxth	r6, r6
9001a904:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a908:	1c75      	adds	r5, r6, #1
9001a90a:	b2bf      	uxth	r7, r7
9001a90c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a910:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001a914:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a918:	ea45 0c0c 	orr.w	ip, r5, ip
9001a91c:	1c7d      	adds	r5, r7, #1
9001a91e:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001a922:	096d      	lsrs	r5, r5, #5
9001a924:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001a928:	ea4c 0c05 	orr.w	ip, ip, r5
9001a92c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001a930:	e7ba      	b.n	9001a8a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a932:	b007      	add	sp, #28
9001a934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a938:	24021c6c 	.word	0x24021c6c

9001a93c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a93c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a940:	b087      	sub	sp, #28
9001a942:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a946:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001ac50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001a94a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a94c:	9101      	str	r1, [sp, #4]
9001a94e:	9205      	str	r2, [sp, #20]
9001a950:	6841      	ldr	r1, [r0, #4]
9001a952:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001a956:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001a95a:	fb01 2404 	mla	r4, r1, r4, r2
9001a95e:	6802      	ldr	r2, [r0, #0]
9001a960:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a964:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a968:	3201      	adds	r2, #1
9001a96a:	f022 0201 	bic.w	r2, r2, #1
9001a96e:	9202      	str	r2, [sp, #8]
9001a970:	f8db 2000 	ldr.w	r2, [fp]
9001a974:	9203      	str	r2, [sp, #12]
9001a976:	9a01      	ldr	r2, [sp, #4]
9001a978:	2a00      	cmp	r2, #0
9001a97a:	dc03      	bgt.n	9001a984 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a97c:	9a05      	ldr	r2, [sp, #20]
9001a97e:	2a00      	cmp	r2, #0
9001a980:	f340 8162 	ble.w	9001ac48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a984:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a986:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001a98a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a98e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a990:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001a994:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a998:	2b00      	cmp	r3, #0
9001a99a:	dd0e      	ble.n	9001a9ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a99c:	1402      	asrs	r2, r0, #16
9001a99e:	d405      	bmi.n	9001a9ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a9a0:	42ba      	cmp	r2, r7
9001a9a2:	da03      	bge.n	9001a9ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a9a4:	140a      	asrs	r2, r1, #16
9001a9a6:	d401      	bmi.n	9001a9ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a9a8:	42b2      	cmp	r2, r6
9001a9aa:	db07      	blt.n	9001a9bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a9ac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001a9ae:	3b01      	subs	r3, #1
9001a9b0:	3402      	adds	r4, #2
9001a9b2:	4410      	add	r0, r2
9001a9b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001a9b6:	4411      	add	r1, r2
9001a9b8:	e7ee      	b.n	9001a998 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a9ba:	d017      	beq.n	9001a9ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001a9bc:	1e5a      	subs	r2, r3, #1
9001a9be:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a9c0:	fb05 0502 	mla	r5, r5, r2, r0
9001a9c4:	142d      	asrs	r5, r5, #16
9001a9c6:	d409      	bmi.n	9001a9dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a9c8:	42bd      	cmp	r5, r7
9001a9ca:	da07      	bge.n	9001a9dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a9cc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001a9ce:	fb05 1202 	mla	r2, r5, r2, r1
9001a9d2:	1412      	asrs	r2, r2, #16
9001a9d4:	d402      	bmi.n	9001a9dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a9d6:	42b2      	cmp	r2, r6
9001a9d8:	f2c0 80c3 	blt.w	9001ab62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001a9dc:	2500      	movs	r5, #0
9001a9de:	195a      	adds	r2, r3, r5
9001a9e0:	2a00      	cmp	r2, #0
9001a9e2:	dc3f      	bgt.n	9001aa64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a9e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a9e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a9ec:	9b01      	ldr	r3, [sp, #4]
9001a9ee:	2b00      	cmp	r3, #0
9001a9f0:	f340 812a 	ble.w	9001ac48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a9f4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a9f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a9fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a9fe:	eeb0 6a62 	vmov.f32	s12, s5
9001aa02:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001aa06:	ee31 1a05 	vadd.f32	s2, s2, s10
9001aa0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aa0e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001aa12:	eeb0 6a43 	vmov.f32	s12, s6
9001aa16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aa1a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001aa1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001aa22:	ee61 7a27 	vmul.f32	s15, s2, s15
9001aa26:	ee77 2a62 	vsub.f32	s5, s14, s5
9001aa2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001aa2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001aa32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001aa36:	ee12 2a90 	vmov	r2, s5
9001aa3a:	eef0 2a47 	vmov.f32	s5, s14
9001aa3e:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa42:	ee13 2a10 	vmov	r2, s6
9001aa46:	9313      	str	r3, [sp, #76]	@ 0x4c
9001aa48:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aa4a:	eeb0 3a67 	vmov.f32	s6, s15
9001aa4e:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa52:	9314      	str	r3, [sp, #80]	@ 0x50
9001aa54:	9b01      	ldr	r3, [sp, #4]
9001aa56:	9a05      	ldr	r2, [sp, #20]
9001aa58:	3b01      	subs	r3, #1
9001aa5a:	9301      	str	r3, [sp, #4]
9001aa5c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aa5e:	bf08      	it	eq
9001aa60:	4613      	moveq	r3, r2
9001aa62:	e788      	b.n	9001a976 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001aa64:	1406      	asrs	r6, r0, #16
9001aa66:	d42c      	bmi.n	9001aac2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001aa68:	f8db 2008 	ldr.w	r2, [fp, #8]
9001aa6c:	42b2      	cmp	r2, r6
9001aa6e:	dd28      	ble.n	9001aac2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001aa70:	140f      	asrs	r7, r1, #16
9001aa72:	d426      	bmi.n	9001aac2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001aa74:	f8db 200c 	ldr.w	r2, [fp, #12]
9001aa78:	42ba      	cmp	r2, r7
9001aa7a:	dd22      	ble.n	9001aac2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001aa7c:	9a02      	ldr	r2, [sp, #8]
9001aa7e:	fb07 6602 	mla	r6, r7, r2, r6
9001aa82:	9f03      	ldr	r7, [sp, #12]
9001aa84:	0872      	lsrs	r2, r6, #1
9001aa86:	07f6      	lsls	r6, r6, #31
9001aa88:	5cba      	ldrb	r2, [r7, r2]
9001aa8a:	bf54      	ite	pl
9001aa8c:	f002 020f 	andpl.w	r2, r2, #15
9001aa90:	1112      	asrmi	r2, r2, #4
9001aa92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001aa96:	b2d2      	uxtb	r2, r2
9001aa98:	2aff      	cmp	r2, #255	@ 0xff
9001aa9a:	d118      	bne.n	9001aace <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001aa9c:	f06f 0601 	mvn.w	r6, #1
9001aaa0:	f8d8 2000 	ldr.w	r2, [r8]
9001aaa4:	fb06 f705 	mul.w	r7, r6, r5
9001aaa8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001aaac:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001aab0:	0956      	lsrs	r6, r2, #5
9001aab2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001aab6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001aaba:	ea4c 0606 	orr.w	r6, ip, r6
9001aabe:	4316      	orrs	r6, r2
9001aac0:	53e6      	strh	r6, [r4, r7]
9001aac2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001aac4:	3d01      	subs	r5, #1
9001aac6:	4410      	add	r0, r2
9001aac8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001aaca:	4411      	add	r1, r2
9001aacc:	e787      	b.n	9001a9de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001aace:	2a00      	cmp	r2, #0
9001aad0:	d0f7      	beq.n	9001aac2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001aad2:	f06f 0601 	mvn.w	r6, #1
9001aad6:	f8d8 c000 	ldr.w	ip, [r8]
9001aada:	fa1f f982 	uxth.w	r9, r2
9001aade:	43d2      	mvns	r2, r2
9001aae0:	436e      	muls	r6, r5
9001aae2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001aae6:	b2d2      	uxtb	r2, r2
9001aae8:	f834 e006 	ldrh.w	lr, [r4, r6]
9001aaec:	fb1a fa09 	smulbb	sl, sl, r9
9001aaf0:	9604      	str	r6, [sp, #16]
9001aaf2:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001aaf6:	ea4f 272e 	mov.w	r7, lr, asr #8
9001aafa:	fb16 f609 	smulbb	r6, r6, r9
9001aafe:	fa5f fc8c 	uxtb.w	ip, ip
9001ab02:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ab06:	fb1c fc09 	smulbb	ip, ip, r9
9001ab0a:	fb07 6702 	mla	r7, r7, r2, r6
9001ab0e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001ab12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ab16:	b2bf      	uxth	r7, r7
9001ab18:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ab1c:	fa5f fe8e 	uxtb.w	lr, lr
9001ab20:	fb06 a602 	mla	r6, r6, r2, sl
9001ab24:	fb0e cc02 	mla	ip, lr, r2, ip
9001ab28:	1c7a      	adds	r2, r7, #1
9001ab2a:	b2b6      	uxth	r6, r6
9001ab2c:	fa1f fc8c 	uxth.w	ip, ip
9001ab30:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ab34:	9a04      	ldr	r2, [sp, #16]
9001ab36:	f10c 0a01 	add.w	sl, ip, #1
9001ab3a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ab3e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001ab42:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ab46:	ea4a 0707 	orr.w	r7, sl, r7
9001ab4a:	f106 0a01 	add.w	sl, r6, #1
9001ab4e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ab52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ab56:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ab5a:	ea47 070a 	orr.w	r7, r7, sl
9001ab5e:	52a7      	strh	r7, [r4, r2]
9001ab60:	e7af      	b.n	9001aac2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ab62:	f04f 0e00 	mov.w	lr, #0
9001ab66:	eba3 020e 	sub.w	r2, r3, lr
9001ab6a:	2a00      	cmp	r2, #0
9001ab6c:	f77f af3a 	ble.w	9001a9e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ab70:	1402      	asrs	r2, r0, #16
9001ab72:	9e02      	ldr	r6, [sp, #8]
9001ab74:	140d      	asrs	r5, r1, #16
9001ab76:	fb06 2505 	mla	r5, r6, r5, r2
9001ab7a:	9e03      	ldr	r6, [sp, #12]
9001ab7c:	086a      	lsrs	r2, r5, #1
9001ab7e:	07ed      	lsls	r5, r5, #31
9001ab80:	5cb2      	ldrb	r2, [r6, r2]
9001ab82:	bf54      	ite	pl
9001ab84:	f002 020f 	andpl.w	r2, r2, #15
9001ab88:	1112      	asrmi	r2, r2, #4
9001ab8a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ab8e:	b2d2      	uxtb	r2, r2
9001ab90:	2aff      	cmp	r2, #255	@ 0xff
9001ab92:	d115      	bne.n	9001abc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001ab94:	f8d8 5000 	ldr.w	r5, [r8]
9001ab98:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001ab9c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001aba0:	096a      	lsrs	r2, r5, #5
9001aba2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001aba6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001abaa:	4332      	orrs	r2, r6
9001abac:	432a      	orrs	r2, r5
9001abae:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001abb2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001abb4:	f10e 0e01 	add.w	lr, lr, #1
9001abb8:	4410      	add	r0, r2
9001abba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001abbc:	4411      	add	r1, r2
9001abbe:	e7d2      	b.n	9001ab66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001abc0:	2a00      	cmp	r2, #0
9001abc2:	d0f6      	beq.n	9001abb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001abc4:	f8d8 7000 	ldr.w	r7, [r8]
9001abc8:	fa1f f982 	uxth.w	r9, r2
9001abcc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001abd0:	43d2      	mvns	r2, r2
9001abd2:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001abd6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001abda:	ea4f 262c 	mov.w	r6, ip, asr #8
9001abde:	fb15 f509 	smulbb	r5, r5, r9
9001abe2:	b2d2      	uxtb	r2, r2
9001abe4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001abe8:	b2ff      	uxtb	r7, r7
9001abea:	fb1a fa09 	smulbb	sl, sl, r9
9001abee:	fb06 5602 	mla	r6, r6, r2, r5
9001abf2:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001abf6:	fb17 f709 	smulbb	r7, r7, r9
9001abfa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001abfe:	b2b6      	uxth	r6, r6
9001ac00:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001ac04:	fa5f fc8c 	uxtb.w	ip, ip
9001ac08:	fb05 a502 	mla	r5, r5, r2, sl
9001ac0c:	fb0c 7702 	mla	r7, ip, r2, r7
9001ac10:	1c72      	adds	r2, r6, #1
9001ac12:	b2ad      	uxth	r5, r5
9001ac14:	b2bf      	uxth	r7, r7
9001ac16:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001ac1a:	f107 0a01 	add.w	sl, r7, #1
9001ac1e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001ac22:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ac26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ac2a:	ea4a 0606 	orr.w	r6, sl, r6
9001ac2e:	f105 0a01 	add.w	sl, r5, #1
9001ac32:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ac36:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ac3a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ac3e:	ea46 060a 	orr.w	r6, r6, sl
9001ac42:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001ac46:	e7b4      	b.n	9001abb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001ac48:	b007      	add	sp, #28
9001ac4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ac4e:	bf00      	nop
9001ac50:	24021c6c 	.word	0x24021c6c

9001ac54 <_ZN8touchgfx8LCD16bppD1Ev>:
9001ac54:	4770      	bx	lr

9001ac56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001ac56:	4770      	bx	lr

9001ac58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001ac58:	4770      	bx	lr

9001ac5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001ac5a:	4770      	bx	lr

9001ac5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001ac5c:	4770      	bx	lr

9001ac5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001ac5e:	4770      	bx	lr

9001ac60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001ac60:	4770      	bx	lr

9001ac62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001ac62:	4770      	bx	lr

9001ac64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ac64:	4770      	bx	lr

9001ac66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ac66:	4770      	bx	lr

9001ac68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ac68:	4770      	bx	lr

9001ac6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ac6a:	4770      	bx	lr

9001ac6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ac6c:	4770      	bx	lr

9001ac6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001ac6e:	4770      	bx	lr

9001ac70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ac70:	4770      	bx	lr

9001ac72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ac72:	4770      	bx	lr

9001ac74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ac74:	4770      	bx	lr

9001ac76 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001ac76:	4770      	bx	lr

9001ac78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ac78:	4770      	bx	lr

9001ac7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ac7a:	4770      	bx	lr

9001ac7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001ac7c:	4770      	bx	lr

9001ac7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001ac7e:	4770      	bx	lr

9001ac80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001ac80:	4770      	bx	lr

9001ac82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001ac82:	4770      	bx	lr

9001ac84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ac84:	4770      	bx	lr

9001ac86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001ac86:	4770      	bx	lr

9001ac88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ac88:	4770      	bx	lr

9001ac8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001ac8a:	4770      	bx	lr

9001ac8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001ac8c:	4770      	bx	lr

9001ac8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001ac8e:	4770      	bx	lr

9001ac90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001ac90:	4770      	bx	lr

9001ac92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001ac92:	4770      	bx	lr

9001ac94 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001ac94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ac98:	b088      	sub	sp, #32
9001ac9a:	4606      	mov	r6, r0
9001ac9c:	4688      	mov	r8, r1
9001ac9e:	4691      	mov	r9, r2
9001aca0:	ac08      	add	r4, sp, #32
9001aca2:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001aca6:	4620      	mov	r0, r4
9001aca8:	f7fd fc64 	bl	90018574 <_ZNK8touchgfx6Bitmap7getDataEv>
9001acac:	6833      	ldr	r3, [r6, #0]
9001acae:	4605      	mov	r5, r0
9001acb0:	4620      	mov	r0, r4
9001acb2:	699f      	ldr	r7, [r3, #24]
9001acb4:	f7fd fb72 	bl	9001839c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001acb8:	4682      	mov	sl, r0
9001acba:	4620      	mov	r0, r4
9001acbc:	f7fd fba2 	bl	90018404 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001acc0:	9500      	str	r5, [sp, #0]
9001acc2:	464b      	mov	r3, r9
9001acc4:	4642      	mov	r2, r8
9001acc6:	4631      	mov	r1, r6
9001acc8:	e9cd a001 	strd	sl, r0, [sp, #4]
9001accc:	a806      	add	r0, sp, #24
9001acce:	47b8      	blx	r7
9001acd0:	4628      	mov	r0, r5
9001acd2:	b008      	add	sp, #32
9001acd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001acd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001acd8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001acdc:	2300      	movs	r3, #0
9001acde:	9300      	str	r3, [sp, #0]
9001ace0:	4b3d      	ldr	r3, [pc, #244]	@ (9001add8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001ace2:	781b      	ldrb	r3, [r3, #0]
9001ace4:	2b00      	cmp	r3, #0
9001ace6:	d137      	bne.n	9001ad58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001ace8:	4a3c      	ldr	r2, [pc, #240]	@ (9001addc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001acea:	f9b2 2000 	ldrsh.w	r2, [r2]
9001acee:	f8ad 2004 	strh.w	r2, [sp, #4]
9001acf2:	2b00      	cmp	r3, #0
9001acf4:	d132      	bne.n	9001ad5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001acf6:	4b3a      	ldr	r3, [pc, #232]	@ (9001ade0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001acf8:	f9b3 3000 	ldrsh.w	r3, [r3]
9001acfc:	ac02      	add	r4, sp, #8
9001acfe:	6808      	ldr	r0, [r1, #0]
9001ad00:	f8ad 3006 	strh.w	r3, [sp, #6]
9001ad04:	ab02      	add	r3, sp, #8
9001ad06:	6849      	ldr	r1, [r1, #4]
9001ad08:	4d36      	ldr	r5, [pc, #216]	@ (9001ade4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001ad0a:	c303      	stmia	r3!, {r0, r1}
9001ad0c:	4669      	mov	r1, sp
9001ad0e:	4620      	mov	r0, r4
9001ad10:	f7fa f9e0 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ad14:	4668      	mov	r0, sp
9001ad16:	f7fa f9b5 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ad1a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001ad1e:	f8bd 2000 	ldrh.w	r2, [sp]
9001ad22:	462f      	mov	r7, r5
9001ad24:	6828      	ldr	r0, [r5, #0]
9001ad26:	4413      	add	r3, r2
9001ad28:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001ad2c:	f8ad 3008 	strh.w	r3, [sp, #8]
9001ad30:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001ad34:	4413      	add	r3, r2
9001ad36:	f8ad 300a 	strh.w	r3, [sp, #10]
9001ad3a:	6803      	ldr	r3, [r0, #0]
9001ad3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001ad3e:	4798      	blx	r3
9001ad40:	f010 0f01 	tst.w	r0, #1
9001ad44:	d00c      	beq.n	9001ad60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001ad46:	6828      	ldr	r0, [r5, #0]
9001ad48:	6803      	ldr	r3, [r0, #0]
9001ad4a:	e894 0006 	ldmia.w	r4, {r1, r2}
9001ad4e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001ad50:	4798      	blx	r3
9001ad52:	b004      	add	sp, #16
9001ad54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ad58:	4a21      	ldr	r2, [pc, #132]	@ (9001ade0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001ad5a:	e7c6      	b.n	9001acea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001ad5c:	4b1f      	ldr	r3, [pc, #124]	@ (9001addc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ad5e:	e7cb      	b.n	9001acf8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001ad60:	6838      	ldr	r0, [r7, #0]
9001ad62:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001ad66:	6803      	ldr	r3, [r0, #0]
9001ad68:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001ad6c:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001ad70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ad72:	4798      	blx	r3
9001ad74:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001ad78:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ad7c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001ad80:	fb16 3602 	smlabb	r6, r6, r2, r3
9001ad84:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001ad88:	6838      	ldr	r0, [r7, #0]
9001ad8a:	6803      	ldr	r3, [r0, #0]
9001ad8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ad8e:	4798      	blx	r3
9001ad90:	4a12      	ldr	r2, [pc, #72]	@ (9001addc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ad92:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001ad96:	8813      	ldrh	r3, [r2, #0]
9001ad98:	4691      	mov	r9, r2
9001ad9a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001ad9e:	435d      	muls	r5, r3
9001ada0:	fb03 1404 	mla	r4, r3, r4, r1
9001ada4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001ada8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001adac:	6838      	ldr	r0, [r7, #0]
9001adae:	42ac      	cmp	r4, r5
9001adb0:	6803      	ldr	r3, [r0, #0]
9001adb2:	d20e      	bcs.n	9001add2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001adb4:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
9001adb8:	4632      	mov	r2, r6
9001adba:	4643      	mov	r3, r8
9001adbc:	4621      	mov	r1, r4
9001adbe:	47d0      	blx	sl
9001adc0:	f8b9 3000 	ldrh.w	r3, [r9]
9001adc4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001adc8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001adcc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001add0:	e7ec      	b.n	9001adac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001add2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001add4:	4798      	blx	r3
9001add6:	e7bc      	b.n	9001ad52 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001add8:	24021c54 	.word	0x24021c54
9001addc:	24021c56 	.word	0x24021c56
9001ade0:	24021c58 	.word	0x24021c58
9001ade4:	24021c5c 	.word	0x24021c5c

9001ade8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001ade8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001adec:	b08b      	sub	sp, #44	@ 0x2c
9001adee:	460f      	mov	r7, r1
9001adf0:	4616      	mov	r6, r2
9001adf2:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001adf6:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001adfa:	f1bb 0f00 	cmp.w	fp, #0
9001adfe:	d04a      	beq.n	9001ae96 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001ae00:	6810      	ldr	r0, [r2, #0]
9001ae02:	ad06      	add	r5, sp, #24
9001ae04:	6851      	ldr	r1, [r2, #4]
9001ae06:	c503      	stmia	r5!, {r0, r1}
9001ae08:	6818      	ldr	r0, [r3, #0]
9001ae0a:	ad08      	add	r5, sp, #32
9001ae0c:	6859      	ldr	r1, [r3, #4]
9001ae0e:	c503      	stmia	r5!, {r0, r1}
9001ae10:	a806      	add	r0, sp, #24
9001ae12:	f7fa f937 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ae16:	4631      	mov	r1, r6
9001ae18:	a808      	add	r0, sp, #32
9001ae1a:	f7fa f95b 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ae1e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001ae22:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001ae26:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001ae2a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001ae2e:	fb16 2103 	smlabb	r1, r6, r3, r2
9001ae32:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001ae36:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001ae3a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001ae3e:	4f5f      	ldr	r7, [pc, #380]	@ (9001afbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001ae40:	440a      	add	r2, r1
9001ae42:	6838      	ldr	r0, [r7, #0]
9001ae44:	46b9      	mov	r9, r7
9001ae46:	f8ad 2020 	strh.w	r2, [sp, #32]
9001ae4a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001ae4e:	4413      	add	r3, r2
9001ae50:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001ae54:	6803      	ldr	r3, [r0, #0]
9001ae56:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001ae58:	4798      	blx	r3
9001ae5a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001ae5e:	d11d      	bne.n	9001ae9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001ae60:	b9fc      	cbnz	r4, 9001aea2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001ae62:	f010 0f01 	tst.w	r0, #1
9001ae66:	d01c      	beq.n	9001aea2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001ae68:	f8d9 0000 	ldr.w	r0, [r9]
9001ae6c:	2700      	movs	r7, #0
9001ae6e:	b2ad      	uxth	r5, r5
9001ae70:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001ae74:	6801      	ldr	r1, [r0, #0]
9001ae76:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001ae7a:	f8cd b00c 	str.w	fp, [sp, #12]
9001ae7e:	9501      	str	r5, [sp, #4]
9001ae80:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001ae84:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001ae88:	9402      	str	r4, [sp, #8]
9001ae8a:	fa1f f488 	uxth.w	r4, r8
9001ae8e:	9400      	str	r4, [sp, #0]
9001ae90:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
9001ae92:	4631      	mov	r1, r6
9001ae94:	47a0      	blx	r4
9001ae96:	b00b      	add	sp, #44	@ 0x2c
9001ae98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ae9c:	f010 0f04 	tst.w	r0, #4
9001aea0:	e7e1      	b.n	9001ae66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001aea2:	f8d9 0000 	ldr.w	r0, [r9]
9001aea6:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001aeaa:	6803      	ldr	r3, [r0, #0]
9001aeac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001aeae:	4798      	blx	r3
9001aeb0:	4b43      	ldr	r3, [pc, #268]	@ (9001afc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001aeb2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001aeb6:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001aeba:	881a      	ldrh	r2, [r3, #0]
9001aebc:	469a      	mov	sl, r3
9001aebe:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001aec2:	fb05 f502 	mul.w	r5, r5, r2
9001aec6:	fb02 1404 	mla	r4, r2, r4, r1
9001aeca:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001aece:	d059      	beq.n	9001af84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001aed0:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001aed4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001aed8:	fa1f f28b 	uxth.w	r2, fp
9001aedc:	469e      	mov	lr, r3
9001aede:	fa1f f989 	uxth.w	r9, r9
9001aee2:	42ac      	cmp	r4, r5
9001aee4:	d264      	bcs.n	9001afb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001aee6:	eb04 0a07 	add.w	sl, r4, r7
9001aeea:	4554      	cmp	r4, sl
9001aeec:	d23d      	bcs.n	9001af6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001aeee:	8821      	ldrh	r1, [r4, #0]
9001aef0:	f836 3b02 	ldrh.w	r3, [r6], #2
9001aef4:	1208      	asrs	r0, r1, #8
9001aef6:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001aefa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001aefe:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001af02:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001af06:	00c9      	lsls	r1, r1, #3
9001af08:	fb10 f009 	smulbb	r0, r0, r9
9001af0c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001af10:	b2c9      	uxtb	r1, r1
9001af12:	fb0c 0c02 	mla	ip, ip, r2, r0
9001af16:	10d8      	asrs	r0, r3, #3
9001af18:	fb1b fb09 	smulbb	fp, fp, r9
9001af1c:	00db      	lsls	r3, r3, #3
9001af1e:	fa1f fc8c 	uxth.w	ip, ip
9001af22:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001af26:	fb11 f109 	smulbb	r1, r1, r9
9001af2a:	b2db      	uxtb	r3, r3
9001af2c:	fb00 b002 	mla	r0, r0, r2, fp
9001af30:	f10c 0b01 	add.w	fp, ip, #1
9001af34:	fb03 1302 	mla	r3, r3, r2, r1
9001af38:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001af3c:	b29b      	uxth	r3, r3
9001af3e:	b280      	uxth	r0, r0
9001af40:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001af44:	f103 0c01 	add.w	ip, r3, #1
9001af48:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001af4c:	1c43      	adds	r3, r0, #1
9001af4e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001af52:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001af56:	0940      	lsrs	r0, r0, #5
9001af58:	ea4c 0c0b 	orr.w	ip, ip, fp
9001af5c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001af60:	ea4c 0c00 	orr.w	ip, ip, r0
9001af64:	f824 cb02 	strh.w	ip, [r4], #2
9001af68:	e7bf      	b.n	9001aeea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001af6a:	f8be 3000 	ldrh.w	r3, [lr]
9001af6e:	eba3 0308 	sub.w	r3, r3, r8
9001af72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001af76:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001af7a:	eba3 0308 	sub.w	r3, r3, r8
9001af7e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001af82:	e7ae      	b.n	9001aee2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001af84:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001af88:	f8d9 0000 	ldr.w	r0, [r9]
9001af8c:	42ac      	cmp	r4, r5
9001af8e:	6803      	ldr	r3, [r0, #0]
9001af90:	d20e      	bcs.n	9001afb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001af92:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
9001af96:	4632      	mov	r2, r6
9001af98:	463b      	mov	r3, r7
9001af9a:	4621      	mov	r1, r4
9001af9c:	47c0      	blx	r8
9001af9e:	f8ba 3000 	ldrh.w	r3, [sl]
9001afa2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001afa6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001afaa:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001afae:	e7eb      	b.n	9001af88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001afb0:	4b02      	ldr	r3, [pc, #8]	@ (9001afbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001afb2:	6818      	ldr	r0, [r3, #0]
9001afb4:	6803      	ldr	r3, [r0, #0]
9001afb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001afb8:	4798      	blx	r3
9001afba:	e76c      	b.n	9001ae96 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001afbc:	24021c5c 	.word	0x24021c5c
9001afc0:	24021c56 	.word	0x24021c56

9001afc4 <_ZN8touchgfx8LCD16bppD0Ev>:
9001afc4:	b510      	push	{r4, lr}
9001afc6:	4604      	mov	r4, r0
9001afc8:	2188      	movs	r1, #136	@ 0x88
9001afca:	f00b fb9d 	bl	90026708 <_ZdlPvj>
9001afce:	4620      	mov	r0, r4
9001afd0:	bd10      	pop	{r4, pc}

9001afd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001afd2:	b510      	push	{r4, lr}
9001afd4:	4604      	mov	r4, r0
9001afd6:	2104      	movs	r1, #4
9001afd8:	f00b fb96 	bl	90026708 <_ZdlPvj>
9001afdc:	4620      	mov	r0, r4
9001afde:	bd10      	pop	{r4, pc}

9001afe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001afe0:	b510      	push	{r4, lr}
9001afe2:	4604      	mov	r4, r0
9001afe4:	2104      	movs	r1, #4
9001afe6:	f00b fb8f 	bl	90026708 <_ZdlPvj>
9001afea:	4620      	mov	r0, r4
9001afec:	bd10      	pop	{r4, pc}

9001afee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001afee:	b510      	push	{r4, lr}
9001aff0:	4604      	mov	r4, r0
9001aff2:	f640 0144 	movw	r1, #2116	@ 0x844
9001aff6:	f00b fb87 	bl	90026708 <_ZdlPvj>
9001affa:	4620      	mov	r0, r4
9001affc:	bd10      	pop	{r4, pc}

9001affe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001affe:	b510      	push	{r4, lr}
9001b000:	4604      	mov	r4, r0
9001b002:	2104      	movs	r1, #4
9001b004:	f00b fb80 	bl	90026708 <_ZdlPvj>
9001b008:	4620      	mov	r0, r4
9001b00a:	bd10      	pop	{r4, pc}

9001b00c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001b00c:	b510      	push	{r4, lr}
9001b00e:	4604      	mov	r4, r0
9001b010:	2104      	movs	r1, #4
9001b012:	f00b fb79 	bl	90026708 <_ZdlPvj>
9001b016:	4620      	mov	r0, r4
9001b018:	bd10      	pop	{r4, pc}

9001b01a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b01a:	b510      	push	{r4, lr}
9001b01c:	4604      	mov	r4, r0
9001b01e:	2104      	movs	r1, #4
9001b020:	f00b fb72 	bl	90026708 <_ZdlPvj>
9001b024:	4620      	mov	r0, r4
9001b026:	bd10      	pop	{r4, pc}

9001b028 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001b028:	b510      	push	{r4, lr}
9001b02a:	4604      	mov	r4, r0
9001b02c:	2104      	movs	r1, #4
9001b02e:	f00b fb6b 	bl	90026708 <_ZdlPvj>
9001b032:	4620      	mov	r0, r4
9001b034:	bd10      	pop	{r4, pc}

9001b036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001b036:	b510      	push	{r4, lr}
9001b038:	4604      	mov	r4, r0
9001b03a:	2104      	movs	r1, #4
9001b03c:	f00b fb64 	bl	90026708 <_ZdlPvj>
9001b040:	4620      	mov	r0, r4
9001b042:	bd10      	pop	{r4, pc}

9001b044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001b044:	b510      	push	{r4, lr}
9001b046:	4604      	mov	r4, r0
9001b048:	2104      	movs	r1, #4
9001b04a:	f00b fb5d 	bl	90026708 <_ZdlPvj>
9001b04e:	4620      	mov	r0, r4
9001b050:	bd10      	pop	{r4, pc}

9001b052 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b052:	b510      	push	{r4, lr}
9001b054:	4604      	mov	r4, r0
9001b056:	2104      	movs	r1, #4
9001b058:	f00b fb56 	bl	90026708 <_ZdlPvj>
9001b05c:	4620      	mov	r0, r4
9001b05e:	bd10      	pop	{r4, pc}

9001b060 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001b060:	b510      	push	{r4, lr}
9001b062:	4604      	mov	r4, r0
9001b064:	2104      	movs	r1, #4
9001b066:	f00b fb4f 	bl	90026708 <_ZdlPvj>
9001b06a:	4620      	mov	r0, r4
9001b06c:	bd10      	pop	{r4, pc}

9001b06e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b06e:	b510      	push	{r4, lr}
9001b070:	4604      	mov	r4, r0
9001b072:	2104      	movs	r1, #4
9001b074:	f00b fb48 	bl	90026708 <_ZdlPvj>
9001b078:	4620      	mov	r0, r4
9001b07a:	bd10      	pop	{r4, pc}

9001b07c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b07c:	b510      	push	{r4, lr}
9001b07e:	4604      	mov	r4, r0
9001b080:	2104      	movs	r1, #4
9001b082:	f00b fb41 	bl	90026708 <_ZdlPvj>
9001b086:	4620      	mov	r0, r4
9001b088:	bd10      	pop	{r4, pc}

9001b08a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b08a:	b510      	push	{r4, lr}
9001b08c:	4604      	mov	r4, r0
9001b08e:	2104      	movs	r1, #4
9001b090:	f00b fb3a 	bl	90026708 <_ZdlPvj>
9001b094:	4620      	mov	r0, r4
9001b096:	bd10      	pop	{r4, pc}

9001b098 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001b098:	b510      	push	{r4, lr}
9001b09a:	4604      	mov	r4, r0
9001b09c:	2104      	movs	r1, #4
9001b09e:	f00b fb33 	bl	90026708 <_ZdlPvj>
9001b0a2:	4620      	mov	r0, r4
9001b0a4:	bd10      	pop	{r4, pc}

9001b0a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001b0a6:	b510      	push	{r4, lr}
9001b0a8:	4604      	mov	r4, r0
9001b0aa:	2104      	movs	r1, #4
9001b0ac:	f00b fb2c 	bl	90026708 <_ZdlPvj>
9001b0b0:	4620      	mov	r0, r4
9001b0b2:	bd10      	pop	{r4, pc}

9001b0b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001b0b4:	b510      	push	{r4, lr}
9001b0b6:	4604      	mov	r4, r0
9001b0b8:	2104      	movs	r1, #4
9001b0ba:	f00b fb25 	bl	90026708 <_ZdlPvj>
9001b0be:	4620      	mov	r0, r4
9001b0c0:	bd10      	pop	{r4, pc}

9001b0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b0c2:	b510      	push	{r4, lr}
9001b0c4:	4604      	mov	r4, r0
9001b0c6:	2104      	movs	r1, #4
9001b0c8:	f00b fb1e 	bl	90026708 <_ZdlPvj>
9001b0cc:	4620      	mov	r0, r4
9001b0ce:	bd10      	pop	{r4, pc}

9001b0d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b0d0:	b510      	push	{r4, lr}
9001b0d2:	4604      	mov	r4, r0
9001b0d4:	2104      	movs	r1, #4
9001b0d6:	f00b fb17 	bl	90026708 <_ZdlPvj>
9001b0da:	4620      	mov	r0, r4
9001b0dc:	bd10      	pop	{r4, pc}

9001b0de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001b0de:	b510      	push	{r4, lr}
9001b0e0:	4604      	mov	r4, r0
9001b0e2:	2104      	movs	r1, #4
9001b0e4:	f00b fb10 	bl	90026708 <_ZdlPvj>
9001b0e8:	4620      	mov	r0, r4
9001b0ea:	bd10      	pop	{r4, pc}

9001b0ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001b0ec:	b510      	push	{r4, lr}
9001b0ee:	4604      	mov	r4, r0
9001b0f0:	2104      	movs	r1, #4
9001b0f2:	f00b fb09 	bl	90026708 <_ZdlPvj>
9001b0f6:	4620      	mov	r0, r4
9001b0f8:	bd10      	pop	{r4, pc}

9001b0fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b0fa:	b510      	push	{r4, lr}
9001b0fc:	4604      	mov	r4, r0
9001b0fe:	2104      	movs	r1, #4
9001b100:	f00b fb02 	bl	90026708 <_ZdlPvj>
9001b104:	4620      	mov	r0, r4
9001b106:	bd10      	pop	{r4, pc}

9001b108 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001b108:	b510      	push	{r4, lr}
9001b10a:	4604      	mov	r4, r0
9001b10c:	2104      	movs	r1, #4
9001b10e:	f00b fafb 	bl	90026708 <_ZdlPvj>
9001b112:	4620      	mov	r0, r4
9001b114:	bd10      	pop	{r4, pc}

9001b116 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001b116:	b510      	push	{r4, lr}
9001b118:	4604      	mov	r4, r0
9001b11a:	2104      	movs	r1, #4
9001b11c:	f00b faf4 	bl	90026708 <_ZdlPvj>
9001b120:	4620      	mov	r0, r4
9001b122:	bd10      	pop	{r4, pc}

9001b124 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001b124:	b510      	push	{r4, lr}
9001b126:	4604      	mov	r4, r0
9001b128:	2104      	movs	r1, #4
9001b12a:	f00b faed 	bl	90026708 <_ZdlPvj>
9001b12e:	4620      	mov	r0, r4
9001b130:	bd10      	pop	{r4, pc}

9001b132 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001b132:	b510      	push	{r4, lr}
9001b134:	4604      	mov	r4, r0
9001b136:	2104      	movs	r1, #4
9001b138:	f00b fae6 	bl	90026708 <_ZdlPvj>
9001b13c:	4620      	mov	r0, r4
9001b13e:	bd10      	pop	{r4, pc}

9001b140 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001b140:	b510      	push	{r4, lr}
9001b142:	4604      	mov	r4, r0
9001b144:	2104      	movs	r1, #4
9001b146:	f00b fadf 	bl	90026708 <_ZdlPvj>
9001b14a:	4620      	mov	r0, r4
9001b14c:	bd10      	pop	{r4, pc}

9001b14e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001b14e:	b510      	push	{r4, lr}
9001b150:	4604      	mov	r4, r0
9001b152:	2104      	movs	r1, #4
9001b154:	f00b fad8 	bl	90026708 <_ZdlPvj>
9001b158:	4620      	mov	r0, r4
9001b15a:	bd10      	pop	{r4, pc}

9001b15c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001b15c:	b510      	push	{r4, lr}
9001b15e:	4604      	mov	r4, r0
9001b160:	2104      	movs	r1, #4
9001b162:	f00b fad1 	bl	90026708 <_ZdlPvj>
9001b166:	4620      	mov	r0, r4
9001b168:	bd10      	pop	{r4, pc}

9001b16a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001b16a:	b510      	push	{r4, lr}
9001b16c:	4604      	mov	r4, r0
9001b16e:	2104      	movs	r1, #4
9001b170:	f00b faca 	bl	90026708 <_ZdlPvj>
9001b174:	4620      	mov	r0, r4
9001b176:	bd10      	pop	{r4, pc}

9001b178 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001b178:	b510      	push	{r4, lr}
9001b17a:	4604      	mov	r4, r0
9001b17c:	2104      	movs	r1, #4
9001b17e:	f00b fac3 	bl	90026708 <_ZdlPvj>
9001b182:	4620      	mov	r0, r4
9001b184:	bd10      	pop	{r4, pc}
	...

9001b188 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001b188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b18c:	b08f      	sub	sp, #60	@ 0x3c
9001b18e:	461c      	mov	r4, r3
9001b190:	9205      	str	r2, [sp, #20]
9001b192:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b196:	9100      	str	r1, [sp, #0]
9001b198:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001b19a:	9201      	str	r2, [sp, #4]
9001b19c:	2a00      	cmp	r2, #0
9001b19e:	f000 8116 	beq.w	9001b3ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001b1a2:	6820      	ldr	r0, [r4, #0]
9001b1a4:	aa0a      	add	r2, sp, #40	@ 0x28
9001b1a6:	6861      	ldr	r1, [r4, #4]
9001b1a8:	c203      	stmia	r2!, {r0, r1}
9001b1aa:	6818      	ldr	r0, [r3, #0]
9001b1ac:	aa0c      	add	r2, sp, #48	@ 0x30
9001b1ae:	6859      	ldr	r1, [r3, #4]
9001b1b0:	c203      	stmia	r2!, {r0, r1}
9001b1b2:	a80a      	add	r0, sp, #40	@ 0x28
9001b1b4:	f7f9 ff66 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b1b8:	4621      	mov	r1, r4
9001b1ba:	a80c      	add	r0, sp, #48	@ 0x30
9001b1bc:	f7f9 ff8a 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b1c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001b1c4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001b1c8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001b1cc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001b1d0:	bfdb      	ittet	le
9001b1d2:	b2b3      	uxthle	r3, r6
9001b1d4:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001b1d8:	2301      	movgt	r3, #1
9001b1da:	fb92 f3f3 	sdivle	r3, r2, r3
9001b1de:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001b1e2:	441d      	add	r5, r3
9001b1e4:	fb92 f1f3 	sdiv	r1, r2, r3
9001b1e8:	fa1f fc81 	uxth.w	ip, r1
9001b1ec:	3d01      	subs	r5, #1
9001b1ee:	fb0c 2413 	mls	r4, ip, r3, r2
9001b1f2:	4661      	mov	r1, ip
9001b1f4:	fb14 f406 	smulbb	r4, r4, r6
9001b1f8:	4404      	add	r4, r0
9001b1fa:	fb95 f5f3 	sdiv	r5, r5, r3
9001b1fe:	b2a4      	uxth	r4, r4
9001b200:	b131      	cbz	r1, 9001b210 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001b202:	9b05      	ldr	r3, [sp, #20]
9001b204:	9900      	ldr	r1, [sp, #0]
9001b206:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b20a:	ba1b      	rev	r3, r3
9001b20c:	4419      	add	r1, r3
9001b20e:	9100      	str	r1, [sp, #0]
9001b210:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001b214:	b2ad      	uxth	r5, r5
9001b216:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001b21a:	4418      	add	r0, r3
9001b21c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001b220:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001b224:	00ad      	lsls	r5, r5, #2
9001b226:	441a      	add	r2, r3
9001b228:	4b6a      	ldr	r3, [pc, #424]	@ (9001b3d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001b22a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001b22e:	6818      	ldr	r0, [r3, #0]
9001b230:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001b234:	6803      	ldr	r3, [r0, #0]
9001b236:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b238:	4798      	blx	r3
9001b23a:	4967      	ldr	r1, [pc, #412]	@ (9001b3d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001b23c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001b240:	2c00      	cmp	r4, #0
9001b242:	880b      	ldrh	r3, [r1, #0]
9001b244:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001b248:	bf0c      	ite	eq
9001b24a:	46c6      	moveq	lr, r8
9001b24c:	f04f 0e00 	movne.w	lr, #0
9001b250:	9109      	str	r1, [sp, #36]	@ 0x24
9001b252:	fb03 c202 	mla	r2, r3, r2, ip
9001b256:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001b25a:	4373      	muls	r3, r6
9001b25c:	fa1f fe8e 	uxth.w	lr, lr
9001b260:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b264:	9103      	str	r1, [sp, #12]
9001b266:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b26a:	9306      	str	r3, [sp, #24]
9001b26c:	1d2b      	adds	r3, r5, #4
9001b26e:	9307      	str	r3, [sp, #28]
9001b270:	9b01      	ldr	r3, [sp, #4]
9001b272:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001b276:	2300      	movs	r3, #0
9001b278:	b292      	uxth	r2, r2
9001b27a:	9302      	str	r3, [sp, #8]
9001b27c:	9204      	str	r2, [sp, #16]
9001b27e:	9a06      	ldr	r2, [sp, #24]
9001b280:	4282      	cmp	r2, r0
9001b282:	f240 809f 	bls.w	9001b3c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001b286:	b963      	cbnz	r3, 9001b2a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001b288:	9b00      	ldr	r3, [sp, #0]
9001b28a:	781a      	ldrb	r2, [r3, #0]
9001b28c:	0993      	lsrs	r3, r2, #6
9001b28e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001b292:	9202      	str	r2, [sp, #8]
9001b294:	1e5a      	subs	r2, r3, #1
9001b296:	2a02      	cmp	r2, #2
9001b298:	d815      	bhi.n	9001b2c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001b29a:	9a00      	ldr	r2, [sp, #0]
9001b29c:	b29b      	uxth	r3, r3
9001b29e:	3201      	adds	r2, #1
9001b2a0:	9200      	str	r2, [sp, #0]
9001b2a2:	b1b4      	cbz	r4, 9001b2d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001b2a4:	429c      	cmp	r4, r3
9001b2a6:	bf91      	iteee	ls
9001b2a8:	1b1c      	subls	r4, r3, r4
9001b2aa:	1ae4      	subhi	r4, r4, r3
9001b2ac:	4671      	movhi	r1, lr
9001b2ae:	f04f 0a00 	movhi.w	sl, #0
9001b2b2:	bf9b      	ittet	ls
9001b2b4:	fa1f fa84 	uxthls.w	sl, r4
9001b2b8:	2400      	movls	r4, #0
9001b2ba:	b2a4      	uxthhi	r4, r4
9001b2bc:	fa1f f188 	uxthls.w	r1, r8
9001b2c0:	4653      	mov	r3, sl
9001b2c2:	468e      	mov	lr, r1
9001b2c4:	e7db      	b.n	9001b27e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001b2c6:	9a00      	ldr	r2, [sp, #0]
9001b2c8:	9b00      	ldr	r3, [sp, #0]
9001b2ca:	3202      	adds	r2, #2
9001b2cc:	785b      	ldrb	r3, [r3, #1]
9001b2ce:	9200      	str	r2, [sp, #0]
9001b2d0:	e7e7      	b.n	9001b2a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001b2d2:	2202      	movs	r2, #2
9001b2d4:	9907      	ldr	r1, [sp, #28]
9001b2d6:	4573      	cmp	r3, lr
9001b2d8:	4615      	mov	r5, r2
9001b2da:	9a02      	ldr	r2, [sp, #8]
9001b2dc:	bf24      	itt	cs
9001b2de:	eba3 0a0e 	subcs.w	sl, r3, lr
9001b2e2:	46f1      	movcs	r9, lr
9001b2e4:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b2e8:	9905      	ldr	r1, [sp, #20]
9001b2ea:	bf34      	ite	cc
9001b2ec:	4699      	movcc	r9, r3
9001b2ee:	fa1f fa8a 	uxthcs.w	sl, sl
9001b2f2:	f831 c002 	ldrh.w	ip, [r1, r2]
9001b2f6:	bf38      	it	cc
9001b2f8:	ebae 0103 	subcc.w	r1, lr, r3
9001b2fc:	9a01      	ldr	r2, [sp, #4]
9001b2fe:	bf2e      	itee	cs
9001b300:	4621      	movcs	r1, r4
9001b302:	b289      	uxthcc	r1, r1
9001b304:	46a2      	movcc	sl, r4
9001b306:	2aff      	cmp	r2, #255	@ 0xff
9001b308:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001b30c:	d105      	bne.n	9001b31a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001b30e:	4481      	add	r9, r0
9001b310:	4581      	cmp	r9, r0
9001b312:	d045      	beq.n	9001b3a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001b314:	f820 cb02 	strh.w	ip, [r0], #2
9001b318:	e7fa      	b.n	9001b310 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001b31a:	ea4f 222c 	mov.w	r2, ip, asr #8
9001b31e:	9d03      	ldr	r5, [sp, #12]
9001b320:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001b324:	4481      	add	r9, r0
9001b326:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b32a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001b32e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001b332:	fa5f fc8c 	uxtb.w	ip, ip
9001b336:	436a      	muls	r2, r5
9001b338:	fb0b fb05 	mul.w	fp, fp, r5
9001b33c:	fb0c fc05 	mul.w	ip, ip, r5
9001b340:	9208      	str	r2, [sp, #32]
9001b342:	4581      	cmp	r9, r0
9001b344:	d02c      	beq.n	9001b3a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001b346:	8802      	ldrh	r2, [r0, #0]
9001b348:	9d04      	ldr	r5, [sp, #16]
9001b34a:	1216      	asrs	r6, r2, #8
9001b34c:	9f04      	ldr	r7, [sp, #16]
9001b34e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b352:	fb16 f605 	smulbb	r6, r6, r5
9001b356:	9d08      	ldr	r5, [sp, #32]
9001b358:	442e      	add	r6, r5
9001b35a:	10d5      	asrs	r5, r2, #3
9001b35c:	00d2      	lsls	r2, r2, #3
9001b35e:	b2b6      	uxth	r6, r6
9001b360:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001b364:	b2d2      	uxtb	r2, r2
9001b366:	fb15 f507 	smulbb	r5, r5, r7
9001b36a:	fb12 f207 	smulbb	r2, r2, r7
9001b36e:	1c77      	adds	r7, r6, #1
9001b370:	445d      	add	r5, fp
9001b372:	4462      	add	r2, ip
9001b374:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001b378:	b2ad      	uxth	r5, r5
9001b37a:	b292      	uxth	r2, r2
9001b37c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001b380:	1c57      	adds	r7, r2, #1
9001b382:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001b386:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b38a:	4316      	orrs	r6, r2
9001b38c:	1c6a      	adds	r2, r5, #1
9001b38e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b392:	096d      	lsrs	r5, r5, #5
9001b394:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001b398:	432e      	orrs	r6, r5
9001b39a:	f820 6b02 	strh.w	r6, [r0], #2
9001b39e:	e7d0      	b.n	9001b342 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001b3a0:	4573      	cmp	r3, lr
9001b3a2:	d38d      	bcc.n	9001b2c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b3a4:	fa1f f188 	uxth.w	r1, r8
9001b3a8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001b3ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001b3ae:	1a64      	subs	r4, r4, r1
9001b3b0:	881b      	ldrh	r3, [r3, #0]
9001b3b2:	b2a4      	uxth	r4, r4
9001b3b4:	eba3 0308 	sub.w	r3, r3, r8
9001b3b8:	2c00      	cmp	r4, #0
9001b3ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b3be:	bf18      	it	ne
9001b3c0:	2100      	movne	r1, #0
9001b3c2:	e77d      	b.n	9001b2c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b3c4:	4b03      	ldr	r3, [pc, #12]	@ (9001b3d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001b3c6:	6818      	ldr	r0, [r3, #0]
9001b3c8:	6803      	ldr	r3, [r0, #0]
9001b3ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001b3cc:	4798      	blx	r3
9001b3ce:	b00f      	add	sp, #60	@ 0x3c
9001b3d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b3d4:	24021c5c 	.word	0x24021c5c
9001b3d8:	24021c56 	.word	0x24021c56

9001b3dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001b3dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b3e0:	b09f      	sub	sp, #124	@ 0x7c
9001b3e2:	461d      	mov	r5, r3
9001b3e4:	4604      	mov	r4, r0
9001b3e6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001b3e8:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001b3ec:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001b3f0:	9209      	str	r2, [sp, #36]	@ 0x24
9001b3f2:	2a00      	cmp	r2, #0
9001b3f4:	f000 81ed 	beq.w	9001b7d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001b3f8:	6828      	ldr	r0, [r5, #0]
9001b3fa:	aa1a      	add	r2, sp, #104	@ 0x68
9001b3fc:	6869      	ldr	r1, [r5, #4]
9001b3fe:	c203      	stmia	r2!, {r0, r1}
9001b400:	6818      	ldr	r0, [r3, #0]
9001b402:	aa1c      	add	r2, sp, #112	@ 0x70
9001b404:	6859      	ldr	r1, [r3, #4]
9001b406:	c203      	stmia	r2!, {r0, r1}
9001b408:	a81a      	add	r0, sp, #104	@ 0x68
9001b40a:	f7f9 fe3b 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b40e:	4629      	mov	r1, r5
9001b410:	a81c      	add	r0, sp, #112	@ 0x70
9001b412:	f7f9 fe5f 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b416:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001b41a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001b41e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001b422:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001b426:	bfdb      	ittet	le
9001b428:	b29a      	uxthle	r2, r3
9001b42a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001b42e:	2201      	movgt	r2, #1
9001b430:	fb91 f2f2 	sdivle	r2, r1, r2
9001b434:	9202      	str	r2, [sp, #8]
9001b436:	9802      	ldr	r0, [sp, #8]
9001b438:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001b43c:	9902      	ldr	r1, [sp, #8]
9001b43e:	fb92 f0f0 	sdiv	r0, r2, r0
9001b442:	b280      	uxth	r0, r0
9001b444:	4488      	add	r8, r1
9001b446:	9010      	str	r0, [sp, #64]	@ 0x40
9001b448:	f108 38ff 	add.w	r8, r8, #4294967295
9001b44c:	9802      	ldr	r0, [sp, #8]
9001b44e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001b450:	fb05 2510 	mls	r5, r5, r0, r2
9001b454:	fb98 f8f1 	sdiv	r8, r8, r1
9001b458:	fb15 f503 	smulbb	r5, r5, r3
9001b45c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001b460:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001b464:	f108 0801 	add.w	r8, r8, #1
9001b468:	440d      	add	r5, r1
9001b46a:	4419      	add	r1, r3
9001b46c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001b470:	fa1f f888 	uxth.w	r8, r8
9001b474:	441a      	add	r2, r3
9001b476:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001b47a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001b47e:	b2ad      	uxth	r5, r5
9001b480:	9304      	str	r3, [sp, #16]
9001b482:	4b94      	ldr	r3, [pc, #592]	@ (9001b6d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001b484:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001b488:	6818      	ldr	r0, [r3, #0]
9001b48a:	6803      	ldr	r3, [r0, #0]
9001b48c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b48e:	4798      	blx	r3
9001b490:	4b91      	ldr	r3, [pc, #580]	@ (9001b6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001b492:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001b496:	2d00      	cmp	r5, #0
9001b498:	881a      	ldrh	r2, [r3, #0]
9001b49a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001b49e:	fb02 f606 	mul.w	r6, r2, r6
9001b4a2:	fb02 7101 	mla	r1, r2, r1, r7
9001b4a6:	9318      	str	r3, [sp, #96]	@ 0x60
9001b4a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b4ac:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001b4b0:	f04f 0100 	mov.w	r1, #0
9001b4b4:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001b4b8:	930f      	str	r3, [sp, #60]	@ 0x3c
9001b4ba:	4b88      	ldr	r3, [pc, #544]	@ (9001b6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001b4bc:	920a      	str	r2, [sp, #40]	@ 0x28
9001b4be:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001b4c0:	eba3 0304 	sub.w	r3, r3, r4
9001b4c4:	910d      	str	r1, [sp, #52]	@ 0x34
9001b4c6:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001b4ca:	9319      	str	r3, [sp, #100]	@ 0x64
9001b4cc:	f108 0204 	add.w	r2, r8, #4
9001b4d0:	9211      	str	r2, [sp, #68]	@ 0x44
9001b4d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001b4d4:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001b4d8:	9215      	str	r2, [sp, #84]	@ 0x54
9001b4da:	9a04      	ldr	r2, [sp, #16]
9001b4dc:	bf18      	it	ne
9001b4de:	2200      	movne	r2, #0
9001b4e0:	b292      	uxth	r2, r2
9001b4e2:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001b4e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001b4e6:	fa11 f383 	uxtah	r3, r1, r3
9001b4ea:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001b4ec:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b4f0:	3304      	adds	r3, #4
9001b4f2:	9306      	str	r3, [sp, #24]
9001b4f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001b4f6:	4283      	cmp	r3, r0
9001b4f8:	f240 8166 	bls.w	9001b7c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001b4fc:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001b500:	f04f 0a01 	mov.w	sl, #1
9001b504:	9902      	ldr	r1, [sp, #8]
9001b506:	9e06      	ldr	r6, [sp, #24]
9001b508:	46d3      	mov	fp, sl
9001b50a:	4657      	mov	r7, sl
9001b50c:	7836      	ldrb	r6, [r6, #0]
9001b50e:	fbb5 f3f3 	udiv	r3, r5, r3
9001b512:	1acb      	subs	r3, r1, r3
9001b514:	9612      	str	r6, [sp, #72]	@ 0x48
9001b516:	3601      	adds	r6, #1
9001b518:	b29b      	uxth	r3, r3
9001b51a:	9605      	str	r6, [sp, #20]
9001b51c:	9316      	str	r3, [sp, #88]	@ 0x58
9001b51e:	9b06      	ldr	r3, [sp, #24]
9001b520:	7859      	ldrb	r1, [r3, #1]
9001b522:	789b      	ldrb	r3, [r3, #2]
9001b524:	021b      	lsls	r3, r3, #8
9001b526:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001b52a:	9906      	ldr	r1, [sp, #24]
9001b52c:	78c9      	ldrb	r1, [r1, #3]
9001b52e:	430b      	orrs	r3, r1
9001b530:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001b532:	4419      	add	r1, r3
9001b534:	1c4e      	adds	r6, r1, #1
9001b536:	7849      	ldrb	r1, [r1, #1]
9001b538:	9603      	str	r6, [sp, #12]
9001b53a:	0209      	lsls	r1, r1, #8
9001b53c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b53e:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001b542:	5cf3      	ldrb	r3, [r6, r3]
9001b544:	4319      	orrs	r1, r3
9001b546:	b28b      	uxth	r3, r1
9001b548:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001b54c:	930c      	str	r3, [sp, #48]	@ 0x30
9001b54e:	2300      	movs	r3, #0
9001b550:	9307      	str	r3, [sp, #28]
9001b552:	469c      	mov	ip, r3
9001b554:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001b558:	930e      	str	r3, [sp, #56]	@ 0x38
9001b55a:	2d00      	cmp	r5, #0
9001b55c:	d07e      	beq.n	9001b65c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001b55e:	42af      	cmp	r7, r5
9001b560:	d26e      	bcs.n	9001b640 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001b562:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001b564:	1bed      	subs	r5, r5, r7
9001b566:	9201      	str	r2, [sp, #4]
9001b568:	4283      	cmp	r3, r0
9001b56a:	b2ad      	uxth	r5, r5
9001b56c:	d802      	bhi.n	9001b574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001b56e:	e073      	b.n	9001b658 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001b570:	2b00      	cmp	r3, #0
9001b572:	d15f      	bne.n	9001b634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001b574:	9b03      	ldr	r3, [sp, #12]
9001b576:	f1cb 0207 	rsb	r2, fp, #7
9001b57a:	785b      	ldrb	r3, [r3, #1]
9001b57c:	4093      	lsls	r3, r2
9001b57e:	005b      	lsls	r3, r3, #1
9001b580:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001b584:	9b03      	ldr	r3, [sp, #12]
9001b586:	781b      	ldrb	r3, [r3, #0]
9001b588:	fa43 f30b 	asr.w	r3, r3, fp
9001b58c:	b2db      	uxtb	r3, r3
9001b58e:	4313      	orrs	r3, r2
9001b590:	f10b 0201 	add.w	r2, fp, #1
9001b594:	fa5f fb82 	uxtb.w	fp, r2
9001b598:	9a03      	ldr	r2, [sp, #12]
9001b59a:	b29f      	uxth	r7, r3
9001b59c:	f1bb 0f08 	cmp.w	fp, #8
9001b5a0:	bf13      	iteet	ne
9001b5a2:	3201      	addne	r2, #1
9001b5a4:	3202      	addeq	r2, #2
9001b5a6:	f04f 0b00 	moveq.w	fp, #0
9001b5aa:	9203      	strne	r2, [sp, #12]
9001b5ac:	bf08      	it	eq
9001b5ae:	9203      	streq	r2, [sp, #12]
9001b5b0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b5b2:	42ba      	cmp	r2, r7
9001b5b4:	d309      	bcc.n	9001b5ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001b5b6:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001b5ba:	2301      	movs	r3, #1
9001b5bc:	9a05      	ldr	r2, [sp, #20]
9001b5be:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001b5c2:	d30e      	bcc.n	9001b5e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001b5c4:	469a      	mov	sl, r3
9001b5c6:	2600      	movs	r6, #0
9001b5c8:	e035      	b.n	9001b636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001b5ca:	9b05      	ldr	r3, [sp, #20]
9001b5cc:	429f      	cmp	r7, r3
9001b5ce:	d318      	bcc.n	9001b602 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001b5d0:	eb04 030a 	add.w	r3, r4, sl
9001b5d4:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001b5d8:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001b5dc:	f10a 0301 	add.w	r3, sl, #1
9001b5e0:	b29b      	uxth	r3, r3
9001b5e2:	9a05      	ldr	r2, [sp, #20]
9001b5e4:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001b5e8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b5ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001b5ee:	7116      	strb	r6, [r2, #4]
9001b5f0:	f10a 0601 	add.w	r6, sl, #1
9001b5f4:	80d1      	strh	r1, [r2, #6]
9001b5f6:	7156      	strb	r6, [r2, #5]
9001b5f8:	9a05      	ldr	r2, [sp, #20]
9001b5fa:	3201      	adds	r2, #1
9001b5fc:	b292      	uxth	r2, r2
9001b5fe:	9205      	str	r2, [sp, #20]
9001b600:	e7e0      	b.n	9001b5c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001b602:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001b606:	463a      	mov	r2, r7
9001b608:	795b      	ldrb	r3, [r3, #5]
9001b60a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001b60e:	4426      	add	r6, r4
9001b610:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001b612:	eb01 0c06 	add.w	ip, r1, r6
9001b616:	f1bc 0f00 	cmp.w	ip, #0
9001b61a:	dd07      	ble.n	9001b62c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001b61c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b620:	f892 c004 	ldrb.w	ip, [r2, #4]
9001b624:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001b628:	88d2      	ldrh	r2, [r2, #6]
9001b62a:	e7f1      	b.n	9001b610 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001b62c:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001b630:	b29b      	uxth	r3, r3
9001b632:	e7c3      	b.n	9001b5bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001b634:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001b636:	970c      	str	r7, [sp, #48]	@ 0x30
9001b638:	46b4      	mov	ip, r6
9001b63a:	9a01      	ldr	r2, [sp, #4]
9001b63c:	461f      	mov	r7, r3
9001b63e:	e78c      	b.n	9001b55a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001b640:	1b7b      	subs	r3, r7, r5
9001b642:	eb0c 0605 	add.w	r6, ip, r5
9001b646:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b64a:	b29b      	uxth	r3, r3
9001b64c:	b2b6      	uxth	r6, r6
9001b64e:	9201      	str	r2, [sp, #4]
9001b650:	2500      	movs	r5, #0
9001b652:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001b654:	4282      	cmp	r2, r0
9001b656:	d88b      	bhi.n	9001b570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001b658:	9a01      	ldr	r2, [sp, #4]
9001b65a:	e74b      	b.n	9001b4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001b65c:	4297      	cmp	r7, r2
9001b65e:	d332      	bcc.n	9001b6c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001b660:	1abb      	subs	r3, r7, r2
9001b662:	9208      	str	r2, [sp, #32]
9001b664:	9501      	str	r5, [sp, #4]
9001b666:	b29b      	uxth	r3, r3
9001b668:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001b66a:	29ff      	cmp	r1, #255	@ 0xff
9001b66c:	9908      	ldr	r1, [sp, #32]
9001b66e:	eb0c 0601 	add.w	r6, ip, r1
9001b672:	d135      	bne.n	9001b6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001b674:	f1a0 0e02 	sub.w	lr, r0, #2
9001b678:	b2b6      	uxth	r6, r6
9001b67a:	45b4      	cmp	ip, r6
9001b67c:	f040 808c 	bne.w	9001b798 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001b680:	9908      	ldr	r1, [sp, #32]
9001b682:	4297      	cmp	r7, r2
9001b684:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b688:	d3e2      	bcc.n	9001b650 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001b68a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001b68c:	9904      	ldr	r1, [sp, #16]
9001b68e:	8812      	ldrh	r2, [r2, #0]
9001b690:	1a52      	subs	r2, r2, r1
9001b692:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001b694:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b698:	9a07      	ldr	r2, [sp, #28]
9001b69a:	3201      	adds	r2, #1
9001b69c:	428a      	cmp	r2, r1
9001b69e:	9207      	str	r2, [sp, #28]
9001b6a0:	f040 8087 	bne.w	9001b7b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001b6a4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001b6a8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001b6ac:	9b04      	ldr	r3, [sp, #16]
9001b6ae:	1bed      	subs	r5, r5, r7
9001b6b0:	b2ad      	uxth	r5, r5
9001b6b2:	2d00      	cmp	r5, #0
9001b6b4:	bf08      	it	eq
9001b6b6:	461a      	moveq	r2, r3
9001b6b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001b6ba:	bf18      	it	ne
9001b6bc:	2200      	movne	r2, #0
9001b6be:	3301      	adds	r3, #1
9001b6c0:	b292      	uxth	r2, r2
9001b6c2:	930d      	str	r3, [sp, #52]	@ 0x34
9001b6c4:	e70d      	b.n	9001b4e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001b6c6:	1bd1      	subs	r1, r2, r7
9001b6c8:	9708      	str	r7, [sp, #32]
9001b6ca:	b28b      	uxth	r3, r1
9001b6cc:	9301      	str	r3, [sp, #4]
9001b6ce:	462b      	mov	r3, r5
9001b6d0:	e7ca      	b.n	9001b668 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001b6d2:	bf00      	nop
9001b6d4:	24021c5c 	.word	0x24021c5c
9001b6d8:	24021c56 	.word	0x24021c56
9001b6dc:	fffff7fb 	.word	0xfffff7fb
9001b6e0:	b2b6      	uxth	r6, r6
9001b6e2:	900b      	str	r0, [sp, #44]	@ 0x2c
9001b6e4:	45b4      	cmp	ip, r6
9001b6e6:	d0cb      	beq.n	9001b680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001b6e8:	f10c 0101 	add.w	r1, ip, #1
9001b6ec:	44a4      	add	ip, r4
9001b6ee:	9117      	str	r1, [sp, #92]	@ 0x5c
9001b6f0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001b6f4:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001b6f6:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b6fa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001b6fc:	ea4f 2825 	mov.w	r8, r5, asr #8
9001b700:	f8b1 c000 	ldrh.w	ip, [r1]
9001b704:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001b706:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001b70a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001b70e:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001b712:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001b716:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b71a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001b71e:	fb1e fe01 	smulbb	lr, lr, r1
9001b722:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001b724:	fa5f fc8c 	uxtb.w	ip, ip
9001b728:	fb08 e801 	mla	r8, r8, r1, lr
9001b72c:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001b730:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001b732:	00ed      	lsls	r5, r5, #3
9001b734:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001b738:	fa1f f888 	uxth.w	r8, r8
9001b73c:	fb19 f901 	smulbb	r9, r9, r1
9001b740:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001b742:	b2ed      	uxtb	r5, r5
9001b744:	fb0e 9e01 	mla	lr, lr, r1, r9
9001b748:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001b74a:	fb1c fc01 	smulbb	ip, ip, r1
9001b74e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001b750:	fa1f fe8e 	uxth.w	lr, lr
9001b754:	fb05 c501 	mla	r5, r5, r1, ip
9001b758:	f108 0c01 	add.w	ip, r8, #1
9001b75c:	f10e 0901 	add.w	r9, lr, #1
9001b760:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001b762:	b2ad      	uxth	r5, r5
9001b764:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001b768:	f105 0c01 	add.w	ip, r5, #1
9001b76c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001b770:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001b774:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001b778:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b77c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001b780:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001b784:	ea4c 0808 	orr.w	r8, ip, r8
9001b788:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001b78c:	ea48 0809 	orr.w	r8, r8, r9
9001b790:	f821 8b02 	strh.w	r8, [r1], #2
9001b794:	910b      	str	r1, [sp, #44]	@ 0x2c
9001b796:	e7a5      	b.n	9001b6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001b798:	f10c 0801 	add.w	r8, ip, #1
9001b79c:	44a4      	add	ip, r4
9001b79e:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001b7a0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001b7a4:	fa1f fc88 	uxth.w	ip, r8
9001b7a8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b7ac:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001b7b0:	e763      	b.n	9001b67a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001b7b2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b7b6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001b7ba:	1aad      	subs	r5, r5, r2
9001b7bc:	b2ad      	uxth	r5, r5
9001b7be:	2d00      	cmp	r5, #0
9001b7c0:	bf18      	it	ne
9001b7c2:	2200      	movne	r2, #0
9001b7c4:	9201      	str	r2, [sp, #4]
9001b7c6:	e744      	b.n	9001b652 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001b7c8:	4b03      	ldr	r3, [pc, #12]	@ (9001b7d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001b7ca:	6818      	ldr	r0, [r3, #0]
9001b7cc:	6803      	ldr	r3, [r0, #0]
9001b7ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001b7d0:	4798      	blx	r3
9001b7d2:	b01f      	add	sp, #124	@ 0x7c
9001b7d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b7d8:	24021c5c 	.word	0x24021c5c

9001b7dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001b7dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b7e0:	b08f      	sub	sp, #60	@ 0x3c
9001b7e2:	461c      	mov	r4, r3
9001b7e4:	460f      	mov	r7, r1
9001b7e6:	9203      	str	r2, [sp, #12]
9001b7e8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b7ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001b7ee:	9202      	str	r2, [sp, #8]
9001b7f0:	2a00      	cmp	r2, #0
9001b7f2:	f000 8128 	beq.w	9001ba46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001b7f6:	6820      	ldr	r0, [r4, #0]
9001b7f8:	aa0a      	add	r2, sp, #40	@ 0x28
9001b7fa:	6861      	ldr	r1, [r4, #4]
9001b7fc:	c203      	stmia	r2!, {r0, r1}
9001b7fe:	6818      	ldr	r0, [r3, #0]
9001b800:	aa0c      	add	r2, sp, #48	@ 0x30
9001b802:	6859      	ldr	r1, [r3, #4]
9001b804:	c203      	stmia	r2!, {r0, r1}
9001b806:	a80a      	add	r0, sp, #40	@ 0x28
9001b808:	f7f9 fc3c 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b80c:	4621      	mov	r1, r4
9001b80e:	a80c      	add	r0, sp, #48	@ 0x30
9001b810:	f7f9 fc60 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b814:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001b818:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001b81c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001b820:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001b824:	bfdb      	ittet	le
9001b826:	b2b3      	uxthle	r3, r6
9001b828:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001b82c:	2301      	movgt	r3, #1
9001b82e:	fb92 f3f3 	sdivle	r3, r2, r3
9001b832:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001b836:	441d      	add	r5, r3
9001b838:	fb92 f1f3 	sdiv	r1, r2, r3
9001b83c:	fa1f fc81 	uxth.w	ip, r1
9001b840:	3d01      	subs	r5, #1
9001b842:	fb0c 2413 	mls	r4, ip, r3, r2
9001b846:	4661      	mov	r1, ip
9001b848:	fb14 f406 	smulbb	r4, r4, r6
9001b84c:	4404      	add	r4, r0
9001b84e:	fb95 f5f3 	sdiv	r5, r5, r3
9001b852:	b2a4      	uxth	r4, r4
9001b854:	b121      	cbz	r1, 9001b860 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001b856:	9b03      	ldr	r3, [sp, #12]
9001b858:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b85c:	ba1b      	rev	r3, r3
9001b85e:	441f      	add	r7, r3
9001b860:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001b864:	b2ad      	uxth	r5, r5
9001b866:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001b86a:	4418      	add	r0, r3
9001b86c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001b870:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001b874:	00ad      	lsls	r5, r5, #2
9001b876:	441a      	add	r2, r3
9001b878:	4b74      	ldr	r3, [pc, #464]	@ (9001ba4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b87a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001b87e:	6818      	ldr	r0, [r3, #0]
9001b880:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001b884:	6803      	ldr	r3, [r0, #0]
9001b886:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b888:	4798      	blx	r3
9001b88a:	4a71      	ldr	r2, [pc, #452]	@ (9001ba50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001b88c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001b890:	2c00      	cmp	r4, #0
9001b892:	8813      	ldrh	r3, [r2, #0]
9001b894:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001b898:	bf0c      	ite	eq
9001b89a:	46c8      	moveq	r8, r9
9001b89c:	f04f 0800 	movne.w	r8, #0
9001b8a0:	9209      	str	r2, [sp, #36]	@ 0x24
9001b8a2:	fb03 c101 	mla	r1, r3, r1, ip
9001b8a6:	4373      	muls	r3, r6
9001b8a8:	fa1f f888 	uxth.w	r8, r8
9001b8ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b8b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b8b4:	9304      	str	r3, [sp, #16]
9001b8b6:	1d2b      	adds	r3, r5, #4
9001b8b8:	9305      	str	r3, [sp, #20]
9001b8ba:	2300      	movs	r3, #0
9001b8bc:	9301      	str	r3, [sp, #4]
9001b8be:	9a04      	ldr	r2, [sp, #16]
9001b8c0:	4282      	cmp	r2, r0
9001b8c2:	f240 80bb 	bls.w	9001ba3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001b8c6:	b95b      	cbnz	r3, 9001b8e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001b8c8:	783a      	ldrb	r2, [r7, #0]
9001b8ca:	0993      	lsrs	r3, r2, #6
9001b8cc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001b8d0:	9201      	str	r2, [sp, #4]
9001b8d2:	1e5a      	subs	r2, r3, #1
9001b8d4:	2a02      	cmp	r2, #2
9001b8d6:	bf8d      	iteet	hi
9001b8d8:	787b      	ldrbhi	r3, [r7, #1]
9001b8da:	3701      	addls	r7, #1
9001b8dc:	b29b      	uxthls	r3, r3
9001b8de:	3702      	addhi	r7, #2
9001b8e0:	b184      	cbz	r4, 9001b904 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001b8e2:	429c      	cmp	r4, r3
9001b8e4:	bf91      	iteee	ls
9001b8e6:	1b1c      	subls	r4, r3, r4
9001b8e8:	1ae4      	subhi	r4, r4, r3
9001b8ea:	46c4      	movhi	ip, r8
9001b8ec:	f04f 0a00 	movhi.w	sl, #0
9001b8f0:	bf9b      	ittet	ls
9001b8f2:	fa1f fa84 	uxthls.w	sl, r4
9001b8f6:	2400      	movls	r4, #0
9001b8f8:	b2a4      	uxthhi	r4, r4
9001b8fa:	fa1f fc89 	uxthls.w	ip, r9
9001b8fe:	4653      	mov	r3, sl
9001b900:	46e0      	mov	r8, ip
9001b902:	e7dc      	b.n	9001b8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001b904:	2204      	movs	r2, #4
9001b906:	9905      	ldr	r1, [sp, #20]
9001b908:	4543      	cmp	r3, r8
9001b90a:	4615      	mov	r5, r2
9001b90c:	9a01      	ldr	r2, [sp, #4]
9001b90e:	bf24      	itt	cs
9001b910:	eba3 0a08 	subcs.w	sl, r3, r8
9001b914:	46c6      	movcs	lr, r8
9001b916:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b91a:	9903      	ldr	r1, [sp, #12]
9001b91c:	bf3c      	itt	cc
9001b91e:	eba8 0c03 	subcc.w	ip, r8, r3
9001b922:	469e      	movcc	lr, r3
9001b924:	588a      	ldr	r2, [r1, r2]
9001b926:	bf26      	itte	cs
9001b928:	fa1f fa8a 	uxthcs.w	sl, sl
9001b92c:	46a4      	movcs	ip, r4
9001b92e:	fa1f fc8c 	uxthcc.w	ip, ip
9001b932:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001b936:	bf38      	it	cc
9001b938:	46a2      	movcc	sl, r4
9001b93a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001b93e:	2900      	cmp	r1, #0
9001b940:	d066      	beq.n	9001ba10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001b942:	29ff      	cmp	r1, #255	@ 0xff
9001b944:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001b948:	d114      	bne.n	9001b974 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b94a:	9d02      	ldr	r5, [sp, #8]
9001b94c:	2dff      	cmp	r5, #255	@ 0xff
9001b94e:	d111      	bne.n	9001b974 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b950:	0951      	lsrs	r1, r2, #5
9001b952:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001b956:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001b95a:	4486      	add	lr, r0
9001b95c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001b960:	f026 0607 	bic.w	r6, r6, #7
9001b964:	430e      	orrs	r6, r1
9001b966:	4316      	orrs	r6, r2
9001b968:	b2b6      	uxth	r6, r6
9001b96a:	4586      	cmp	lr, r0
9001b96c:	d051      	beq.n	9001ba12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b96e:	f820 6b02 	strh.w	r6, [r0], #2
9001b972:	e7fa      	b.n	9001b96a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001b974:	9d02      	ldr	r5, [sp, #8]
9001b976:	b2f6      	uxtb	r6, r6
9001b978:	4486      	add	lr, r0
9001b97a:	4369      	muls	r1, r5
9001b97c:	1c4d      	adds	r5, r1, #1
9001b97e:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001b982:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001b986:	b2d2      	uxtb	r2, r2
9001b988:	122d      	asrs	r5, r5, #8
9001b98a:	ea6f 0b05 	mvn.w	fp, r5
9001b98e:	b2ad      	uxth	r5, r5
9001b990:	fb11 f105 	smulbb	r1, r1, r5
9001b994:	fa5f fb8b 	uxtb.w	fp, fp
9001b998:	fb16 f605 	smulbb	r6, r6, r5
9001b99c:	fb12 f205 	smulbb	r2, r2, r5
9001b9a0:	b289      	uxth	r1, r1
9001b9a2:	b2b6      	uxth	r6, r6
9001b9a4:	b292      	uxth	r2, r2
9001b9a6:	9106      	str	r1, [sp, #24]
9001b9a8:	9607      	str	r6, [sp, #28]
9001b9aa:	9208      	str	r2, [sp, #32]
9001b9ac:	4586      	cmp	lr, r0
9001b9ae:	d030      	beq.n	9001ba12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b9b0:	8802      	ldrh	r2, [r0, #0]
9001b9b2:	9906      	ldr	r1, [sp, #24]
9001b9b4:	1216      	asrs	r6, r2, #8
9001b9b6:	10d5      	asrs	r5, r2, #3
9001b9b8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b9bc:	00d2      	lsls	r2, r2, #3
9001b9be:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001b9c2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001b9c6:	b2d2      	uxtb	r2, r2
9001b9c8:	fb06 160b 	mla	r6, r6, fp, r1
9001b9cc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001b9d0:	9907      	ldr	r1, [sp, #28]
9001b9d2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001b9d6:	b2b6      	uxth	r6, r6
9001b9d8:	fb05 150b 	mla	r5, r5, fp, r1
9001b9dc:	9908      	ldr	r1, [sp, #32]
9001b9de:	fb02 120b 	mla	r2, r2, fp, r1
9001b9e2:	1c71      	adds	r1, r6, #1
9001b9e4:	b2ad      	uxth	r5, r5
9001b9e6:	b292      	uxth	r2, r2
9001b9e8:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001b9ec:	1c51      	adds	r1, r2, #1
9001b9ee:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001b9f2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001b9f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b9fa:	4316      	orrs	r6, r2
9001b9fc:	1c6a      	adds	r2, r5, #1
9001b9fe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001ba02:	096d      	lsrs	r5, r5, #5
9001ba04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ba08:	432e      	orrs	r6, r5
9001ba0a:	f820 6b02 	strh.w	r6, [r0], #2
9001ba0e:	e7cd      	b.n	9001b9ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001ba10:	4470      	add	r0, lr
9001ba12:	4543      	cmp	r3, r8
9001ba14:	f4ff af73 	bcc.w	9001b8fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ba18:	fa1f fc89 	uxth.w	ip, r9
9001ba1c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001ba20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ba22:	eba4 040c 	sub.w	r4, r4, ip
9001ba26:	881b      	ldrh	r3, [r3, #0]
9001ba28:	b2a4      	uxth	r4, r4
9001ba2a:	eba3 0309 	sub.w	r3, r3, r9
9001ba2e:	2c00      	cmp	r4, #0
9001ba30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ba34:	bf18      	it	ne
9001ba36:	f04f 0c00 	movne.w	ip, #0
9001ba3a:	e760      	b.n	9001b8fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ba3c:	4b03      	ldr	r3, [pc, #12]	@ (9001ba4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ba3e:	6818      	ldr	r0, [r3, #0]
9001ba40:	6803      	ldr	r3, [r0, #0]
9001ba42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ba44:	4798      	blx	r3
9001ba46:	b00f      	add	sp, #60	@ 0x3c
9001ba48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ba4c:	24021c5c 	.word	0x24021c5c
9001ba50:	24021c56 	.word	0x24021c56

9001ba54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ba54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ba58:	b093      	sub	sp, #76	@ 0x4c
9001ba5a:	461c      	mov	r4, r3
9001ba5c:	9205      	str	r2, [sp, #20]
9001ba5e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001ba62:	9101      	str	r1, [sp, #4]
9001ba64:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001ba66:	9202      	str	r2, [sp, #8]
9001ba68:	2a00      	cmp	r2, #0
9001ba6a:	f000 812e 	beq.w	9001bcca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001ba6e:	6820      	ldr	r0, [r4, #0]
9001ba70:	aa0e      	add	r2, sp, #56	@ 0x38
9001ba72:	6861      	ldr	r1, [r4, #4]
9001ba74:	c203      	stmia	r2!, {r0, r1}
9001ba76:	6818      	ldr	r0, [r3, #0]
9001ba78:	aa10      	add	r2, sp, #64	@ 0x40
9001ba7a:	6859      	ldr	r1, [r3, #4]
9001ba7c:	c203      	stmia	r2!, {r0, r1}
9001ba7e:	a80e      	add	r0, sp, #56	@ 0x38
9001ba80:	f7f9 fb00 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ba84:	4621      	mov	r1, r4
9001ba86:	a810      	add	r0, sp, #64	@ 0x40
9001ba88:	f7f9 fb24 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ba8c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001ba90:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001ba94:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001ba98:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001ba9c:	bfdb      	ittet	le
9001ba9e:	b2b3      	uxthle	r3, r6
9001baa0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001baa4:	2301      	movgt	r3, #1
9001baa6:	fb92 f3f3 	sdivle	r3, r2, r3
9001baaa:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001baae:	441d      	add	r5, r3
9001bab0:	fb92 f1f3 	sdiv	r1, r2, r3
9001bab4:	fa1f fc81 	uxth.w	ip, r1
9001bab8:	3d01      	subs	r5, #1
9001baba:	fb0c 2413 	mls	r4, ip, r3, r2
9001babe:	4661      	mov	r1, ip
9001bac0:	fb14 f406 	smulbb	r4, r4, r6
9001bac4:	4404      	add	r4, r0
9001bac6:	fb95 f5f3 	sdiv	r5, r5, r3
9001baca:	b2a4      	uxth	r4, r4
9001bacc:	b131      	cbz	r1, 9001badc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001bace:	9b05      	ldr	r3, [sp, #20]
9001bad0:	9901      	ldr	r1, [sp, #4]
9001bad2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001bad6:	ba1b      	rev	r3, r3
9001bad8:	4419      	add	r1, r3
9001bada:	9101      	str	r1, [sp, #4]
9001badc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001bae0:	b2ad      	uxth	r5, r5
9001bae2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001bae6:	4418      	add	r0, r3
9001bae8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001baec:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001baf0:	00ad      	lsls	r5, r5, #2
9001baf2:	441a      	add	r2, r3
9001baf4:	4b76      	ldr	r3, [pc, #472]	@ (9001bcd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001baf6:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001bafa:	6818      	ldr	r0, [r3, #0]
9001bafc:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001bb00:	6803      	ldr	r3, [r0, #0]
9001bb02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001bb04:	4798      	blx	r3
9001bb06:	4973      	ldr	r1, [pc, #460]	@ (9001bcd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001bb08:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001bb0c:	2c00      	cmp	r4, #0
9001bb0e:	880b      	ldrh	r3, [r1, #0]
9001bb10:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001bb14:	910d      	str	r1, [sp, #52]	@ 0x34
9001bb16:	fb03 c202 	mla	r2, r3, r2, ip
9001bb1a:	bf08      	it	eq
9001bb1c:	46dc      	moveq	ip, fp
9001bb1e:	fb03 f306 	mul.w	r3, r3, r6
9001bb22:	bf18      	it	ne
9001bb24:	f04f 0c00 	movne.w	ip, #0
9001bb28:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001bb2c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001bb30:	fa1f fc8c 	uxth.w	ip, ip
9001bb34:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001bb38:	9106      	str	r1, [sp, #24]
9001bb3a:	9308      	str	r3, [sp, #32]
9001bb3c:	1d2b      	adds	r3, r5, #4
9001bb3e:	9309      	str	r3, [sp, #36]	@ 0x24
9001bb40:	9b02      	ldr	r3, [sp, #8]
9001bb42:	43da      	mvns	r2, r3
9001bb44:	2300      	movs	r3, #0
9001bb46:	b2d2      	uxtb	r2, r2
9001bb48:	9303      	str	r3, [sp, #12]
9001bb4a:	9207      	str	r2, [sp, #28]
9001bb4c:	9a08      	ldr	r2, [sp, #32]
9001bb4e:	4282      	cmp	r2, r0
9001bb50:	f240 80b6 	bls.w	9001bcc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001bb54:	b963      	cbnz	r3, 9001bb70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001bb56:	9b01      	ldr	r3, [sp, #4]
9001bb58:	781a      	ldrb	r2, [r3, #0]
9001bb5a:	0993      	lsrs	r3, r2, #6
9001bb5c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001bb60:	9203      	str	r2, [sp, #12]
9001bb62:	1e5a      	subs	r2, r3, #1
9001bb64:	2a02      	cmp	r2, #2
9001bb66:	d815      	bhi.n	9001bb94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001bb68:	9a01      	ldr	r2, [sp, #4]
9001bb6a:	b29b      	uxth	r3, r3
9001bb6c:	3201      	adds	r2, #1
9001bb6e:	9201      	str	r2, [sp, #4]
9001bb70:	b1b4      	cbz	r4, 9001bba0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001bb72:	429c      	cmp	r4, r3
9001bb74:	bf91      	iteee	ls
9001bb76:	1b1c      	subls	r4, r3, r4
9001bb78:	1ae4      	subhi	r4, r4, r3
9001bb7a:	4666      	movhi	r6, ip
9001bb7c:	f04f 0800 	movhi.w	r8, #0
9001bb80:	bf9b      	ittet	ls
9001bb82:	fa1f f884 	uxthls.w	r8, r4
9001bb86:	2400      	movls	r4, #0
9001bb88:	b2a4      	uxthhi	r4, r4
9001bb8a:	fa1f f68b 	uxthls.w	r6, fp
9001bb8e:	4643      	mov	r3, r8
9001bb90:	46b4      	mov	ip, r6
9001bb92:	e7db      	b.n	9001bb4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001bb94:	9a01      	ldr	r2, [sp, #4]
9001bb96:	9b01      	ldr	r3, [sp, #4]
9001bb98:	3202      	adds	r2, #2
9001bb9a:	785b      	ldrb	r3, [r3, #1]
9001bb9c:	9201      	str	r2, [sp, #4]
9001bb9e:	e7e7      	b.n	9001bb70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001bba0:	2203      	movs	r2, #3
9001bba2:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001bba4:	4563      	cmp	r3, ip
9001bba6:	4615      	mov	r5, r2
9001bba8:	9a03      	ldr	r2, [sp, #12]
9001bbaa:	bf2c      	ite	cs
9001bbac:	eba3 080c 	subcs.w	r8, r3, ip
9001bbb0:	ebac 0603 	subcc.w	r6, ip, r3
9001bbb4:	fb15 1202 	smlabb	r2, r5, r2, r1
9001bbb8:	9905      	ldr	r1, [sp, #20]
9001bbba:	bf24      	itt	cs
9001bbbc:	fa1f f888 	uxthcs.w	r8, r8
9001bbc0:	46e1      	movcs	r9, ip
9001bbc2:	eb01 0502 	add.w	r5, r1, r2
9001bbc6:	9902      	ldr	r1, [sp, #8]
9001bbc8:	bf2f      	iteee	cs
9001bbca:	4626      	movcs	r6, r4
9001bbcc:	b2b6      	uxthcc	r6, r6
9001bbce:	4699      	movcc	r9, r3
9001bbd0:	46a0      	movcc	r8, r4
9001bbd2:	29ff      	cmp	r1, #255	@ 0xff
9001bbd4:	d04a      	beq.n	9001bc6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001bbd6:	9f06      	ldr	r7, [sp, #24]
9001bbd8:	46ca      	mov	sl, r9
9001bbda:	78a9      	ldrb	r1, [r5, #2]
9001bbdc:	9004      	str	r0, [sp, #16]
9001bbde:	4379      	muls	r1, r7
9001bbe0:	910a      	str	r1, [sp, #40]	@ 0x28
9001bbe2:	7869      	ldrb	r1, [r5, #1]
9001bbe4:	4379      	muls	r1, r7
9001bbe6:	910b      	str	r1, [sp, #44]	@ 0x2c
9001bbe8:	9905      	ldr	r1, [sp, #20]
9001bbea:	5c8a      	ldrb	r2, [r1, r2]
9001bbec:	437a      	muls	r2, r7
9001bbee:	920c      	str	r2, [sp, #48]	@ 0x30
9001bbf0:	f1ba 0f00 	cmp.w	sl, #0
9001bbf4:	d03d      	beq.n	9001bc72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001bbf6:	9a04      	ldr	r2, [sp, #16]
9001bbf8:	f10a 3aff 	add.w	sl, sl, #4294967295
9001bbfc:	9f07      	ldr	r7, [sp, #28]
9001bbfe:	8812      	ldrh	r2, [r2, #0]
9001bc00:	fa1f fa8a 	uxth.w	sl, sl
9001bc04:	46be      	mov	lr, r7
9001bc06:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001bc08:	1215      	asrs	r5, r2, #8
9001bc0a:	10d1      	asrs	r1, r2, #3
9001bc0c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001bc10:	00d2      	lsls	r2, r2, #3
9001bc12:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001bc16:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001bc1a:	b2d2      	uxtb	r2, r2
9001bc1c:	fb05 750e 	mla	r5, r5, lr, r7
9001bc20:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001bc24:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001bc26:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001bc2a:	b2ad      	uxth	r5, r5
9001bc2c:	fb01 710e 	mla	r1, r1, lr, r7
9001bc30:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001bc32:	fb02 720e 	mla	r2, r2, lr, r7
9001bc36:	f105 0e01 	add.w	lr, r5, #1
9001bc3a:	b289      	uxth	r1, r1
9001bc3c:	b292      	uxth	r2, r2
9001bc3e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001bc42:	f102 0e01 	add.w	lr, r2, #1
9001bc46:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001bc4a:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001bc4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001bc52:	4315      	orrs	r5, r2
9001bc54:	1c4a      	adds	r2, r1, #1
9001bc56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001bc5a:	9a04      	ldr	r2, [sp, #16]
9001bc5c:	0949      	lsrs	r1, r1, #5
9001bc5e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001bc62:	430d      	orrs	r5, r1
9001bc64:	f822 5b02 	strh.w	r5, [r2], #2
9001bc68:	9204      	str	r2, [sp, #16]
9001bc6a:	e7c1      	b.n	9001bbf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001bc6c:	4649      	mov	r1, r9
9001bc6e:	4686      	mov	lr, r0
9001bc70:	b999      	cbnz	r1, 9001bc9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001bc72:	4563      	cmp	r3, ip
9001bc74:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001bc78:	d389      	bcc.n	9001bb8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001bc7a:	fa1f f68b 	uxth.w	r6, fp
9001bc7e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001bc82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001bc84:	1ba4      	subs	r4, r4, r6
9001bc86:	881b      	ldrh	r3, [r3, #0]
9001bc88:	b2a4      	uxth	r4, r4
9001bc8a:	eba3 030b 	sub.w	r3, r3, fp
9001bc8e:	2c00      	cmp	r4, #0
9001bc90:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001bc94:	bf18      	it	ne
9001bc96:	2600      	movne	r6, #0
9001bc98:	e779      	b.n	9001bb8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001bc9a:	78aa      	ldrb	r2, [r5, #2]
9001bc9c:	3901      	subs	r1, #1
9001bc9e:	4f0e      	ldr	r7, [pc, #56]	@ (9001bcd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001bca0:	b289      	uxth	r1, r1
9001bca2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001bca6:	786a      	ldrb	r2, [r5, #1]
9001bca8:	00d2      	lsls	r2, r2, #3
9001bcaa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001bcae:	ea4a 0202 	orr.w	r2, sl, r2
9001bcb2:	f895 a000 	ldrb.w	sl, [r5]
9001bcb6:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001bcba:	f82e 2b02 	strh.w	r2, [lr], #2
9001bcbe:	e7d7      	b.n	9001bc70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001bcc0:	4b03      	ldr	r3, [pc, #12]	@ (9001bcd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001bcc2:	6818      	ldr	r0, [r3, #0]
9001bcc4:	6803      	ldr	r3, [r0, #0]
9001bcc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001bcc8:	4798      	blx	r3
9001bcca:	b013      	add	sp, #76	@ 0x4c
9001bccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bcd0:	24021c5c 	.word	0x24021c5c
9001bcd4:	24021c56 	.word	0x24021c56
9001bcd8:	fffff800 	.word	0xfffff800

9001bcdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001bcdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bce0:	b09d      	sub	sp, #116	@ 0x74
9001bce2:	461c      	mov	r4, r3
9001bce4:	4683      	mov	fp, r0
9001bce6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001bce8:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001bcec:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001bcf0:	920e      	str	r2, [sp, #56]	@ 0x38
9001bcf2:	2a00      	cmp	r2, #0
9001bcf4:	f000 81e4 	beq.w	9001c0c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001bcf8:	6820      	ldr	r0, [r4, #0]
9001bcfa:	aa18      	add	r2, sp, #96	@ 0x60
9001bcfc:	6861      	ldr	r1, [r4, #4]
9001bcfe:	c203      	stmia	r2!, {r0, r1}
9001bd00:	6818      	ldr	r0, [r3, #0]
9001bd02:	aa1a      	add	r2, sp, #104	@ 0x68
9001bd04:	6859      	ldr	r1, [r3, #4]
9001bd06:	c203      	stmia	r2!, {r0, r1}
9001bd08:	a818      	add	r0, sp, #96	@ 0x60
9001bd0a:	f7f9 f9bb 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001bd0e:	4621      	mov	r1, r4
9001bd10:	a81a      	add	r0, sp, #104	@ 0x68
9001bd12:	f7f9 f9df 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001bd16:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001bd1a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001bd1e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001bd22:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001bd26:	bfdb      	ittet	le
9001bd28:	b29a      	uxthle	r2, r3
9001bd2a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001bd2e:	2201      	movgt	r2, #1
9001bd30:	fb91 f2f2 	sdivle	r2, r1, r2
9001bd34:	9202      	str	r2, [sp, #8]
9001bd36:	9802      	ldr	r0, [sp, #8]
9001bd38:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001bd3c:	9902      	ldr	r1, [sp, #8]
9001bd3e:	fb92 f0f0 	sdiv	r0, r2, r0
9001bd42:	b280      	uxth	r0, r0
9001bd44:	440c      	add	r4, r1
9001bd46:	900f      	str	r0, [sp, #60]	@ 0x3c
9001bd48:	3c01      	subs	r4, #1
9001bd4a:	9802      	ldr	r0, [sp, #8]
9001bd4c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001bd4e:	fb05 2510 	mls	r5, r5, r0, r2
9001bd52:	fb94 f4f1 	sdiv	r4, r4, r1
9001bd56:	fb15 f503 	smulbb	r5, r5, r3
9001bd5a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001bd5e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001bd62:	3401      	adds	r4, #1
9001bd64:	440d      	add	r5, r1
9001bd66:	4419      	add	r1, r3
9001bd68:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001bd6c:	b2a4      	uxth	r4, r4
9001bd6e:	441a      	add	r2, r3
9001bd70:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001bd74:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001bd78:	00a4      	lsls	r4, r4, #2
9001bd7a:	9306      	str	r3, [sp, #24]
9001bd7c:	b2ad      	uxth	r5, r5
9001bd7e:	4bb3      	ldr	r3, [pc, #716]	@ (9001c04c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001bd80:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001bd84:	6818      	ldr	r0, [r3, #0]
9001bd86:	6803      	ldr	r3, [r0, #0]
9001bd88:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001bd8a:	4798      	blx	r3
9001bd8c:	4bb0      	ldr	r3, [pc, #704]	@ (9001c050 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001bd8e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001bd92:	2d00      	cmp	r5, #0
9001bd94:	881a      	ldrh	r2, [r3, #0]
9001bd96:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001bd9a:	fb02 f606 	mul.w	r6, r2, r6
9001bd9e:	fb02 7101 	mla	r1, r2, r1, r7
9001bda2:	9316      	str	r3, [sp, #88]	@ 0x58
9001bda4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001bda8:	4baa      	ldr	r3, [pc, #680]	@ (9001c054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001bdaa:	bf18      	it	ne
9001bdac:	2100      	movne	r1, #0
9001bdae:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001bdb2:	eba3 030b 	sub.w	r3, r3, fp
9001bdb6:	920a      	str	r2, [sp, #40]	@ 0x28
9001bdb8:	f104 0204 	add.w	r2, r4, #4
9001bdbc:	9317      	str	r3, [sp, #92]	@ 0x5c
9001bdbe:	9213      	str	r2, [sp, #76]	@ 0x4c
9001bdc0:	9a06      	ldr	r2, [sp, #24]
9001bdc2:	bf08      	it	eq
9001bdc4:	4611      	moveq	r1, r2
9001bdc6:	2200      	movs	r2, #0
9001bdc8:	b289      	uxth	r1, r1
9001bdca:	920d      	str	r2, [sp, #52]	@ 0x34
9001bdcc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bdce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001bdd0:	fa12 f383 	uxtah	r3, r2, r3
9001bdd4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001bdd6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001bdda:	3304      	adds	r3, #4
9001bddc:	9308      	str	r3, [sp, #32]
9001bdde:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001bde0:	4543      	cmp	r3, r8
9001bde2:	f240 8168 	bls.w	9001c0b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001bde6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001bdea:	f04f 0e01 	mov.w	lr, #1
9001bdee:	9a02      	ldr	r2, [sp, #8]
9001bdf0:	9808      	ldr	r0, [sp, #32]
9001bdf2:	fbb5 f3f3 	udiv	r3, r5, r3
9001bdf6:	1ad3      	subs	r3, r2, r3
9001bdf8:	7800      	ldrb	r0, [r0, #0]
9001bdfa:	b29b      	uxth	r3, r3
9001bdfc:	9010      	str	r0, [sp, #64]	@ 0x40
9001bdfe:	3001      	adds	r0, #1
9001be00:	9314      	str	r3, [sp, #80]	@ 0x50
9001be02:	9b08      	ldr	r3, [sp, #32]
9001be04:	9007      	str	r0, [sp, #28]
9001be06:	785a      	ldrb	r2, [r3, #1]
9001be08:	789b      	ldrb	r3, [r3, #2]
9001be0a:	021b      	lsls	r3, r3, #8
9001be0c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001be10:	9a08      	ldr	r2, [sp, #32]
9001be12:	78d2      	ldrb	r2, [r2, #3]
9001be14:	4313      	orrs	r3, r2
9001be16:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001be18:	441a      	add	r2, r3
9001be1a:	1c50      	adds	r0, r2, #1
9001be1c:	7852      	ldrb	r2, [r2, #1]
9001be1e:	9005      	str	r0, [sp, #20]
9001be20:	0212      	lsls	r2, r2, #8
9001be22:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001be24:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001be28:	5cc3      	ldrb	r3, [r0, r3]
9001be2a:	431a      	orrs	r2, r3
9001be2c:	b293      	uxth	r3, r2
9001be2e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001be32:	930b      	str	r3, [sp, #44]	@ 0x2c
9001be34:	2300      	movs	r3, #0
9001be36:	9309      	str	r3, [sp, #36]	@ 0x24
9001be38:	2301      	movs	r3, #1
9001be3a:	9301      	str	r3, [sp, #4]
9001be3c:	9304      	str	r3, [sp, #16]
9001be3e:	2300      	movs	r3, #0
9001be40:	9303      	str	r3, [sp, #12]
9001be42:	2d00      	cmp	r5, #0
9001be44:	d07d      	beq.n	9001bf42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001be46:	45ae      	cmp	lr, r5
9001be48:	d26c      	bcs.n	9001bf24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001be4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001be4c:	eba5 050e 	sub.w	r5, r5, lr
9001be50:	460c      	mov	r4, r1
9001be52:	4543      	cmp	r3, r8
9001be54:	b2ad      	uxth	r5, r5
9001be56:	d802      	bhi.n	9001be5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001be58:	e071      	b.n	9001bf3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001be5a:	2b00      	cmp	r3, #0
9001be5c:	d15d      	bne.n	9001bf1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001be5e:	9b05      	ldr	r3, [sp, #20]
9001be60:	9a04      	ldr	r2, [sp, #16]
9001be62:	785b      	ldrb	r3, [r3, #1]
9001be64:	f1c2 0207 	rsb	r2, r2, #7
9001be68:	9904      	ldr	r1, [sp, #16]
9001be6a:	4093      	lsls	r3, r2
9001be6c:	005b      	lsls	r3, r3, #1
9001be6e:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001be72:	9b05      	ldr	r3, [sp, #20]
9001be74:	781b      	ldrb	r3, [r3, #0]
9001be76:	410b      	asrs	r3, r1
9001be78:	3101      	adds	r1, #1
9001be7a:	b2c9      	uxtb	r1, r1
9001be7c:	b2db      	uxtb	r3, r3
9001be7e:	2908      	cmp	r1, #8
9001be80:	9104      	str	r1, [sp, #16]
9001be82:	9905      	ldr	r1, [sp, #20]
9001be84:	ea43 0302 	orr.w	r3, r3, r2
9001be88:	bf0c      	ite	eq
9001be8a:	3102      	addeq	r1, #2
9001be8c:	3101      	addne	r1, #1
9001be8e:	b29a      	uxth	r2, r3
9001be90:	bf05      	ittet	eq
9001be92:	9105      	streq	r1, [sp, #20]
9001be94:	2100      	moveq	r1, #0
9001be96:	9105      	strne	r1, [sp, #20]
9001be98:	9104      	streq	r1, [sp, #16]
9001be9a:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001be9c:	4291      	cmp	r1, r2
9001be9e:	d30a      	bcc.n	9001beb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001bea0:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001bea4:	2301      	movs	r3, #1
9001bea6:	9907      	ldr	r1, [sp, #28]
9001bea8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001beac:	d30f      	bcc.n	9001bece <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001beae:	2100      	movs	r1, #0
9001beb0:	9301      	str	r3, [sp, #4]
9001beb2:	9103      	str	r1, [sp, #12]
9001beb4:	e032      	b.n	9001bf1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001beb6:	9b07      	ldr	r3, [sp, #28]
9001beb8:	429a      	cmp	r2, r3
9001beba:	d318      	bcc.n	9001beee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001bebc:	9b01      	ldr	r3, [sp, #4]
9001bebe:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001bec2:	445b      	add	r3, fp
9001bec4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001bec8:	9b01      	ldr	r3, [sp, #4]
9001beca:	3301      	adds	r3, #1
9001becc:	b29b      	uxth	r3, r3
9001bece:	9907      	ldr	r1, [sp, #28]
9001bed0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001bed4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001bed8:	7108      	strb	r0, [r1, #4]
9001beda:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001bedc:	80c8      	strh	r0, [r1, #6]
9001bede:	9801      	ldr	r0, [sp, #4]
9001bee0:	3001      	adds	r0, #1
9001bee2:	7148      	strb	r0, [r1, #5]
9001bee4:	9907      	ldr	r1, [sp, #28]
9001bee6:	3101      	adds	r1, #1
9001bee8:	b289      	uxth	r1, r1
9001beea:	9107      	str	r1, [sp, #28]
9001beec:	e7df      	b.n	9001beae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001beee:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001bef2:	4611      	mov	r1, r2
9001bef4:	795b      	ldrb	r3, [r3, #5]
9001bef6:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001befa:	4458      	add	r0, fp
9001befc:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001befe:	4406      	add	r6, r0
9001bf00:	2e00      	cmp	r6, #0
9001bf02:	dd06      	ble.n	9001bf12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001bf04:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001bf08:	790e      	ldrb	r6, [r1, #4]
9001bf0a:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001bf0e:	88c9      	ldrh	r1, [r1, #6]
9001bf10:	e7f4      	b.n	9001befc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001bf12:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001bf16:	b29b      	uxth	r3, r3
9001bf18:	e7c5      	b.n	9001bea6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001bf1a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001bf1c:	4621      	mov	r1, r4
9001bf1e:	920b      	str	r2, [sp, #44]	@ 0x2c
9001bf20:	469e      	mov	lr, r3
9001bf22:	e78e      	b.n	9001be42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001bf24:	9a03      	ldr	r2, [sp, #12]
9001bf26:	ebae 0305 	sub.w	r3, lr, r5
9001bf2a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001bf2e:	442a      	add	r2, r5
9001bf30:	b29b      	uxth	r3, r3
9001bf32:	b292      	uxth	r2, r2
9001bf34:	9203      	str	r2, [sp, #12]
9001bf36:	2500      	movs	r5, #0
9001bf38:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001bf3a:	4542      	cmp	r2, r8
9001bf3c:	d88d      	bhi.n	9001be5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001bf3e:	4621      	mov	r1, r4
9001bf40:	e74d      	b.n	9001bdde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001bf42:	458e      	cmp	lr, r1
9001bf44:	f04f 0900 	mov.w	r9, #0
9001bf48:	bf2b      	itete	cs
9001bf4a:	ebae 0301 	subcs.w	r3, lr, r1
9001bf4e:	eba1 040e 	subcc.w	r4, r1, lr
9001bf52:	462c      	movcs	r4, r5
9001bf54:	462b      	movcc	r3, r5
9001bf56:	bf27      	ittee	cs
9001bf58:	b29b      	uxthcs	r3, r3
9001bf5a:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001bf5c:	b2a4      	uxthcc	r4, r4
9001bf5e:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001bf62:	9a03      	ldr	r2, [sp, #12]
9001bf64:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001bf66:	444a      	add	r2, r9
9001bf68:	4548      	cmp	r0, r9
9001bf6a:	b292      	uxth	r2, r2
9001bf6c:	d074      	beq.n	9001c058 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001bf6e:	2004      	movs	r0, #4
9001bf70:	445a      	add	r2, fp
9001bf72:	4605      	mov	r5, r0
9001bf74:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001bf78:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001bf7a:	fb15 0202 	smlabb	r2, r5, r2, r0
9001bf7e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bf80:	5880      	ldr	r0, [r0, r2]
9001bf82:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001bf86:	d014      	beq.n	9001bfb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001bf88:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001bf8c:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001bf90:	d112      	bne.n	9001bfb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001bf92:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001bf94:	2aff      	cmp	r2, #255	@ 0xff
9001bf96:	d10f      	bne.n	9001bfb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001bf98:	0942      	lsrs	r2, r0, #5
9001bf9a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001bf9e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001bfa2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001bfa6:	f025 0507 	bic.w	r5, r5, #7
9001bfaa:	4315      	orrs	r5, r2
9001bfac:	4305      	orrs	r5, r0
9001bfae:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001bfb2:	f109 0901 	add.w	r9, r9, #1
9001bfb6:	e7d4      	b.n	9001bf62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001bfb8:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001bfbc:	b2ed      	uxtb	r5, r5
9001bfbe:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001bfc2:	ea4f 272c 	mov.w	r7, ip, asr #8
9001bfc6:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001bfca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001bfce:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001bfd2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bfd6:	9215      	str	r2, [sp, #84]	@ 0x54
9001bfd8:	fa5f fc8c 	uxtb.w	ip, ip
9001bfdc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001bfde:	b2c0      	uxtb	r0, r0
9001bfe0:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001bfe4:	fb02 fa0a 	mul.w	sl, r2, sl
9001bfe8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001bfec:	f10a 0201 	add.w	r2, sl, #1
9001bff0:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001bff4:	1212      	asrs	r2, r2, #8
9001bff6:	fa1f fa82 	uxth.w	sl, r2
9001bffa:	43d2      	mvns	r2, r2
9001bffc:	fb16 f60a 	smulbb	r6, r6, sl
9001c000:	b2d2      	uxtb	r2, r2
9001c002:	fb10 f00a 	smulbb	r0, r0, sl
9001c006:	fb07 6702 	mla	r7, r7, r2, r6
9001c00a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001c00c:	fb0c 0002 	mla	r0, ip, r2, r0
9001c010:	fb15 f50a 	smulbb	r5, r5, sl
9001c014:	b2bf      	uxth	r7, r7
9001c016:	b280      	uxth	r0, r0
9001c018:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001c01c:	fb06 5602 	mla	r6, r6, r2, r5
9001c020:	1c7a      	adds	r2, r7, #1
9001c022:	1c45      	adds	r5, r0, #1
9001c024:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c028:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001c02c:	b2b6      	uxth	r6, r6
9001c02e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c032:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c036:	432f      	orrs	r7, r5
9001c038:	1c75      	adds	r5, r6, #1
9001c03a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001c03e:	096d      	lsrs	r5, r5, #5
9001c040:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c044:	432f      	orrs	r7, r5
9001c046:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001c04a:	e7b2      	b.n	9001bfb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001c04c:	24021c5c 	.word	0x24021c5c
9001c050:	24021c56 	.word	0x24021c56
9001c054:	fffff7fb 	.word	0xfffff7fb
9001c058:	9203      	str	r2, [sp, #12]
9001c05a:	458e      	cmp	lr, r1
9001c05c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001c05e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001c062:	f4ff af68 	bcc.w	9001bf36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001c066:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001c068:	9906      	ldr	r1, [sp, #24]
9001c06a:	8812      	ldrh	r2, [r2, #0]
9001c06c:	1a52      	subs	r2, r2, r1
9001c06e:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001c070:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001c074:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001c076:	3201      	adds	r2, #1
9001c078:	428a      	cmp	r2, r1
9001c07a:	9209      	str	r2, [sp, #36]	@ 0x24
9001c07c:	d111      	bne.n	9001c0a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001c07e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001c082:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001c086:	9b06      	ldr	r3, [sp, #24]
9001c088:	eba5 0509 	sub.w	r5, r5, r9
9001c08c:	b2ad      	uxth	r5, r5
9001c08e:	2d00      	cmp	r5, #0
9001c090:	bf08      	it	eq
9001c092:	4619      	moveq	r1, r3
9001c094:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c096:	bf18      	it	ne
9001c098:	2100      	movne	r1, #0
9001c09a:	3301      	adds	r3, #1
9001c09c:	b289      	uxth	r1, r1
9001c09e:	930d      	str	r3, [sp, #52]	@ 0x34
9001c0a0:	e694      	b.n	9001bdcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001c0a2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001c0a6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001c0aa:	1b2d      	subs	r5, r5, r4
9001c0ac:	b2ad      	uxth	r5, r5
9001c0ae:	2d00      	cmp	r5, #0
9001c0b0:	bf18      	it	ne
9001c0b2:	2400      	movne	r4, #0
9001c0b4:	e740      	b.n	9001bf38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001c0b6:	4b04      	ldr	r3, [pc, #16]	@ (9001c0c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001c0b8:	6818      	ldr	r0, [r3, #0]
9001c0ba:	6803      	ldr	r3, [r0, #0]
9001c0bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c0be:	4798      	blx	r3
9001c0c0:	b01d      	add	sp, #116	@ 0x74
9001c0c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c0c6:	bf00      	nop
9001c0c8:	24021c5c 	.word	0x24021c5c

9001c0cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001c0cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c0d0:	b09f      	sub	sp, #124	@ 0x7c
9001c0d2:	461d      	mov	r5, r3
9001c0d4:	4604      	mov	r4, r0
9001c0d6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001c0d8:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001c0dc:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001c0e0:	920a      	str	r2, [sp, #40]	@ 0x28
9001c0e2:	2a00      	cmp	r2, #0
9001c0e4:	f000 81fe 	beq.w	9001c4e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001c0e8:	6828      	ldr	r0, [r5, #0]
9001c0ea:	aa1a      	add	r2, sp, #104	@ 0x68
9001c0ec:	6869      	ldr	r1, [r5, #4]
9001c0ee:	c203      	stmia	r2!, {r0, r1}
9001c0f0:	6818      	ldr	r0, [r3, #0]
9001c0f2:	aa1c      	add	r2, sp, #112	@ 0x70
9001c0f4:	6859      	ldr	r1, [r3, #4]
9001c0f6:	c203      	stmia	r2!, {r0, r1}
9001c0f8:	a81a      	add	r0, sp, #104	@ 0x68
9001c0fa:	f7f8 ffc3 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c0fe:	4629      	mov	r1, r5
9001c100:	a81c      	add	r0, sp, #112	@ 0x70
9001c102:	f7f8 ffe7 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c106:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001c10a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001c10e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001c112:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001c116:	bfdb      	ittet	le
9001c118:	b29a      	uxthle	r2, r3
9001c11a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001c11e:	2201      	movgt	r2, #1
9001c120:	fb91 f2f2 	sdivle	r2, r1, r2
9001c124:	9201      	str	r2, [sp, #4]
9001c126:	9801      	ldr	r0, [sp, #4]
9001c128:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001c12c:	9901      	ldr	r1, [sp, #4]
9001c12e:	fb92 f0f0 	sdiv	r0, r2, r0
9001c132:	b280      	uxth	r0, r0
9001c134:	440e      	add	r6, r1
9001c136:	9010      	str	r0, [sp, #64]	@ 0x40
9001c138:	3e01      	subs	r6, #1
9001c13a:	9801      	ldr	r0, [sp, #4]
9001c13c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001c13e:	fb05 2510 	mls	r5, r5, r0, r2
9001c142:	fb96 f6f1 	sdiv	r6, r6, r1
9001c146:	fb15 f503 	smulbb	r5, r5, r3
9001c14a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001c14e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001c152:	3601      	adds	r6, #1
9001c154:	440d      	add	r5, r1
9001c156:	4419      	add	r1, r3
9001c158:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001c15c:	b2b6      	uxth	r6, r6
9001c15e:	441a      	add	r2, r3
9001c160:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001c164:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001c168:	b2ad      	uxth	r5, r5
9001c16a:	9304      	str	r3, [sp, #16]
9001c16c:	4b96      	ldr	r3, [pc, #600]	@ (9001c3c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001c16e:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001c172:	6818      	ldr	r0, [r3, #0]
9001c174:	6803      	ldr	r3, [r0, #0]
9001c176:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001c178:	4798      	blx	r3
9001c17a:	4b94      	ldr	r3, [pc, #592]	@ (9001c3cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001c17c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001c180:	2d00      	cmp	r5, #0
9001c182:	881a      	ldrh	r2, [r3, #0]
9001c184:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001c188:	fb02 f707 	mul.w	r7, r2, r7
9001c18c:	fb02 c101 	mla	r1, r2, r1, ip
9001c190:	9318      	str	r3, [sp, #96]	@ 0x60
9001c192:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001c196:	4b8e      	ldr	r3, [pc, #568]	@ (9001c3d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001c198:	bf18      	it	ne
9001c19a:	2100      	movne	r1, #0
9001c19c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001c1a0:	eba3 0304 	sub.w	r3, r3, r4
9001c1a4:	920b      	str	r2, [sp, #44]	@ 0x2c
9001c1a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c1a8:	9319      	str	r3, [sp, #100]	@ 0x64
9001c1aa:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001c1ae:	f106 0204 	add.w	r2, r6, #4
9001c1b2:	9206      	str	r2, [sp, #24]
9001c1b4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001c1b6:	ea6f 0202 	mvn.w	r2, r2
9001c1ba:	b2d2      	uxtb	r2, r2
9001c1bc:	9215      	str	r2, [sp, #84]	@ 0x54
9001c1be:	9a04      	ldr	r2, [sp, #16]
9001c1c0:	bf08      	it	eq
9001c1c2:	4611      	moveq	r1, r2
9001c1c4:	2200      	movs	r2, #0
9001c1c6:	b289      	uxth	r1, r1
9001c1c8:	920d      	str	r2, [sp, #52]	@ 0x34
9001c1ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001c1cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c1ce:	fa12 f383 	uxtah	r3, r2, r3
9001c1d2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c1d4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001c1d8:	3304      	adds	r3, #4
9001c1da:	9307      	str	r3, [sp, #28]
9001c1dc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001c1de:	455b      	cmp	r3, fp
9001c1e0:	f240 817b 	bls.w	9001c4da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001c1e4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001c1e8:	f04f 0801 	mov.w	r8, #1
9001c1ec:	9a01      	ldr	r2, [sp, #4]
9001c1ee:	9807      	ldr	r0, [sp, #28]
9001c1f0:	46c4      	mov	ip, r8
9001c1f2:	f8cd 8008 	str.w	r8, [sp, #8]
9001c1f6:	7800      	ldrb	r0, [r0, #0]
9001c1f8:	fbb5 f3f3 	udiv	r3, r5, r3
9001c1fc:	1ad3      	subs	r3, r2, r3
9001c1fe:	9011      	str	r0, [sp, #68]	@ 0x44
9001c200:	3001      	adds	r0, #1
9001c202:	b29b      	uxth	r3, r3
9001c204:	9005      	str	r0, [sp, #20]
9001c206:	9316      	str	r3, [sp, #88]	@ 0x58
9001c208:	9b07      	ldr	r3, [sp, #28]
9001c20a:	785a      	ldrb	r2, [r3, #1]
9001c20c:	789b      	ldrb	r3, [r3, #2]
9001c20e:	021b      	lsls	r3, r3, #8
9001c210:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001c214:	9a07      	ldr	r2, [sp, #28]
9001c216:	78d2      	ldrb	r2, [r2, #3]
9001c218:	4313      	orrs	r3, r2
9001c21a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c21c:	441a      	add	r2, r3
9001c21e:	1c50      	adds	r0, r2, #1
9001c220:	7852      	ldrb	r2, [r2, #1]
9001c222:	9003      	str	r0, [sp, #12]
9001c224:	0212      	lsls	r2, r2, #8
9001c226:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001c228:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001c22c:	5cc3      	ldrb	r3, [r0, r3]
9001c22e:	431a      	orrs	r2, r3
9001c230:	b293      	uxth	r3, r2
9001c232:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001c236:	930c      	str	r3, [sp, #48]	@ 0x30
9001c238:	2300      	movs	r3, #0
9001c23a:	9308      	str	r3, [sp, #32]
9001c23c:	461a      	mov	r2, r3
9001c23e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001c242:	930e      	str	r3, [sp, #56]	@ 0x38
9001c244:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001c248:	930f      	str	r3, [sp, #60]	@ 0x3c
9001c24a:	2d00      	cmp	r5, #0
9001c24c:	d07d      	beq.n	9001c34a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001c24e:	45ac      	cmp	ip, r5
9001c250:	d26d      	bcs.n	9001c32e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001c252:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001c254:	eba5 050c 	sub.w	r5, r5, ip
9001c258:	4608      	mov	r0, r1
9001c25a:	455b      	cmp	r3, fp
9001c25c:	b2ad      	uxth	r5, r5
9001c25e:	d802      	bhi.n	9001c266 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001c260:	e071      	b.n	9001c346 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001c262:	2b00      	cmp	r3, #0
9001c264:	d15d      	bne.n	9001c322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001c266:	9b03      	ldr	r3, [sp, #12]
9001c268:	9a02      	ldr	r2, [sp, #8]
9001c26a:	785b      	ldrb	r3, [r3, #1]
9001c26c:	f1c2 0207 	rsb	r2, r2, #7
9001c270:	9902      	ldr	r1, [sp, #8]
9001c272:	4093      	lsls	r3, r2
9001c274:	005b      	lsls	r3, r3, #1
9001c276:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001c27a:	9b03      	ldr	r3, [sp, #12]
9001c27c:	781b      	ldrb	r3, [r3, #0]
9001c27e:	410b      	asrs	r3, r1
9001c280:	3101      	adds	r1, #1
9001c282:	b2c9      	uxtb	r1, r1
9001c284:	b2db      	uxtb	r3, r3
9001c286:	2908      	cmp	r1, #8
9001c288:	9102      	str	r1, [sp, #8]
9001c28a:	9903      	ldr	r1, [sp, #12]
9001c28c:	ea43 0302 	orr.w	r3, r3, r2
9001c290:	bf0c      	ite	eq
9001c292:	3102      	addeq	r1, #2
9001c294:	3101      	addne	r1, #1
9001c296:	b29a      	uxth	r2, r3
9001c298:	bf05      	ittet	eq
9001c29a:	9103      	streq	r1, [sp, #12]
9001c29c:	2100      	moveq	r1, #0
9001c29e:	9103      	strne	r1, [sp, #12]
9001c2a0:	9102      	streq	r1, [sp, #8]
9001c2a2:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001c2a4:	4291      	cmp	r1, r2
9001c2a6:	d30a      	bcc.n	9001c2be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001c2a8:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001c2ac:	2301      	movs	r3, #1
9001c2ae:	9905      	ldr	r1, [sp, #20]
9001c2b0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001c2b4:	d30f      	bcc.n	9001c2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001c2b6:	2100      	movs	r1, #0
9001c2b8:	4698      	mov	r8, r3
9001c2ba:	9100      	str	r1, [sp, #0]
9001c2bc:	e032      	b.n	9001c324 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001c2be:	9b05      	ldr	r3, [sp, #20]
9001c2c0:	429a      	cmp	r2, r3
9001c2c2:	d318      	bcc.n	9001c2f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001c2c4:	eb04 0308 	add.w	r3, r4, r8
9001c2c8:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001c2cc:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001c2d0:	f108 0301 	add.w	r3, r8, #1
9001c2d4:	b29b      	uxth	r3, r3
9001c2d6:	9905      	ldr	r1, [sp, #20]
9001c2d8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001c2dc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001c2e0:	710e      	strb	r6, [r1, #4]
9001c2e2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001c2e4:	80ce      	strh	r6, [r1, #6]
9001c2e6:	f108 0601 	add.w	r6, r8, #1
9001c2ea:	714e      	strb	r6, [r1, #5]
9001c2ec:	9905      	ldr	r1, [sp, #20]
9001c2ee:	3101      	adds	r1, #1
9001c2f0:	b289      	uxth	r1, r1
9001c2f2:	9105      	str	r1, [sp, #20]
9001c2f4:	e7df      	b.n	9001c2b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001c2f6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001c2fa:	4611      	mov	r1, r2
9001c2fc:	795b      	ldrb	r3, [r3, #5]
9001c2fe:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001c302:	4426      	add	r6, r4
9001c304:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001c306:	4437      	add	r7, r6
9001c308:	2f00      	cmp	r7, #0
9001c30a:	dd06      	ble.n	9001c31a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001c30c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001c310:	790f      	ldrb	r7, [r1, #4]
9001c312:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001c316:	88c9      	ldrh	r1, [r1, #6]
9001c318:	e7f4      	b.n	9001c304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001c31a:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001c31e:	b29b      	uxth	r3, r3
9001c320:	e7c5      	b.n	9001c2ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001c322:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001c324:	920c      	str	r2, [sp, #48]	@ 0x30
9001c326:	4601      	mov	r1, r0
9001c328:	9a00      	ldr	r2, [sp, #0]
9001c32a:	469c      	mov	ip, r3
9001c32c:	e78d      	b.n	9001c24a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001c32e:	ebac 0305 	sub.w	r3, ip, r5
9001c332:	1957      	adds	r7, r2, r5
9001c334:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001c338:	b2ba      	uxth	r2, r7
9001c33a:	b29b      	uxth	r3, r3
9001c33c:	9200      	str	r2, [sp, #0]
9001c33e:	2500      	movs	r5, #0
9001c340:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001c342:	455a      	cmp	r2, fp
9001c344:	d88d      	bhi.n	9001c262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001c346:	4601      	mov	r1, r0
9001c348:	e748      	b.n	9001c1dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001c34a:	458c      	cmp	ip, r1
9001c34c:	bf27      	ittee	cs
9001c34e:	ebac 0301 	subcs.w	r3, ip, r1
9001c352:	4628      	movcs	r0, r5
9001c354:	eba1 000c 	subcc.w	r0, r1, ip
9001c358:	462b      	movcc	r3, r5
9001c35a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001c35c:	bf27      	ittee	cs
9001c35e:	b29b      	uxthcs	r3, r3
9001c360:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001c362:	b280      	uxthcc	r0, r0
9001c364:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001c368:	2dff      	cmp	r5, #255	@ 0xff
9001c36a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001c36c:	eb02 0705 	add.w	r7, r2, r5
9001c370:	b2bd      	uxth	r5, r7
9001c372:	9500      	str	r5, [sp, #0]
9001c374:	d12e      	bne.n	9001c3d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001c376:	465e      	mov	r6, fp
9001c378:	9d00      	ldr	r5, [sp, #0]
9001c37a:	42aa      	cmp	r2, r5
9001c37c:	f040 8083 	bne.w	9001c486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001c380:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001c382:	458c      	cmp	ip, r1
9001c384:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001c388:	d3d9      	bcc.n	9001c33e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001c38a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001c38c:	9904      	ldr	r1, [sp, #16]
9001c38e:	8812      	ldrh	r2, [r2, #0]
9001c390:	1a52      	subs	r2, r2, r1
9001c392:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001c394:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001c398:	9a08      	ldr	r2, [sp, #32]
9001c39a:	3201      	adds	r2, #1
9001c39c:	428a      	cmp	r2, r1
9001c39e:	9208      	str	r2, [sp, #32]
9001c3a0:	f040 8091 	bne.w	9001c4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001c3a4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001c3a8:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001c3ac:	9b04      	ldr	r3, [sp, #16]
9001c3ae:	eba5 050c 	sub.w	r5, r5, ip
9001c3b2:	b2ad      	uxth	r5, r5
9001c3b4:	2d00      	cmp	r5, #0
9001c3b6:	bf08      	it	eq
9001c3b8:	4619      	moveq	r1, r3
9001c3ba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001c3bc:	bf18      	it	ne
9001c3be:	2100      	movne	r1, #0
9001c3c0:	3301      	adds	r3, #1
9001c3c2:	b289      	uxth	r1, r1
9001c3c4:	930d      	str	r3, [sp, #52]	@ 0x34
9001c3c6:	e700      	b.n	9001c1ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001c3c8:	24021c5c 	.word	0x24021c5c
9001c3cc:	24021c56 	.word	0x24021c56
9001c3d0:	fffff7fb 	.word	0xfffff7fb
9001c3d4:	46d9      	mov	r9, fp
9001c3d6:	9d00      	ldr	r5, [sp, #0]
9001c3d8:	42aa      	cmp	r2, r5
9001c3da:	d0d1      	beq.n	9001c380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001c3dc:	1c55      	adds	r5, r2, #1
9001c3de:	4422      	add	r2, r4
9001c3e0:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001c3e4:	9a06      	ldr	r2, [sp, #24]
9001c3e6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c3ea:	9517      	str	r5, [sp, #92]	@ 0x5c
9001c3ec:	4472      	add	r2, lr
9001c3ee:	9212      	str	r2, [sp, #72]	@ 0x48
9001c3f0:	f8b9 2000 	ldrh.w	r2, [r9]
9001c3f4:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001c3f6:	1216      	asrs	r6, r2, #8
9001c3f8:	f897 a002 	ldrb.w	sl, [r7, #2]
9001c3fc:	10d5      	asrs	r5, r2, #3
9001c3fe:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001c400:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c404:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001c408:	00d2      	lsls	r2, r2, #3
9001c40a:	fb1a fa07 	smulbb	sl, sl, r7
9001c40e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c412:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001c414:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c418:	b2d2      	uxtb	r2, r2
9001c41a:	fb06 a607 	mla	r6, r6, r7, sl
9001c41e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001c420:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c424:	f897 a001 	ldrb.w	sl, [r7, #1]
9001c428:	b2b6      	uxth	r6, r6
9001c42a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001c42c:	fb1a fa07 	smulbb	sl, sl, r7
9001c430:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001c432:	fb05 a507 	mla	r5, r5, r7, sl
9001c436:	9f06      	ldr	r7, [sp, #24]
9001c438:	f106 0a01 	add.w	sl, r6, #1
9001c43c:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001c440:	b2ad      	uxth	r5, r5
9001c442:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001c444:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001c448:	f105 0a01 	add.w	sl, r5, #1
9001c44c:	fb1e fe07 	smulbb	lr, lr, r7
9001c450:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001c452:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c456:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001c45a:	fb02 e207 	mla	r2, r2, r7, lr
9001c45e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c462:	b292      	uxth	r2, r2
9001c464:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c468:	f102 0e01 	add.w	lr, r2, #1
9001c46c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001c470:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001c474:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001c478:	ea4e 0606 	orr.w	r6, lr, r6
9001c47c:	ea46 060a 	orr.w	r6, r6, sl
9001c480:	f829 6b02 	strh.w	r6, [r9], #2
9001c484:	e7a7      	b.n	9001c3d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001c486:	f102 0e01 	add.w	lr, r2, #1
9001c48a:	4422      	add	r2, r4
9001c48c:	9f06      	ldr	r7, [sp, #24]
9001c48e:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001c492:	9a06      	ldr	r2, [sp, #24]
9001c494:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001c498:	eb02 0a05 	add.w	sl, r2, r5
9001c49c:	4a13      	ldr	r2, [pc, #76]	@ (9001c4ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001c49e:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001c4a2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001c4a6:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001c4aa:	00d2      	lsls	r2, r2, #3
9001c4ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c4b0:	ea49 0202 	orr.w	r2, r9, r2
9001c4b4:	f817 9005 	ldrb.w	r9, [r7, r5]
9001c4b8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001c4bc:	f826 2b02 	strh.w	r2, [r6], #2
9001c4c0:	fa1f f28e 	uxth.w	r2, lr
9001c4c4:	e758      	b.n	9001c378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001c4c6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001c4ca:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001c4ce:	1a2d      	subs	r5, r5, r0
9001c4d0:	b2ad      	uxth	r5, r5
9001c4d2:	2d00      	cmp	r5, #0
9001c4d4:	bf18      	it	ne
9001c4d6:	2000      	movne	r0, #0
9001c4d8:	e732      	b.n	9001c340 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001c4da:	4b05      	ldr	r3, [pc, #20]	@ (9001c4f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001c4dc:	6818      	ldr	r0, [r3, #0]
9001c4de:	6803      	ldr	r3, [r0, #0]
9001c4e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c4e2:	4798      	blx	r3
9001c4e4:	b01f      	add	sp, #124	@ 0x7c
9001c4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c4ea:	bf00      	nop
9001c4ec:	fffff800 	.word	0xfffff800
9001c4f0:	24021c5c 	.word	0x24021c5c

9001c4f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001c4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c4f8:	b091      	sub	sp, #68	@ 0x44
9001c4fa:	469b      	mov	fp, r3
9001c4fc:	4616      	mov	r6, r2
9001c4fe:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c502:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001c506:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001c50a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001c50e:	4604      	mov	r4, r0
9001c510:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001c514:	4640      	mov	r0, r8
9001c516:	460d      	mov	r5, r1
9001c518:	4659      	mov	r1, fp
9001c51a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001c51e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001c522:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001c526:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001c52a:	f7f3 fcc3 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001c52e:	4631      	mov	r1, r6
9001c530:	4640      	mov	r0, r8
9001c532:	f7f3 fcbf 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001c536:	4b74      	ldr	r3, [pc, #464]	@ (9001c708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001c538:	8818      	ldrh	r0, [r3, #0]
9001c53a:	4b74      	ldr	r3, [pc, #464]	@ (9001c70c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001c53c:	b202      	sxth	r2, r0
9001c53e:	8819      	ldrh	r1, [r3, #0]
9001c540:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001c544:	b20e      	sxth	r6, r1
9001c546:	2b00      	cmp	r3, #0
9001c548:	da07      	bge.n	9001c55a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001c54a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001c54e:	4463      	add	r3, ip
9001c550:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001c554:	2300      	movs	r3, #0
9001c556:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001c55a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001c55e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001c562:	1ad2      	subs	r2, r2, r3
9001c564:	4594      	cmp	ip, r2
9001c566:	bfc4      	itt	gt
9001c568:	1ac2      	subgt	r2, r0, r3
9001c56a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001c56e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001c572:	2a00      	cmp	r2, #0
9001c574:	da07      	bge.n	9001c586 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001c576:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001c57a:	4462      	add	r2, ip
9001c57c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001c580:	2200      	movs	r2, #0
9001c582:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001c586:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001c58a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001c58e:	eba6 060a 	sub.w	r6, r6, sl
9001c592:	42b2      	cmp	r2, r6
9001c594:	bfc4      	itt	gt
9001c596:	eba1 020a 	subgt.w	r2, r1, sl
9001c59a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001c59e:	4a5c      	ldr	r2, [pc, #368]	@ (9001c710 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001c5a0:	7812      	ldrb	r2, [r2, #0]
9001c5a2:	b9a2      	cbnz	r2, 9001c5ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001c5a4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001c5a8:	4286      	cmp	r6, r0
9001c5aa:	4640      	mov	r0, r8
9001c5ac:	9303      	str	r3, [sp, #12]
9001c5ae:	bf14      	ite	ne
9001c5b0:	2600      	movne	r6, #0
9001c5b2:	2601      	moveq	r6, #1
9001c5b4:	f7f3 fcc1 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9001c5b8:	9b03      	ldr	r3, [sp, #12]
9001c5ba:	b160      	cbz	r0, 9001c5d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001c5bc:	2300      	movs	r3, #0
9001c5be:	8023      	strh	r3, [r4, #0]
9001c5c0:	8063      	strh	r3, [r4, #2]
9001c5c2:	80a3      	strh	r3, [r4, #4]
9001c5c4:	4620      	mov	r0, r4
9001c5c6:	80e3      	strh	r3, [r4, #6]
9001c5c8:	b011      	add	sp, #68	@ 0x44
9001c5ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c5ce:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001c5d2:	428e      	cmp	r6, r1
9001c5d4:	e7e9      	b.n	9001c5aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001c5d6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001c5da:	a90e      	add	r1, sp, #56	@ 0x38
9001c5dc:	900e      	str	r0, [sp, #56]	@ 0x38
9001c5de:	a80c      	add	r0, sp, #48	@ 0x30
9001c5e0:	9205      	str	r2, [sp, #20]
9001c5e2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001c5e6:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001c5ea:	9206      	str	r2, [sp, #24]
9001c5ec:	f8bb 2000 	ldrh.w	r2, [fp]
9001c5f0:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001c5f4:	1a9b      	subs	r3, r3, r2
9001c5f6:	b21b      	sxth	r3, r3
9001c5f8:	9303      	str	r3, [sp, #12]
9001c5fa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001c5fe:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001c718 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c602:	ebaa 0a03 	sub.w	sl, sl, r3
9001c606:	fa0f f38a 	sxth.w	r3, sl
9001c60a:	9304      	str	r3, [sp, #16]
9001c60c:	9b03      	ldr	r3, [sp, #12]
9001c60e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001c612:	9b04      	ldr	r3, [sp, #16]
9001c614:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001c618:	9b05      	ldr	r3, [sp, #20]
9001c61a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001c61e:	9b06      	ldr	r3, [sp, #24]
9001c620:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001c624:	f7f8 fd56 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c628:	4640      	mov	r0, r8
9001c62a:	f7f8 fd2b 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c62e:	a80e      	add	r0, sp, #56	@ 0x38
9001c630:	f7f8 fd28 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c634:	4b37      	ldr	r3, [pc, #220]	@ (9001c714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001c636:	4628      	mov	r0, r5
9001c638:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001c63c:	881b      	ldrh	r3, [r3, #0]
9001c63e:	9307      	str	r3, [sp, #28]
9001c640:	682b      	ldr	r3, [r5, #0]
9001c642:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001c644:	4798      	blx	r3
9001c646:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001c64a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001c64e:	4681      	mov	r9, r0
9001c650:	f8db 0000 	ldr.w	r0, [fp]
9001c654:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001c658:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001c65a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c65e:	6803      	ldr	r3, [r0, #0]
9001c660:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001c662:	4798      	blx	r3
9001c664:	4607      	mov	r7, r0
9001c666:	f8db 0000 	ldr.w	r0, [fp]
9001c66a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001c66e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001c672:	6803      	ldr	r3, [r0, #0]
9001c674:	9109      	str	r1, [sp, #36]	@ 0x24
9001c676:	9208      	str	r2, [sp, #32]
9001c678:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001c67a:	4798      	blx	r3
9001c67c:	f010 0f01 	tst.w	r0, #1
9001c680:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001c684:	d012      	beq.n	9001c6ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001c686:	f8db 0000 	ldr.w	r0, [fp]
9001c68a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001c68e:	6803      	ldr	r3, [r0, #0]
9001c690:	9200      	str	r2, [sp, #0]
9001c692:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001c694:	462b      	mov	r3, r5
9001c696:	e898 0006 	ldmia.w	r8, {r1, r2}
9001c69a:	47b0      	blx	r6
9001c69c:	9b03      	ldr	r3, [sp, #12]
9001c69e:	8023      	strh	r3, [r4, #0]
9001c6a0:	9b04      	ldr	r3, [sp, #16]
9001c6a2:	8063      	strh	r3, [r4, #2]
9001c6a4:	9b05      	ldr	r3, [sp, #20]
9001c6a6:	80a3      	strh	r3, [r4, #4]
9001c6a8:	9b06      	ldr	r3, [sp, #24]
9001c6aa:	e78b      	b.n	9001c5c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001c6ac:	fb09 f202 	mul.w	r2, r9, r2
9001c6b0:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001c6b4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001c6b8:	440f      	add	r7, r1
9001c6ba:	b166      	cbz	r6, 9001c6d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c6bc:	9a07      	ldr	r2, [sp, #28]
9001c6be:	4592      	cmp	sl, r2
9001c6c0:	d109      	bne.n	9001c6d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c6c2:	f8db 0000 	ldr.w	r0, [fp]
9001c6c6:	fb09 f303 	mul.w	r3, r9, r3
9001c6ca:	4629      	mov	r1, r5
9001c6cc:	6802      	ldr	r2, [r0, #0]
9001c6ce:	6b56      	ldr	r6, [r2, #52]	@ 0x34
9001c6d0:	463a      	mov	r2, r7
9001c6d2:	47b0      	blx	r6
9001c6d4:	e7e2      	b.n	9001c69c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c6d6:	fb0a f303 	mul.w	r3, sl, r3
9001c6da:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001c6de:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001c718 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c6e2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001c6e6:	4545      	cmp	r5, r8
9001c6e8:	d2d8      	bcs.n	9001c69c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c6ea:	f8db 0000 	ldr.w	r0, [fp]
9001c6ee:	4629      	mov	r1, r5
9001c6f0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001c6f4:	4435      	add	r5, r6
9001c6f6:	6802      	ldr	r2, [r0, #0]
9001c6f8:	005b      	lsls	r3, r3, #1
9001c6fa:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
9001c6fe:	463a      	mov	r2, r7
9001c700:	47d0      	blx	sl
9001c702:	444f      	add	r7, r9
9001c704:	e7ef      	b.n	9001c6e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001c706:	bf00      	nop
9001c708:	24021c50 	.word	0x24021c50
9001c70c:	24021c52 	.word	0x24021c52
9001c710:	24021c54 	.word	0x24021c54
9001c714:	24021c56 	.word	0x24021c56
9001c718:	24021c5c 	.word	0x24021c5c

9001c71c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001c71c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c71e:	4606      	mov	r6, r0
9001c720:	b087      	sub	sp, #28
9001c722:	460c      	mov	r4, r1
9001c724:	4617      	mov	r7, r2
9001c726:	461d      	mov	r5, r3
9001c728:	b333      	cbz	r3, 9001c778 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c72a:	4608      	mov	r0, r1
9001c72c:	f7f3 fc05 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9001c730:	bb10      	cbnz	r0, 9001c778 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c732:	6820      	ldr	r0, [r4, #0]
9001c734:	ab04      	add	r3, sp, #16
9001c736:	6861      	ldr	r1, [r4, #4]
9001c738:	4c1b      	ldr	r4, [pc, #108]	@ (9001c7a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001c73a:	c303      	stmia	r3!, {r0, r1}
9001c73c:	a804      	add	r0, sp, #16
9001c73e:	f7f8 fca1 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c742:	6820      	ldr	r0, [r4, #0]
9001c744:	6803      	ldr	r3, [r0, #0]
9001c746:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001c748:	4798      	blx	r3
9001c74a:	2dff      	cmp	r5, #255	@ 0xff
9001c74c:	d016      	beq.n	9001c77c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001c74e:	f010 0f08 	tst.w	r0, #8
9001c752:	6820      	ldr	r0, [r4, #0]
9001c754:	d015      	beq.n	9001c782 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001c756:	2400      	movs	r4, #0
9001c758:	6801      	ldr	r1, [r0, #0]
9001c75a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001c75e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c762:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001c766:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001c76a:	9401      	str	r4, [sp, #4]
9001c76c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001c770:	9400      	str	r4, [sp, #0]
9001c772:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
9001c774:	4639      	mov	r1, r7
9001c776:	47a0      	blx	r4
9001c778:	b007      	add	sp, #28
9001c77a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c77c:	f010 0f02 	tst.w	r0, #2
9001c780:	e7e7      	b.n	9001c752 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001c782:	6803      	ldr	r3, [r0, #0]
9001c784:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001c786:	4798      	blx	r3
9001c788:	4b08      	ldr	r3, [pc, #32]	@ (9001c7ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001c78a:	4601      	mov	r1, r0
9001c78c:	4630      	mov	r0, r6
9001c78e:	881a      	ldrh	r2, [r3, #0]
9001c790:	6833      	ldr	r3, [r6, #0]
9001c792:	e9cd 7500 	strd	r7, r5, [sp]
9001c796:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001c798:	ab04      	add	r3, sp, #16
9001c79a:	47a8      	blx	r5
9001c79c:	6820      	ldr	r0, [r4, #0]
9001c79e:	6803      	ldr	r3, [r0, #0]
9001c7a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c7a2:	4798      	blx	r3
9001c7a4:	e7e8      	b.n	9001c778 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c7a6:	bf00      	nop
9001c7a8:	24021c5c 	.word	0x24021c5c
9001c7ac:	24021c56 	.word	0x24021c56

9001c7b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001c7b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c7b4:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001c7b8:	4688      	mov	r8, r1
9001c7ba:	4614      	mov	r4, r2
9001c7bc:	461d      	mov	r5, r3
9001c7be:	9e08      	ldr	r6, [sp, #32]
9001c7c0:	2f00      	cmp	r7, #0
9001c7c2:	f000 80ab 	beq.w	9001c91c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c7c6:	4618      	mov	r0, r3
9001c7c8:	f7f3 fbb7 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9001c7cc:	2800      	cmp	r0, #0
9001c7ce:	f040 80a5 	bne.w	9001c91c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c7d2:	f9b5 1000 	ldrsh.w	r1, [r5]
9001c7d6:	2fff      	cmp	r7, #255	@ 0xff
9001c7d8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001c7dc:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001c7e0:	fb04 1303 	mla	r3, r4, r3, r1
9001c7e4:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001c7e8:	eba4 0200 	sub.w	r2, r4, r0
9001c7ec:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001c7f0:	fb04 f505 	mul.w	r5, r4, r5
9001c7f4:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001c7f8:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001c7fc:	d04a      	beq.n	9001c894 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001c7fe:	b2bc      	uxth	r4, r7
9001c800:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001c804:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001c808:	fa5f f788 	uxtb.w	r7, r8
9001c80c:	b2f3      	uxtb	r3, r6
9001c80e:	0040      	lsls	r0, r0, #1
9001c810:	fb0e fe04 	mul.w	lr, lr, r4
9001c814:	4367      	muls	r7, r4
9001c816:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001c81a:	4363      	muls	r3, r4
9001c81c:	fa1f fc8c 	uxth.w	ip, ip
9001c820:	42a9      	cmp	r1, r5
9001c822:	d27b      	bcs.n	9001c91c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c824:	eb01 0900 	add.w	r9, r1, r0
9001c828:	4549      	cmp	r1, r9
9001c82a:	d231      	bcs.n	9001c890 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001c82c:	880a      	ldrh	r2, [r1, #0]
9001c82e:	1214      	asrs	r4, r2, #8
9001c830:	10d6      	asrs	r6, r2, #3
9001c832:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001c836:	00d2      	lsls	r2, r2, #3
9001c838:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c83c:	b2d2      	uxtb	r2, r2
9001c83e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001c842:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c846:	fb14 f40c 	smulbb	r4, r4, ip
9001c84a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001c84e:	fb12 f20c 	smulbb	r2, r2, ip
9001c852:	fb16 f60c 	smulbb	r6, r6, ip
9001c856:	4474      	add	r4, lr
9001c858:	441a      	add	r2, r3
9001c85a:	b2a4      	uxth	r4, r4
9001c85c:	443e      	add	r6, r7
9001c85e:	b292      	uxth	r2, r2
9001c860:	f104 0a01 	add.w	sl, r4, #1
9001c864:	b2b6      	uxth	r6, r6
9001c866:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001c86a:	f102 0a01 	add.w	sl, r2, #1
9001c86e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001c872:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001c876:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c87a:	4322      	orrs	r2, r4
9001c87c:	1c74      	adds	r4, r6, #1
9001c87e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001c882:	0976      	lsrs	r6, r6, #5
9001c884:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c888:	4332      	orrs	r2, r6
9001c88a:	f821 2b02 	strh.w	r2, [r1], #2
9001c88e:	e7cb      	b.n	9001c828 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001c890:	4441      	add	r1, r8
9001c892:	e7c5      	b.n	9001c820 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001c894:	0973      	lsrs	r3, r6, #5
9001c896:	4f22      	ldr	r7, [pc, #136]	@ (9001c920 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001c898:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c89c:	ea08 0707 	and.w	r7, r8, r7
9001c8a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001c8a4:	433b      	orrs	r3, r7
9001c8a6:	07e7      	lsls	r7, r4, #31
9001c8a8:	ea43 0306 	orr.w	r3, r3, r6
9001c8ac:	b29b      	uxth	r3, r3
9001c8ae:	d50b      	bpl.n	9001c8c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001c8b0:	0040      	lsls	r0, r0, #1
9001c8b2:	0052      	lsls	r2, r2, #1
9001c8b4:	42a9      	cmp	r1, r5
9001c8b6:	d231      	bcs.n	9001c91c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c8b8:	180c      	adds	r4, r1, r0
9001c8ba:	42a1      	cmp	r1, r4
9001c8bc:	d202      	bcs.n	9001c8c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001c8be:	f821 3b02 	strh.w	r3, [r1], #2
9001c8c2:	e7fa      	b.n	9001c8ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001c8c4:	4411      	add	r1, r2
9001c8c6:	e7f5      	b.n	9001c8b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001c8c8:	078e      	lsls	r6, r1, #30
9001c8ca:	d008      	beq.n	9001c8de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001c8cc:	0066      	lsls	r6, r4, #1
9001c8ce:	460a      	mov	r2, r1
9001c8d0:	42aa      	cmp	r2, r5
9001c8d2:	d202      	bcs.n	9001c8da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001c8d4:	8013      	strh	r3, [r2, #0]
9001c8d6:	4432      	add	r2, r6
9001c8d8:	e7fa      	b.n	9001c8d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001c8da:	3102      	adds	r1, #2
9001c8dc:	3801      	subs	r0, #1
9001c8de:	07c2      	lsls	r2, r0, #31
9001c8e0:	d50b      	bpl.n	9001c8fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001c8e2:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001c8e6:	0066      	lsls	r6, r4, #1
9001c8e8:	3a01      	subs	r2, #1
9001c8ea:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001c8ee:	42aa      	cmp	r2, r5
9001c8f0:	d202      	bcs.n	9001c8f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001c8f2:	8013      	strh	r3, [r2, #0]
9001c8f4:	4432      	add	r2, r6
9001c8f6:	e7fa      	b.n	9001c8ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001c8f8:	3801      	subs	r0, #1
9001c8fa:	b178      	cbz	r0, 9001c91c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c8fc:	1040      	asrs	r0, r0, #1
9001c8fe:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001c902:	0080      	lsls	r0, r0, #2
9001c904:	0064      	lsls	r4, r4, #1
9001c906:	42a9      	cmp	r1, r5
9001c908:	d208      	bcs.n	9001c91c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c90a:	180e      	adds	r6, r1, r0
9001c90c:	460a      	mov	r2, r1
9001c90e:	42b2      	cmp	r2, r6
9001c910:	d202      	bcs.n	9001c918 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001c912:	f842 3b04 	str.w	r3, [r2], #4
9001c916:	e7fa      	b.n	9001c90e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001c918:	4421      	add	r1, r4
9001c91a:	e7f4      	b.n	9001c906 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001c91c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c920:	00fff800 	.word	0x00fff800

9001c924 <_ZN8touchgfx8LCD16bppC1Ev>:
9001c924:	2200      	movs	r2, #0
9001c926:	4912      	ldr	r1, [pc, #72]	@ (9001c970 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001c928:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001c92c:	6001      	str	r1, [r0, #0]
9001c92e:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001c932:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001c936:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001c93a:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001c93e:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001c942:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001c946:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001c94a:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001c94e:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001c952:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001c956:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001c95a:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001c95e:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001c962:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001c966:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001c96a:	f8c0 2084 	str.w	r2, [r0, #132]	@ 0x84
9001c96e:	4770      	bx	lr
9001c970:	9002abd8 	.word	0x9002abd8

9001c974 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001c974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c978:	b08d      	sub	sp, #52	@ 0x34
9001c97a:	460d      	mov	r5, r1
9001c97c:	4604      	mov	r4, r0
9001c97e:	4699      	mov	r9, r3
9001c980:	6808      	ldr	r0, [r1, #0]
9001c982:	ab08      	add	r3, sp, #32
9001c984:	6849      	ldr	r1, [r1, #4]
9001c986:	c303      	stmia	r3!, {r0, r1}
9001c988:	6810      	ldr	r0, [r2, #0]
9001c98a:	ab0a      	add	r3, sp, #40	@ 0x28
9001c98c:	6851      	ldr	r1, [r2, #4]
9001c98e:	c303      	stmia	r3!, {r0, r1}
9001c990:	a808      	add	r0, sp, #32
9001c992:	f7f8 fb77 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c996:	4629      	mov	r1, r5
9001c998:	a80a      	add	r0, sp, #40	@ 0x28
9001c99a:	4d67      	ldr	r5, [pc, #412]	@ (9001cb38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c99c:	f7f8 fb9a 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c9a0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001c9a4:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001c9a8:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001c9ac:	6828      	ldr	r0, [r5, #0]
9001c9ae:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c9b2:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001c9b6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001c9ba:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001c9be:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001c9c2:	440a      	add	r2, r1
9001c9c4:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001c9c8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001c9cc:	4413      	add	r3, r2
9001c9ce:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001c9d2:	6803      	ldr	r3, [r0, #0]
9001c9d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001c9d6:	4798      	blx	r3
9001c9d8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001c9dc:	d119      	bne.n	9001ca12 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001c9de:	f010 0f20 	tst.w	r0, #32
9001c9e2:	6828      	ldr	r0, [r5, #0]
9001c9e4:	d018      	beq.n	9001ca18 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001c9e6:	2500      	movs	r5, #0
9001c9e8:	6801      	ldr	r1, [r0, #0]
9001c9ea:	b2b6      	uxth	r6, r6
9001c9ec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001c9f0:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001c9f4:	9601      	str	r6, [sp, #4]
9001c9f6:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001c9fa:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001c9fe:	9502      	str	r5, [sp, #8]
9001ca00:	fa1f f588 	uxth.w	r5, r8
9001ca04:	9500      	str	r5, [sp, #0]
9001ca06:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
9001ca08:	4621      	mov	r1, r4
9001ca0a:	47a8      	blx	r5
9001ca0c:	b00d      	add	sp, #52	@ 0x34
9001ca0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ca12:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001ca16:	e7e4      	b.n	9001c9e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001ca18:	6803      	ldr	r3, [r0, #0]
9001ca1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ca1c:	4798      	blx	r3
9001ca1e:	4947      	ldr	r1, [pc, #284]	@ (9001cb3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001ca20:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001ca24:	880b      	ldrh	r3, [r1, #0]
9001ca26:	468a      	mov	sl, r1
9001ca28:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001ca2c:	fb03 5202 	mla	r2, r3, r2, r5
9001ca30:	4373      	muls	r3, r6
9001ca32:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ca36:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ca3a:	9307      	str	r3, [sp, #28]
9001ca3c:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001ca40:	9306      	str	r3, [sp, #24]
9001ca42:	9b07      	ldr	r3, [sp, #28]
9001ca44:	4298      	cmp	r0, r3
9001ca46:	d270      	bcs.n	9001cb2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001ca48:	9b06      	ldr	r3, [sp, #24]
9001ca4a:	4621      	mov	r1, r4
9001ca4c:	eb00 0b03 	add.w	fp, r0, r3
9001ca50:	4558      	cmp	r0, fp
9001ca52:	d25d      	bcs.n	9001cb10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001ca54:	f851 4b04 	ldr.w	r4, [r1], #4
9001ca58:	0e23      	lsrs	r3, r4, #24
9001ca5a:	d014      	beq.n	9001ca86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001ca5c:	2bff      	cmp	r3, #255	@ 0xff
9001ca5e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001ca62:	d112      	bne.n	9001ca8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001ca64:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001ca68:	d10f      	bne.n	9001ca8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001ca6a:	0963      	lsrs	r3, r4, #5
9001ca6c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001ca70:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001ca74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001ca78:	f02c 0c07 	bic.w	ip, ip, #7
9001ca7c:	ea43 0c0c 	orr.w	ip, r3, ip
9001ca80:	ea4c 0404 	orr.w	r4, ip, r4
9001ca84:	8004      	strh	r4, [r0, #0]
9001ca86:	3002      	adds	r0, #2
9001ca88:	e7e2      	b.n	9001ca50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001ca8a:	fb09 f303 	mul.w	r3, r9, r3
9001ca8e:	8807      	ldrh	r7, [r0, #0]
9001ca90:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001ca94:	fa5f fc8c 	uxtb.w	ip, ip
9001ca98:	1c5a      	adds	r2, r3, #1
9001ca9a:	123e      	asrs	r6, r7, #8
9001ca9c:	10fd      	asrs	r5, r7, #3
9001ca9e:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001caa2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001caa6:	00ff      	lsls	r7, r7, #3
9001caa8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001caac:	1212      	asrs	r2, r2, #8
9001caae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001cab2:	b293      	uxth	r3, r2
9001cab4:	43d2      	mvns	r2, r2
9001cab6:	b2ff      	uxtb	r7, r7
9001cab8:	fb1e fe03 	smulbb	lr, lr, r3
9001cabc:	b2d2      	uxtb	r2, r2
9001cabe:	fb1c fc03 	smulbb	ip, ip, r3
9001cac2:	b2e4      	uxtb	r4, r4
9001cac4:	fb06 e602 	mla	r6, r6, r2, lr
9001cac8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001cacc:	fb14 f403 	smulbb	r4, r4, r3
9001cad0:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001cad4:	b2b6      	uxth	r6, r6
9001cad6:	fb05 c502 	mla	r5, r5, r2, ip
9001cada:	fb07 4702 	mla	r7, r7, r2, r4
9001cade:	f106 0e01 	add.w	lr, r6, #1
9001cae2:	b2ad      	uxth	r5, r5
9001cae4:	b2bf      	uxth	r7, r7
9001cae6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001caea:	f105 0c01 	add.w	ip, r5, #1
9001caee:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001caf2:	1c7e      	adds	r6, r7, #1
9001caf4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001caf8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001cafc:	096d      	lsrs	r5, r5, #5
9001cafe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001cb02:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001cb06:	ea46 060e 	orr.w	r6, r6, lr
9001cb0a:	432e      	orrs	r6, r5
9001cb0c:	8006      	strh	r6, [r0, #0]
9001cb0e:	e7ba      	b.n	9001ca86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001cb10:	f8ba 3000 	ldrh.w	r3, [sl]
9001cb14:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001cb18:	eba3 0308 	sub.w	r3, r3, r8
9001cb1c:	eba4 0408 	sub.w	r4, r4, r8
9001cb20:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cb24:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001cb28:	e78b      	b.n	9001ca42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001cb2a:	4b03      	ldr	r3, [pc, #12]	@ (9001cb38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001cb2c:	6818      	ldr	r0, [r3, #0]
9001cb2e:	6803      	ldr	r3, [r0, #0]
9001cb30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cb32:	4798      	blx	r3
9001cb34:	e76a      	b.n	9001ca0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001cb36:	bf00      	nop
9001cb38:	24021c5c 	.word	0x24021c5c
9001cb3c:	24021c56 	.word	0x24021c56

9001cb40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001cb40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001cb44:	b085      	sub	sp, #20
9001cb46:	6810      	ldr	r0, [r2, #0]
9001cb48:	460c      	mov	r4, r1
9001cb4a:	6851      	ldr	r1, [r2, #4]
9001cb4c:	466d      	mov	r5, sp
9001cb4e:	4616      	mov	r6, r2
9001cb50:	c503      	stmia	r5!, {r0, r1}
9001cb52:	6818      	ldr	r0, [r3, #0]
9001cb54:	6859      	ldr	r1, [r3, #4]
9001cb56:	c503      	stmia	r5!, {r0, r1}
9001cb58:	4668      	mov	r0, sp
9001cb5a:	4d2e      	ldr	r5, [pc, #184]	@ (9001cc14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001cb5c:	f7f8 fa92 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cb60:	4631      	mov	r1, r6
9001cb62:	a802      	add	r0, sp, #8
9001cb64:	4e2c      	ldr	r6, [pc, #176]	@ (9001cc18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001cb66:	f7f8 fab5 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cb6a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001cb6e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001cb72:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001cb76:	6828      	ldr	r0, [r5, #0]
9001cb78:	fb11 2103 	smlabb	r1, r1, r3, r2
9001cb7c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001cb80:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001cb84:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001cb88:	f8bd 1000 	ldrh.w	r1, [sp]
9001cb8c:	440a      	add	r2, r1
9001cb8e:	f8ad 2008 	strh.w	r2, [sp, #8]
9001cb92:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001cb96:	4413      	add	r3, r2
9001cb98:	f8ad 300a 	strh.w	r3, [sp, #10]
9001cb9c:	6803      	ldr	r3, [r0, #0]
9001cb9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001cba0:	4798      	blx	r3
9001cba2:	8833      	ldrh	r3, [r6, #0]
9001cba4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001cba8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001cbac:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001cbb0:	f8df e068 	ldr.w	lr, [pc, #104]	@ 9001cc1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001cbb4:	fb03 1202 	mla	r2, r3, r2, r1
9001cbb8:	fb08 f303 	mul.w	r3, r8, r3
9001cbbc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cbc0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cbc4:	4298      	cmp	r0, r3
9001cbc6:	d21d      	bcs.n	9001cc04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001cbc8:	eb00 080c 	add.w	r8, r0, ip
9001cbcc:	4540      	cmp	r0, r8
9001cbce:	d20f      	bcs.n	9001cbf0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001cbd0:	f854 1b04 	ldr.w	r1, [r4], #4
9001cbd4:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001cbd8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001cbdc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001cbe0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001cbe4:	ea42 0209 	orr.w	r2, r2, r9
9001cbe8:	430a      	orrs	r2, r1
9001cbea:	f820 2b02 	strh.w	r2, [r0], #2
9001cbee:	e7ed      	b.n	9001cbcc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001cbf0:	8832      	ldrh	r2, [r6, #0]
9001cbf2:	1bd2      	subs	r2, r2, r7
9001cbf4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cbf8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001cbfc:	1bd2      	subs	r2, r2, r7
9001cbfe:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001cc02:	e7df      	b.n	9001cbc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001cc04:	6828      	ldr	r0, [r5, #0]
9001cc06:	6803      	ldr	r3, [r0, #0]
9001cc08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cc0a:	4798      	blx	r3
9001cc0c:	b005      	add	sp, #20
9001cc0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001cc12:	bf00      	nop
9001cc14:	24021c5c 	.word	0x24021c5c
9001cc18:	24021c56 	.word	0x24021c56
9001cc1c:	fffff800 	.word	0xfffff800

9001cc20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001cc20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001cc24:	b08e      	sub	sp, #56	@ 0x38
9001cc26:	460e      	mov	r6, r1
9001cc28:	4604      	mov	r4, r0
9001cc2a:	461d      	mov	r5, r3
9001cc2c:	6808      	ldr	r0, [r1, #0]
9001cc2e:	ab0a      	add	r3, sp, #40	@ 0x28
9001cc30:	6849      	ldr	r1, [r1, #4]
9001cc32:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9001ce08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001cc36:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 9001ce0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001cc3a:	c303      	stmia	r3!, {r0, r1}
9001cc3c:	6810      	ldr	r0, [r2, #0]
9001cc3e:	ab0c      	add	r3, sp, #48	@ 0x30
9001cc40:	6851      	ldr	r1, [r2, #4]
9001cc42:	c303      	stmia	r3!, {r0, r1}
9001cc44:	a80a      	add	r0, sp, #40	@ 0x28
9001cc46:	f7f8 fa1d 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cc4a:	4631      	mov	r1, r6
9001cc4c:	a80c      	add	r0, sp, #48	@ 0x30
9001cc4e:	f7f8 fa41 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cc52:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001cc56:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001cc5a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001cc5e:	f8d8 0000 	ldr.w	r0, [r8]
9001cc62:	fb11 2103 	smlabb	r1, r1, r3, r2
9001cc66:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9001cc6a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001cc6e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001cc72:	440c      	add	r4, r1
9001cc74:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9001cc78:	440a      	add	r2, r1
9001cc7a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9001cc7e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001cc82:	4413      	add	r3, r2
9001cc84:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001cc88:	6803      	ldr	r3, [r0, #0]
9001cc8a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001cc8c:	4798      	blx	r3
9001cc8e:	2dff      	cmp	r5, #255	@ 0xff
9001cc90:	d124      	bne.n	9001ccdc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001cc92:	f010 0f01 	tst.w	r0, #1
9001cc96:	f8d8 0000 	ldr.w	r0, [r8]
9001cc9a:	d022      	beq.n	9001cce2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001cc9c:	2100      	movs	r1, #0
9001cc9e:	f04f 0e01 	mov.w	lr, #1
9001cca2:	f8d0 c000 	ldr.w	ip, [r0]
9001cca6:	b2b6      	uxth	r6, r6
9001cca8:	f8cd e018 	str.w	lr, [sp, #24]
9001ccac:	b2bf      	uxth	r7, r7
9001ccae:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001ccb2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001ccb6:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001ccba:	f8b9 e000 	ldrh.w	lr, [r9]
9001ccbe:	9503      	str	r5, [sp, #12]
9001ccc0:	9601      	str	r6, [sp, #4]
9001ccc2:	9700      	str	r7, [sp, #0]
9001ccc4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001ccc8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001cccc:	9102      	str	r1, [sp, #8]
9001ccce:	4621      	mov	r1, r4
9001ccd0:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
9001ccd4:	47a8      	blx	r5
9001ccd6:	b00e      	add	sp, #56	@ 0x38
9001ccd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ccdc:	f010 0f04 	tst.w	r0, #4
9001cce0:	e7d9      	b.n	9001cc96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001cce2:	6803      	ldr	r3, [r0, #0]
9001cce4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001cce6:	4798      	blx	r3
9001cce8:	f8b9 3000 	ldrh.w	r3, [r9]
9001ccec:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001ccf0:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001ccf4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
9001ccf8:	435e      	muls	r6, r3
9001ccfa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001ccfe:	2dff      	cmp	r5, #255	@ 0xff
9001cd00:	fb03 1202 	mla	r2, r3, r2, r1
9001cd04:	ebac 0c07 	sub.w	ip, ip, r7
9001cd08:	eba3 0707 	sub.w	r7, r3, r7
9001cd0c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cd10:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001cd14:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001cd18:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001cd1c:	d049      	beq.n	9001cdb2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001cd1e:	43eb      	mvns	r3, r5
9001cd20:	fa1f f985 	uxth.w	r9, r5
9001cd24:	b2db      	uxtb	r3, r3
9001cd26:	42b0      	cmp	r0, r6
9001cd28:	d266      	bcs.n	9001cdf8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001cd2a:	eb00 0a0e 	add.w	sl, r0, lr
9001cd2e:	4550      	cmp	r0, sl
9001cd30:	4621      	mov	r1, r4
9001cd32:	f104 0403 	add.w	r4, r4, #3
9001cd36:	d25b      	bcs.n	9001cdf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001cd38:	8802      	ldrh	r2, [r0, #0]
9001cd3a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001cd3e:	ea4f 2822 	mov.w	r8, r2, asr #8
9001cd42:	fb11 f109 	smulbb	r1, r1, r9
9001cd46:	10d5      	asrs	r5, r2, #3
9001cd48:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001cd4c:	00d2      	lsls	r2, r2, #3
9001cd4e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001cd52:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001cd56:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001cd5a:	fb08 1803 	mla	r8, r8, r3, r1
9001cd5e:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001cd62:	b2d2      	uxtb	r2, r2
9001cd64:	fb11 f109 	smulbb	r1, r1, r9
9001cd68:	fa1f f888 	uxth.w	r8, r8
9001cd6c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001cd70:	fb05 1503 	mla	r5, r5, r3, r1
9001cd74:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001cd78:	fb11 f109 	smulbb	r1, r1, r9
9001cd7c:	b2ad      	uxth	r5, r5
9001cd7e:	fb02 1203 	mla	r2, r2, r3, r1
9001cd82:	f108 0101 	add.w	r1, r8, #1
9001cd86:	b292      	uxth	r2, r2
9001cd88:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001cd8c:	1c51      	adds	r1, r2, #1
9001cd8e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001cd92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001cd96:	1c69      	adds	r1, r5, #1
9001cd98:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001cd9c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001cda0:	096d      	lsrs	r5, r5, #5
9001cda2:	ea42 0208 	orr.w	r2, r2, r8
9001cda6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001cdaa:	432a      	orrs	r2, r5
9001cdac:	f820 2b02 	strh.w	r2, [r0], #2
9001cdb0:	e7bd      	b.n	9001cd2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001cdb2:	4a14      	ldr	r2, [pc, #80]	@ (9001ce04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001cdb4:	42b0      	cmp	r0, r6
9001cdb6:	d21f      	bcs.n	9001cdf8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001cdb8:	eb00 050e 	add.w	r5, r0, lr
9001cdbc:	42a8      	cmp	r0, r5
9001cdbe:	4621      	mov	r1, r4
9001cdc0:	f104 0403 	add.w	r4, r4, #3
9001cdc4:	d210      	bcs.n	9001cde8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001cdc6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001cdca:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001cdce:	00db      	lsls	r3, r3, #3
9001cdd0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001cdd4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001cdd8:	430b      	orrs	r3, r1
9001cdda:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001cdde:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001cde2:	f820 3b02 	strh.w	r3, [r0], #2
9001cde6:	e7e9      	b.n	9001cdbc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001cde8:	4438      	add	r0, r7
9001cdea:	eb01 040c 	add.w	r4, r1, ip
9001cdee:	e7e1      	b.n	9001cdb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001cdf0:	4438      	add	r0, r7
9001cdf2:	eb01 040c 	add.w	r4, r1, ip
9001cdf6:	e796      	b.n	9001cd26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001cdf8:	4b03      	ldr	r3, [pc, #12]	@ (9001ce08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001cdfa:	6818      	ldr	r0, [r3, #0]
9001cdfc:	6803      	ldr	r3, [r0, #0]
9001cdfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ce00:	4798      	blx	r3
9001ce02:	e768      	b.n	9001ccd6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001ce04:	fffff800 	.word	0xfffff800
9001ce08:	24021c5c 	.word	0x24021c5c
9001ce0c:	24021c56 	.word	0x24021c56

9001ce10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001ce10:	b4f0      	push	{r4, r5, r6, r7}
9001ce12:	4616      	mov	r6, r2
9001ce14:	461c      	mov	r4, r3
9001ce16:	460d      	mov	r5, r1
9001ce18:	9a04      	ldr	r2, [sp, #16]
9001ce1a:	2e01      	cmp	r6, #1
9001ce1c:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001ce20:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001ce24:	d012      	beq.n	9001ce4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001ce26:	d303      	bcc.n	9001ce30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001ce28:	2e02      	cmp	r6, #2
9001ce2a:	d00a      	beq.n	9001ce42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001ce2c:	bcf0      	pop	{r4, r5, r6, r7}
9001ce2e:	4770      	bx	lr
9001ce30:	6805      	ldr	r5, [r0, #0]
9001ce32:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001ce36:	68ed      	ldr	r5, [r5, #12]
9001ce38:	4613      	mov	r3, r2
9001ce3a:	4622      	mov	r2, r4
9001ce3c:	46ac      	mov	ip, r5
9001ce3e:	bcf0      	pop	{r4, r5, r6, r7}
9001ce40:	4760      	bx	ip
9001ce42:	4621      	mov	r1, r4
9001ce44:	4628      	mov	r0, r5
9001ce46:	bcf0      	pop	{r4, r5, r6, r7}
9001ce48:	f7ff bd94 	b.w	9001c974 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ce4c:	4621      	mov	r1, r4
9001ce4e:	4628      	mov	r0, r5
9001ce50:	bcf0      	pop	{r4, r5, r6, r7}
9001ce52:	f7ff bee5 	b.w	9001cc20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001ce58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001ce58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ce5c:	b093      	sub	sp, #76	@ 0x4c
9001ce5e:	4681      	mov	r9, r0
9001ce60:	4688      	mov	r8, r1
9001ce62:	6810      	ldr	r0, [r2, #0]
9001ce64:	6851      	ldr	r1, [r2, #4]
9001ce66:	ac0e      	add	r4, sp, #56	@ 0x38
9001ce68:	4616      	mov	r6, r2
9001ce6a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9001ce6e:	4f6b      	ldr	r7, [pc, #428]	@ (9001d01c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001ce70:	c403      	stmia	r4!, {r0, r1}
9001ce72:	6818      	ldr	r0, [r3, #0]
9001ce74:	ac10      	add	r4, sp, #64	@ 0x40
9001ce76:	6859      	ldr	r1, [r3, #4]
9001ce78:	c403      	stmia	r4!, {r0, r1}
9001ce7a:	a80e      	add	r0, sp, #56	@ 0x38
9001ce7c:	f7f8 f902 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ce80:	4631      	mov	r1, r6
9001ce82:	a810      	add	r0, sp, #64	@ 0x40
9001ce84:	4e66      	ldr	r6, [pc, #408]	@ (9001d020 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001ce86:	f7f8 f925 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ce8a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001ce8e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001ce92:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9001ce96:	6830      	ldr	r0, [r6, #0]
9001ce98:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ce9c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9001cea0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001cea4:	4489      	add	r9, r1
9001cea6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9001ceaa:	440a      	add	r2, r1
9001ceac:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9001ceb0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001ceb4:	4413      	add	r3, r2
9001ceb6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001ceba:	6803      	ldr	r3, [r0, #0]
9001cebc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001cebe:	4798      	blx	r3
9001cec0:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001cec4:	6830      	ldr	r0, [r6, #0]
9001cec6:	d01d      	beq.n	9001cf04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001cec8:	2200      	movs	r2, #0
9001ceca:	6801      	ldr	r1, [r0, #0]
9001cecc:	b2a4      	uxth	r4, r4
9001cece:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001ced2:	b2ad      	uxth	r5, r5
9001ced4:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001ced8:	220b      	movs	r2, #11
9001ceda:	9207      	str	r2, [sp, #28]
9001cedc:	883a      	ldrh	r2, [r7, #0]
9001cede:	9502      	str	r5, [sp, #8]
9001cee0:	9206      	str	r2, [sp, #24]
9001cee2:	2201      	movs	r2, #1
9001cee4:	9401      	str	r4, [sp, #4]
9001cee6:	e9cd a204 	strd	sl, r2, [sp, #16]
9001ceea:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9001ceee:	9203      	str	r2, [sp, #12]
9001cef0:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9001cef4:	9200      	str	r2, [sp, #0]
9001cef6:	4642      	mov	r2, r8
9001cef8:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
9001cefa:	4649      	mov	r1, r9
9001cefc:	47a0      	blx	r4
9001cefe:	b013      	add	sp, #76	@ 0x4c
9001cf00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cf04:	6803      	ldr	r3, [r0, #0]
9001cf06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001cf08:	4798      	blx	r3
9001cf0a:	883b      	ldrh	r3, [r7, #0]
9001cf0c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001cf10:	f04f 0e04 	mov.w	lr, #4
9001cf14:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9001cf18:	435d      	muls	r5, r3
9001cf1a:	fb03 1202 	mla	r2, r3, r2, r1
9001cf1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cf22:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001cf26:	920c      	str	r2, [sp, #48]	@ 0x30
9001cf28:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001cf2c:	1b12      	subs	r2, r2, r4
9001cf2e:	920d      	str	r2, [sp, #52]	@ 0x34
9001cf30:	0062      	lsls	r2, r4, #1
9001cf32:	1b1c      	subs	r4, r3, r4
9001cf34:	920a      	str	r2, [sp, #40]	@ 0x28
9001cf36:	0063      	lsls	r3, r4, #1
9001cf38:	930b      	str	r3, [sp, #44]	@ 0x2c
9001cf3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001cf3c:	4298      	cmp	r0, r3
9001cf3e:	d266      	bcs.n	9001d00e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001cf40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001cf42:	eb00 0b03 	add.w	fp, r0, r3
9001cf46:	4558      	cmp	r0, fp
9001cf48:	d25c      	bcs.n	9001d004 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001cf4a:	f819 3b01 	ldrb.w	r3, [r9], #1
9001cf4e:	fb1e e303 	smlabb	r3, lr, r3, lr
9001cf52:	f858 2003 	ldr.w	r2, [r8, r3]
9001cf56:	0e11      	lsrs	r1, r2, #24
9001cf58:	d012      	beq.n	9001cf80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001cf5a:	29ff      	cmp	r1, #255	@ 0xff
9001cf5c:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001cf60:	d110      	bne.n	9001cf84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001cf62:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001cf66:	d10d      	bne.n	9001cf84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001cf68:	0953      	lsrs	r3, r2, #5
9001cf6a:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9001cf6e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001cf72:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001cf76:	f027 0707 	bic.w	r7, r7, #7
9001cf7a:	431f      	orrs	r7, r3
9001cf7c:	433a      	orrs	r2, r7
9001cf7e:	8002      	strh	r2, [r0, #0]
9001cf80:	3002      	adds	r0, #2
9001cf82:	e7e0      	b.n	9001cf46 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001cf84:	fb0a f101 	mul.w	r1, sl, r1
9001cf88:	8806      	ldrh	r6, [r0, #0]
9001cf8a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001cf8e:	b2d2      	uxtb	r2, r2
9001cf90:	1c4b      	adds	r3, r1, #1
9001cf92:	1235      	asrs	r5, r6, #8
9001cf94:	10f4      	asrs	r4, r6, #3
9001cf96:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001cf9a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001cf9e:	00f6      	lsls	r6, r6, #3
9001cfa0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9001cfa4:	121b      	asrs	r3, r3, #8
9001cfa6:	b2f6      	uxtb	r6, r6
9001cfa8:	b299      	uxth	r1, r3
9001cfaa:	43db      	mvns	r3, r3
9001cfac:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001cfb0:	fb1c fc01 	smulbb	ip, ip, r1
9001cfb4:	b2db      	uxtb	r3, r3
9001cfb6:	fb12 f201 	smulbb	r2, r2, r1
9001cfba:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001cfbe:	fb05 c503 	mla	r5, r5, r3, ip
9001cfc2:	b2ff      	uxtb	r7, r7
9001cfc4:	fb06 2203 	mla	r2, r6, r3, r2
9001cfc8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001cfcc:	fb17 f701 	smulbb	r7, r7, r1
9001cfd0:	b2ad      	uxth	r5, r5
9001cfd2:	b292      	uxth	r2, r2
9001cfd4:	fb04 7403 	mla	r4, r4, r3, r7
9001cfd8:	f105 0c01 	add.w	ip, r5, #1
9001cfdc:	1c57      	adds	r7, r2, #1
9001cfde:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001cfe2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001cfe6:	b2a4      	uxth	r4, r4
9001cfe8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001cfec:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001cff0:	433d      	orrs	r5, r7
9001cff2:	1c67      	adds	r7, r4, #1
9001cff4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001cff8:	0964      	lsrs	r4, r4, #5
9001cffa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001cffe:	4325      	orrs	r5, r4
9001d000:	8005      	strh	r5, [r0, #0]
9001d002:	e7bd      	b.n	9001cf80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001d004:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001d006:	4418      	add	r0, r3
9001d008:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d00a:	4499      	add	r9, r3
9001d00c:	e795      	b.n	9001cf3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001d00e:	4b04      	ldr	r3, [pc, #16]	@ (9001d020 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001d010:	6818      	ldr	r0, [r3, #0]
9001d012:	6803      	ldr	r3, [r0, #0]
9001d014:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d016:	4798      	blx	r3
9001d018:	e771      	b.n	9001cefe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001d01a:	bf00      	nop
9001d01c:	24021c56 	.word	0x24021c56
9001d020:	24021c5c 	.word	0x24021c5c

9001d024 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001d024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d028:	b087      	sub	sp, #28
9001d02a:	4680      	mov	r8, r0
9001d02c:	460d      	mov	r5, r1
9001d02e:	4614      	mov	r4, r2
9001d030:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9001d034:	2e00      	cmp	r6, #0
9001d036:	f000 80b9 	beq.w	9001d1ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001d03a:	6810      	ldr	r0, [r2, #0]
9001d03c:	af02      	add	r7, sp, #8
9001d03e:	6851      	ldr	r1, [r2, #4]
9001d040:	c703      	stmia	r7!, {r0, r1}
9001d042:	6818      	ldr	r0, [r3, #0]
9001d044:	af04      	add	r7, sp, #16
9001d046:	6859      	ldr	r1, [r3, #4]
9001d048:	c703      	stmia	r7!, {r0, r1}
9001d04a:	a802      	add	r0, sp, #8
9001d04c:	f7f8 f81a 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d050:	4621      	mov	r1, r4
9001d052:	a804      	add	r0, sp, #16
9001d054:	f7f8 f83e 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d058:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d05c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d060:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001d064:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001d068:	fb14 2103 	smlabb	r1, r4, r3, r2
9001d06c:	eb08 0401 	add.w	r4, r8, r1
9001d070:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d074:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001d078:	440a      	add	r2, r1
9001d07a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001d07e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001d082:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d086:	4413      	add	r3, r2
9001d088:	f8ad 3012 	strh.w	r3, [sp, #18]
9001d08c:	4b49      	ldr	r3, [pc, #292]	@ (9001d1b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001d08e:	6818      	ldr	r0, [r3, #0]
9001d090:	6803      	ldr	r3, [r0, #0]
9001d092:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d094:	4798      	blx	r3
9001d096:	4b48      	ldr	r3, [pc, #288]	@ (9001d1b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001d098:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001d09c:	2eff      	cmp	r6, #255	@ 0xff
9001d09e:	881a      	ldrh	r2, [r3, #0]
9001d0a0:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001d0a4:	fb02 c101 	mla	r1, r2, r1, ip
9001d0a8:	fb02 f207 	mul.w	r2, r2, r7
9001d0ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d0b0:	f105 0104 	add.w	r1, r5, #4
9001d0b4:	461d      	mov	r5, r3
9001d0b6:	d05a      	beq.n	9001d16e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001d0b8:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9001d0bc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001d0c0:	b2b6      	uxth	r6, r6
9001d0c2:	9301      	str	r3, [sp, #4]
9001d0c4:	fa1f fe8e 	uxth.w	lr, lr
9001d0c8:	4282      	cmp	r2, r0
9001d0ca:	d96a      	bls.n	9001d1a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001d0cc:	eb00 0b0a 	add.w	fp, r0, sl
9001d0d0:	4583      	cmp	fp, r0
9001d0d2:	d940      	bls.n	9001d156 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001d0d4:	8805      	ldrh	r5, [r0, #0]
9001d0d6:	f814 3b01 	ldrb.w	r3, [r4], #1
9001d0da:	122f      	asrs	r7, r5, #8
9001d0dc:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001d0e0:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001d0e4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d0e8:	00ed      	lsls	r5, r5, #3
9001d0ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001d0ee:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001d0f2:	fb17 f70e 	smulbb	r7, r7, lr
9001d0f6:	b2ed      	uxtb	r5, r5
9001d0f8:	fb19 f90e 	smulbb	r9, r9, lr
9001d0fc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d100:	fb15 f50e 	smulbb	r5, r5, lr
9001d104:	fb0c 7c06 	mla	ip, ip, r6, r7
9001d108:	10df      	asrs	r7, r3, #3
9001d10a:	00db      	lsls	r3, r3, #3
9001d10c:	fa1f fc8c 	uxth.w	ip, ip
9001d110:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001d114:	b2db      	uxtb	r3, r3
9001d116:	fb07 9706 	mla	r7, r7, r6, r9
9001d11a:	f10c 0901 	add.w	r9, ip, #1
9001d11e:	fb03 5306 	mla	r3, r3, r6, r5
9001d122:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001d126:	b29b      	uxth	r3, r3
9001d128:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
9001d12c:	b2bf      	uxth	r7, r7
9001d12e:	f103 0c01 	add.w	ip, r3, #1
9001d132:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d136:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d13a:	ea4c 0c09 	orr.w	ip, ip, r9
9001d13e:	f107 0901 	add.w	r9, r7, #1
9001d142:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001d146:	097f      	lsrs	r7, r7, #5
9001d148:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9001d14c:	ea4c 0c07 	orr.w	ip, ip, r7
9001d150:	f820 cb02 	strh.w	ip, [r0], #2
9001d154:	e7bc      	b.n	9001d0d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001d156:	9b01      	ldr	r3, [sp, #4]
9001d158:	881b      	ldrh	r3, [r3, #0]
9001d15a:	eba3 0308 	sub.w	r3, r3, r8
9001d15e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d162:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001d166:	eba3 0308 	sub.w	r3, r3, r8
9001d16a:	441c      	add	r4, r3
9001d16c:	e7ac      	b.n	9001d0c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001d16e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001d172:	4282      	cmp	r2, r0
9001d174:	d915      	bls.n	9001d1a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001d176:	eb00 060a 	add.w	r6, r0, sl
9001d17a:	4286      	cmp	r6, r0
9001d17c:	d906      	bls.n	9001d18c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001d17e:	f814 3b01 	ldrb.w	r3, [r4], #1
9001d182:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001d186:	f820 3b02 	strh.w	r3, [r0], #2
9001d18a:	e7f6      	b.n	9001d17a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001d18c:	882b      	ldrh	r3, [r5, #0]
9001d18e:	eba3 0308 	sub.w	r3, r3, r8
9001d192:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d196:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001d19a:	eba3 0308 	sub.w	r3, r3, r8
9001d19e:	441c      	add	r4, r3
9001d1a0:	e7e7      	b.n	9001d172 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001d1a2:	4b04      	ldr	r3, [pc, #16]	@ (9001d1b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001d1a4:	6818      	ldr	r0, [r3, #0]
9001d1a6:	6803      	ldr	r3, [r0, #0]
9001d1a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d1aa:	4798      	blx	r3
9001d1ac:	b007      	add	sp, #28
9001d1ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d1b2:	bf00      	nop
9001d1b4:	24021c5c 	.word	0x24021c5c
9001d1b8:	24021c56 	.word	0x24021c56

9001d1bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001d1bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d1c0:	b091      	sub	sp, #68	@ 0x44
9001d1c2:	4680      	mov	r8, r0
9001d1c4:	460f      	mov	r7, r1
9001d1c6:	4614      	mov	r4, r2
9001d1c8:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
9001d1cc:	2d00      	cmp	r5, #0
9001d1ce:	d051      	beq.n	9001d274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001d1d0:	6810      	ldr	r0, [r2, #0]
9001d1d2:	ae0c      	add	r6, sp, #48	@ 0x30
9001d1d4:	6851      	ldr	r1, [r2, #4]
9001d1d6:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 9001d3d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001d1da:	c603      	stmia	r6!, {r0, r1}
9001d1dc:	6818      	ldr	r0, [r3, #0]
9001d1de:	ae0e      	add	r6, sp, #56	@ 0x38
9001d1e0:	6859      	ldr	r1, [r3, #4]
9001d1e2:	c603      	stmia	r6!, {r0, r1}
9001d1e4:	a80c      	add	r0, sp, #48	@ 0x30
9001d1e6:	f7f7 ff4d 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d1ea:	4621      	mov	r1, r4
9001d1ec:	a80e      	add	r0, sp, #56	@ 0x38
9001d1ee:	f7f7 ff71 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d1f2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9001d1f6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001d1fa:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001d1fe:	f8d9 0000 	ldr.w	r0, [r9]
9001d202:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d206:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001d20a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
9001d20e:	eb08 0401 	add.w	r4, r8, r1
9001d212:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001d216:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 9001d3dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001d21a:	440a      	add	r2, r1
9001d21c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
9001d220:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9001d224:	4413      	add	r3, r2
9001d226:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9001d22a:	6803      	ldr	r3, [r0, #0]
9001d22c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001d22e:	4798      	blx	r3
9001d230:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001d234:	f8d9 0000 	ldr.w	r0, [r9]
9001d238:	d01f      	beq.n	9001d27a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001d23a:	2200      	movs	r2, #0
9001d23c:	6801      	ldr	r1, [r0, #0]
9001d23e:	b2b6      	uxth	r6, r6
9001d240:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001d244:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001d248:	220b      	movs	r2, #11
9001d24a:	9207      	str	r2, [sp, #28]
9001d24c:	f8b8 2000 	ldrh.w	r2, [r8]
9001d250:	9601      	str	r6, [sp, #4]
9001d252:	9206      	str	r2, [sp, #24]
9001d254:	2201      	movs	r2, #1
9001d256:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001d25a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
9001d25e:	9203      	str	r2, [sp, #12]
9001d260:	fa1f f28a 	uxth.w	r2, sl
9001d264:	9202      	str	r2, [sp, #8]
9001d266:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001d26a:	9200      	str	r2, [sp, #0]
9001d26c:	463a      	mov	r2, r7
9001d26e:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
9001d270:	4621      	mov	r1, r4
9001d272:	47a8      	blx	r5
9001d274:	b011      	add	sp, #68	@ 0x44
9001d276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d27a:	6803      	ldr	r3, [r0, #0]
9001d27c:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001d280:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d282:	4798      	blx	r3
9001d284:	f8b8 2000 	ldrh.w	r2, [r8]
9001d288:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001d28c:	2dff      	cmp	r5, #255	@ 0xff
9001d28e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
9001d292:	fb0a fa02 	mul.w	sl, sl, r2
9001d296:	fb02 1303 	mla	r3, r2, r3, r1
9001d29a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d29e:	d062      	beq.n	9001d366 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001d2a0:	ea6f 0c05 	mvn.w	ip, r5
9001d2a4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001d2a8:	b2ad      	uxth	r5, r5
9001d2aa:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
9001d2ae:	fa5f fc8c 	uxtb.w	ip, ip
9001d2b2:	930a      	str	r3, [sp, #40]	@ 0x28
9001d2b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d2b6:	4298      	cmp	r0, r3
9001d2b8:	f080 8085 	bcs.w	9001d3c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001d2bc:	eb00 0b09 	add.w	fp, r0, r9
9001d2c0:	4558      	cmp	r0, fp
9001d2c2:	d246      	bcs.n	9001d352 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001d2c4:	f814 eb01 	ldrb.w	lr, [r4], #1
9001d2c8:	2303      	movs	r3, #3
9001d2ca:	2204      	movs	r2, #4
9001d2cc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001d2d0:	8803      	ldrh	r3, [r0, #0]
9001d2d2:	eb07 0a0e 	add.w	sl, r7, lr
9001d2d6:	1219      	asrs	r1, r3, #8
9001d2d8:	10da      	asrs	r2, r3, #3
9001d2da:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d2de:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001d2e2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001d2e6:	00db      	lsls	r3, r3, #3
9001d2e8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001d2ec:	fb18 f805 	smulbb	r8, r8, r5
9001d2f0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001d2f4:	fb1e fe05 	smulbb	lr, lr, r5
9001d2f8:	b2db      	uxtb	r3, r3
9001d2fa:	fb01 810c 	mla	r1, r1, ip, r8
9001d2fe:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001d302:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001d306:	fb18 f805 	smulbb	r8, r8, r5
9001d30a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001d30e:	b289      	uxth	r1, r1
9001d310:	fb02 820c 	mla	r2, r2, ip, r8
9001d314:	fb03 e30c 	mla	r3, r3, ip, lr
9001d318:	f101 0801 	add.w	r8, r1, #1
9001d31c:	b292      	uxth	r2, r2
9001d31e:	b29b      	uxth	r3, r3
9001d320:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001d324:	f102 0801 	add.w	r8, r2, #1
9001d328:	f103 0e01 	add.w	lr, r3, #1
9001d32c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001d330:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9001d334:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001d338:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001d33c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001d340:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001d344:	ea4e 0101 	orr.w	r1, lr, r1
9001d348:	ea41 0108 	orr.w	r1, r1, r8
9001d34c:	f820 1b02 	strh.w	r1, [r0], #2
9001d350:	e7b6      	b.n	9001d2c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001d352:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001d354:	881b      	ldrh	r3, [r3, #0]
9001d356:	1b9b      	subs	r3, r3, r6
9001d358:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d35c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001d360:	1b9b      	subs	r3, r3, r6
9001d362:	441c      	add	r4, r3
9001d364:	e7a6      	b.n	9001d2b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001d366:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001d36a:	2203      	movs	r2, #3
9001d36c:	2504      	movs	r5, #4
9001d36e:	4919      	ldr	r1, [pc, #100]	@ (9001d3d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001d370:	4550      	cmp	r0, sl
9001d372:	d228      	bcs.n	9001d3c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001d374:	eb00 0c09 	add.w	ip, r0, r9
9001d378:	4560      	cmp	r0, ip
9001d37a:	4623      	mov	r3, r4
9001d37c:	d219      	bcs.n	9001d3b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001d37e:	f893 e000 	ldrb.w	lr, [r3]
9001d382:	3401      	adds	r4, #1
9001d384:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001d388:	eb07 0b0e 	add.w	fp, r7, lr
9001d38c:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d390:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001d394:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d398:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001d39c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001d3a0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001d3a4:	ea43 030b 	orr.w	r3, r3, fp
9001d3a8:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001d3ac:	f820 3b02 	strh.w	r3, [r0], #2
9001d3b0:	e7e2      	b.n	9001d378 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001d3b2:	f8b8 3000 	ldrh.w	r3, [r8]
9001d3b6:	1b9b      	subs	r3, r3, r6
9001d3b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d3bc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001d3c0:	1b9b      	subs	r3, r3, r6
9001d3c2:	441c      	add	r4, r3
9001d3c4:	e7d4      	b.n	9001d370 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001d3c6:	4b04      	ldr	r3, [pc, #16]	@ (9001d3d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001d3c8:	6818      	ldr	r0, [r3, #0]
9001d3ca:	6803      	ldr	r3, [r0, #0]
9001d3cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d3ce:	4798      	blx	r3
9001d3d0:	e750      	b.n	9001d274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001d3d2:	bf00      	nop
9001d3d4:	fffff800 	.word	0xfffff800
9001d3d8:	24021c5c 	.word	0x24021c5c
9001d3dc:	24021c56 	.word	0x24021c56

9001d3e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001d3e0:	b4f0      	push	{r4, r5, r6, r7}
9001d3e2:	460c      	mov	r4, r1
9001d3e4:	4611      	mov	r1, r2
9001d3e6:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001d3ea:	461a      	mov	r2, r3
9001d3ec:	780f      	ldrb	r7, [r1, #0]
9001d3ee:	9b04      	ldr	r3, [sp, #16]
9001d3f0:	2f01      	cmp	r7, #1
9001d3f2:	784e      	ldrb	r6, [r1, #1]
9001d3f4:	d038      	beq.n	9001d468 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001d3f6:	d31f      	bcc.n	9001d438 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001d3f8:	2f02      	cmp	r7, #2
9001d3fa:	d14d      	bne.n	9001d498 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d3fc:	2e03      	cmp	r6, #3
9001d3fe:	d84b      	bhi.n	9001d498 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d400:	e8df f006 	tbb	[pc, r6]
9001d404:	17140702 	.word	0x17140702
9001d408:	9504      	str	r5, [sp, #16]
9001d40a:	4620      	mov	r0, r4
9001d40c:	bcf0      	pop	{r4, r5, r6, r7}
9001d40e:	f7ff be09 	b.w	9001d024 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001d412:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001d414:	2800      	cmp	r0, #0
9001d416:	d03f      	beq.n	9001d498 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d418:	6806      	ldr	r6, [r0, #0]
9001d41a:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d41e:	68b5      	ldr	r5, [r6, #8]
9001d420:	4613      	mov	r3, r2
9001d422:	46ac      	mov	ip, r5
9001d424:	460a      	mov	r2, r1
9001d426:	4621      	mov	r1, r4
9001d428:	bcf0      	pop	{r4, r5, r6, r7}
9001d42a:	4760      	bx	ip
9001d42c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001d430:	e7f0      	b.n	9001d414 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001d432:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001d436:	e7ed      	b.n	9001d414 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001d438:	2e03      	cmp	r6, #3
9001d43a:	d82d      	bhi.n	9001d498 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d43c:	e8df f006 	tbb	[pc, r6]
9001d440:	110e0702 	.word	0x110e0702
9001d444:	9504      	str	r5, [sp, #16]
9001d446:	4620      	mov	r0, r4
9001d448:	bcf0      	pop	{r4, r5, r6, r7}
9001d44a:	f7ff bd05 	b.w	9001ce58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001d44e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001d450:	b310      	cbz	r0, 9001d498 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d452:	6806      	ldr	r6, [r0, #0]
9001d454:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d458:	68f5      	ldr	r5, [r6, #12]
9001d45a:	e7e1      	b.n	9001d420 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001d45c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001d460:	e7f6      	b.n	9001d450 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001d462:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001d466:	e7f3      	b.n	9001d450 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001d468:	2e03      	cmp	r6, #3
9001d46a:	d815      	bhi.n	9001d498 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d46c:	e8df f006 	tbb	[pc, r6]
9001d470:	110e0702 	.word	0x110e0702
9001d474:	9504      	str	r5, [sp, #16]
9001d476:	4620      	mov	r0, r4
9001d478:	bcf0      	pop	{r4, r5, r6, r7}
9001d47a:	f7ff be9f 	b.w	9001d1bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001d47e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001d480:	b150      	cbz	r0, 9001d498 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d482:	6806      	ldr	r6, [r0, #0]
9001d484:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d488:	6935      	ldr	r5, [r6, #16]
9001d48a:	e7c9      	b.n	9001d420 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001d48c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001d490:	e7f6      	b.n	9001d480 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001d492:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001d496:	e7f3      	b.n	9001d480 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001d498:	bcf0      	pop	{r4, r5, r6, r7}
9001d49a:	4770      	bx	lr

9001d49c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001d49c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d4a0:	b087      	sub	sp, #28
9001d4a2:	4604      	mov	r4, r0
9001d4a4:	460e      	mov	r6, r1
9001d4a6:	6810      	ldr	r0, [r2, #0]
9001d4a8:	6851      	ldr	r1, [r2, #4]
9001d4aa:	ad02      	add	r5, sp, #8
9001d4ac:	4617      	mov	r7, r2
9001d4ae:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
9001d4b2:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 9001d6e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001d4b6:	c503      	stmia	r5!, {r0, r1}
9001d4b8:	6818      	ldr	r0, [r3, #0]
9001d4ba:	ad04      	add	r5, sp, #16
9001d4bc:	6859      	ldr	r1, [r3, #4]
9001d4be:	c503      	stmia	r5!, {r0, r1}
9001d4c0:	a802      	add	r0, sp, #8
9001d4c2:	f7f7 fddf 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d4c6:	4639      	mov	r1, r7
9001d4c8:	a804      	add	r0, sp, #16
9001d4ca:	f7f7 fe03 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d4ce:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d4d2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d4d6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001d4da:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001d4de:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d4e2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001d4e6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001d4ea:	440e      	add	r6, r1
9001d4ec:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d4f0:	440a      	add	r2, r1
9001d4f2:	f8ad 2010 	strh.w	r2, [sp, #16]
9001d4f6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d4fa:	4413      	add	r3, r2
9001d4fc:	f8ad 3012 	strh.w	r3, [sp, #18]
9001d500:	4b77      	ldr	r3, [pc, #476]	@ (9001d6e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d502:	6818      	ldr	r0, [r3, #0]
9001d504:	6803      	ldr	r3, [r0, #0]
9001d506:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001d508:	4798      	blx	r3
9001d50a:	f8b9 b000 	ldrh.w	fp, [r9]
9001d50e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d512:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001d516:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d51a:	fb05 f50b 	mul.w	r5, r5, fp
9001d51e:	fb0b 2303 	mla	r3, fp, r3, r2
9001d522:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d526:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001d52a:	9300      	str	r3, [sp, #0]
9001d52c:	d069      	beq.n	9001d602 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001d52e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001d532:	4558      	cmp	r0, fp
9001d534:	f080 80cc 	bcs.w	9001d6d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d538:	9b00      	ldr	r3, [sp, #0]
9001d53a:	4631      	mov	r1, r6
9001d53c:	18c3      	adds	r3, r0, r3
9001d53e:	9301      	str	r3, [sp, #4]
9001d540:	9b01      	ldr	r3, [sp, #4]
9001d542:	4298      	cmp	r0, r3
9001d544:	d24f      	bcs.n	9001d5e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001d546:	f811 2b01 	ldrb.w	r2, [r1], #1
9001d54a:	2a00      	cmp	r2, #0
9001d54c:	d048      	beq.n	9001d5e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d54e:	fb0a f202 	mul.w	r2, sl, r2
9001d552:	1c53      	adds	r3, r2, #1
9001d554:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001d558:	121b      	asrs	r3, r3, #8
9001d55a:	d041      	beq.n	9001d5e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d55c:	8802      	ldrh	r2, [r0, #0]
9001d55e:	b29e      	uxth	r6, r3
9001d560:	f8b4 c000 	ldrh.w	ip, [r4]
9001d564:	43db      	mvns	r3, r3
9001d566:	1215      	asrs	r5, r2, #8
9001d568:	b2db      	uxtb	r3, r3
9001d56a:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d56e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001d572:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001d576:	fb15 f503 	smulbb	r5, r5, r3
9001d57a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d57e:	00d2      	lsls	r2, r2, #3
9001d580:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001d584:	fb07 5706 	mla	r7, r7, r6, r5
9001d588:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001d58c:	b2d2      	uxtb	r2, r2
9001d58e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d592:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d596:	fb1e fe03 	smulbb	lr, lr, r3
9001d59a:	b2bf      	uxth	r7, r7
9001d59c:	fb12 f203 	smulbb	r2, r2, r3
9001d5a0:	fa5f fc8c 	uxtb.w	ip, ip
9001d5a4:	fb05 e506 	mla	r5, r5, r6, lr
9001d5a8:	f107 0e01 	add.w	lr, r7, #1
9001d5ac:	fb0c 2c06 	mla	ip, ip, r6, r2
9001d5b0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001d5b4:	fa1f fc8c 	uxth.w	ip, ip
9001d5b8:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
9001d5bc:	b2ad      	uxth	r5, r5
9001d5be:	f10c 0701 	add.w	r7, ip, #1
9001d5c2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001d5c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001d5ca:	ea47 070e 	orr.w	r7, r7, lr
9001d5ce:	f105 0e01 	add.w	lr, r5, #1
9001d5d2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d5d6:	096d      	lsrs	r5, r5, #5
9001d5d8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d5dc:	432f      	orrs	r7, r5
9001d5de:	8007      	strh	r7, [r0, #0]
9001d5e0:	3002      	adds	r0, #2
9001d5e2:	3402      	adds	r4, #2
9001d5e4:	e7ac      	b.n	9001d540 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001d5e6:	f8b9 3000 	ldrh.w	r3, [r9]
9001d5ea:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d5ee:	eba3 0308 	sub.w	r3, r3, r8
9001d5f2:	eba6 0608 	sub.w	r6, r6, r8
9001d5f6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d5fa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d5fe:	440e      	add	r6, r1
9001d600:	e797      	b.n	9001d532 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001d602:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001d606:	42a8      	cmp	r0, r5
9001d608:	d262      	bcs.n	9001d6d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d60a:	9b00      	ldr	r3, [sp, #0]
9001d60c:	4631      	mov	r1, r6
9001d60e:	eb00 0b03 	add.w	fp, r0, r3
9001d612:	4558      	cmp	r0, fp
9001d614:	d24e      	bcs.n	9001d6b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001d616:	f811 3b01 	ldrb.w	r3, [r1], #1
9001d61a:	b12b      	cbz	r3, 9001d628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d61c:	2bff      	cmp	r3, #255	@ 0xff
9001d61e:	f8b4 e000 	ldrh.w	lr, [r4]
9001d622:	d104      	bne.n	9001d62e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001d624:	f8a0 e000 	strh.w	lr, [r0]
9001d628:	3002      	adds	r0, #2
9001d62a:	3402      	adds	r4, #2
9001d62c:	e7f1      	b.n	9001d612 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001d62e:	8802      	ldrh	r2, [r0, #0]
9001d630:	b29f      	uxth	r7, r3
9001d632:	43db      	mvns	r3, r3
9001d634:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d638:	1216      	asrs	r6, r2, #8
9001d63a:	b2db      	uxtb	r3, r3
9001d63c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001d640:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d644:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001d648:	00d2      	lsls	r2, r2, #3
9001d64a:	fb16 f603 	smulbb	r6, r6, r3
9001d64e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001d652:	b2d2      	uxtb	r2, r2
9001d654:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d658:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d65c:	fb1a fa03 	smulbb	sl, sl, r3
9001d660:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d664:	fa1f fc8c 	uxth.w	ip, ip
9001d668:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d66c:	fb12 f303 	smulbb	r3, r2, r3
9001d670:	fa5f fe8e 	uxtb.w	lr, lr
9001d674:	fb06 a607 	mla	r6, r6, r7, sl
9001d678:	f10c 0201 	add.w	r2, ip, #1
9001d67c:	fb0e 3307 	mla	r3, lr, r7, r3
9001d680:	b2b6      	uxth	r6, r6
9001d682:	b29b      	uxth	r3, r3
9001d684:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d688:	f106 0a01 	add.w	sl, r6, #1
9001d68c:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
9001d690:	f103 0c01 	add.w	ip, r3, #1
9001d694:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d698:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d69c:	0976      	lsrs	r6, r6, #5
9001d69e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d6a2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d6a6:	ea4c 0c02 	orr.w	ip, ip, r2
9001d6aa:	ea4c 0c06 	orr.w	ip, ip, r6
9001d6ae:	f8a0 c000 	strh.w	ip, [r0]
9001d6b2:	e7b9      	b.n	9001d628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d6b4:	f8b9 3000 	ldrh.w	r3, [r9]
9001d6b8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d6bc:	eba3 0308 	sub.w	r3, r3, r8
9001d6c0:	eba6 0608 	sub.w	r6, r6, r8
9001d6c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d6c8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d6cc:	440e      	add	r6, r1
9001d6ce:	e79a      	b.n	9001d606 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001d6d0:	4b03      	ldr	r3, [pc, #12]	@ (9001d6e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d6d2:	6818      	ldr	r0, [r3, #0]
9001d6d4:	6803      	ldr	r3, [r0, #0]
9001d6d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d6d8:	4798      	blx	r3
9001d6da:	b007      	add	sp, #28
9001d6dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d6e0:	24021c5c 	.word	0x24021c5c
9001d6e4:	24021c56 	.word	0x24021c56

9001d6e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001d6e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d6ec:	b089      	sub	sp, #36	@ 0x24
9001d6ee:	4682      	mov	sl, r0
9001d6f0:	460f      	mov	r7, r1
9001d6f2:	4691      	mov	r9, r2
9001d6f4:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
9001d6f8:	4698      	mov	r8, r3
9001d6fa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001d6fc:	2e00      	cmp	r6, #0
9001d6fe:	d03d      	beq.n	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d700:	4608      	mov	r0, r1
9001d702:	f7fa fe4b 	bl	9001839c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001d706:	4605      	mov	r5, r0
9001d708:	4638      	mov	r0, r7
9001d70a:	f7fa fe7b 	bl	90018404 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001d70e:	f8ad 000e 	strh.w	r0, [sp, #14]
9001d712:	4638      	mov	r0, r7
9001d714:	f8ad 9008 	strh.w	r9, [sp, #8]
9001d718:	f8ad 500c 	strh.w	r5, [sp, #12]
9001d71c:	f8ad 800a 	strh.w	r8, [sp, #10]
9001d720:	f7fa ff28 	bl	90018574 <_ZNK8touchgfx6Bitmap7getDataEv>
9001d724:	4605      	mov	r5, r0
9001d726:	4638      	mov	r0, r7
9001d728:	f7fa ff54 	bl	900185d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001d72c:	4681      	mov	r9, r0
9001d72e:	4638      	mov	r0, r7
9001d730:	f7fa ffa4 	bl	9001867c <_ZNK8touchgfx6Bitmap9getFormatEv>
9001d734:	280b      	cmp	r0, #11
9001d736:	d821      	bhi.n	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d738:	e8df f000 	tbb	[pc, r0]
9001d73c:	2006aebe 	.word	0x2006aebe
9001d740:	20202020 	.word	0x20202020
9001d744:	b5202020 	.word	0xb5202020
9001d748:	4bb0      	ldr	r3, [pc, #704]	@ (9001da0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001d74a:	6818      	ldr	r0, [r3, #0]
9001d74c:	6803      	ldr	r3, [r0, #0]
9001d74e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001d750:	4798      	blx	r3
9001d752:	2eff      	cmp	r6, #255	@ 0xff
9001d754:	d101      	bne.n	9001d75a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d756:	0683      	lsls	r3, r0, #26
9001d758:	d506      	bpl.n	9001d768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001d75a:	4633      	mov	r3, r6
9001d75c:	4622      	mov	r2, r4
9001d75e:	a902      	add	r1, sp, #8
9001d760:	4628      	mov	r0, r5
9001d762:	f7ff f907 	bl	9001c974 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d766:	e009      	b.n	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d768:	4638      	mov	r0, r7
9001d76a:	f7fa fecb 	bl	90018504 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d76e:	b940      	cbnz	r0, 9001d782 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001d770:	4623      	mov	r3, r4
9001d772:	aa02      	add	r2, sp, #8
9001d774:	4629      	mov	r1, r5
9001d776:	4650      	mov	r0, sl
9001d778:	f7ff f9e2 	bl	9001cb40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d77c:	b009      	add	sp, #36	@ 0x24
9001d77e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d782:	f10d 0818 	add.w	r8, sp, #24
9001d786:	4639      	mov	r1, r7
9001d788:	af04      	add	r7, sp, #16
9001d78a:	4640      	mov	r0, r8
9001d78c:	f7fa fe6e 	bl	9001846c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d790:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d794:	e887 0003 	stmia.w	r7, {r0, r1}
9001d798:	4638      	mov	r0, r7
9001d79a:	4621      	mov	r1, r4
9001d79c:	f7f2 fb8a 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001d7a0:	4638      	mov	r0, r7
9001d7a2:	f7f2 fbca 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9001d7a6:	2800      	cmp	r0, #0
9001d7a8:	d1d7      	bne.n	9001d75a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d7aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d7ae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d7b2:	4293      	cmp	r3, r2
9001d7b4:	dd12      	ble.n	9001d7dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001d7b6:	1a9b      	subs	r3, r3, r2
9001d7b8:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d7bc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d7c0:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d7c4:	4628      	mov	r0, r5
9001d7c6:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d7ca:	4642      	mov	r2, r8
9001d7cc:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d7d0:	a902      	add	r1, sp, #8
9001d7d2:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d7d6:	4633      	mov	r3, r6
9001d7d8:	f7ff f8cc 	bl	9001c974 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d7dc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d7e0:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d7e4:	4293      	cmp	r3, r2
9001d7e6:	dd12      	ble.n	9001d80e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001d7e8:	1a9b      	subs	r3, r3, r2
9001d7ea:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d7ee:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d7f2:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d7f6:	4642      	mov	r2, r8
9001d7f8:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d7fc:	4628      	mov	r0, r5
9001d7fe:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d802:	23ff      	movs	r3, #255	@ 0xff
9001d804:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d808:	a902      	add	r1, sp, #8
9001d80a:	f7ff f8b3 	bl	9001c974 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d80e:	463b      	mov	r3, r7
9001d810:	aa02      	add	r2, sp, #8
9001d812:	4629      	mov	r1, r5
9001d814:	4650      	mov	r0, sl
9001d816:	f7ff f993 	bl	9001cb40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d81a:	88a2      	ldrh	r2, [r4, #4]
9001d81c:	8823      	ldrh	r3, [r4, #0]
9001d81e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d822:	4413      	add	r3, r2
9001d824:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d828:	440a      	add	r2, r1
9001d82a:	b29b      	uxth	r3, r3
9001d82c:	b292      	uxth	r2, r2
9001d82e:	b218      	sxth	r0, r3
9001d830:	b211      	sxth	r1, r2
9001d832:	4288      	cmp	r0, r1
9001d834:	dd12      	ble.n	9001d85c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001d836:	1a9b      	subs	r3, r3, r2
9001d838:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d83c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001d840:	4642      	mov	r2, r8
9001d842:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d846:	a902      	add	r1, sp, #8
9001d848:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d84c:	23ff      	movs	r3, #255	@ 0xff
9001d84e:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d852:	4628      	mov	r0, r5
9001d854:	f8ad 601a 	strh.w	r6, [sp, #26]
9001d858:	f7ff f88c 	bl	9001c974 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d85c:	88e2      	ldrh	r2, [r4, #6]
9001d85e:	8863      	ldrh	r3, [r4, #2]
9001d860:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d864:	4413      	add	r3, r2
9001d866:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d86a:	440a      	add	r2, r1
9001d86c:	b29b      	uxth	r3, r3
9001d86e:	b292      	uxth	r2, r2
9001d870:	b218      	sxth	r0, r3
9001d872:	b211      	sxth	r1, r2
9001d874:	4288      	cmp	r0, r1
9001d876:	dd81      	ble.n	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d878:	1a9b      	subs	r3, r3, r2
9001d87a:	f9b4 6000 	ldrsh.w	r6, [r4]
9001d87e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d882:	4642      	mov	r2, r8
9001d884:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d888:	23ff      	movs	r3, #255	@ 0xff
9001d88a:	f8ad 6018 	strh.w	r6, [sp, #24]
9001d88e:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d892:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d896:	e762      	b.n	9001d75e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001d898:	4633      	mov	r3, r6
9001d89a:	4622      	mov	r2, r4
9001d89c:	a902      	add	r1, sp, #8
9001d89e:	4628      	mov	r0, r5
9001d8a0:	f7ff f9be 	bl	9001cc20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001d8a4:	e76a      	b.n	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d8a6:	e9cd 4600 	strd	r4, r6, [sp]
9001d8aa:	ab02      	add	r3, sp, #8
9001d8ac:	464a      	mov	r2, r9
9001d8ae:	4629      	mov	r1, r5
9001d8b0:	4650      	mov	r0, sl
9001d8b2:	f7ff fd95 	bl	9001d3e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001d8b6:	e761      	b.n	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d8b8:	4638      	mov	r0, r7
9001d8ba:	f7fa fe23 	bl	90018504 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d8be:	b950      	cbnz	r0, 9001d8d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001d8c0:	f8da 3000 	ldr.w	r3, [sl]
9001d8c4:	aa02      	add	r2, sp, #8
9001d8c6:	4629      	mov	r1, r5
9001d8c8:	e9cd 6000 	strd	r6, r0, [sp]
9001d8cc:	4650      	mov	r0, sl
9001d8ce:	68de      	ldr	r6, [r3, #12]
9001d8d0:	4623      	mov	r3, r4
9001d8d2:	47b0      	blx	r6
9001d8d4:	e752      	b.n	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d8d6:	f10d 0818 	add.w	r8, sp, #24
9001d8da:	4639      	mov	r1, r7
9001d8dc:	af04      	add	r7, sp, #16
9001d8de:	4640      	mov	r0, r8
9001d8e0:	f7fa fdc4 	bl	9001846c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d8e4:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d8e8:	e887 0003 	stmia.w	r7, {r0, r1}
9001d8ec:	4638      	mov	r0, r7
9001d8ee:	4621      	mov	r1, r4
9001d8f0:	f7f2 fae0 	bl	9000feb4 <_ZN8touchgfx4RectaNERKS0_>
9001d8f4:	4638      	mov	r0, r7
9001d8f6:	f7f2 fb20 	bl	9000ff3a <_ZNK8touchgfx4Rect7isEmptyEv>
9001d8fa:	b138      	cbz	r0, 9001d90c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001d8fc:	4623      	mov	r3, r4
9001d8fe:	9600      	str	r6, [sp, #0]
9001d900:	aa02      	add	r2, sp, #8
9001d902:	4649      	mov	r1, r9
9001d904:	4628      	mov	r0, r5
9001d906:	f7ff fdc9 	bl	9001d49c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d90a:	e737      	b.n	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d90c:	f8da 3000 	ldr.w	r3, [sl]
9001d910:	aa02      	add	r2, sp, #8
9001d912:	4629      	mov	r1, r5
9001d914:	e9cd 6000 	strd	r6, r0, [sp]
9001d918:	4650      	mov	r0, sl
9001d91a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001d91e:	463b      	mov	r3, r7
9001d920:	47d8      	blx	fp
9001d922:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d926:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d92a:	4293      	cmp	r3, r2
9001d92c:	dd13      	ble.n	9001d956 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001d92e:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d932:	1a9b      	subs	r3, r3, r2
9001d934:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d938:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d93c:	4628      	mov	r0, r5
9001d93e:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d942:	aa02      	add	r2, sp, #8
9001d944:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d948:	4649      	mov	r1, r9
9001d94a:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d94e:	4643      	mov	r3, r8
9001d950:	9600      	str	r6, [sp, #0]
9001d952:	f7ff fda3 	bl	9001d49c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d956:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d95a:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d95e:	4293      	cmp	r3, r2
9001d960:	dd13      	ble.n	9001d98a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001d962:	1a9b      	subs	r3, r3, r2
9001d964:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d968:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d96c:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d970:	aa02      	add	r2, sp, #8
9001d972:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d976:	4628      	mov	r0, r5
9001d978:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d97c:	4643      	mov	r3, r8
9001d97e:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d982:	4649      	mov	r1, r9
9001d984:	9600      	str	r6, [sp, #0]
9001d986:	f7ff fd89 	bl	9001d49c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d98a:	88a2      	ldrh	r2, [r4, #4]
9001d98c:	8823      	ldrh	r3, [r4, #0]
9001d98e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d992:	4413      	add	r3, r2
9001d994:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d998:	440a      	add	r2, r1
9001d99a:	b29b      	uxth	r3, r3
9001d99c:	b292      	uxth	r2, r2
9001d99e:	b218      	sxth	r0, r3
9001d9a0:	b211      	sxth	r1, r2
9001d9a2:	4288      	cmp	r0, r1
9001d9a4:	dd13      	ble.n	9001d9ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001d9a6:	1a9b      	subs	r3, r3, r2
9001d9a8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d9ac:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001d9b0:	aa02      	add	r2, sp, #8
9001d9b2:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d9b6:	4649      	mov	r1, r9
9001d9b8:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d9bc:	4643      	mov	r3, r8
9001d9be:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d9c2:	4628      	mov	r0, r5
9001d9c4:	9600      	str	r6, [sp, #0]
9001d9c6:	f8ad 701a 	strh.w	r7, [sp, #26]
9001d9ca:	f7ff fd67 	bl	9001d49c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d9ce:	88e2      	ldrh	r2, [r4, #6]
9001d9d0:	8863      	ldrh	r3, [r4, #2]
9001d9d2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d9d6:	4413      	add	r3, r2
9001d9d8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d9dc:	440a      	add	r2, r1
9001d9de:	b29b      	uxth	r3, r3
9001d9e0:	b292      	uxth	r2, r2
9001d9e2:	b218      	sxth	r0, r3
9001d9e4:	b211      	sxth	r1, r2
9001d9e6:	4288      	cmp	r0, r1
9001d9e8:	f77f aec8 	ble.w	9001d77c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d9ec:	f9b4 7000 	ldrsh.w	r7, [r4]
9001d9f0:	1a9b      	subs	r3, r3, r2
9001d9f2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d9f6:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d9fa:	4643      	mov	r3, r8
9001d9fc:	f8ad 7018 	strh.w	r7, [sp, #24]
9001da00:	f8ad 101a 	strh.w	r1, [sp, #26]
9001da04:	f8ad 001c 	strh.w	r0, [sp, #28]
9001da08:	9600      	str	r6, [sp, #0]
9001da0a:	e779      	b.n	9001d900 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001da0c:	24021c5c 	.word	0x24021c5c

9001da10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001da10:	b180      	cbz	r0, 9001da34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001da12:	2903      	cmp	r1, #3
9001da14:	d81c      	bhi.n	9001da50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001da16:	e8df f001 	tbb	[pc, r1]
9001da1a:	1d02      	.short	0x1d02
9001da1c:	1f08      	.short	0x1f08
9001da1e:	4b10      	ldr	r3, [pc, #64]	@ (9001da60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001da20:	8818      	ldrh	r0, [r3, #0]
9001da22:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001da26:	4240      	negs	r0, r0
9001da28:	4770      	bx	lr
9001da2a:	4b0d      	ldr	r3, [pc, #52]	@ (9001da60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001da2c:	8818      	ldrh	r0, [r3, #0]
9001da2e:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001da32:	4770      	bx	lr
9001da34:	2903      	cmp	r1, #3
9001da36:	d80b      	bhi.n	9001da50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001da38:	a301      	add	r3, pc, #4	@ (adr r3, 9001da40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001da3a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001da3e:	bf00      	nop
9001da40:	9001da55 	.word	0x9001da55
9001da44:	9001da2b 	.word	0x9001da2b
9001da48:	9001da59 	.word	0x9001da59
9001da4c:	9001da1f 	.word	0x9001da1f
9001da50:	2000      	movs	r0, #0
9001da52:	4770      	bx	lr
9001da54:	2001      	movs	r0, #1
9001da56:	4770      	bx	lr
9001da58:	f04f 30ff 	mov.w	r0, #4294967295
9001da5c:	4770      	bx	lr
9001da5e:	bf00      	nop
9001da60:	24021c56 	.word	0x24021c56

9001da64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001da64:	b180      	cbz	r0, 9001da88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001da66:	2903      	cmp	r1, #3
9001da68:	d81c      	bhi.n	9001daa4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001da6a:	e8df f001 	tbb	[pc, r1]
9001da6e:	021d      	.short	0x021d
9001da70:	071f      	.short	0x071f
9001da72:	4b10      	ldr	r3, [pc, #64]	@ (9001dab4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001da74:	8818      	ldrh	r0, [r3, #0]
9001da76:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001da7a:	4770      	bx	lr
9001da7c:	4b0d      	ldr	r3, [pc, #52]	@ (9001dab4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001da7e:	8818      	ldrh	r0, [r3, #0]
9001da80:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001da84:	4240      	negs	r0, r0
9001da86:	4770      	bx	lr
9001da88:	2903      	cmp	r1, #3
9001da8a:	d80b      	bhi.n	9001daa4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001da8c:	a301      	add	r3, pc, #4	@ (adr r3, 9001da94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001da8e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001da92:	bf00      	nop
9001da94:	9001da73 	.word	0x9001da73
9001da98:	9001daad 	.word	0x9001daad
9001da9c:	9001da7d 	.word	0x9001da7d
9001daa0:	9001daa9 	.word	0x9001daa9
9001daa4:	2000      	movs	r0, #0
9001daa6:	4770      	bx	lr
9001daa8:	2001      	movs	r0, #1
9001daaa:	4770      	bx	lr
9001daac:	f04f 30ff 	mov.w	r0, #4294967295
9001dab0:	4770      	bx	lr
9001dab2:	bf00      	nop
9001dab4:	24021c56 	.word	0x24021c56

9001dab8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001dab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dabc:	b099      	sub	sp, #100	@ 0x64
9001dabe:	910b      	str	r1, [sp, #44]	@ 0x2c
9001dac0:	a914      	add	r1, sp, #80	@ 0x50
9001dac2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
9001dac6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
9001daca:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
9001dace:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
9001dad2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
9001dad6:	e881 000c 	stmia.w	r1, {r2, r3}
9001dada:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
9001dade:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
9001dae2:	9309      	str	r3, [sp, #36]	@ 0x24
9001dae4:	f891 900d 	ldrb.w	r9, [r1, #13]
9001dae8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9001daec:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001daf0:	9310      	str	r3, [sp, #64]	@ 0x40
9001daf2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
9001daf6:	930c      	str	r3, [sp, #48]	@ 0x30
9001daf8:	f407 7380 	and.w	r3, r7, #256	@ 0x100
9001dafc:	798f      	ldrb	r7, [r1, #6]
9001dafe:	431f      	orrs	r7, r3
9001db00:	f000 8195 	beq.w	9001de2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001db04:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001db08:	f409 7380 	and.w	r3, r9, #256	@ 0x100
9001db0c:	f891 9007 	ldrb.w	r9, [r1, #7]
9001db10:	ea59 0903 	orrs.w	r9, r9, r3
9001db14:	f000 818b 	beq.w	9001de2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001db18:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001db1c:	b29b      	uxth	r3, r3
9001db1e:	2d00      	cmp	r5, #0
9001db20:	f000 812e 	beq.w	9001dd80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001db24:	1aed      	subs	r5, r5, r3
9001db26:	b2ad      	uxth	r5, r5
9001db28:	042b      	lsls	r3, r5, #16
9001db2a:	d502      	bpl.n	9001db32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001db2c:	1b64      	subs	r4, r4, r5
9001db2e:	2500      	movs	r5, #0
9001db30:	b224      	sxth	r4, r4
9001db32:	f9b2 1000 	ldrsh.w	r1, [r2]
9001db36:	a814      	add	r0, sp, #80	@ 0x50
9001db38:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
9001db3c:	428c      	cmp	r4, r1
9001db3e:	b28b      	uxth	r3, r1
9001db40:	bfbf      	itttt	lt
9001db42:	18ed      	addlt	r5, r5, r3
9001db44:	1b2c      	sublt	r4, r5, r4
9001db46:	b2a5      	uxthlt	r5, r4
9001db48:	460c      	movlt	r4, r1
9001db4a:	8891      	ldrh	r1, [r2, #4]
9001db4c:	440b      	add	r3, r1
9001db4e:	4621      	mov	r1, r4
9001db50:	b21b      	sxth	r3, r3
9001db52:	930f      	str	r3, [sp, #60]	@ 0x3c
9001db54:	88d3      	ldrh	r3, [r2, #6]
9001db56:	8852      	ldrh	r2, [r2, #2]
9001db58:	4413      	add	r3, r2
9001db5a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001db5c:	b21b      	sxth	r3, r3
9001db5e:	930d      	str	r3, [sp, #52]	@ 0x34
9001db60:	4bbd      	ldr	r3, [pc, #756]	@ (9001de58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001db62:	f893 b000 	ldrb.w	fp, [r3]
9001db66:	f10b 3cff 	add.w	ip, fp, #4294967295
9001db6a:	f1dc 0300 	rsbs	r3, ip, #0
9001db6e:	eb43 030c 	adc.w	r3, r3, ip
9001db72:	930e      	str	r3, [sp, #56]	@ 0x38
9001db74:	4653      	mov	r3, sl
9001db76:	f7f7 f8fa 	bl	90014d6e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001db7a:	4621      	mov	r1, r4
9001db7c:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
9001db80:	4653      	mov	r3, sl
9001db82:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001db84:	a814      	add	r0, sp, #80	@ 0x50
9001db86:	f7f7 f90f 	bl	90014da8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001db8a:	a918      	add	r1, sp, #96	@ 0x60
9001db8c:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001db90:	a817      	add	r0, sp, #92	@ 0x5c
9001db92:	f7f7 fa35 	bl	90015000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001db96:	f1ba 0f00 	cmp.w	sl, #0
9001db9a:	f040 80f4 	bne.w	9001dd86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001db9e:	f1bb 0f01 	cmp.w	fp, #1
9001dba2:	f040 80f8 	bne.w	9001dd96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001dba6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dba8:	2b00      	cmp	r3, #0
9001dbaa:	f040 8145 	bne.w	9001de38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001dbae:	b2ba      	uxth	r2, r7
9001dbb0:	b905      	cbnz	r5, 9001dbb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001dbb2:	b16e      	cbz	r6, 9001dbd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001dbb4:	fb06 5302 	mla	r3, r6, r2, r5
9001dbb8:	9828      	ldr	r0, [sp, #160]	@ 0xa0
9001dbba:	4631      	mov	r1, r6
9001dbbc:	fb08 f303 	mul.w	r3, r8, r3
9001dbc0:	f003 0607 	and.w	r6, r3, #7
9001dbc4:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001dbc8:	9328      	str	r3, [sp, #160]	@ 0xa0
9001dbca:	eba9 0301 	sub.w	r3, r9, r1
9001dbce:	930a      	str	r3, [sp, #40]	@ 0x28
9001dbd0:	4651      	mov	r1, sl
9001dbd2:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001dbd4:	f7ff ff1c 	bl	9001da10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001dbd8:	4681      	mov	r9, r0
9001dbda:	980e      	ldr	r0, [sp, #56]	@ 0x38
9001dbdc:	f7ff ff42 	bl	9001da64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001dbe0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dbe2:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001dbe4:	4683      	mov	fp, r0
9001dbe6:	eba3 0a01 	sub.w	sl, r3, r1
9001dbea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001dbec:	459a      	cmp	sl, r3
9001dbee:	bfa8      	it	ge
9001dbf0:	469a      	movge	sl, r3
9001dbf2:	f1ba 0f00 	cmp.w	sl, #0
9001dbf6:	f340 811a 	ble.w	9001de2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001dbfa:	1b64      	subs	r4, r4, r5
9001dbfc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001dbfe:	1b1c      	subs	r4, r3, r4
9001dc00:	42bc      	cmp	r4, r7
9001dc02:	bfd4      	ite	le
9001dc04:	ebc5 0504 	rsble	r5, r5, r4
9001dc08:	ebc5 0507 	rsbgt	r5, r5, r7
9001dc0c:	2d00      	cmp	r5, #0
9001dc0e:	f340 810e 	ble.w	9001de2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001dc12:	1b52      	subs	r2, r2, r5
9001dc14:	fb08 f302 	mul.w	r3, r8, r2
9001dc18:	930f      	str	r3, [sp, #60]	@ 0x3c
9001dc1a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001dc1c:	2b00      	cmp	r3, #0
9001dc1e:	f040 8116 	bne.w	9001de4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001dc22:	4b8e      	ldr	r3, [pc, #568]	@ (9001de5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001dc24:	6818      	ldr	r0, [r3, #0]
9001dc26:	6803      	ldr	r3, [r0, #0]
9001dc28:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001dc2a:	4798      	blx	r3
9001dc2c:	2301      	movs	r3, #1
9001dc2e:	4a8c      	ldr	r2, [pc, #560]	@ (9001de60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001dc30:	fa03 f308 	lsl.w	r3, r3, r8
9001dc34:	8811      	ldrh	r1, [r2, #0]
9001dc36:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
9001dc3a:	3b01      	subs	r3, #1
9001dc3c:	b2db      	uxtb	r3, r3
9001dc3e:	930e      	str	r3, [sp, #56]	@ 0x38
9001dc40:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
9001dc44:	fb01 2303 	mla	r3, r1, r3, r2
9001dc48:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001dc4c:	930a      	str	r3, [sp, #40]	@ 0x28
9001dc4e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001dc50:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001dc54:	9313      	str	r3, [sp, #76]	@ 0x4c
9001dc56:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001dc58:	0a19      	lsrs	r1, r3, #8
9001dc5a:	b2cb      	uxtb	r3, r1
9001dc5c:	9312      	str	r3, [sp, #72]	@ 0x48
9001dc5e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001dc60:	b2db      	uxtb	r3, r3
9001dc62:	9311      	str	r3, [sp, #68]	@ 0x44
9001dc64:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001dc66:	095a      	lsrs	r2, r3, #5
9001dc68:	4b7e      	ldr	r3, [pc, #504]	@ (9001de64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001dc6a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001dc6e:	400b      	ands	r3, r1
9001dc70:	4313      	orrs	r3, r2
9001dc72:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
9001dc74:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001dc78:	4313      	orrs	r3, r2
9001dc7a:	b29b      	uxth	r3, r3
9001dc7c:	9310      	str	r3, [sp, #64]	@ 0x40
9001dc7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001dc80:	781a      	ldrb	r2, [r3, #0]
9001dc82:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001dc86:	fb05 b919 	mls	r9, r5, r9, fp
9001dc8a:	4132      	asrs	r2, r6
9001dc8c:	fb03 fb05 	mul.w	fp, r3, r5
9001dc90:	930d      	str	r3, [sp, #52]	@ 0x34
9001dc92:	b2d2      	uxtb	r2, r2
9001dc94:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001dc98:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001dc9c:	f0c0 80f5 	bcc.w	9001de8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001dca0:	46ae      	mov	lr, r5
9001dca2:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
9001dca6:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001dcaa:	f0c0 80dd 	bcc.w	9001de68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001dcae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001dcb0:	4013      	ands	r3, r2
9001dcb2:	d055      	beq.n	9001dd60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001dcb4:	20ff      	movs	r0, #255	@ 0xff
9001dcb6:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001dcb8:	fb90 f1f1 	sdiv	r1, r0, r1
9001dcbc:	434b      	muls	r3, r1
9001dcbe:	2bfe      	cmp	r3, #254	@ 0xfe
9001dcc0:	dd03      	ble.n	9001dcca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001dcc2:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001dcc4:	4281      	cmp	r1, r0
9001dcc6:	f000 80c4 	beq.w	9001de52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001dcca:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001dccc:	f8bc 4000 	ldrh.w	r4, [ip]
9001dcd0:	fb11 f303 	smulbb	r3, r1, r3
9001dcd4:	1220      	asrs	r0, r4, #8
9001dcd6:	b29b      	uxth	r3, r3
9001dcd8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001dcdc:	1c59      	adds	r1, r3, #1
9001dcde:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001dce2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001dce6:	10e1      	asrs	r1, r4, #3
9001dce8:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001dcec:	00e4      	lsls	r4, r4, #3
9001dcee:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001dcf2:	b29f      	uxth	r7, r3
9001dcf4:	43db      	mvns	r3, r3
9001dcf6:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001dcfa:	b2db      	uxtb	r3, r3
9001dcfc:	b2e4      	uxtb	r4, r4
9001dcfe:	9309      	str	r3, [sp, #36]	@ 0x24
9001dd00:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001dd02:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001dd06:	fb13 f907 	smulbb	r9, r3, r7
9001dd0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001dd0c:	fb00 9003 	mla	r0, r0, r3, r9
9001dd10:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9001dd12:	fb13 f907 	smulbb	r9, r3, r7
9001dd16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001dd18:	b280      	uxth	r0, r0
9001dd1a:	fb01 9103 	mla	r1, r1, r3, r9
9001dd1e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001dd20:	fb13 f707 	smulbb	r7, r3, r7
9001dd24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001dd26:	b289      	uxth	r1, r1
9001dd28:	fb04 7403 	mla	r4, r4, r3, r7
9001dd2c:	1c43      	adds	r3, r0, #1
9001dd2e:	b2a4      	uxth	r4, r4
9001dd30:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001dd34:	f104 0901 	add.w	r9, r4, #1
9001dd38:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9001dd3c:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001dd40:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001dd44:	ea49 0000 	orr.w	r0, r9, r0
9001dd48:	f101 0901 	add.w	r9, r1, #1
9001dd4c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001dd50:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001dd54:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001dd58:	ea40 0009 	orr.w	r0, r0, r9
9001dd5c:	f8ac 0000 	strh.w	r0, [ip]
9001dd60:	4446      	add	r6, r8
9001dd62:	b2b6      	uxth	r6, r6
9001dd64:	2e07      	cmp	r6, #7
9001dd66:	bf89      	itett	hi
9001dd68:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
9001dd6a:	fa42 f208 	asrls.w	r2, r2, r8
9001dd6e:	2600      	movhi	r6, #0
9001dd70:	785a      	ldrbhi	r2, [r3, #1]
9001dd72:	bf8a      	itet	hi
9001dd74:	3301      	addhi	r3, #1
9001dd76:	b2d2      	uxtbls	r2, r2
9001dd78:	9328      	strhi	r3, [sp, #160]	@ 0xa0
9001dd7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001dd7c:	449c      	add	ip, r3
9001dd7e:	e792      	b.n	9001dca6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001dd80:	441c      	add	r4, r3
9001dd82:	b224      	sxth	r4, r4
9001dd84:	e6d5      	b.n	9001db32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001dd86:	f1ba 0f01 	cmp.w	sl, #1
9001dd8a:	f47f af0c 	bne.w	9001dba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dd8e:	f1bb 0f01 	cmp.w	fp, #1
9001dd92:	f47f af08 	bne.w	9001dba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dd96:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 9001de5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001dd9a:	f8db 0000 	ldr.w	r0, [fp]
9001dd9e:	6803      	ldr	r3, [r0, #0]
9001dda0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001dda2:	4798      	blx	r3
9001dda4:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
9001dda8:	465a      	mov	r2, fp
9001ddaa:	d006      	beq.n	9001ddba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001ddac:	f1b8 0f04 	cmp.w	r8, #4
9001ddb0:	d140      	bne.n	9001de34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001ddb2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ddb4:	3300      	adds	r3, #0
9001ddb6:	bf18      	it	ne
9001ddb8:	2301      	movne	r3, #1
9001ddba:	0580      	lsls	r0, r0, #22
9001ddbc:	d56e      	bpl.n	9001de9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001ddbe:	f1b8 0f08 	cmp.w	r8, #8
9001ddc2:	d16b      	bne.n	9001de9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001ddc4:	2b00      	cmp	r3, #0
9001ddc6:	bf0c      	ite	eq
9001ddc8:	f44f 7100 	moveq.w	r1, #512	@ 0x200
9001ddcc:	f44f 7180 	movne.w	r1, #256	@ 0x100
9001ddd0:	2d00      	cmp	r5, #0
9001ddd2:	f47f aee8 	bne.w	9001dba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001ddd6:	2e00      	cmp	r6, #0
9001ddd8:	f47f aee5 	bne.w	9001dba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dddc:	19e3      	adds	r3, r4, r7
9001ddde:	980f      	ldr	r0, [sp, #60]	@ 0x3c
9001dde0:	4283      	cmp	r3, r0
9001dde2:	f73f aee0 	bgt.w	9001dba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dde6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001dde8:	980d      	ldr	r0, [sp, #52]	@ 0x34
9001ddea:	444b      	add	r3, r9
9001ddec:	4283      	cmp	r3, r0
9001ddee:	f73f aeda 	bgt.w	9001dba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001ddf2:	b2bf      	uxth	r7, r7
9001ddf4:	f1b8 0f08 	cmp.w	r8, #8
9001ddf8:	6810      	ldr	r0, [r2, #0]
9001ddfa:	f04f 0500 	mov.w	r5, #0
9001ddfe:	bf18      	it	ne
9001de00:	3701      	addne	r7, #1
9001de02:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
9001de06:	6804      	ldr	r4, [r0, #0]
9001de08:	bf18      	it	ne
9001de0a:	f027 0701 	bicne.w	r7, r7, #1
9001de0e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001de12:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001de16:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001de18:	bf18      	it	ne
9001de1a:	b2bf      	uxthne	r7, r7
9001de1c:	9104      	str	r1, [sp, #16]
9001de1e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9001de20:	e9cd 7900 	strd	r7, r9, [sp]
9001de24:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001de28:	9928      	ldr	r1, [sp, #160]	@ 0xa0
9001de2a:	6d64      	ldr	r4, [r4, #84]	@ 0x54
9001de2c:	47a0      	blx	r4
9001de2e:	b019      	add	sp, #100	@ 0x64
9001de30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001de34:	2300      	movs	r3, #0
9001de36:	e7c0      	b.n	9001ddba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001de38:	2208      	movs	r2, #8
9001de3a:	fb92 f3f8 	sdiv	r3, r2, r8
9001de3e:	1e5a      	subs	r2, r3, #1
9001de40:	443a      	add	r2, r7
9001de42:	fb92 f2f3 	sdiv	r2, r2, r3
9001de46:	fb12 f203 	smulbb	r2, r2, r3
9001de4a:	b292      	uxth	r2, r2
9001de4c:	e6b0      	b.n	9001dbb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001de4e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001de50:	e6ec      	b.n	9001dc2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001de52:	9810      	ldr	r0, [sp, #64]	@ 0x40
9001de54:	e782      	b.n	9001dd5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001de56:	bf00      	nop
9001de58:	24021c54 	.word	0x24021c54
9001de5c:	24021c5c 	.word	0x24021c5c
9001de60:	24021c56 	.word	0x24021c56
9001de64:	00fff800 	.word	0x00fff800
9001de68:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001de6a:	b153      	cbz	r3, 9001de82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001de6c:	441e      	add	r6, r3
9001de6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001de70:	b2b6      	uxth	r6, r6
9001de72:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001de76:	f006 0607 	and.w	r6, r6, #7
9001de7a:	781a      	ldrb	r2, [r3, #0]
9001de7c:	9328      	str	r3, [sp, #160]	@ 0xa0
9001de7e:	4132      	asrs	r2, r6
9001de80:	b2d2      	uxtb	r2, r2
9001de82:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001de84:	445b      	add	r3, fp
9001de86:	930a      	str	r3, [sp, #40]	@ 0x28
9001de88:	e706      	b.n	9001dc98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001de8a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001de8c:	2b00      	cmp	r3, #0
9001de8e:	d1ce      	bne.n	9001de2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001de90:	4b05      	ldr	r3, [pc, #20]	@ (9001dea8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001de92:	6818      	ldr	r0, [r3, #0]
9001de94:	6803      	ldr	r3, [r0, #0]
9001de96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001de98:	4798      	blx	r3
9001de9a:	e7c8      	b.n	9001de2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001de9c:	2b00      	cmp	r3, #0
9001de9e:	f43f ae82 	beq.w	9001dba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dea2:	f44f 7180 	mov.w	r1, #256	@ 0x100
9001dea6:	e793      	b.n	9001ddd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001dea8:	24021c5c 	.word	0x24021c5c

9001deac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001deac:	b538      	push	{r3, r4, r5, lr}
9001deae:	4c15      	ldr	r4, [pc, #84]	@ (9001df04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001deb0:	4605      	mov	r5, r0
9001deb2:	7823      	ldrb	r3, [r4, #0]
9001deb4:	f3bf 8f5b 	dmb	ish
9001deb8:	07da      	lsls	r2, r3, #31
9001deba:	d40b      	bmi.n	9001ded4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001debc:	4620      	mov	r0, r4
9001debe:	f008 fc25 	bl	9002670c <__cxa_guard_acquire>
9001dec2:	b138      	cbz	r0, 9001ded4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001dec4:	4620      	mov	r0, r4
9001dec6:	f008 fc2d 	bl	90026724 <__cxa_guard_release>
9001deca:	4a0f      	ldr	r2, [pc, #60]	@ (9001df08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001decc:	490f      	ldr	r1, [pc, #60]	@ (9001df0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001dece:	4810      	ldr	r0, [pc, #64]	@ (9001df10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001ded0:	f008 fc15 	bl	900266fe <__aeabi_atexit>
9001ded4:	4c0f      	ldr	r4, [pc, #60]	@ (9001df14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001ded6:	7823      	ldrb	r3, [r4, #0]
9001ded8:	f3bf 8f5b 	dmb	ish
9001dedc:	07db      	lsls	r3, r3, #31
9001dede:	d40b      	bmi.n	9001def8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001dee0:	4620      	mov	r0, r4
9001dee2:	f008 fc13 	bl	9002670c <__cxa_guard_acquire>
9001dee6:	b138      	cbz	r0, 9001def8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001dee8:	4620      	mov	r0, r4
9001deea:	f008 fc1b 	bl	90026724 <__cxa_guard_release>
9001deee:	4a06      	ldr	r2, [pc, #24]	@ (9001df08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001def0:	4909      	ldr	r1, [pc, #36]	@ (9001df18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001def2:	480a      	ldr	r0, [pc, #40]	@ (9001df1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001def4:	f008 fc03 	bl	900266fe <__aeabi_atexit>
9001def8:	4b05      	ldr	r3, [pc, #20]	@ (9001df10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001defa:	616b      	str	r3, [r5, #20]
9001defc:	4b07      	ldr	r3, [pc, #28]	@ (9001df1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001defe:	61ab      	str	r3, [r5, #24]
9001df00:	bd38      	pop	{r3, r4, r5, pc}
9001df02:	bf00      	nop
9001df04:	24021d3c 	.word	0x24021d3c
9001df08:	24000000 	.word	0x24000000
9001df0c:	9001ac8f 	.word	0x9001ac8f
9001df10:	240000d4 	.word	0x240000d4
9001df14:	24021d40 	.word	0x24021d40
9001df18:	9001ac8d 	.word	0x9001ac8d
9001df1c:	240000d8 	.word	0x240000d8

9001df20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001df20:	b538      	push	{r3, r4, r5, lr}
9001df22:	4c15      	ldr	r4, [pc, #84]	@ (9001df78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001df24:	4605      	mov	r5, r0
9001df26:	7823      	ldrb	r3, [r4, #0]
9001df28:	f3bf 8f5b 	dmb	ish
9001df2c:	07da      	lsls	r2, r3, #31
9001df2e:	d40b      	bmi.n	9001df48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001df30:	4620      	mov	r0, r4
9001df32:	f008 fbeb 	bl	9002670c <__cxa_guard_acquire>
9001df36:	b138      	cbz	r0, 9001df48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001df38:	4620      	mov	r0, r4
9001df3a:	f008 fbf3 	bl	90026724 <__cxa_guard_release>
9001df3e:	4a0f      	ldr	r2, [pc, #60]	@ (9001df7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001df40:	490f      	ldr	r1, [pc, #60]	@ (9001df80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001df42:	4810      	ldr	r0, [pc, #64]	@ (9001df84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001df44:	f008 fbdb 	bl	900266fe <__aeabi_atexit>
9001df48:	4c0f      	ldr	r4, [pc, #60]	@ (9001df88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001df4a:	7823      	ldrb	r3, [r4, #0]
9001df4c:	f3bf 8f5b 	dmb	ish
9001df50:	07db      	lsls	r3, r3, #31
9001df52:	d40b      	bmi.n	9001df6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001df54:	4620      	mov	r0, r4
9001df56:	f008 fbd9 	bl	9002670c <__cxa_guard_acquire>
9001df5a:	b138      	cbz	r0, 9001df6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001df5c:	4620      	mov	r0, r4
9001df5e:	f008 fbe1 	bl	90026724 <__cxa_guard_release>
9001df62:	4a06      	ldr	r2, [pc, #24]	@ (9001df7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001df64:	4909      	ldr	r1, [pc, #36]	@ (9001df8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001df66:	480a      	ldr	r0, [pc, #40]	@ (9001df90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001df68:	f008 fbc9 	bl	900266fe <__aeabi_atexit>
9001df6c:	4b05      	ldr	r3, [pc, #20]	@ (9001df84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001df6e:	60eb      	str	r3, [r5, #12]
9001df70:	4b07      	ldr	r3, [pc, #28]	@ (9001df90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001df72:	612b      	str	r3, [r5, #16]
9001df74:	bd38      	pop	{r3, r4, r5, pc}
9001df76:	bf00      	nop
9001df78:	24021d14 	.word	0x24021d14
9001df7c:	24000000 	.word	0x24000000
9001df80:	9001ac93 	.word	0x9001ac93
9001df84:	240000ac 	.word	0x240000ac
9001df88:	24021d18 	.word	0x24021d18
9001df8c:	9001ac91 	.word	0x9001ac91
9001df90:	240000b0 	.word	0x240000b0

9001df94 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001df94:	b510      	push	{r4, lr}
9001df96:	4604      	mov	r4, r0
9001df98:	f7ff ff88 	bl	9001deac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001df9c:	4620      	mov	r0, r4
9001df9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dfa2:	f7ff bfbd 	b.w	9001df20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001dfa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001dfa8:	b538      	push	{r3, r4, r5, lr}
9001dfaa:	4c15      	ldr	r4, [pc, #84]	@ (9001e000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001dfac:	4605      	mov	r5, r0
9001dfae:	7823      	ldrb	r3, [r4, #0]
9001dfb0:	f3bf 8f5b 	dmb	ish
9001dfb4:	07da      	lsls	r2, r3, #31
9001dfb6:	d40b      	bmi.n	9001dfd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001dfb8:	4620      	mov	r0, r4
9001dfba:	f008 fba7 	bl	9002670c <__cxa_guard_acquire>
9001dfbe:	b138      	cbz	r0, 9001dfd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001dfc0:	4620      	mov	r0, r4
9001dfc2:	f008 fbaf 	bl	90026724 <__cxa_guard_release>
9001dfc6:	4a0f      	ldr	r2, [pc, #60]	@ (9001e004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001dfc8:	490f      	ldr	r1, [pc, #60]	@ (9001e008 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001dfca:	4810      	ldr	r0, [pc, #64]	@ (9001e00c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001dfcc:	f008 fb97 	bl	900266fe <__aeabi_atexit>
9001dfd0:	4c0f      	ldr	r4, [pc, #60]	@ (9001e010 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001dfd2:	7823      	ldrb	r3, [r4, #0]
9001dfd4:	f3bf 8f5b 	dmb	ish
9001dfd8:	07db      	lsls	r3, r3, #31
9001dfda:	d40b      	bmi.n	9001dff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001dfdc:	4620      	mov	r0, r4
9001dfde:	f008 fb95 	bl	9002670c <__cxa_guard_acquire>
9001dfe2:	b138      	cbz	r0, 9001dff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001dfe4:	4620      	mov	r0, r4
9001dfe6:	f008 fb9d 	bl	90026724 <__cxa_guard_release>
9001dfea:	4a06      	ldr	r2, [pc, #24]	@ (9001e004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001dfec:	4909      	ldr	r1, [pc, #36]	@ (9001e014 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001dfee:	480a      	ldr	r0, [pc, #40]	@ (9001e018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001dff0:	f008 fb85 	bl	900266fe <__aeabi_atexit>
9001dff4:	4b05      	ldr	r3, [pc, #20]	@ (9001e00c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001dff6:	626b      	str	r3, [r5, #36]	@ 0x24
9001dff8:	4b07      	ldr	r3, [pc, #28]	@ (9001e018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001dffa:	62ab      	str	r3, [r5, #40]	@ 0x28
9001dffc:	bd38      	pop	{r3, r4, r5, pc}
9001dffe:	bf00      	nop
9001e000:	24021d44 	.word	0x24021d44
9001e004:	24000000 	.word	0x24000000
9001e008:	9001ac87 	.word	0x9001ac87
9001e00c:	240000dc 	.word	0x240000dc
9001e010:	24021d48 	.word	0x24021d48
9001e014:	9001ac85 	.word	0x9001ac85
9001e018:	240000e0 	.word	0x240000e0

9001e01c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001e01c:	b538      	push	{r3, r4, r5, lr}
9001e01e:	4c15      	ldr	r4, [pc, #84]	@ (9001e074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001e020:	4605      	mov	r5, r0
9001e022:	7823      	ldrb	r3, [r4, #0]
9001e024:	f3bf 8f5b 	dmb	ish
9001e028:	07da      	lsls	r2, r3, #31
9001e02a:	d40b      	bmi.n	9001e044 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001e02c:	4620      	mov	r0, r4
9001e02e:	f008 fb6d 	bl	9002670c <__cxa_guard_acquire>
9001e032:	b138      	cbz	r0, 9001e044 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001e034:	4620      	mov	r0, r4
9001e036:	f008 fb75 	bl	90026724 <__cxa_guard_release>
9001e03a:	4a0f      	ldr	r2, [pc, #60]	@ (9001e078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001e03c:	490f      	ldr	r1, [pc, #60]	@ (9001e07c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001e03e:	4810      	ldr	r0, [pc, #64]	@ (9001e080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001e040:	f008 fb5d 	bl	900266fe <__aeabi_atexit>
9001e044:	4c0f      	ldr	r4, [pc, #60]	@ (9001e084 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001e046:	7823      	ldrb	r3, [r4, #0]
9001e048:	f3bf 8f5b 	dmb	ish
9001e04c:	07db      	lsls	r3, r3, #31
9001e04e:	d40b      	bmi.n	9001e068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001e050:	4620      	mov	r0, r4
9001e052:	f008 fb5b 	bl	9002670c <__cxa_guard_acquire>
9001e056:	b138      	cbz	r0, 9001e068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001e058:	4620      	mov	r0, r4
9001e05a:	f008 fb63 	bl	90026724 <__cxa_guard_release>
9001e05e:	4a06      	ldr	r2, [pc, #24]	@ (9001e078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001e060:	4909      	ldr	r1, [pc, #36]	@ (9001e088 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001e062:	480a      	ldr	r0, [pc, #40]	@ (9001e08c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001e064:	f008 fb4b 	bl	900266fe <__aeabi_atexit>
9001e068:	4b05      	ldr	r3, [pc, #20]	@ (9001e080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001e06a:	61eb      	str	r3, [r5, #28]
9001e06c:	4b07      	ldr	r3, [pc, #28]	@ (9001e08c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001e06e:	622b      	str	r3, [r5, #32]
9001e070:	bd38      	pop	{r3, r4, r5, pc}
9001e072:	bf00      	nop
9001e074:	24021d1c 	.word	0x24021d1c
9001e078:	24000000 	.word	0x24000000
9001e07c:	9001ac8b 	.word	0x9001ac8b
9001e080:	240000b4 	.word	0x240000b4
9001e084:	24021d20 	.word	0x24021d20
9001e088:	9001ac89 	.word	0x9001ac89
9001e08c:	240000b8 	.word	0x240000b8

9001e090 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001e090:	b510      	push	{r4, lr}
9001e092:	4604      	mov	r4, r0
9001e094:	f7ff ff88 	bl	9001dfa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001e098:	4620      	mov	r0, r4
9001e09a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e09e:	f7ff bfbd 	b.w	9001e01c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001e0a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001e0a4:	b538      	push	{r3, r4, r5, lr}
9001e0a6:	4c15      	ldr	r4, [pc, #84]	@ (9001e0fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001e0a8:	4605      	mov	r5, r0
9001e0aa:	7823      	ldrb	r3, [r4, #0]
9001e0ac:	f3bf 8f5b 	dmb	ish
9001e0b0:	07da      	lsls	r2, r3, #31
9001e0b2:	d40b      	bmi.n	9001e0cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001e0b4:	4620      	mov	r0, r4
9001e0b6:	f008 fb29 	bl	9002670c <__cxa_guard_acquire>
9001e0ba:	b138      	cbz	r0, 9001e0cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001e0bc:	4620      	mov	r0, r4
9001e0be:	f008 fb31 	bl	90026724 <__cxa_guard_release>
9001e0c2:	4a0f      	ldr	r2, [pc, #60]	@ (9001e100 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001e0c4:	490f      	ldr	r1, [pc, #60]	@ (9001e104 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001e0c6:	4810      	ldr	r0, [pc, #64]	@ (9001e108 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001e0c8:	f008 fb19 	bl	900266fe <__aeabi_atexit>
9001e0cc:	4c0f      	ldr	r4, [pc, #60]	@ (9001e10c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001e0ce:	7823      	ldrb	r3, [r4, #0]
9001e0d0:	f3bf 8f5b 	dmb	ish
9001e0d4:	07db      	lsls	r3, r3, #31
9001e0d6:	d40b      	bmi.n	9001e0f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001e0d8:	4620      	mov	r0, r4
9001e0da:	f008 fb17 	bl	9002670c <__cxa_guard_acquire>
9001e0de:	b138      	cbz	r0, 9001e0f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001e0e0:	4620      	mov	r0, r4
9001e0e2:	f008 fb1f 	bl	90026724 <__cxa_guard_release>
9001e0e6:	4a06      	ldr	r2, [pc, #24]	@ (9001e100 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001e0e8:	4909      	ldr	r1, [pc, #36]	@ (9001e110 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001e0ea:	480a      	ldr	r0, [pc, #40]	@ (9001e114 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001e0ec:	f008 fb07 	bl	900266fe <__aeabi_atexit>
9001e0f0:	4b05      	ldr	r3, [pc, #20]	@ (9001e108 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001e0f2:	636b      	str	r3, [r5, #52]	@ 0x34
9001e0f4:	4b07      	ldr	r3, [pc, #28]	@ (9001e114 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001e0f6:	63ab      	str	r3, [r5, #56]	@ 0x38
9001e0f8:	bd38      	pop	{r3, r4, r5, pc}
9001e0fa:	bf00      	nop
9001e0fc:	24021d54 	.word	0x24021d54
9001e100:	24000000 	.word	0x24000000
9001e104:	9001ac7f 	.word	0x9001ac7f
9001e108:	240000ec 	.word	0x240000ec
9001e10c:	24021d58 	.word	0x24021d58
9001e110:	9001ac7d 	.word	0x9001ac7d
9001e114:	240000f0 	.word	0x240000f0

9001e118 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001e118:	b538      	push	{r3, r4, r5, lr}
9001e11a:	4c15      	ldr	r4, [pc, #84]	@ (9001e170 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001e11c:	4605      	mov	r5, r0
9001e11e:	7823      	ldrb	r3, [r4, #0]
9001e120:	f3bf 8f5b 	dmb	ish
9001e124:	07da      	lsls	r2, r3, #31
9001e126:	d40b      	bmi.n	9001e140 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001e128:	4620      	mov	r0, r4
9001e12a:	f008 faef 	bl	9002670c <__cxa_guard_acquire>
9001e12e:	b138      	cbz	r0, 9001e140 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001e130:	4620      	mov	r0, r4
9001e132:	f008 faf7 	bl	90026724 <__cxa_guard_release>
9001e136:	4a0f      	ldr	r2, [pc, #60]	@ (9001e174 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001e138:	490f      	ldr	r1, [pc, #60]	@ (9001e178 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001e13a:	4810      	ldr	r0, [pc, #64]	@ (9001e17c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001e13c:	f008 fadf 	bl	900266fe <__aeabi_atexit>
9001e140:	4c0f      	ldr	r4, [pc, #60]	@ (9001e180 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001e142:	7823      	ldrb	r3, [r4, #0]
9001e144:	f3bf 8f5b 	dmb	ish
9001e148:	07db      	lsls	r3, r3, #31
9001e14a:	d40b      	bmi.n	9001e164 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001e14c:	4620      	mov	r0, r4
9001e14e:	f008 fadd 	bl	9002670c <__cxa_guard_acquire>
9001e152:	b138      	cbz	r0, 9001e164 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001e154:	4620      	mov	r0, r4
9001e156:	f008 fae5 	bl	90026724 <__cxa_guard_release>
9001e15a:	4a06      	ldr	r2, [pc, #24]	@ (9001e174 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001e15c:	4909      	ldr	r1, [pc, #36]	@ (9001e184 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001e15e:	480a      	ldr	r0, [pc, #40]	@ (9001e188 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001e160:	f008 facd 	bl	900266fe <__aeabi_atexit>
9001e164:	4b05      	ldr	r3, [pc, #20]	@ (9001e17c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001e166:	62eb      	str	r3, [r5, #44]	@ 0x2c
9001e168:	4b07      	ldr	r3, [pc, #28]	@ (9001e188 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001e16a:	632b      	str	r3, [r5, #48]	@ 0x30
9001e16c:	bd38      	pop	{r3, r4, r5, pc}
9001e16e:	bf00      	nop
9001e170:	24021d24 	.word	0x24021d24
9001e174:	24000000 	.word	0x24000000
9001e178:	9001ac83 	.word	0x9001ac83
9001e17c:	240000bc 	.word	0x240000bc
9001e180:	24021d28 	.word	0x24021d28
9001e184:	9001ac81 	.word	0x9001ac81
9001e188:	240000c0 	.word	0x240000c0

9001e18c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001e18c:	b510      	push	{r4, lr}
9001e18e:	4604      	mov	r4, r0
9001e190:	f7ff ff88 	bl	9001e0a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001e194:	4620      	mov	r0, r4
9001e196:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e19a:	f7ff bfbd 	b.w	9001e118 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001e1a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001e1a0:	b538      	push	{r3, r4, r5, lr}
9001e1a2:	4c15      	ldr	r4, [pc, #84]	@ (9001e1f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001e1a4:	4605      	mov	r5, r0
9001e1a6:	7823      	ldrb	r3, [r4, #0]
9001e1a8:	f3bf 8f5b 	dmb	ish
9001e1ac:	07da      	lsls	r2, r3, #31
9001e1ae:	d40b      	bmi.n	9001e1c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001e1b0:	4620      	mov	r0, r4
9001e1b2:	f008 faab 	bl	9002670c <__cxa_guard_acquire>
9001e1b6:	b138      	cbz	r0, 9001e1c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001e1b8:	4620      	mov	r0, r4
9001e1ba:	f008 fab3 	bl	90026724 <__cxa_guard_release>
9001e1be:	4a0f      	ldr	r2, [pc, #60]	@ (9001e1fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001e1c0:	490f      	ldr	r1, [pc, #60]	@ (9001e200 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001e1c2:	4810      	ldr	r0, [pc, #64]	@ (9001e204 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001e1c4:	f008 fa9b 	bl	900266fe <__aeabi_atexit>
9001e1c8:	4c0f      	ldr	r4, [pc, #60]	@ (9001e208 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001e1ca:	7823      	ldrb	r3, [r4, #0]
9001e1cc:	f3bf 8f5b 	dmb	ish
9001e1d0:	07db      	lsls	r3, r3, #31
9001e1d2:	d40b      	bmi.n	9001e1ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001e1d4:	4620      	mov	r0, r4
9001e1d6:	f008 fa99 	bl	9002670c <__cxa_guard_acquire>
9001e1da:	b138      	cbz	r0, 9001e1ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001e1dc:	4620      	mov	r0, r4
9001e1de:	f008 faa1 	bl	90026724 <__cxa_guard_release>
9001e1e2:	4a06      	ldr	r2, [pc, #24]	@ (9001e1fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001e1e4:	4909      	ldr	r1, [pc, #36]	@ (9001e20c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001e1e6:	480a      	ldr	r0, [pc, #40]	@ (9001e210 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001e1e8:	f008 fa89 	bl	900266fe <__aeabi_atexit>
9001e1ec:	4b05      	ldr	r3, [pc, #20]	@ (9001e204 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001e1ee:	656b      	str	r3, [r5, #84]	@ 0x54
9001e1f0:	4b07      	ldr	r3, [pc, #28]	@ (9001e210 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001e1f2:	65ab      	str	r3, [r5, #88]	@ 0x58
9001e1f4:	bd38      	pop	{r3, r4, r5, pc}
9001e1f6:	bf00      	nop
9001e1f8:	24021d5c 	.word	0x24021d5c
9001e1fc:	24000000 	.word	0x24000000
9001e200:	9001ac6f 	.word	0x9001ac6f
9001e204:	240000f4 	.word	0x240000f4
9001e208:	24021d60 	.word	0x24021d60
9001e20c:	9001ac6d 	.word	0x9001ac6d
9001e210:	240000f8 	.word	0x240000f8

9001e214 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001e214:	b538      	push	{r3, r4, r5, lr}
9001e216:	4c15      	ldr	r4, [pc, #84]	@ (9001e26c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001e218:	4605      	mov	r5, r0
9001e21a:	7823      	ldrb	r3, [r4, #0]
9001e21c:	f3bf 8f5b 	dmb	ish
9001e220:	07da      	lsls	r2, r3, #31
9001e222:	d40b      	bmi.n	9001e23c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001e224:	4620      	mov	r0, r4
9001e226:	f008 fa71 	bl	9002670c <__cxa_guard_acquire>
9001e22a:	b138      	cbz	r0, 9001e23c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001e22c:	4620      	mov	r0, r4
9001e22e:	f008 fa79 	bl	90026724 <__cxa_guard_release>
9001e232:	4a0f      	ldr	r2, [pc, #60]	@ (9001e270 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001e234:	490f      	ldr	r1, [pc, #60]	@ (9001e274 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001e236:	4810      	ldr	r0, [pc, #64]	@ (9001e278 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001e238:	f008 fa61 	bl	900266fe <__aeabi_atexit>
9001e23c:	4c0f      	ldr	r4, [pc, #60]	@ (9001e27c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001e23e:	7823      	ldrb	r3, [r4, #0]
9001e240:	f3bf 8f5b 	dmb	ish
9001e244:	07db      	lsls	r3, r3, #31
9001e246:	d40b      	bmi.n	9001e260 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001e248:	4620      	mov	r0, r4
9001e24a:	f008 fa5f 	bl	9002670c <__cxa_guard_acquire>
9001e24e:	b138      	cbz	r0, 9001e260 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001e250:	4620      	mov	r0, r4
9001e252:	f008 fa67 	bl	90026724 <__cxa_guard_release>
9001e256:	4a06      	ldr	r2, [pc, #24]	@ (9001e270 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001e258:	4909      	ldr	r1, [pc, #36]	@ (9001e280 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001e25a:	480a      	ldr	r0, [pc, #40]	@ (9001e284 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001e25c:	f008 fa4f 	bl	900266fe <__aeabi_atexit>
9001e260:	4b05      	ldr	r3, [pc, #20]	@ (9001e278 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001e262:	64eb      	str	r3, [r5, #76]	@ 0x4c
9001e264:	4b07      	ldr	r3, [pc, #28]	@ (9001e284 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001e266:	652b      	str	r3, [r5, #80]	@ 0x50
9001e268:	bd38      	pop	{r3, r4, r5, pc}
9001e26a:	bf00      	nop
9001e26c:	24021d64 	.word	0x24021d64
9001e270:	24000000 	.word	0x24000000
9001e274:	9001ac73 	.word	0x9001ac73
9001e278:	240000fc 	.word	0x240000fc
9001e27c:	24021d68 	.word	0x24021d68
9001e280:	9001ac71 	.word	0x9001ac71
9001e284:	24000100 	.word	0x24000100

9001e288 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001e288:	b538      	push	{r3, r4, r5, lr}
9001e28a:	4c15      	ldr	r4, [pc, #84]	@ (9001e2e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001e28c:	4605      	mov	r5, r0
9001e28e:	7823      	ldrb	r3, [r4, #0]
9001e290:	f3bf 8f5b 	dmb	ish
9001e294:	07da      	lsls	r2, r3, #31
9001e296:	d40b      	bmi.n	9001e2b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001e298:	4620      	mov	r0, r4
9001e29a:	f008 fa37 	bl	9002670c <__cxa_guard_acquire>
9001e29e:	b138      	cbz	r0, 9001e2b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001e2a0:	4620      	mov	r0, r4
9001e2a2:	f008 fa3f 	bl	90026724 <__cxa_guard_release>
9001e2a6:	4a0f      	ldr	r2, [pc, #60]	@ (9001e2e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001e2a8:	490f      	ldr	r1, [pc, #60]	@ (9001e2e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001e2aa:	4810      	ldr	r0, [pc, #64]	@ (9001e2ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001e2ac:	f008 fa27 	bl	900266fe <__aeabi_atexit>
9001e2b0:	4c0f      	ldr	r4, [pc, #60]	@ (9001e2f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001e2b2:	7823      	ldrb	r3, [r4, #0]
9001e2b4:	f3bf 8f5b 	dmb	ish
9001e2b8:	07db      	lsls	r3, r3, #31
9001e2ba:	d40b      	bmi.n	9001e2d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001e2bc:	4620      	mov	r0, r4
9001e2be:	f008 fa25 	bl	9002670c <__cxa_guard_acquire>
9001e2c2:	b138      	cbz	r0, 9001e2d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001e2c4:	4620      	mov	r0, r4
9001e2c6:	f008 fa2d 	bl	90026724 <__cxa_guard_release>
9001e2ca:	4a06      	ldr	r2, [pc, #24]	@ (9001e2e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001e2cc:	4909      	ldr	r1, [pc, #36]	@ (9001e2f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001e2ce:	480a      	ldr	r0, [pc, #40]	@ (9001e2f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001e2d0:	f008 fa15 	bl	900266fe <__aeabi_atexit>
9001e2d4:	4b05      	ldr	r3, [pc, #20]	@ (9001e2ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001e2d6:	646b      	str	r3, [r5, #68]	@ 0x44
9001e2d8:	4b07      	ldr	r3, [pc, #28]	@ (9001e2f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001e2da:	64ab      	str	r3, [r5, #72]	@ 0x48
9001e2dc:	bd38      	pop	{r3, r4, r5, pc}
9001e2de:	bf00      	nop
9001e2e0:	24021d2c 	.word	0x24021d2c
9001e2e4:	24000000 	.word	0x24000000
9001e2e8:	9001ac77 	.word	0x9001ac77
9001e2ec:	240000c4 	.word	0x240000c4
9001e2f0:	24021d30 	.word	0x24021d30
9001e2f4:	9001ac75 	.word	0x9001ac75
9001e2f8:	240000c8 	.word	0x240000c8

9001e2fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001e2fc:	b538      	push	{r3, r4, r5, lr}
9001e2fe:	4c15      	ldr	r4, [pc, #84]	@ (9001e354 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001e300:	4605      	mov	r5, r0
9001e302:	7823      	ldrb	r3, [r4, #0]
9001e304:	f3bf 8f5b 	dmb	ish
9001e308:	07da      	lsls	r2, r3, #31
9001e30a:	d40b      	bmi.n	9001e324 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001e30c:	4620      	mov	r0, r4
9001e30e:	f008 f9fd 	bl	9002670c <__cxa_guard_acquire>
9001e312:	b138      	cbz	r0, 9001e324 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001e314:	4620      	mov	r0, r4
9001e316:	f008 fa05 	bl	90026724 <__cxa_guard_release>
9001e31a:	4a0f      	ldr	r2, [pc, #60]	@ (9001e358 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001e31c:	490f      	ldr	r1, [pc, #60]	@ (9001e35c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001e31e:	4810      	ldr	r0, [pc, #64]	@ (9001e360 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001e320:	f008 f9ed 	bl	900266fe <__aeabi_atexit>
9001e324:	4c0f      	ldr	r4, [pc, #60]	@ (9001e364 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001e326:	7823      	ldrb	r3, [r4, #0]
9001e328:	f3bf 8f5b 	dmb	ish
9001e32c:	07db      	lsls	r3, r3, #31
9001e32e:	d40b      	bmi.n	9001e348 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001e330:	4620      	mov	r0, r4
9001e332:	f008 f9eb 	bl	9002670c <__cxa_guard_acquire>
9001e336:	b138      	cbz	r0, 9001e348 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001e338:	4620      	mov	r0, r4
9001e33a:	f008 f9f3 	bl	90026724 <__cxa_guard_release>
9001e33e:	4a06      	ldr	r2, [pc, #24]	@ (9001e358 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001e340:	4909      	ldr	r1, [pc, #36]	@ (9001e368 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001e342:	480a      	ldr	r0, [pc, #40]	@ (9001e36c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001e344:	f008 f9db 	bl	900266fe <__aeabi_atexit>
9001e348:	4b05      	ldr	r3, [pc, #20]	@ (9001e360 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001e34a:	63eb      	str	r3, [r5, #60]	@ 0x3c
9001e34c:	4b07      	ldr	r3, [pc, #28]	@ (9001e36c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001e34e:	642b      	str	r3, [r5, #64]	@ 0x40
9001e350:	bd38      	pop	{r3, r4, r5, pc}
9001e352:	bf00      	nop
9001e354:	24021d4c 	.word	0x24021d4c
9001e358:	24000000 	.word	0x24000000
9001e35c:	9001ac7b 	.word	0x9001ac7b
9001e360:	240000e4 	.word	0x240000e4
9001e364:	24021d50 	.word	0x24021d50
9001e368:	9001ac79 	.word	0x9001ac79
9001e36c:	240000e8 	.word	0x240000e8

9001e370 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001e370:	b510      	push	{r4, lr}
9001e372:	4604      	mov	r4, r0
9001e374:	f7ff ff14 	bl	9001e1a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001e378:	4620      	mov	r0, r4
9001e37a:	f7ff ff85 	bl	9001e288 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001e37e:	4620      	mov	r0, r4
9001e380:	f7ff ff48 	bl	9001e214 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001e384:	4620      	mov	r0, r4
9001e386:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e38a:	f7ff bfb7 	b.w	9001e2fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001e390 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001e390:	b538      	push	{r3, r4, r5, lr}
9001e392:	4c15      	ldr	r4, [pc, #84]	@ (9001e3e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001e394:	4605      	mov	r5, r0
9001e396:	7823      	ldrb	r3, [r4, #0]
9001e398:	f3bf 8f5b 	dmb	ish
9001e39c:	07da      	lsls	r2, r3, #31
9001e39e:	d40b      	bmi.n	9001e3b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001e3a0:	4620      	mov	r0, r4
9001e3a2:	f008 f9b3 	bl	9002670c <__cxa_guard_acquire>
9001e3a6:	b138      	cbz	r0, 9001e3b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001e3a8:	4620      	mov	r0, r4
9001e3aa:	f008 f9bb 	bl	90026724 <__cxa_guard_release>
9001e3ae:	4a0f      	ldr	r2, [pc, #60]	@ (9001e3ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001e3b0:	490f      	ldr	r1, [pc, #60]	@ (9001e3f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001e3b2:	4810      	ldr	r0, [pc, #64]	@ (9001e3f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001e3b4:	f008 f9a3 	bl	900266fe <__aeabi_atexit>
9001e3b8:	4c0f      	ldr	r4, [pc, #60]	@ (9001e3f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001e3ba:	7823      	ldrb	r3, [r4, #0]
9001e3bc:	f3bf 8f5b 	dmb	ish
9001e3c0:	07db      	lsls	r3, r3, #31
9001e3c2:	d40b      	bmi.n	9001e3dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001e3c4:	4620      	mov	r0, r4
9001e3c6:	f008 f9a1 	bl	9002670c <__cxa_guard_acquire>
9001e3ca:	b138      	cbz	r0, 9001e3dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001e3cc:	4620      	mov	r0, r4
9001e3ce:	f008 f9a9 	bl	90026724 <__cxa_guard_release>
9001e3d2:	4a06      	ldr	r2, [pc, #24]	@ (9001e3ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001e3d4:	4909      	ldr	r1, [pc, #36]	@ (9001e3fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001e3d6:	480a      	ldr	r0, [pc, #40]	@ (9001e400 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001e3d8:	f008 f991 	bl	900266fe <__aeabi_atexit>
9001e3dc:	4b05      	ldr	r3, [pc, #20]	@ (9001e3f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001e3de:	666b      	str	r3, [r5, #100]	@ 0x64
9001e3e0:	4b07      	ldr	r3, [pc, #28]	@ (9001e400 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001e3e2:	66ab      	str	r3, [r5, #104]	@ 0x68
9001e3e4:	bd38      	pop	{r3, r4, r5, pc}
9001e3e6:	bf00      	nop
9001e3e8:	24021d34 	.word	0x24021d34
9001e3ec:	24000000 	.word	0x24000000
9001e3f0:	9001ac67 	.word	0x9001ac67
9001e3f4:	240000cc 	.word	0x240000cc
9001e3f8:	24021d38 	.word	0x24021d38
9001e3fc:	9001ac65 	.word	0x9001ac65
9001e400:	240000d0 	.word	0x240000d0

9001e404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001e404:	b538      	push	{r3, r4, r5, lr}
9001e406:	4c15      	ldr	r4, [pc, #84]	@ (9001e45c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001e408:	4605      	mov	r5, r0
9001e40a:	7823      	ldrb	r3, [r4, #0]
9001e40c:	f3bf 8f5b 	dmb	ish
9001e410:	07da      	lsls	r2, r3, #31
9001e412:	d40b      	bmi.n	9001e42c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001e414:	4620      	mov	r0, r4
9001e416:	f008 f979 	bl	9002670c <__cxa_guard_acquire>
9001e41a:	b138      	cbz	r0, 9001e42c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001e41c:	4620      	mov	r0, r4
9001e41e:	f008 f981 	bl	90026724 <__cxa_guard_release>
9001e422:	4a0f      	ldr	r2, [pc, #60]	@ (9001e460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001e424:	490f      	ldr	r1, [pc, #60]	@ (9001e464 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001e426:	4810      	ldr	r0, [pc, #64]	@ (9001e468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001e428:	f008 f969 	bl	900266fe <__aeabi_atexit>
9001e42c:	4c0f      	ldr	r4, [pc, #60]	@ (9001e46c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001e42e:	7823      	ldrb	r3, [r4, #0]
9001e430:	f3bf 8f5b 	dmb	ish
9001e434:	07db      	lsls	r3, r3, #31
9001e436:	d40b      	bmi.n	9001e450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001e438:	4620      	mov	r0, r4
9001e43a:	f008 f967 	bl	9002670c <__cxa_guard_acquire>
9001e43e:	b138      	cbz	r0, 9001e450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001e440:	4620      	mov	r0, r4
9001e442:	f008 f96f 	bl	90026724 <__cxa_guard_release>
9001e446:	4a06      	ldr	r2, [pc, #24]	@ (9001e460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001e448:	4909      	ldr	r1, [pc, #36]	@ (9001e470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001e44a:	480a      	ldr	r0, [pc, #40]	@ (9001e474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001e44c:	f008 f957 	bl	900266fe <__aeabi_atexit>
9001e450:	4b05      	ldr	r3, [pc, #20]	@ (9001e468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001e452:	65eb      	str	r3, [r5, #92]	@ 0x5c
9001e454:	4b07      	ldr	r3, [pc, #28]	@ (9001e474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001e456:	662b      	str	r3, [r5, #96]	@ 0x60
9001e458:	bd38      	pop	{r3, r4, r5, pc}
9001e45a:	bf00      	nop
9001e45c:	24021d0c 	.word	0x24021d0c
9001e460:	24000000 	.word	0x24000000
9001e464:	9001ac6b 	.word	0x9001ac6b
9001e468:	240000a4 	.word	0x240000a4
9001e46c:	24021d10 	.word	0x24021d10
9001e470:	9001ac69 	.word	0x9001ac69
9001e474:	240000a8 	.word	0x240000a8

9001e478 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001e478:	b510      	push	{r4, lr}
9001e47a:	4604      	mov	r4, r0
9001e47c:	f7ff ff88 	bl	9001e390 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001e480:	4620      	mov	r0, r4
9001e482:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e486:	f7ff bfbd 	b.w	9001e404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001e48c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001e48c:	b538      	push	{r3, r4, r5, lr}
9001e48e:	4c15      	ldr	r4, [pc, #84]	@ (9001e4e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001e490:	4605      	mov	r5, r0
9001e492:	7823      	ldrb	r3, [r4, #0]
9001e494:	f3bf 8f5b 	dmb	ish
9001e498:	07da      	lsls	r2, r3, #31
9001e49a:	d40b      	bmi.n	9001e4b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001e49c:	4620      	mov	r0, r4
9001e49e:	f008 f935 	bl	9002670c <__cxa_guard_acquire>
9001e4a2:	b138      	cbz	r0, 9001e4b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001e4a4:	4620      	mov	r0, r4
9001e4a6:	f008 f93d 	bl	90026724 <__cxa_guard_release>
9001e4aa:	4a0f      	ldr	r2, [pc, #60]	@ (9001e4e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e4ac:	490f      	ldr	r1, [pc, #60]	@ (9001e4ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001e4ae:	4810      	ldr	r0, [pc, #64]	@ (9001e4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e4b0:	f008 f925 	bl	900266fe <__aeabi_atexit>
9001e4b4:	4c0f      	ldr	r4, [pc, #60]	@ (9001e4f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001e4b6:	7823      	ldrb	r3, [r4, #0]
9001e4b8:	f3bf 8f5b 	dmb	ish
9001e4bc:	07db      	lsls	r3, r3, #31
9001e4be:	d40b      	bmi.n	9001e4d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e4c0:	4620      	mov	r0, r4
9001e4c2:	f008 f923 	bl	9002670c <__cxa_guard_acquire>
9001e4c6:	b138      	cbz	r0, 9001e4d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e4c8:	4620      	mov	r0, r4
9001e4ca:	f008 f92b 	bl	90026724 <__cxa_guard_release>
9001e4ce:	4a06      	ldr	r2, [pc, #24]	@ (9001e4e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e4d0:	4909      	ldr	r1, [pc, #36]	@ (9001e4f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001e4d2:	480a      	ldr	r0, [pc, #40]	@ (9001e4fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e4d4:	f008 f913 	bl	900266fe <__aeabi_atexit>
9001e4d8:	4b05      	ldr	r3, [pc, #20]	@ (9001e4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e4da:	676b      	str	r3, [r5, #116]	@ 0x74
9001e4dc:	4b07      	ldr	r3, [pc, #28]	@ (9001e4fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e4de:	67ab      	str	r3, [r5, #120]	@ 0x78
9001e4e0:	bd38      	pop	{r3, r4, r5, pc}
9001e4e2:	bf00      	nop
9001e4e4:	24021d04 	.word	0x24021d04
9001e4e8:	24000000 	.word	0x24000000
9001e4ec:	9001ac5f 	.word	0x9001ac5f
9001e4f0:	2400009c 	.word	0x2400009c
9001e4f4:	24021d08 	.word	0x24021d08
9001e4f8:	9001ac5d 	.word	0x9001ac5d
9001e4fc:	240000a0 	.word	0x240000a0

9001e500 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001e500:	b538      	push	{r3, r4, r5, lr}
9001e502:	4c15      	ldr	r4, [pc, #84]	@ (9001e558 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001e504:	4605      	mov	r5, r0
9001e506:	7823      	ldrb	r3, [r4, #0]
9001e508:	f3bf 8f5b 	dmb	ish
9001e50c:	07da      	lsls	r2, r3, #31
9001e50e:	d40b      	bmi.n	9001e528 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e510:	4620      	mov	r0, r4
9001e512:	f008 f8fb 	bl	9002670c <__cxa_guard_acquire>
9001e516:	b138      	cbz	r0, 9001e528 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e518:	4620      	mov	r0, r4
9001e51a:	f008 f903 	bl	90026724 <__cxa_guard_release>
9001e51e:	4a0f      	ldr	r2, [pc, #60]	@ (9001e55c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e520:	490f      	ldr	r1, [pc, #60]	@ (9001e560 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001e522:	4810      	ldr	r0, [pc, #64]	@ (9001e564 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e524:	f008 f8eb 	bl	900266fe <__aeabi_atexit>
9001e528:	4c0f      	ldr	r4, [pc, #60]	@ (9001e568 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001e52a:	7823      	ldrb	r3, [r4, #0]
9001e52c:	f3bf 8f5b 	dmb	ish
9001e530:	07db      	lsls	r3, r3, #31
9001e532:	d40b      	bmi.n	9001e54c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e534:	4620      	mov	r0, r4
9001e536:	f008 f8e9 	bl	9002670c <__cxa_guard_acquire>
9001e53a:	b138      	cbz	r0, 9001e54c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e53c:	4620      	mov	r0, r4
9001e53e:	f008 f8f1 	bl	90026724 <__cxa_guard_release>
9001e542:	4a06      	ldr	r2, [pc, #24]	@ (9001e55c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e544:	4909      	ldr	r1, [pc, #36]	@ (9001e56c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001e546:	480a      	ldr	r0, [pc, #40]	@ (9001e570 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e548:	f008 f8d9 	bl	900266fe <__aeabi_atexit>
9001e54c:	4b05      	ldr	r3, [pc, #20]	@ (9001e564 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e54e:	66eb      	str	r3, [r5, #108]	@ 0x6c
9001e550:	4b07      	ldr	r3, [pc, #28]	@ (9001e570 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e552:	672b      	str	r3, [r5, #112]	@ 0x70
9001e554:	bd38      	pop	{r3, r4, r5, pc}
9001e556:	bf00      	nop
9001e558:	24021cfc 	.word	0x24021cfc
9001e55c:	24000000 	.word	0x24000000
9001e560:	9001ac63 	.word	0x9001ac63
9001e564:	24000094 	.word	0x24000094
9001e568:	24021d00 	.word	0x24021d00
9001e56c:	9001ac61 	.word	0x9001ac61
9001e570:	24000098 	.word	0x24000098

9001e574 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001e574:	b510      	push	{r4, lr}
9001e576:	4604      	mov	r4, r0
9001e578:	f7ff ff88 	bl	9001e48c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001e57c:	4620      	mov	r0, r4
9001e57e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e582:	f7ff bfbd 	b.w	9001e500 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001e586 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001e586:	b510      	push	{r4, lr}
9001e588:	4604      	mov	r4, r0
9001e58a:	f7ff fff3 	bl	9001e574 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001e58e:	4620      	mov	r0, r4
9001e590:	f7ff ff72 	bl	9001e478 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001e594:	4620      	mov	r0, r4
9001e596:	f7ff fdf9 	bl	9001e18c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001e59a:	4620      	mov	r0, r4
9001e59c:	f7ff fcfa 	bl	9001df94 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001e5a0:	4620      	mov	r0, r4
9001e5a2:	f7ff fd75 	bl	9001e090 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001e5a6:	4620      	mov	r0, r4
9001e5a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e5ac:	f7ff bee0 	b.w	9001e370 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001e5b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001e5b0:	b538      	push	{r3, r4, r5, lr}
9001e5b2:	4c0b      	ldr	r4, [pc, #44]	@ (9001e5e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001e5b4:	4605      	mov	r5, r0
9001e5b6:	7823      	ldrb	r3, [r4, #0]
9001e5b8:	f3bf 8f5b 	dmb	ish
9001e5bc:	07db      	lsls	r3, r3, #31
9001e5be:	d40b      	bmi.n	9001e5d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e5c0:	4620      	mov	r0, r4
9001e5c2:	f008 f8a3 	bl	9002670c <__cxa_guard_acquire>
9001e5c6:	b138      	cbz	r0, 9001e5d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e5c8:	4620      	mov	r0, r4
9001e5ca:	f008 f8ab 	bl	90026724 <__cxa_guard_release>
9001e5ce:	4a05      	ldr	r2, [pc, #20]	@ (9001e5e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001e5d0:	4905      	ldr	r1, [pc, #20]	@ (9001e5e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001e5d2:	4806      	ldr	r0, [pc, #24]	@ (9001e5ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e5d4:	f008 f893 	bl	900266fe <__aeabi_atexit>
9001e5d8:	4b04      	ldr	r3, [pc, #16]	@ (9001e5ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e5da:	67eb      	str	r3, [r5, #124]	@ 0x7c
9001e5dc:	bd38      	pop	{r3, r4, r5, pc}
9001e5de:	bf00      	nop
9001e5e0:	24021cf0 	.word	0x24021cf0
9001e5e4:	24000000 	.word	0x24000000
9001e5e8:	9001ac5b 	.word	0x9001ac5b
9001e5ec:	2400008c 	.word	0x2400008c

9001e5f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001e5f0:	b538      	push	{r3, r4, r5, lr}
9001e5f2:	4c0b      	ldr	r4, [pc, #44]	@ (9001e620 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001e5f4:	4605      	mov	r5, r0
9001e5f6:	7823      	ldrb	r3, [r4, #0]
9001e5f8:	f3bf 8f5b 	dmb	ish
9001e5fc:	07db      	lsls	r3, r3, #31
9001e5fe:	d40b      	bmi.n	9001e618 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e600:	4620      	mov	r0, r4
9001e602:	f008 f883 	bl	9002670c <__cxa_guard_acquire>
9001e606:	b138      	cbz	r0, 9001e618 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e608:	4620      	mov	r0, r4
9001e60a:	f008 f88b 	bl	90026724 <__cxa_guard_release>
9001e60e:	4a05      	ldr	r2, [pc, #20]	@ (9001e624 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001e610:	4905      	ldr	r1, [pc, #20]	@ (9001e628 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001e612:	4806      	ldr	r0, [pc, #24]	@ (9001e62c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e614:	f008 f873 	bl	900266fe <__aeabi_atexit>
9001e618:	4b04      	ldr	r3, [pc, #16]	@ (9001e62c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e61a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
9001e61e:	bd38      	pop	{r3, r4, r5, pc}
9001e620:	24021cf4 	.word	0x24021cf4
9001e624:	24000000 	.word	0x24000000
9001e628:	9001ac59 	.word	0x9001ac59
9001e62c:	24000090 	.word	0x24000090

9001e630 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001e630:	b570      	push	{r4, r5, r6, lr}
9001e632:	4d0d      	ldr	r5, [pc, #52]	@ (9001e668 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001e634:	4606      	mov	r6, r0
9001e636:	4c0d      	ldr	r4, [pc, #52]	@ (9001e66c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001e638:	782b      	ldrb	r3, [r5, #0]
9001e63a:	f3bf 8f5b 	dmb	ish
9001e63e:	f013 0f01 	tst.w	r3, #1
9001e642:	d10d      	bne.n	9001e660 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e644:	4628      	mov	r0, r5
9001e646:	f008 f861 	bl	9002670c <__cxa_guard_acquire>
9001e64a:	b148      	cbz	r0, 9001e660 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e64c:	4b08      	ldr	r3, [pc, #32]	@ (9001e670 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001e64e:	4628      	mov	r0, r5
9001e650:	6023      	str	r3, [r4, #0]
9001e652:	f008 f867 	bl	90026724 <__cxa_guard_release>
9001e656:	4a07      	ldr	r2, [pc, #28]	@ (9001e674 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001e658:	4620      	mov	r0, r4
9001e65a:	4907      	ldr	r1, [pc, #28]	@ (9001e678 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001e65c:	f008 f84f 	bl	900266fe <__aeabi_atexit>
9001e660:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
9001e664:	bd70      	pop	{r4, r5, r6, pc}
9001e666:	bf00      	nop
9001e668:	24021cf8 	.word	0x24021cf8
9001e66c:	24021d6c 	.word	0x24021d6c
9001e670:	9002a98c 	.word	0x9002a98c
9001e674:	24000000 	.word	0x24000000
9001e678:	9001ac57 	.word	0x9001ac57

9001e67c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001e67c:	b510      	push	{r4, lr}
9001e67e:	4604      	mov	r4, r0
9001e680:	f7ff ff96 	bl	9001e5b0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001e684:	4620      	mov	r0, r4
9001e686:	f7ff ffb3 	bl	9001e5f0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001e68a:	4620      	mov	r0, r4
9001e68c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e690:	f7ff bfce 	b.w	9001e630 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001e694 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001e694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e698:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
9001e69c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
9001e6a0:	2d00      	cmp	r5, #0
9001e6a2:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
9001e6a6:	fb05 4c0e 	mla	ip, r5, lr, r4
9001e6aa:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
9001e6ae:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
9001e6b2:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
9001e6b6:	eb02 0a0c 	add.w	sl, r2, ip
9001e6ba:	8808      	ldrh	r0, [r1, #0]
9001e6bc:	f2c0 80b0 	blt.w	9001e820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e6c0:	45ab      	cmp	fp, r5
9001e6c2:	f340 80ad 	ble.w	9001e820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e6c6:	2c00      	cmp	r4, #0
9001e6c8:	f2c0 80a8 	blt.w	9001e81c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e6cc:	45a6      	cmp	lr, r4
9001e6ce:	f340 80a5 	ble.w	9001e81c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e6d2:	f812 200c 	ldrb.w	r2, [r2, ip]
9001e6d6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001e6da:	1c62      	adds	r2, r4, #1
9001e6dc:	f100 80a3 	bmi.w	9001e826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e6e0:	4596      	cmp	lr, r2
9001e6e2:	f340 80a0 	ble.w	9001e826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e6e6:	f1b9 0f00 	cmp.w	r9, #0
9001e6ea:	f000 809c 	beq.w	9001e826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e6ee:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001e6f2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001e6f6:	3501      	adds	r5, #1
9001e6f8:	f100 8099 	bmi.w	9001e82e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e6fc:	45ab      	cmp	fp, r5
9001e6fe:	f340 8096 	ble.w	9001e82e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e702:	2f00      	cmp	r7, #0
9001e704:	f000 8093 	beq.w	9001e82e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e708:	2c00      	cmp	r4, #0
9001e70a:	f2c0 808e 	blt.w	9001e82a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e70e:	45a6      	cmp	lr, r4
9001e710:	f340 808b 	ble.w	9001e82a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e714:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001e718:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001e71c:	3401      	adds	r4, #1
9001e71e:	f100 8089 	bmi.w	9001e834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e722:	45a6      	cmp	lr, r4
9001e724:	f340 8086 	ble.w	9001e834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e728:	f1b9 0f00 	cmp.w	r9, #0
9001e72c:	f000 8082 	beq.w	9001e834 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e730:	44d6      	add	lr, sl
9001e732:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001e736:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001e73a:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001e73e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
9001e742:	fb19 fe07 	smulbb	lr, r9, r7
9001e746:	f1c7 0210 	rsb	r2, r7, #16
9001e74a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9001e74e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001e752:	eba2 0209 	sub.w	r2, r2, r9
9001e756:	ea44 0808 	orr.w	r8, r4, r8
9001e75a:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001e75e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9001e762:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001e766:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9001e76a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001e76e:	ea44 0c0c 	orr.w	ip, r4, ip
9001e772:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001e776:	fb04 f40c 	mul.w	r4, r4, ip
9001e77a:	fb02 4808 	mla	r8, r2, r8, r4
9001e77e:	041a      	lsls	r2, r3, #16
9001e780:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001e784:	b2b4      	uxth	r4, r6
9001e786:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9001e78a:	43f6      	mvns	r6, r6
9001e78c:	4313      	orrs	r3, r2
9001e78e:	042a      	lsls	r2, r5, #16
9001e790:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9001e794:	b2f6      	uxtb	r6, r6
9001e796:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9001e79a:	fb0e 8303 	mla	r3, lr, r3, r8
9001e79e:	432a      	orrs	r2, r5
9001e7a0:	fb07 3202 	mla	r2, r7, r2, r3
9001e7a4:	10c7      	asrs	r7, r0, #3
9001e7a6:	0d53      	lsrs	r3, r2, #21
9001e7a8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e7ac:	0952      	lsrs	r2, r2, #5
9001e7ae:	fb17 f706 	smulbb	r7, r7, r6
9001e7b2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001e7b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001e7ba:	431a      	orrs	r2, r3
9001e7bc:	b293      	uxth	r3, r2
9001e7be:	1202      	asrs	r2, r0, #8
9001e7c0:	121d      	asrs	r5, r3, #8
9001e7c2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001e7c6:	00c0      	lsls	r0, r0, #3
9001e7c8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001e7cc:	fb12 f206 	smulbb	r2, r2, r6
9001e7d0:	b2c0      	uxtb	r0, r0
9001e7d2:	fb05 2504 	mla	r5, r5, r4, r2
9001e7d6:	10da      	asrs	r2, r3, #3
9001e7d8:	fb10 f006 	smulbb	r0, r0, r6
9001e7dc:	00db      	lsls	r3, r3, #3
9001e7de:	b2ad      	uxth	r5, r5
9001e7e0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001e7e4:	b2db      	uxtb	r3, r3
9001e7e6:	fb02 7204 	mla	r2, r2, r4, r7
9001e7ea:	fb03 0004 	mla	r0, r3, r4, r0
9001e7ee:	1c6b      	adds	r3, r5, #1
9001e7f0:	b292      	uxth	r2, r2
9001e7f2:	b280      	uxth	r0, r0
9001e7f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001e7f8:	1c43      	adds	r3, r0, #1
9001e7fa:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001e7fe:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001e802:	1c50      	adds	r0, r2, #1
9001e804:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001e808:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e80c:	0952      	lsrs	r2, r2, #5
9001e80e:	432b      	orrs	r3, r5
9001e810:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e814:	4313      	orrs	r3, r2
9001e816:	800b      	strh	r3, [r1, #0]
9001e818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e81c:	4680      	mov	r8, r0
9001e81e:	e75c      	b.n	9001e6da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001e820:	4684      	mov	ip, r0
9001e822:	4680      	mov	r8, r0
9001e824:	e767      	b.n	9001e6f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e826:	4684      	mov	ip, r0
9001e828:	e765      	b.n	9001e6f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e82a:	4605      	mov	r5, r0
9001e82c:	e776      	b.n	9001e71c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001e82e:	4603      	mov	r3, r0
9001e830:	4605      	mov	r5, r0
9001e832:	e782      	b.n	9001e73a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001e834:	4603      	mov	r3, r0
9001e836:	e780      	b.n	9001e73a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001e838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e83c:	b099      	sub	sp, #100	@ 0x64
9001e83e:	9215      	str	r2, [sp, #84]	@ 0x54
9001e840:	9309      	str	r3, [sp, #36]	@ 0x24
9001e842:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
9001e844:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
9001e848:	9016      	str	r0, [sp, #88]	@ 0x58
9001e84a:	930d      	str	r3, [sp, #52]	@ 0x34
9001e84c:	6850      	ldr	r0, [r2, #4]
9001e84e:	910c      	str	r1, [sp, #48]	@ 0x30
9001e850:	6812      	ldr	r2, [r2, #0]
9001e852:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9001e856:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
9001e85a:	fb00 1303 	mla	r3, r0, r3, r1
9001e85e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001e862:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001e864:	681b      	ldr	r3, [r3, #0]
9001e866:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e868:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001e86a:	685e      	ldr	r6, [r3, #4]
9001e86c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e86e:	3604      	adds	r6, #4
9001e870:	43db      	mvns	r3, r3
9001e872:	b2db      	uxtb	r3, r3
9001e874:	930a      	str	r3, [sp, #40]	@ 0x28
9001e876:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001e878:	2b00      	cmp	r3, #0
9001e87a:	dc03      	bgt.n	9001e884 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e87c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
9001e87e:	2b00      	cmp	r3, #0
9001e880:	f340 8225 	ble.w	9001ecce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e884:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001e886:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001e88a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001e88e:	1e48      	subs	r0, r1, #1
9001e890:	1e57      	subs	r7, r2, #1
9001e892:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e894:	2b00      	cmp	r3, #0
9001e896:	f340 80e3 	ble.w	9001ea60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e89a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001e89e:	ea4f 4325 	mov.w	r3, r5, asr #16
9001e8a2:	d406      	bmi.n	9001e8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e8a4:	4584      	cmp	ip, r0
9001e8a6:	da04      	bge.n	9001e8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e8a8:	2b00      	cmp	r3, #0
9001e8aa:	db02      	blt.n	9001e8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e8ac:	42bb      	cmp	r3, r7
9001e8ae:	f2c0 80d8 	blt.w	9001ea62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001e8b2:	f11c 0c01 	adds.w	ip, ip, #1
9001e8b6:	f100 80c9 	bmi.w	9001ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e8ba:	4561      	cmp	r1, ip
9001e8bc:	f2c0 80c6 	blt.w	9001ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e8c0:	3301      	adds	r3, #1
9001e8c2:	f100 80c3 	bmi.w	9001ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e8c6:	429a      	cmp	r2, r3
9001e8c8:	f2c0 80c0 	blt.w	9001ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e8cc:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
9001e8d0:	4647      	mov	r7, r8
9001e8d2:	f1bb 0f00 	cmp.w	fp, #0
9001e8d6:	f340 80e3 	ble.w	9001eaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001e8da:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
9001e8dc:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001e8e0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001e8e2:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001e8e6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001e8ea:	ea5f 422a 	movs.w	r2, sl, asr #16
9001e8ee:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001e8f2:	689b      	ldr	r3, [r3, #8]
9001e8f4:	f100 8121 	bmi.w	9001eb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e8f8:	f103 39ff 	add.w	r9, r3, #4294967295
9001e8fc:	454a      	cmp	r2, r9
9001e8fe:	f280 811c 	bge.w	9001eb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e902:	f1bc 0f00 	cmp.w	ip, #0
9001e906:	f2c0 8118 	blt.w	9001eb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e90a:	f10e 39ff 	add.w	r9, lr, #4294967295
9001e90e:	45cc      	cmp	ip, r9
9001e910:	f280 8113 	bge.w	9001eb3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e914:	b21b      	sxth	r3, r3
9001e916:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9001e918:	fb0c 2203 	mla	r2, ip, r3, r2
9001e91c:	eb04 0902 	add.w	r9, r4, r2
9001e920:	5ca2      	ldrb	r2, [r4, r2]
9001e922:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001e926:	2800      	cmp	r0, #0
9001e928:	f000 80fe 	beq.w	9001eb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001e92c:	f899 2001 	ldrb.w	r2, [r9, #1]
9001e930:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001e934:	9211      	str	r2, [sp, #68]	@ 0x44
9001e936:	b151      	cbz	r1, 9001e94e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e938:	eb09 0203 	add.w	r2, r9, r3
9001e93c:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e940:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e944:	930f      	str	r3, [sp, #60]	@ 0x3c
9001e946:	7853      	ldrb	r3, [r2, #1]
9001e948:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e94c:	9312      	str	r3, [sp, #72]	@ 0x48
9001e94e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001e950:	fb10 f201 	smulbb	r2, r0, r1
9001e954:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001e956:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001e95a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001e95e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
9001e962:	10d2      	asrs	r2, r2, #3
9001e964:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001e968:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001e96c:	ea4c 0c03 	orr.w	ip, ip, r3
9001e970:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9001e972:	041b      	lsls	r3, r3, #16
9001e974:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001e978:	4323      	orrs	r3, r4
9001e97a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9001e97c:	4353      	muls	r3, r2
9001e97e:	fb09 330c 	mla	r3, r9, ip, r3
9001e982:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001e986:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9001e98a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001e98e:	ea4c 0e0e 	orr.w	lr, ip, lr
9001e992:	f1c1 0c10 	rsb	ip, r1, #16
9001e996:	ebac 0c00 	sub.w	ip, ip, r0
9001e99a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001e99e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001e9a2:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001e9a6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001e9a8:	0418      	lsls	r0, r3, #16
9001e9aa:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001e9ae:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9001e9b2:	4318      	orrs	r0, r3
9001e9b4:	fb02 c200 	mla	r2, r2, r0, ip
9001e9b8:	8838      	ldrh	r0, [r7, #0]
9001e9ba:	0d53      	lsrs	r3, r2, #21
9001e9bc:	0952      	lsrs	r2, r2, #5
9001e9be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001e9c2:	1201      	asrs	r1, r0, #8
9001e9c4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001e9c8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001e9cc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001e9d0:	00c0      	lsls	r0, r0, #3
9001e9d2:	431a      	orrs	r2, r3
9001e9d4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
9001e9d8:	fb11 f104 	smulbb	r1, r1, r4
9001e9dc:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001e9e0:	b292      	uxth	r2, r2
9001e9e2:	fb1e fe04 	smulbb	lr, lr, r4
9001e9e6:	b2c0      	uxtb	r0, r0
9001e9e8:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001e9ec:	fb10 f004 	smulbb	r0, r0, r4
9001e9f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e9f4:	fb0c 1c03 	mla	ip, ip, r3, r1
9001e9f8:	10d1      	asrs	r1, r2, #3
9001e9fa:	00d2      	lsls	r2, r2, #3
9001e9fc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001ea00:	fa1f fc8c 	uxth.w	ip, ip
9001ea04:	b2d2      	uxtb	r2, r2
9001ea06:	fb01 e103 	mla	r1, r1, r3, lr
9001ea0a:	fb02 0303 	mla	r3, r2, r3, r0
9001ea0e:	b289      	uxth	r1, r1
9001ea10:	b29a      	uxth	r2, r3
9001ea12:	f10c 0301 	add.w	r3, ip, #1
9001ea16:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001ea1a:	1c53      	adds	r3, r2, #1
9001ea1c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001ea20:	1c4a      	adds	r2, r1, #1
9001ea22:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ea26:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001ea2a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001ea2e:	0949      	lsrs	r1, r1, #5
9001ea30:	ea43 030c 	orr.w	r3, r3, ip
9001ea34:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001ea38:	430b      	orrs	r3, r1
9001ea3a:	803b      	strh	r3, [r7, #0]
9001ea3c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9001ea3e:	3702      	adds	r7, #2
9001ea40:	f10b 3bff 	add.w	fp, fp, #4294967295
9001ea44:	449a      	add	sl, r3
9001ea46:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001ea48:	441d      	add	r5, r3
9001ea4a:	e742      	b.n	9001e8d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001ea4c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9001ea4e:	f108 0802 	add.w	r8, r8, #2
9001ea52:	449a      	add	sl, r3
9001ea54:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001ea56:	441d      	add	r5, r3
9001ea58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ea5a:	3b01      	subs	r3, #1
9001ea5c:	9309      	str	r3, [sp, #36]	@ 0x24
9001ea5e:	e718      	b.n	9001e892 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001ea60:	d023      	beq.n	9001eaaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001ea62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ea64:	9825      	ldr	r0, [sp, #148]	@ 0x94
9001ea66:	3b01      	subs	r3, #1
9001ea68:	fb00 a003 	mla	r0, r0, r3, sl
9001ea6c:	1400      	asrs	r0, r0, #16
9001ea6e:	f53f af2d 	bmi.w	9001e8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001ea72:	3901      	subs	r1, #1
9001ea74:	4288      	cmp	r0, r1
9001ea76:	f6bf af29 	bge.w	9001e8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001ea7a:	9926      	ldr	r1, [sp, #152]	@ 0x98
9001ea7c:	fb01 5303 	mla	r3, r1, r3, r5
9001ea80:	141b      	asrs	r3, r3, #16
9001ea82:	f53f af23 	bmi.w	9001e8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001ea86:	3a01      	subs	r2, #1
9001ea88:	4293      	cmp	r3, r2
9001ea8a:	f6bf af1f 	bge.w	9001e8cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001ea8e:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
9001ea92:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
9001ea96:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
9001ea9a:	f1be 0f00 	cmp.w	lr, #0
9001ea9e:	dc6c      	bgt.n	9001eb7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001eaa0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001eaa2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001eaa6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001eaaa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001eaac:	2b00      	cmp	r3, #0
9001eaae:	f340 810e 	ble.w	9001ecce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001eab2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001eab6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9001eab8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001eabc:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001eac0:	eef0 6a62 	vmov.f32	s13, s5
9001eac4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001eac8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001eacc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ead0:	ee16 aa90 	vmov	sl, s13
9001ead4:	eef0 6a43 	vmov.f32	s13, s6
9001ead8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001eadc:	ee16 5a90 	vmov	r5, s13
9001eae0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001eae4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001eae8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001eaec:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001eaf0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001eaf4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001eaf8:	ee12 2a90 	vmov	r2, s5
9001eafc:	eef0 2a47 	vmov.f32	s5, s14
9001eb00:	fb92 f3f3 	sdiv	r3, r2, r3
9001eb04:	ee13 2a10 	vmov	r2, s6
9001eb08:	9325      	str	r3, [sp, #148]	@ 0x94
9001eb0a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9001eb0c:	eeb0 3a67 	vmov.f32	s6, s15
9001eb10:	fb92 f3f3 	sdiv	r3, r2, r3
9001eb14:	9326      	str	r3, [sp, #152]	@ 0x98
9001eb16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001eb18:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9001eb1a:	3b01      	subs	r3, #1
9001eb1c:	930c      	str	r3, [sp, #48]	@ 0x30
9001eb1e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9001eb20:	bf08      	it	eq
9001eb22:	4613      	moveq	r3, r2
9001eb24:	9309      	str	r3, [sp, #36]	@ 0x24
9001eb26:	e6a6      	b.n	9001e876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001eb28:	2900      	cmp	r1, #0
9001eb2a:	f43f af10 	beq.w	9001e94e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001eb2e:	f819 3003 	ldrb.w	r3, [r9, r3]
9001eb32:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001eb36:	930f      	str	r3, [sp, #60]	@ 0x3c
9001eb38:	e709      	b.n	9001e94e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001eb3a:	f112 0901 	adds.w	r9, r2, #1
9001eb3e:	f53f af7d 	bmi.w	9001ea3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001eb42:	454b      	cmp	r3, r9
9001eb44:	f6ff af7a 	blt.w	9001ea3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001eb48:	f11c 0901 	adds.w	r9, ip, #1
9001eb4c:	f53f af76 	bmi.w	9001ea3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001eb50:	45ce      	cmp	lr, r9
9001eb52:	f6ff af73 	blt.w	9001ea3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001eb56:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9001eb58:	b21b      	sxth	r3, r3
9001eb5a:	9202      	str	r2, [sp, #8]
9001eb5c:	fa0f f28e 	sxth.w	r2, lr
9001eb60:	9300      	str	r3, [sp, #0]
9001eb62:	4633      	mov	r3, r6
9001eb64:	9201      	str	r2, [sp, #4]
9001eb66:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001eb68:	e9cd 1405 	strd	r1, r4, [sp, #20]
9001eb6c:	e9cd c003 	strd	ip, r0, [sp, #12]
9001eb70:	4639      	mov	r1, r7
9001eb72:	9816      	ldr	r0, [sp, #88]	@ 0x58
9001eb74:	f7ff fd8e 	bl	9001e694 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9001eb78:	e760      	b.n	9001ea3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001eb7a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
9001eb7c:	ea4f 422a 	mov.w	r2, sl, asr #16
9001eb80:	1429      	asrs	r1, r5, #16
9001eb82:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9001eb84:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001eb88:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9001eb8c:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001eb90:	fb03 2101 	mla	r1, r3, r1, r2
9001eb94:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001eb96:	440a      	add	r2, r1
9001eb98:	5c61      	ldrb	r1, [r4, r1]
9001eb9a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9001eb9e:	f1bc 0f00 	cmp.w	ip, #0
9001eba2:	f000 808c 	beq.w	9001ecbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9001eba6:	7857      	ldrb	r7, [r2, #1]
9001eba8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9001ebac:	9413      	str	r4, [sp, #76]	@ 0x4c
9001ebae:	b140      	cbz	r0, 9001ebc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001ebb0:	18d7      	adds	r7, r2, r3
9001ebb2:	5cd3      	ldrb	r3, [r2, r3]
9001ebb4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ebb8:	9310      	str	r3, [sp, #64]	@ 0x40
9001ebba:	787b      	ldrb	r3, [r7, #1]
9001ebbc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ebc0:	9314      	str	r3, [sp, #80]	@ 0x50
9001ebc2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9001ebc4:	fb1c f200 	smulbb	r2, ip, r0
9001ebc8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001ebca:	f10e 3eff 	add.w	lr, lr, #4294967295
9001ebce:	041f      	lsls	r7, r3, #16
9001ebd0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001ebd4:	10d2      	asrs	r2, r2, #3
9001ebd6:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
9001ebda:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
9001ebde:	431f      	orrs	r7, r3
9001ebe0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9001ebe4:	9317      	str	r3, [sp, #92]	@ 0x5c
9001ebe6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9001ebe8:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9001ebea:	041b      	lsls	r3, r3, #16
9001ebec:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001ebf0:	ea43 030b 	orr.w	r3, r3, fp
9001ebf4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001ebf8:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9001ebfc:	4353      	muls	r3, r2
9001ebfe:	fb04 3707 	mla	r7, r4, r7, r3
9001ec02:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9001ec06:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9001ec08:	ea43 0b01 	orr.w	fp, r3, r1
9001ec0c:	f1c0 0110 	rsb	r1, r0, #16
9001ec10:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ec12:	eba1 0c0c 	sub.w	ip, r1, ip
9001ec16:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001ec1a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001ec1e:	fb0c 770b 	mla	r7, ip, fp, r7
9001ec22:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001ec26:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9001ec2a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001ec2e:	ea4c 0c0b 	orr.w	ip, ip, fp
9001ec32:	fb02 770c 	mla	r7, r2, ip, r7
9001ec36:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001ec38:	0d79      	lsrs	r1, r7, #21
9001ec3a:	8812      	ldrh	r2, [r2, #0]
9001ec3c:	097f      	lsrs	r7, r7, #5
9001ec3e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001ec42:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9001ec46:	430f      	orrs	r7, r1
9001ec48:	1211      	asrs	r1, r2, #8
9001ec4a:	b2bb      	uxth	r3, r7
9001ec4c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001ec50:	10d7      	asrs	r7, r2, #3
9001ec52:	fb11 f104 	smulbb	r1, r1, r4
9001ec56:	1218      	asrs	r0, r3, #8
9001ec58:	00d2      	lsls	r2, r2, #3
9001ec5a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ec5e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001ec62:	fb17 f704 	smulbb	r7, r7, r4
9001ec66:	b2d2      	uxtb	r2, r2
9001ec68:	fb00 1009 	mla	r0, r0, r9, r1
9001ec6c:	10d9      	asrs	r1, r3, #3
9001ec6e:	fb12 f204 	smulbb	r2, r2, r4
9001ec72:	00db      	lsls	r3, r3, #3
9001ec74:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001ec78:	b280      	uxth	r0, r0
9001ec7a:	b2db      	uxtb	r3, r3
9001ec7c:	fb01 7109 	mla	r1, r1, r9, r7
9001ec80:	fb03 2309 	mla	r3, r3, r9, r2
9001ec84:	1c42      	adds	r2, r0, #1
9001ec86:	b289      	uxth	r1, r1
9001ec88:	b29b      	uxth	r3, r3
9001ec8a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001ec8e:	1c4f      	adds	r7, r1, #1
9001ec90:	1c5a      	adds	r2, r3, #1
9001ec92:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9001ec96:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9001ec9a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001ec9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001eca0:	0949      	lsrs	r1, r1, #5
9001eca2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001eca6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001ecaa:	4310      	orrs	r0, r2
9001ecac:	4308      	orrs	r0, r1
9001ecae:	f823 0b02 	strh.w	r0, [r3], #2
9001ecb2:	930e      	str	r3, [sp, #56]	@ 0x38
9001ecb4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9001ecb6:	449a      	add	sl, r3
9001ecb8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001ecba:	441d      	add	r5, r3
9001ecbc:	e6ed      	b.n	9001ea9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
9001ecbe:	2800      	cmp	r0, #0
9001ecc0:	f43f af7f 	beq.w	9001ebc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001ecc4:	5cd3      	ldrb	r3, [r2, r3]
9001ecc6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001ecca:	9310      	str	r3, [sp, #64]	@ 0x40
9001eccc:	e779      	b.n	9001ebc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001ecce:	b019      	add	sp, #100	@ 0x64
9001ecd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ecd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9001ecd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ecd8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
9001ecdc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
9001ece0:	f1b8 0f00 	cmp.w	r8, #0
9001ece4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
9001ece8:	fb08 470e 	mla	r7, r8, lr, r4
9001ecec:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
9001ecf0:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
9001ecf4:	eb02 0907 	add.w	r9, r2, r7
9001ecf8:	8808      	ldrh	r0, [r1, #0]
9001ecfa:	db67      	blt.n	9001edcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001ecfc:	45c2      	cmp	sl, r8
9001ecfe:	dd65      	ble.n	9001edcc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001ed00:	2c00      	cmp	r4, #0
9001ed02:	db61      	blt.n	9001edc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001ed04:	45a6      	cmp	lr, r4
9001ed06:	dd5f      	ble.n	9001edc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001ed08:	5dd2      	ldrb	r2, [r2, r7]
9001ed0a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001ed0e:	1c62      	adds	r2, r4, #1
9001ed10:	d45f      	bmi.n	9001edd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ed12:	4596      	cmp	lr, r2
9001ed14:	dd5d      	ble.n	9001edd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ed16:	2d00      	cmp	r5, #0
9001ed18:	d05b      	beq.n	9001edd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001ed1a:	f899 2001 	ldrb.w	r2, [r9, #1]
9001ed1e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9001ed22:	f118 0801 	adds.w	r8, r8, #1
9001ed26:	d458      	bmi.n	9001edda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ed28:	45c2      	cmp	sl, r8
9001ed2a:	dd56      	ble.n	9001edda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ed2c:	2e00      	cmp	r6, #0
9001ed2e:	d054      	beq.n	9001edda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001ed30:	2c00      	cmp	r4, #0
9001ed32:	db50      	blt.n	9001edd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001ed34:	45a6      	cmp	lr, r4
9001ed36:	dd4e      	ble.n	9001edd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001ed38:	f819 200e 	ldrb.w	r2, [r9, lr]
9001ed3c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9001ed40:	3401      	adds	r4, #1
9001ed42:	d407      	bmi.n	9001ed54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ed44:	45a6      	cmp	lr, r4
9001ed46:	dd05      	ble.n	9001ed54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ed48:	b125      	cbz	r5, 9001ed54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001ed4a:	44ce      	add	lr, r9
9001ed4c:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001ed50:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001ed54:	fb15 f406 	smulbb	r4, r5, r6
9001ed58:	ea4f 430c 	mov.w	r3, ip, lsl #16
9001ed5c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9001ed60:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9001ed64:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001ed68:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9001ed6c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9001ed70:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9001ed74:	ea43 0c0c 	orr.w	ip, r3, ip
9001ed78:	f1c6 0310 	rsb	r3, r6, #16
9001ed7c:	ea4e 0707 	orr.w	r7, lr, r7
9001ed80:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9001ed84:	1b5b      	subs	r3, r3, r5
9001ed86:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9001ed8a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ed8e:	437d      	muls	r5, r7
9001ed90:	fb03 5c0c 	mla	ip, r3, ip, r5
9001ed94:	0403      	lsls	r3, r0, #16
9001ed96:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9001ed9a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001ed9e:	4318      	orrs	r0, r3
9001eda0:	0413      	lsls	r3, r2, #16
9001eda2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001eda6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001edaa:	fb04 c000 	mla	r0, r4, r0, ip
9001edae:	4313      	orrs	r3, r2
9001edb0:	fb06 0003 	mla	r0, r6, r3, r0
9001edb4:	0d43      	lsrs	r3, r0, #21
9001edb6:	0940      	lsrs	r0, r0, #5
9001edb8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001edbc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9001edc0:	4318      	orrs	r0, r3
9001edc2:	8008      	strh	r0, [r1, #0]
9001edc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001edc8:	4684      	mov	ip, r0
9001edca:	e7a0      	b.n	9001ed0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
9001edcc:	4607      	mov	r7, r0
9001edce:	4684      	mov	ip, r0
9001edd0:	e7a7      	b.n	9001ed22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001edd2:	4607      	mov	r7, r0
9001edd4:	e7a5      	b.n	9001ed22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001edd6:	4602      	mov	r2, r0
9001edd8:	e7b2      	b.n	9001ed40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9001edda:	4602      	mov	r2, r0
9001eddc:	e7ba      	b.n	9001ed54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

9001edde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001edde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ede2:	b093      	sub	sp, #76	@ 0x4c
9001ede4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ede8:	920f      	str	r2, [sp, #60]	@ 0x3c
9001edea:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9001edec:	9010      	str	r0, [sp, #64]	@ 0x40
9001edee:	9108      	str	r1, [sp, #32]
9001edf0:	6850      	ldr	r0, [r2, #4]
9001edf2:	9306      	str	r3, [sp, #24]
9001edf4:	6812      	ldr	r2, [r2, #0]
9001edf6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9001edfa:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
9001edfe:	fb00 1303 	mla	r3, r0, r3, r1
9001ee02:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9001ee06:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001ee08:	681b      	ldr	r3, [r3, #0]
9001ee0a:	9307      	str	r3, [sp, #28]
9001ee0c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001ee0e:	685f      	ldr	r7, [r3, #4]
9001ee10:	3704      	adds	r7, #4
9001ee12:	9b08      	ldr	r3, [sp, #32]
9001ee14:	2b00      	cmp	r3, #0
9001ee16:	dc03      	bgt.n	9001ee20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9001ee18:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001ee1a:	2b00      	cmp	r3, #0
9001ee1c:	f340 81b2 	ble.w	9001f184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001ee20:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001ee22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001ee26:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001ee2a:	1e48      	subs	r0, r1, #1
9001ee2c:	f102 3cff 	add.w	ip, r2, #4294967295
9001ee30:	9b06      	ldr	r3, [sp, #24]
9001ee32:	2b00      	cmp	r3, #0
9001ee34:	f340 80a9 	ble.w	9001ef8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001ee38:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001ee3c:	ea4f 4326 	mov.w	r3, r6, asr #16
9001ee40:	d406      	bmi.n	9001ee50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ee42:	4586      	cmp	lr, r0
9001ee44:	da04      	bge.n	9001ee50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ee46:	2b00      	cmp	r3, #0
9001ee48:	db02      	blt.n	9001ee50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ee4a:	4563      	cmp	r3, ip
9001ee4c:	f2c0 809e 	blt.w	9001ef8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9001ee50:	f11e 0e01 	adds.w	lr, lr, #1
9001ee54:	f100 808f 	bmi.w	9001ef76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ee58:	4571      	cmp	r1, lr
9001ee5a:	f2c0 808c 	blt.w	9001ef76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ee5e:	3301      	adds	r3, #1
9001ee60:	f100 8089 	bmi.w	9001ef76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ee64:	429a      	cmp	r2, r3
9001ee66:	f2c0 8086 	blt.w	9001ef76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ee6a:	f8dd b018 	ldr.w	fp, [sp, #24]
9001ee6e:	46c8      	mov	r8, r9
9001ee70:	f1bb 0f00 	cmp.w	fp, #0
9001ee74:	f340 80a6 	ble.w	9001efc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001ee78:	9a24      	ldr	r2, [sp, #144]	@ 0x90
9001ee7a:	ea4f 4c26 	mov.w	ip, r6, asr #16
9001ee7e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001ee80:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001ee84:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001ee88:	1422      	asrs	r2, r4, #16
9001ee8a:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001ee8e:	689b      	ldr	r3, [r3, #8]
9001ee90:	f100 80e3 	bmi.w	9001f05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ee94:	f103 3aff 	add.w	sl, r3, #4294967295
9001ee98:	4552      	cmp	r2, sl
9001ee9a:	f280 80de 	bge.w	9001f05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ee9e:	f1bc 0f00 	cmp.w	ip, #0
9001eea2:	f2c0 80da 	blt.w	9001f05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001eea6:	f10e 3aff 	add.w	sl, lr, #4294967295
9001eeaa:	45d4      	cmp	ip, sl
9001eeac:	f280 80d5 	bge.w	9001f05a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001eeb0:	b21b      	sxth	r3, r3
9001eeb2:	9d07      	ldr	r5, [sp, #28]
9001eeb4:	fb0c 2203 	mla	r2, ip, r3, r2
9001eeb8:	eb05 0a02 	add.w	sl, r5, r2
9001eebc:	5caa      	ldrb	r2, [r5, r2]
9001eebe:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9001eec2:	2800      	cmp	r0, #0
9001eec4:	f000 80c0 	beq.w	9001f048 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9001eec8:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001eecc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
9001eed0:	920b      	str	r2, [sp, #44]	@ 0x2c
9001eed2:	b151      	cbz	r1, 9001eeea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001eed4:	eb0a 0203 	add.w	r2, sl, r3
9001eed8:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001eedc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001eee0:	9309      	str	r3, [sp, #36]	@ 0x24
9001eee2:	7853      	ldrb	r3, [r2, #1]
9001eee4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001eee8:	930c      	str	r3, [sp, #48]	@ 0x30
9001eeea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001eeec:	fb10 f201 	smulbb	r2, r0, r1
9001eef0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9001eef2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001eef6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001eefa:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9001eefe:	10d2      	asrs	r2, r2, #3
9001ef00:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001ef04:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9001ef08:	ea4c 0c03 	orr.w	ip, ip, r3
9001ef0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001ef0e:	041b      	lsls	r3, r3, #16
9001ef10:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001ef14:	432b      	orrs	r3, r5
9001ef16:	4353      	muls	r3, r2
9001ef18:	fb0a 330c 	mla	r3, sl, ip, r3
9001ef1c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001ef20:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9001ef24:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001ef28:	ea4c 0e0e 	orr.w	lr, ip, lr
9001ef2c:	f1c1 0c10 	rsb	ip, r1, #16
9001ef30:	ebac 0c00 	sub.w	ip, ip, r0
9001ef34:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001ef38:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001ef3c:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001ef40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001ef42:	0418      	lsls	r0, r3, #16
9001ef44:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001ef48:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9001ef4c:	4318      	orrs	r0, r3
9001ef4e:	fb02 c200 	mla	r2, r2, r0, ip
9001ef52:	0d53      	lsrs	r3, r2, #21
9001ef54:	0952      	lsrs	r2, r2, #5
9001ef56:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001ef5a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9001ef5e:	431a      	orrs	r2, r3
9001ef60:	f8a8 2000 	strh.w	r2, [r8]
9001ef64:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001ef66:	f108 0802 	add.w	r8, r8, #2
9001ef6a:	f10b 3bff 	add.w	fp, fp, #4294967295
9001ef6e:	441c      	add	r4, r3
9001ef70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001ef72:	441e      	add	r6, r3
9001ef74:	e77c      	b.n	9001ee70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ef76:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001ef78:	f109 0902 	add.w	r9, r9, #2
9001ef7c:	441c      	add	r4, r3
9001ef7e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001ef80:	441e      	add	r6, r3
9001ef82:	9b06      	ldr	r3, [sp, #24]
9001ef84:	3b01      	subs	r3, #1
9001ef86:	9306      	str	r3, [sp, #24]
9001ef88:	e752      	b.n	9001ee30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ef8a:	d020      	beq.n	9001efce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ef8c:	9b06      	ldr	r3, [sp, #24]
9001ef8e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9001ef90:	3b01      	subs	r3, #1
9001ef92:	fb00 4003 	mla	r0, r0, r3, r4
9001ef96:	1400      	asrs	r0, r0, #16
9001ef98:	f53f af67 	bmi.w	9001ee6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ef9c:	3901      	subs	r1, #1
9001ef9e:	4288      	cmp	r0, r1
9001efa0:	f6bf af63 	bge.w	9001ee6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001efa4:	9920      	ldr	r1, [sp, #128]	@ 0x80
9001efa6:	fb01 6303 	mla	r3, r1, r3, r6
9001efaa:	141b      	asrs	r3, r3, #16
9001efac:	f53f af5d 	bmi.w	9001ee6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001efb0:	3a01      	subs	r2, #1
9001efb2:	4293      	cmp	r3, r2
9001efb4:	f6bf af59 	bge.w	9001ee6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001efb8:	f8dd 8018 	ldr.w	r8, [sp, #24]
9001efbc:	46ca      	mov	sl, r9
9001efbe:	f1b8 0f00 	cmp.w	r8, #0
9001efc2:	dc67      	bgt.n	9001f094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001efc4:	9b06      	ldr	r3, [sp, #24]
9001efc6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001efca:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9001efce:	9b08      	ldr	r3, [sp, #32]
9001efd0:	2b00      	cmp	r3, #0
9001efd2:	f340 80d7 	ble.w	9001f184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001efd6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001efda:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001efdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001efe0:	eeb0 6a62 	vmov.f32	s12, s5
9001efe4:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001efe8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001efec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eff0:	ee16 4a10 	vmov	r4, s12
9001eff4:	eeb0 6a43 	vmov.f32	s12, s6
9001eff8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001effc:	ee16 6a10 	vmov	r6, s12
9001f000:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f004:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f008:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f00c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f010:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f014:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f018:	ee12 2a90 	vmov	r2, s5
9001f01c:	eef0 2a47 	vmov.f32	s5, s14
9001f020:	fb92 f3f3 	sdiv	r3, r2, r3
9001f024:	ee13 2a10 	vmov	r2, s6
9001f028:	931f      	str	r3, [sp, #124]	@ 0x7c
9001f02a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001f02c:	eeb0 3a67 	vmov.f32	s6, s15
9001f030:	fb92 f3f3 	sdiv	r3, r2, r3
9001f034:	9320      	str	r3, [sp, #128]	@ 0x80
9001f036:	9b08      	ldr	r3, [sp, #32]
9001f038:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001f03a:	3b01      	subs	r3, #1
9001f03c:	9308      	str	r3, [sp, #32]
9001f03e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001f040:	bf08      	it	eq
9001f042:	4613      	moveq	r3, r2
9001f044:	9306      	str	r3, [sp, #24]
9001f046:	e6e4      	b.n	9001ee12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9001f048:	2900      	cmp	r1, #0
9001f04a:	f43f af4e 	beq.w	9001eeea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001f04e:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001f052:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001f056:	9309      	str	r3, [sp, #36]	@ 0x24
9001f058:	e747      	b.n	9001eeea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001f05a:	f112 0a01 	adds.w	sl, r2, #1
9001f05e:	d481      	bmi.n	9001ef64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f060:	4553      	cmp	r3, sl
9001f062:	f6ff af7f 	blt.w	9001ef64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f066:	f11c 0a01 	adds.w	sl, ip, #1
9001f06a:	f53f af7b 	bmi.w	9001ef64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f06e:	45d6      	cmp	lr, sl
9001f070:	f6ff af78 	blt.w	9001ef64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f074:	b21b      	sxth	r3, r3
9001f076:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9001f07a:	fa0f f28e 	sxth.w	r2, lr
9001f07e:	9300      	str	r3, [sp, #0]
9001f080:	463b      	mov	r3, r7
9001f082:	9201      	str	r2, [sp, #4]
9001f084:	9a07      	ldr	r2, [sp, #28]
9001f086:	e9cd 0104 	strd	r0, r1, [sp, #16]
9001f08a:	4641      	mov	r1, r8
9001f08c:	9810      	ldr	r0, [sp, #64]	@ 0x40
9001f08e:	f7ff fe21 	bl	9001ecd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9001f092:	e767      	b.n	9001ef64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f094:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9001f096:	1422      	asrs	r2, r4, #16
9001f098:	1431      	asrs	r1, r6, #16
9001f09a:	9d07      	ldr	r5, [sp, #28]
9001f09c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001f0a0:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9001f0a4:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001f0a8:	fb03 2101 	mla	r1, r3, r1, r2
9001f0ac:	9a07      	ldr	r2, [sp, #28]
9001f0ae:	440a      	add	r2, r1
9001f0b0:	5c69      	ldrb	r1, [r5, r1]
9001f0b2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9001f0b6:	f1be 0f00 	cmp.w	lr, #0
9001f0ba:	d05c      	beq.n	9001f176 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
9001f0bc:	f892 c001 	ldrb.w	ip, [r2, #1]
9001f0c0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9001f0c4:	950d      	str	r5, [sp, #52]	@ 0x34
9001f0c6:	b150      	cbz	r0, 9001f0de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001f0c8:	eb02 0c03 	add.w	ip, r2, r3
9001f0cc:	5cd3      	ldrb	r3, [r2, r3]
9001f0ce:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001f0d2:	930a      	str	r3, [sp, #40]	@ 0x28
9001f0d4:	f89c 3001 	ldrb.w	r3, [ip, #1]
9001f0d8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001f0dc:	930e      	str	r3, [sp, #56]	@ 0x38
9001f0de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f0e0:	fb1e f200 	smulbb	r2, lr, r0
9001f0e4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9001f0e6:	f108 38ff 	add.w	r8, r8, #4294967295
9001f0ea:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001f0ee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9001f0f2:	10d2      	asrs	r2, r2, #3
9001f0f4:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
9001f0f8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9001f0fc:	ea4c 0c03 	orr.w	ip, ip, r3
9001f100:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9001f104:	9311      	str	r3, [sp, #68]	@ 0x44
9001f106:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f108:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001f10a:	041b      	lsls	r3, r3, #16
9001f10c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9001f110:	ea43 030b 	orr.w	r3, r3, fp
9001f114:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001f118:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9001f11c:	4353      	muls	r3, r2
9001f11e:	fb05 3c0c 	mla	ip, r5, ip, r3
9001f122:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9001f126:	ea43 0b01 	orr.w	fp, r3, r1
9001f12a:	f1c0 0110 	rsb	r1, r0, #16
9001f12e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f130:	eba1 0e0e 	sub.w	lr, r1, lr
9001f134:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9001f138:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001f13c:	fb0e cc0b 	mla	ip, lr, fp, ip
9001f140:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9001f144:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
9001f148:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9001f14c:	ea4b 0e0e 	orr.w	lr, fp, lr
9001f150:	fb02 cc0e 	mla	ip, r2, lr, ip
9001f154:	ea4f 535c 	mov.w	r3, ip, lsr #21
9001f158:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001f15c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f160:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9001f164:	ea43 0c0c 	orr.w	ip, r3, ip
9001f168:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001f16a:	441c      	add	r4, r3
9001f16c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f16e:	f82a cb02 	strh.w	ip, [sl], #2
9001f172:	441e      	add	r6, r3
9001f174:	e723      	b.n	9001efbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001f176:	2800      	cmp	r0, #0
9001f178:	d0b1      	beq.n	9001f0de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001f17a:	5cd3      	ldrb	r3, [r2, r3]
9001f17c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001f180:	930a      	str	r3, [sp, #40]	@ 0x28
9001f182:	e7ac      	b.n	9001f0de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001f184:	b013      	add	sp, #76	@ 0x4c
9001f186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f18a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9001f18a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f18e:	880d      	ldrh	r5, [r1, #0]
9001f190:	b087      	sub	sp, #28
9001f192:	10ef      	asrs	r7, r5, #3
9001f194:	9103      	str	r1, [sp, #12]
9001f196:	ea4f 2a25 	mov.w	sl, r5, asr #8
9001f19a:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
9001f19e:	00ed      	lsls	r5, r5, #3
9001f1a0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001f1a4:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001f1a8:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001f1ac:	b2ed      	uxtb	r5, r5
9001f1ae:	9701      	str	r7, [sp, #4]
9001f1b0:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
9001f1b4:	9502      	str	r5, [sp, #8]
9001f1b6:	9d01      	ldr	r5, [sp, #4]
9001f1b8:	9902      	ldr	r1, [sp, #8]
9001f1ba:	022d      	lsls	r5, r5, #8
9001f1bc:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
9001f1c0:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
9001f1c4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9001f1c8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
9001f1cc:	430d      	orrs	r5, r1
9001f1ce:	fb06 0709 	mla	r7, r6, r9, r0
9001f1d2:	2e00      	cmp	r6, #0
9001f1d4:	9505      	str	r5, [sp, #20]
9001f1d6:	eb02 0c07 	add.w	ip, r2, r7
9001f1da:	f2c0 80b6 	blt.w	9001f34a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001f1de:	45b3      	cmp	fp, r6
9001f1e0:	f340 80b3 	ble.w	9001f34a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001f1e4:	2800      	cmp	r0, #0
9001f1e6:	f2c0 80ae 	blt.w	9001f346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001f1ea:	4581      	cmp	r9, r0
9001f1ec:	f340 80ab 	ble.w	9001f346 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001f1f0:	5dd7      	ldrb	r7, [r2, r7]
9001f1f2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f1f6:	441f      	add	r7, r3
9001f1f8:	1c42      	adds	r2, r0, #1
9001f1fa:	f100 80a9 	bmi.w	9001f350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001f1fe:	4591      	cmp	r9, r2
9001f200:	f340 80a6 	ble.w	9001f350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001f204:	2c00      	cmp	r4, #0
9001f206:	f000 80a3 	beq.w	9001f350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001f20a:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001f20e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f212:	441d      	add	r5, r3
9001f214:	3601      	adds	r6, #1
9001f216:	f100 809f 	bmi.w	9001f358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f21a:	45b3      	cmp	fp, r6
9001f21c:	f340 809c 	ble.w	9001f358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f220:	f1be 0f00 	cmp.w	lr, #0
9001f224:	f000 8098 	beq.w	9001f358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f228:	2800      	cmp	r0, #0
9001f22a:	f2c0 8093 	blt.w	9001f354 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001f22e:	4581      	cmp	r9, r0
9001f230:	f340 8090 	ble.w	9001f354 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001f234:	f81c 6009 	ldrb.w	r6, [ip, r9]
9001f238:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f23c:	441e      	add	r6, r3
9001f23e:	3001      	adds	r0, #1
9001f240:	f100 808d 	bmi.w	9001f35e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f244:	4581      	cmp	r9, r0
9001f246:	f340 808a 	ble.w	9001f35e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f24a:	2c00      	cmp	r4, #0
9001f24c:	f000 8087 	beq.w	9001f35e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f250:	44e1      	add	r9, ip
9001f252:	f899 2001 	ldrb.w	r2, [r9, #1]
9001f256:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f25a:	4413      	add	r3, r2
9001f25c:	b2a4      	uxth	r4, r4
9001f25e:	f897 c002 	ldrb.w	ip, [r7, #2]
9001f262:	fa1f fe8e 	uxth.w	lr, lr
9001f266:	9901      	ldr	r1, [sp, #4]
9001f268:	fb04 fb0e 	mul.w	fp, r4, lr
9001f26c:	0124      	lsls	r4, r4, #4
9001f26e:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9001f272:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
9001f276:	eba4 040b 	sub.w	r4, r4, fp
9001f27a:	fa1f f08e 	uxth.w	r0, lr
9001f27e:	b2a2      	uxth	r2, r4
9001f280:	78ac      	ldrb	r4, [r5, #2]
9001f282:	eba9 0900 	sub.w	r9, r9, r0
9001f286:	fa1f fe88 	uxth.w	lr, r8
9001f28a:	4354      	muls	r4, r2
9001f28c:	ea6f 0808 	mvn.w	r8, r8
9001f290:	fa1f f989 	uxth.w	r9, r9
9001f294:	fa5f f888 	uxtb.w	r8, r8
9001f298:	fb09 440c 	mla	r4, r9, ip, r4
9001f29c:	f896 c002 	ldrb.w	ip, [r6, #2]
9001f2a0:	fb1a fa08 	smulbb	sl, sl, r8
9001f2a4:	fb00 440c 	mla	r4, r0, ip, r4
9001f2a8:	f893 c002 	ldrb.w	ip, [r3, #2]
9001f2ac:	fb0b 4c0c 	mla	ip, fp, ip, r4
9001f2b0:	787c      	ldrb	r4, [r7, #1]
9001f2b2:	783f      	ldrb	r7, [r7, #0]
9001f2b4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001f2b8:	fb0c ac0e 	mla	ip, ip, lr, sl
9001f2bc:	f895 a001 	ldrb.w	sl, [r5, #1]
9001f2c0:	782d      	ldrb	r5, [r5, #0]
9001f2c2:	fb02 fa0a 	mul.w	sl, r2, sl
9001f2c6:	fa1f fc8c 	uxth.w	ip, ip
9001f2ca:	436a      	muls	r2, r5
9001f2cc:	7835      	ldrb	r5, [r6, #0]
9001f2ce:	fb09 aa04 	mla	sl, r9, r4, sl
9001f2d2:	7874      	ldrb	r4, [r6, #1]
9001f2d4:	fb09 2207 	mla	r2, r9, r7, r2
9001f2d8:	fb00 aa04 	mla	sl, r0, r4, sl
9001f2dc:	785c      	ldrb	r4, [r3, #1]
9001f2de:	fb00 2005 	mla	r0, r0, r5, r2
9001f2e2:	781b      	ldrb	r3, [r3, #0]
9001f2e4:	fb0b a404 	mla	r4, fp, r4, sl
9001f2e8:	fb11 fa08 	smulbb	sl, r1, r8
9001f2ec:	fb0b 0b03 	mla	fp, fp, r3, r0
9001f2f0:	9b02      	ldr	r3, [sp, #8]
9001f2f2:	f3c4 2407 	ubfx	r4, r4, #8, #8
9001f2f6:	fb13 f808 	smulbb	r8, r3, r8
9001f2fa:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9001f2fe:	fb04 a40e 	mla	r4, r4, lr, sl
9001f302:	f10c 0301 	add.w	r3, ip, #1
9001f306:	fb0b 8e0e 	mla	lr, fp, lr, r8
9001f30a:	b2a4      	uxth	r4, r4
9001f30c:	fa1f fe8e 	uxth.w	lr, lr
9001f310:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001f314:	f104 0a01 	add.w	sl, r4, #1
9001f318:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
9001f31c:	f10e 0c01 	add.w	ip, lr, #1
9001f320:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001f324:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001f328:	0964      	lsrs	r4, r4, #5
9001f32a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f32e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001f332:	ea4c 0c03 	orr.w	ip, ip, r3
9001f336:	9b03      	ldr	r3, [sp, #12]
9001f338:	ea4c 0c04 	orr.w	ip, ip, r4
9001f33c:	f8a3 c000 	strh.w	ip, [r3]
9001f340:	b007      	add	sp, #28
9001f342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f346:	af05      	add	r7, sp, #20
9001f348:	e756      	b.n	9001f1f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9001f34a:	ad05      	add	r5, sp, #20
9001f34c:	462f      	mov	r7, r5
9001f34e:	e761      	b.n	9001f214 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001f350:	ad05      	add	r5, sp, #20
9001f352:	e75f      	b.n	9001f214 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001f354:	ae05      	add	r6, sp, #20
9001f356:	e772      	b.n	9001f23e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
9001f358:	ab05      	add	r3, sp, #20
9001f35a:	461e      	mov	r6, r3
9001f35c:	e77e      	b.n	9001f25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
9001f35e:	ab05      	add	r3, sp, #20
9001f360:	e77c      	b.n	9001f25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9001f362 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f362:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f366:	b095      	sub	sp, #84	@ 0x54
9001f368:	9212      	str	r2, [sp, #72]	@ 0x48
9001f36a:	9309      	str	r3, [sp, #36]	@ 0x24
9001f36c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
9001f36e:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
9001f372:	9013      	str	r0, [sp, #76]	@ 0x4c
9001f374:	930f      	str	r3, [sp, #60]	@ 0x3c
9001f376:	6850      	ldr	r0, [r2, #4]
9001f378:	910e      	str	r1, [sp, #56]	@ 0x38
9001f37a:	6812      	ldr	r2, [r2, #0]
9001f37c:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
9001f380:	fb00 1303 	mla	r3, r0, r3, r1
9001f384:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f388:	930a      	str	r3, [sp, #40]	@ 0x28
9001f38a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f38c:	681b      	ldr	r3, [r3, #0]
9001f38e:	930d      	str	r3, [sp, #52]	@ 0x34
9001f390:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f392:	685c      	ldr	r4, [r3, #4]
9001f394:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001f396:	3404      	adds	r4, #4
9001f398:	43db      	mvns	r3, r3
9001f39a:	b2db      	uxtb	r3, r3
9001f39c:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f39e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f3a0:	2b00      	cmp	r3, #0
9001f3a2:	dc03      	bgt.n	9001f3ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001f3a4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9001f3a6:	2b00      	cmp	r3, #0
9001f3a8:	f340 8255 	ble.w	9001f856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f3ac:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001f3ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f3b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f3b6:	1e48      	subs	r0, r1, #1
9001f3b8:	1e55      	subs	r5, r2, #1
9001f3ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f3bc:	2b00      	cmp	r3, #0
9001f3be:	f340 80f9 	ble.w	9001f5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001f3c2:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
9001f3c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f3c6:	1436      	asrs	r6, r6, #16
9001f3c8:	ea4f 4323 	mov.w	r3, r3, asr #16
9001f3cc:	d406      	bmi.n	9001f3dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f3ce:	4286      	cmp	r6, r0
9001f3d0:	da04      	bge.n	9001f3dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f3d2:	2b00      	cmp	r3, #0
9001f3d4:	db02      	blt.n	9001f3dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f3d6:	42ab      	cmp	r3, r5
9001f3d8:	f2c0 80ed 	blt.w	9001f5b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
9001f3dc:	3601      	adds	r6, #1
9001f3de:	f100 80da 	bmi.w	9001f596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f3e2:	42b1      	cmp	r1, r6
9001f3e4:	f2c0 80d7 	blt.w	9001f596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f3e8:	3301      	adds	r3, #1
9001f3ea:	f100 80d4 	bmi.w	9001f596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f3ee:	429a      	cmp	r2, r3
9001f3f0:	f2c0 80d1 	blt.w	9001f596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f3f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f3f6:	9311      	str	r3, [sp, #68]	@ 0x44
9001f3f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f3fa:	930c      	str	r3, [sp, #48]	@ 0x30
9001f3fc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001f3fe:	2b00      	cmp	r3, #0
9001f400:	f340 80fa 	ble.w	9001f5f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001f404:	9826      	ldr	r0, [sp, #152]	@ 0x98
9001f406:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f408:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9001f40a:	68c6      	ldr	r6, [r0, #12]
9001f40c:	141d      	asrs	r5, r3, #16
9001f40e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9001f410:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f414:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001f416:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9001f418:	1400      	asrs	r0, r0, #16
9001f41a:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f41e:	6892      	ldr	r2, [r2, #8]
9001f420:	f100 813e 	bmi.w	9001f6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f424:	1e57      	subs	r7, r2, #1
9001f426:	42b8      	cmp	r0, r7
9001f428:	f280 813a 	bge.w	9001f6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f42c:	2d00      	cmp	r5, #0
9001f42e:	f2c0 8137 	blt.w	9001f6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f432:	1e77      	subs	r7, r6, #1
9001f434:	42bd      	cmp	r5, r7
9001f436:	f280 8133 	bge.w	9001f6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f43a:	b212      	sxth	r2, r2
9001f43c:	fb05 0002 	mla	r0, r5, r2, r0
9001f440:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9001f442:	f815 a000 	ldrb.w	sl, [r5, r0]
9001f446:	182e      	adds	r6, r5, r0
9001f448:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
9001f44c:	eb04 050a 	add.w	r5, r4, sl
9001f450:	2b00      	cmp	r3, #0
9001f452:	f000 8117 	beq.w	9001f684 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9001f456:	f896 c001 	ldrb.w	ip, [r6, #1]
9001f45a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001f45e:	44a4      	add	ip, r4
9001f460:	2900      	cmp	r1, #0
9001f462:	f000 8117 	beq.w	9001f694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9001f466:	18b0      	adds	r0, r6, r2
9001f468:	5cb2      	ldrb	r2, [r6, r2]
9001f46a:	7840      	ldrb	r0, [r0, #1]
9001f46c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f470:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f474:	4422      	add	r2, r4
9001f476:	4420      	add	r0, r4
9001f478:	b29b      	uxth	r3, r3
9001f47a:	f89c 7002 	ldrb.w	r7, [ip, #2]
9001f47e:	b289      	uxth	r1, r1
9001f480:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f484:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001f486:	fb03 f901 	mul.w	r9, r3, r1
9001f48a:	011b      	lsls	r3, r3, #4
9001f48c:	f8b6 e000 	ldrh.w	lr, [r6]
9001f490:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f494:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
9001f498:	eba3 0309 	sub.w	r3, r3, r9
9001f49c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
9001f4a0:	b289      	uxth	r1, r1
9001f4a2:	f814 a00a 	ldrb.w	sl, [r4, sl]
9001f4a6:	b29b      	uxth	r3, r3
9001f4a8:	eba8 0801 	sub.w	r8, r8, r1
9001f4ac:	435f      	muls	r7, r3
9001f4ae:	fa1f f888 	uxth.w	r8, r8
9001f4b2:	9310      	str	r3, [sp, #64]	@ 0x40
9001f4b4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f4b6:	fb08 770b 	mla	r7, r8, fp, r7
9001f4ba:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f4be:	fb01 770b 	mla	r7, r1, fp, r7
9001f4c2:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f4c6:	fb09 770b 	mla	r7, r9, fp, r7
9001f4ca:	ea4f 2b2e 	mov.w	fp, lr, asr #8
9001f4ce:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
9001f4d2:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f4d6:	fb1b fb03 	smulbb	fp, fp, r3
9001f4da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f4dc:	fb07 b706 	mla	r7, r7, r6, fp
9001f4e0:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f4e4:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001f4e8:	f89c c000 	ldrb.w	ip, [ip]
9001f4ec:	b2bf      	uxth	r7, r7
9001f4ee:	435d      	muls	r5, r3
9001f4f0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f4f2:	fb08 550b 	mla	r5, r8, fp, r5
9001f4f6:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f4fa:	fb01 550b 	mla	r5, r1, fp, r5
9001f4fe:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f502:	fb09 550b 	mla	r5, r9, fp, r5
9001f506:	ea4f 0bee 	mov.w	fp, lr, asr #3
9001f50a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f50e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001f512:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f516:	fa5f fe8e 	uxtb.w	lr, lr
9001f51a:	fb1b fb03 	smulbb	fp, fp, r3
9001f51e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f520:	fb03 f30c 	mul.w	r3, r3, ip
9001f524:	f892 c000 	ldrb.w	ip, [r2]
9001f528:	fb05 b506 	mla	r5, r5, r6, fp
9001f52c:	fb08 330a 	mla	r3, r8, sl, r3
9001f530:	b2ad      	uxth	r5, r5
9001f532:	fb01 330c 	mla	r3, r1, ip, r3
9001f536:	f890 c000 	ldrb.w	ip, [r0]
9001f53a:	f105 0b01 	add.w	fp, r5, #1
9001f53e:	fb09 3c0c 	mla	ip, r9, ip, r3
9001f542:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f544:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f548:	fb1e fe03 	smulbb	lr, lr, r3
9001f54c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001f550:	1c7b      	adds	r3, r7, #1
9001f552:	096d      	lsrs	r5, r5, #5
9001f554:	fb0c e606 	mla	r6, ip, r6, lr
9001f558:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9001f55c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f560:	b2b6      	uxth	r6, r6
9001f562:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
9001f566:	1c77      	adds	r7, r6, #1
9001f568:	eb07 2716 	add.w	r7, r7, r6, lsr #8
9001f56c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f570:	431f      	orrs	r7, r3
9001f572:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f574:	433d      	orrs	r5, r7
9001f576:	801d      	strh	r5, [r3, #0]
9001f578:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f57a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9001f57c:	3302      	adds	r3, #2
9001f57e:	930c      	str	r3, [sp, #48]	@ 0x30
9001f580:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001f582:	4413      	add	r3, r2
9001f584:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9001f586:	931f      	str	r3, [sp, #124]	@ 0x7c
9001f588:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f58a:	4413      	add	r3, r2
9001f58c:	9320      	str	r3, [sp, #128]	@ 0x80
9001f58e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001f590:	3b01      	subs	r3, #1
9001f592:	9311      	str	r3, [sp, #68]	@ 0x44
9001f594:	e732      	b.n	9001f3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001f596:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001f598:	9e21      	ldr	r6, [sp, #132]	@ 0x84
9001f59a:	4433      	add	r3, r6
9001f59c:	9e22      	ldr	r6, [sp, #136]	@ 0x88
9001f59e:	931f      	str	r3, [sp, #124]	@ 0x7c
9001f5a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f5a2:	4433      	add	r3, r6
9001f5a4:	9320      	str	r3, [sp, #128]	@ 0x80
9001f5a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f5a8:	3b01      	subs	r3, #1
9001f5aa:	9309      	str	r3, [sp, #36]	@ 0x24
9001f5ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f5ae:	3302      	adds	r3, #2
9001f5b0:	930a      	str	r3, [sp, #40]	@ 0x28
9001f5b2:	e702      	b.n	9001f3ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001f5b4:	d027      	beq.n	9001f606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9001f5b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f5b8:	9821      	ldr	r0, [sp, #132]	@ 0x84
9001f5ba:	3b01      	subs	r3, #1
9001f5bc:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
9001f5be:	fb00 5003 	mla	r0, r0, r3, r5
9001f5c2:	1400      	asrs	r0, r0, #16
9001f5c4:	f53f af16 	bmi.w	9001f3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f5c8:	3901      	subs	r1, #1
9001f5ca:	4288      	cmp	r0, r1
9001f5cc:	f6bf af12 	bge.w	9001f3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f5d0:	9922      	ldr	r1, [sp, #136]	@ 0x88
9001f5d2:	9820      	ldr	r0, [sp, #128]	@ 0x80
9001f5d4:	fb01 0303 	mla	r3, r1, r3, r0
9001f5d8:	141b      	asrs	r3, r3, #16
9001f5da:	f53f af0b 	bmi.w	9001f3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f5de:	3a01      	subs	r2, #1
9001f5e0:	4293      	cmp	r3, r2
9001f5e2:	f6bf af07 	bge.w	9001f3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f5e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f5e8:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
9001f5ec:	9311      	str	r3, [sp, #68]	@ 0x44
9001f5ee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f5f0:	930c      	str	r3, [sp, #48]	@ 0x30
9001f5f2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001f5f4:	2b00      	cmp	r3, #0
9001f5f6:	dc70      	bgt.n	9001f6da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9001f5f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f5fa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001f5fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f600:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f604:	930a      	str	r3, [sp, #40]	@ 0x28
9001f606:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f608:	2b00      	cmp	r3, #0
9001f60a:	f340 8124 	ble.w	9001f856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f60e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001f612:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9001f614:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f618:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f61c:	eef0 6a62 	vmov.f32	s13, s5
9001f620:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f624:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f628:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f62c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
9001f630:	eef0 6a43 	vmov.f32	s13, s6
9001f634:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f638:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
9001f63c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f640:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f644:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f648:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f64c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f650:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f654:	ee12 2a90 	vmov	r2, s5
9001f658:	eef0 2a47 	vmov.f32	s5, s14
9001f65c:	fb92 f3f3 	sdiv	r3, r2, r3
9001f660:	ee13 2a10 	vmov	r2, s6
9001f664:	9321      	str	r3, [sp, #132]	@ 0x84
9001f666:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9001f668:	eeb0 3a67 	vmov.f32	s6, s15
9001f66c:	fb92 f3f3 	sdiv	r3, r2, r3
9001f670:	9322      	str	r3, [sp, #136]	@ 0x88
9001f672:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001f674:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001f676:	3b01      	subs	r3, #1
9001f678:	930e      	str	r3, [sp, #56]	@ 0x38
9001f67a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9001f67c:	bf08      	it	eq
9001f67e:	4613      	moveq	r3, r2
9001f680:	9309      	str	r3, [sp, #36]	@ 0x24
9001f682:	e68c      	b.n	9001f39e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001f684:	b149      	cbz	r1, 9001f69a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
9001f686:	5cb2      	ldrb	r2, [r6, r2]
9001f688:	4628      	mov	r0, r5
9001f68a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f68e:	4422      	add	r2, r4
9001f690:	46ac      	mov	ip, r5
9001f692:	e6f1      	b.n	9001f478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f694:	4628      	mov	r0, r5
9001f696:	462a      	mov	r2, r5
9001f698:	e6ee      	b.n	9001f478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f69a:	4628      	mov	r0, r5
9001f69c:	462a      	mov	r2, r5
9001f69e:	e7f7      	b.n	9001f690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9001f6a0:	1c47      	adds	r7, r0, #1
9001f6a2:	f53f af69 	bmi.w	9001f578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f6a6:	42ba      	cmp	r2, r7
9001f6a8:	f6ff af66 	blt.w	9001f578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f6ac:	1c6f      	adds	r7, r5, #1
9001f6ae:	f53f af63 	bmi.w	9001f578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f6b2:	42be      	cmp	r6, r7
9001f6b4:	f6ff af60 	blt.w	9001f578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f6b8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001f6ba:	b236      	sxth	r6, r6
9001f6bc:	b212      	sxth	r2, r2
9001f6be:	9002      	str	r0, [sp, #8]
9001f6c0:	9601      	str	r6, [sp, #4]
9001f6c2:	9200      	str	r2, [sp, #0]
9001f6c4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001f6c6:	e9cd 1705 	strd	r1, r7, [sp, #20]
9001f6ca:	e9cd 5303 	strd	r5, r3, [sp, #12]
9001f6ce:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
9001f6d2:	4623      	mov	r3, r4
9001f6d4:	f7ff fd59 	bl	9001f18a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
9001f6d8:	e74e      	b.n	9001f578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f6da:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9001f6dc:	9820      	ldr	r0, [sp, #128]	@ 0x80
9001f6de:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f6e2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
9001f6e4:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9001f6e6:	1400      	asrs	r0, r0, #16
9001f6e8:	142d      	asrs	r5, r5, #16
9001f6ea:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001f6ec:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001f6f0:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f6f4:	fb02 5000 	mla	r0, r2, r0, r5
9001f6f8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9001f6fa:	f815 9000 	ldrb.w	r9, [r5, r0]
9001f6fe:	182e      	adds	r6, r5, r0
9001f700:	eb09 0949 	add.w	r9, r9, r9, lsl #1
9001f704:	eb04 0509 	add.w	r5, r4, r9
9001f708:	2b00      	cmp	r3, #0
9001f70a:	f000 8096 	beq.w	9001f83a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001f70e:	7877      	ldrb	r7, [r6, #1]
9001f710:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f714:	4427      	add	r7, r4
9001f716:	2900      	cmp	r1, #0
9001f718:	f000 8097 	beq.w	9001f84a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
9001f71c:	18b0      	adds	r0, r6, r2
9001f71e:	5cb2      	ldrb	r2, [r6, r2]
9001f720:	7840      	ldrb	r0, [r0, #1]
9001f722:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f726:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f72a:	4422      	add	r2, r4
9001f72c:	4420      	add	r0, r4
9001f72e:	b29b      	uxth	r3, r3
9001f730:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001f732:	b289      	uxth	r1, r1
9001f734:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f738:	f8b6 c000 	ldrh.w	ip, [r6]
9001f73c:	fb03 f801 	mul.w	r8, r3, r1
9001f740:	011b      	lsls	r3, r3, #4
9001f742:	78be      	ldrb	r6, [r7, #2]
9001f744:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9001f748:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9001f74c:	eba3 0308 	sub.w	r3, r3, r8
9001f750:	f814 9009 	ldrb.w	r9, [r4, r9]
9001f754:	b289      	uxth	r1, r1
9001f756:	b29b      	uxth	r3, r3
9001f758:	ebae 0e01 	sub.w	lr, lr, r1
9001f75c:	435e      	muls	r6, r3
9001f75e:	fa1f fe8e 	uxth.w	lr, lr
9001f762:	9310      	str	r3, [sp, #64]	@ 0x40
9001f764:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f766:	fb0e 660b 	mla	r6, lr, fp, r6
9001f76a:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f76e:	fb01 660b 	mla	r6, r1, fp, r6
9001f772:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f776:	fb08 660b 	mla	r6, r8, fp, r6
9001f77a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9001f77e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
9001f782:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001f786:	fb1b fb03 	smulbb	fp, fp, r3
9001f78a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f78c:	fb06 b60a 	mla	r6, r6, sl, fp
9001f790:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f794:	787d      	ldrb	r5, [r7, #1]
9001f796:	783f      	ldrb	r7, [r7, #0]
9001f798:	b2b6      	uxth	r6, r6
9001f79a:	435d      	muls	r5, r3
9001f79c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f79e:	fb0e 550b 	mla	r5, lr, fp, r5
9001f7a2:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f7a6:	fb01 550b 	mla	r5, r1, fp, r5
9001f7aa:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f7ae:	fb08 550b 	mla	r5, r8, fp, r5
9001f7b2:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001f7b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f7ba:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001f7be:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f7c2:	fa5f fc8c 	uxtb.w	ip, ip
9001f7c6:	fb1b fb03 	smulbb	fp, fp, r3
9001f7ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001f7cc:	437b      	muls	r3, r7
9001f7ce:	7817      	ldrb	r7, [r2, #0]
9001f7d0:	fb05 b50a 	mla	r5, r5, sl, fp
9001f7d4:	fb0e 3309 	mla	r3, lr, r9, r3
9001f7d8:	b2ad      	uxth	r5, r5
9001f7da:	fb01 3307 	mla	r3, r1, r7, r3
9001f7de:	7807      	ldrb	r7, [r0, #0]
9001f7e0:	f105 0b01 	add.w	fp, r5, #1
9001f7e4:	fb08 3707 	mla	r7, r8, r7, r3
9001f7e8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f7ea:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f7ee:	fb1c fc03 	smulbb	ip, ip, r3
9001f7f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f7f6:	1c73      	adds	r3, r6, #1
9001f7f8:	096d      	lsrs	r5, r5, #5
9001f7fa:	fb07 c70a 	mla	r7, r7, sl, ip
9001f7fe:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9001f802:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f806:	b2bf      	uxth	r7, r7
9001f808:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f80a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f80e:	1c7a      	adds	r2, r7, #1
9001f810:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9001f814:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f818:	4316      	orrs	r6, r2
9001f81a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
9001f81c:	432e      	orrs	r6, r5
9001f81e:	f823 6b02 	strh.w	r6, [r3], #2
9001f822:	930c      	str	r3, [sp, #48]	@ 0x30
9001f824:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9001f826:	4413      	add	r3, r2
9001f828:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9001f82a:	931f      	str	r3, [sp, #124]	@ 0x7c
9001f82c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f82e:	4413      	add	r3, r2
9001f830:	9320      	str	r3, [sp, #128]	@ 0x80
9001f832:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001f834:	3b01      	subs	r3, #1
9001f836:	9311      	str	r3, [sp, #68]	@ 0x44
9001f838:	e6db      	b.n	9001f5f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9001f83a:	b149      	cbz	r1, 9001f850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
9001f83c:	5cb2      	ldrb	r2, [r6, r2]
9001f83e:	4628      	mov	r0, r5
9001f840:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f844:	4422      	add	r2, r4
9001f846:	462f      	mov	r7, r5
9001f848:	e771      	b.n	9001f72e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f84a:	4628      	mov	r0, r5
9001f84c:	462a      	mov	r2, r5
9001f84e:	e76e      	b.n	9001f72e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f850:	4628      	mov	r0, r5
9001f852:	462a      	mov	r2, r5
9001f854:	e7f7      	b.n	9001f846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9001f856:	b015      	add	sp, #84	@ 0x54
9001f858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f85c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
9001f85c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f860:	880f      	ldrh	r7, [r1, #0]
9001f862:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
9001f866:	023c      	lsls	r4, r7, #8
9001f868:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001f86c:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
9001f870:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
9001f874:	017c      	lsls	r4, r7, #5
9001f876:	00ff      	lsls	r7, r7, #3
9001f878:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
9001f87c:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
9001f880:	b2ff      	uxtb	r7, r7
9001f882:	ea4b 0404 	orr.w	r4, fp, r4
9001f886:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
9001f88a:	4327      	orrs	r7, r4
9001f88c:	fb05 ca0e 	mla	sl, r5, lr, ip
9001f890:	2d00      	cmp	r5, #0
9001f892:	9701      	str	r7, [sp, #4]
9001f894:	eb02 080a 	add.w	r8, r2, sl
9001f898:	db7e      	blt.n	9001f998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f89a:	45a9      	cmp	r9, r5
9001f89c:	dd7c      	ble.n	9001f998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f89e:	f1bc 0f00 	cmp.w	ip, #0
9001f8a2:	db77      	blt.n	9001f994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f8a4:	45e6      	cmp	lr, ip
9001f8a6:	dd75      	ble.n	9001f994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f8a8:	f812 700a 	ldrb.w	r7, [r2, sl]
9001f8ac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f8b0:	441f      	add	r7, r3
9001f8b2:	f11c 0201 	adds.w	r2, ip, #1
9001f8b6:	d472      	bmi.n	9001f99e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f8b8:	4596      	cmp	lr, r2
9001f8ba:	dd70      	ble.n	9001f99e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f8bc:	2800      	cmp	r0, #0
9001f8be:	d06e      	beq.n	9001f99e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f8c0:	f898 4001 	ldrb.w	r4, [r8, #1]
9001f8c4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
9001f8c8:	441c      	add	r4, r3
9001f8ca:	3501      	adds	r5, #1
9001f8cc:	d46b      	bmi.n	9001f9a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f8ce:	45a9      	cmp	r9, r5
9001f8d0:	dd69      	ble.n	9001f9a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f8d2:	2e00      	cmp	r6, #0
9001f8d4:	d067      	beq.n	9001f9a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f8d6:	f1bc 0f00 	cmp.w	ip, #0
9001f8da:	db62      	blt.n	9001f9a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f8dc:	45e6      	cmp	lr, ip
9001f8de:	dd60      	ble.n	9001f9a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f8e0:	f818 500e 	ldrb.w	r5, [r8, lr]
9001f8e4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f8e8:	441d      	add	r5, r3
9001f8ea:	f11c 0201 	adds.w	r2, ip, #1
9001f8ee:	d45d      	bmi.n	9001f9ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f8f0:	4596      	cmp	lr, r2
9001f8f2:	dd5b      	ble.n	9001f9ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f8f4:	2800      	cmp	r0, #0
9001f8f6:	d059      	beq.n	9001f9ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f8f8:	44c6      	add	lr, r8
9001f8fa:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001f8fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f902:	4413      	add	r3, r2
9001f904:	b280      	uxth	r0, r0
9001f906:	f897 e002 	ldrb.w	lr, [r7, #2]
9001f90a:	b2b2      	uxth	r2, r6
9001f90c:	f897 9000 	ldrb.w	r9, [r7]
9001f910:	787f      	ldrb	r7, [r7, #1]
9001f912:	fb00 f602 	mul.w	r6, r0, r2
9001f916:	0100      	lsls	r0, r0, #4
9001f918:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
9001f91c:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
9001f920:	1b80      	subs	r0, r0, r6
9001f922:	fa1f fc82 	uxth.w	ip, r2
9001f926:	b282      	uxth	r2, r0
9001f928:	78a0      	ldrb	r0, [r4, #2]
9001f92a:	eba8 080c 	sub.w	r8, r8, ip
9001f92e:	4350      	muls	r0, r2
9001f930:	fa1f f888 	uxth.w	r8, r8
9001f934:	fb08 0e0e 	mla	lr, r8, lr, r0
9001f938:	78a8      	ldrb	r0, [r5, #2]
9001f93a:	fb0c e000 	mla	r0, ip, r0, lr
9001f93e:	f893 e002 	ldrb.w	lr, [r3, #2]
9001f942:	fb06 0e0e 	mla	lr, r6, lr, r0
9001f946:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
9001f94a:	f894 e000 	ldrb.w	lr, [r4]
9001f94e:	fb02 fe0e 	mul.w	lr, r2, lr
9001f952:	fb08 e909 	mla	r9, r8, r9, lr
9001f956:	f895 e000 	ldrb.w	lr, [r5]
9001f95a:	fb0c 990e 	mla	r9, ip, lr, r9
9001f95e:	f893 e000 	ldrb.w	lr, [r3]
9001f962:	785b      	ldrb	r3, [r3, #1]
9001f964:	fb06 9e0e 	mla	lr, r6, lr, r9
9001f968:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f96c:	ea4e 0e00 	orr.w	lr, lr, r0
9001f970:	7860      	ldrb	r0, [r4, #1]
9001f972:	4350      	muls	r0, r2
9001f974:	786a      	ldrb	r2, [r5, #1]
9001f976:	fb08 0007 	mla	r0, r8, r7, r0
9001f97a:	fb0c 0202 	mla	r2, ip, r2, r0
9001f97e:	fb06 2303 	mla	r3, r6, r3, r2
9001f982:	095b      	lsrs	r3, r3, #5
9001f984:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f988:	ea4e 0303 	orr.w	r3, lr, r3
9001f98c:	800b      	strh	r3, [r1, #0]
9001f98e:	b003      	add	sp, #12
9001f990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f994:	af01      	add	r7, sp, #4
9001f996:	e78c      	b.n	9001f8b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
9001f998:	ac01      	add	r4, sp, #4
9001f99a:	4627      	mov	r7, r4
9001f99c:	e795      	b.n	9001f8ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f99e:	ac01      	add	r4, sp, #4
9001f9a0:	e793      	b.n	9001f8ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f9a2:	ad01      	add	r5, sp, #4
9001f9a4:	e7a1      	b.n	9001f8ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9001f9a6:	ab01      	add	r3, sp, #4
9001f9a8:	461d      	mov	r5, r3
9001f9aa:	e7ab      	b.n	9001f904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
9001f9ac:	ab01      	add	r3, sp, #4
9001f9ae:	e7a9      	b.n	9001f904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

9001f9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f9b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f9b4:	b08f      	sub	sp, #60	@ 0x3c
9001f9b6:	920c      	str	r2, [sp, #48]	@ 0x30
9001f9b8:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
9001f9ba:	900d      	str	r0, [sp, #52]	@ 0x34
9001f9bc:	910a      	str	r1, [sp, #40]	@ 0x28
9001f9be:	6850      	ldr	r0, [r2, #4]
9001f9c0:	9306      	str	r3, [sp, #24]
9001f9c2:	6812      	ldr	r2, [r2, #0]
9001f9c4:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
9001f9c8:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
9001f9cc:	fb00 1303 	mla	r3, r0, r3, r1
9001f9d0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f9d4:	9307      	str	r3, [sp, #28]
9001f9d6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f9d8:	681b      	ldr	r3, [r3, #0]
9001f9da:	9308      	str	r3, [sp, #32]
9001f9dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f9de:	685c      	ldr	r4, [r3, #4]
9001f9e0:	3404      	adds	r4, #4
9001f9e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f9e4:	2b00      	cmp	r3, #0
9001f9e6:	dc03      	bgt.n	9001f9f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001f9e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f9ea:	2b00      	cmp	r3, #0
9001f9ec:	f340 81d5 	ble.w	9001fd9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001f9f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9001f9f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f9f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f9fa:	1e48      	subs	r0, r1, #1
9001f9fc:	1e56      	subs	r6, r2, #1
9001f9fe:	9b06      	ldr	r3, [sp, #24]
9001fa00:	2b00      	cmp	r3, #0
9001fa02:	f340 80b6 	ble.w	9001fb72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9001fa06:	ea5f 472b 	movs.w	r7, fp, asr #16
9001fa0a:	ea4f 4325 	mov.w	r3, r5, asr #16
9001fa0e:	d406      	bmi.n	9001fa1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001fa10:	4287      	cmp	r7, r0
9001fa12:	da04      	bge.n	9001fa1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001fa14:	2b00      	cmp	r3, #0
9001fa16:	db02      	blt.n	9001fa1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001fa18:	42b3      	cmp	r3, r6
9001fa1a:	f2c0 80ab 	blt.w	9001fb74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
9001fa1e:	3701      	adds	r7, #1
9001fa20:	f100 809c 	bmi.w	9001fb5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001fa24:	42b9      	cmp	r1, r7
9001fa26:	f2c0 8099 	blt.w	9001fb5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001fa2a:	3301      	adds	r3, #1
9001fa2c:	f100 8096 	bmi.w	9001fb5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001fa30:	429a      	cmp	r2, r3
9001fa32:	f2c0 8093 	blt.w	9001fb5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001fa36:	9b06      	ldr	r3, [sp, #24]
9001fa38:	930b      	str	r3, [sp, #44]	@ 0x2c
9001fa3a:	9b07      	ldr	r3, [sp, #28]
9001fa3c:	9309      	str	r3, [sp, #36]	@ 0x24
9001fa3e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fa40:	2b00      	cmp	r3, #0
9001fa42:	f340 80b4 	ble.w	9001fbae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001fa46:	9820      	ldr	r0, [sp, #128]	@ 0x80
9001fa48:	142e      	asrs	r6, r5, #16
9001fa4a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9001fa4c:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001fa50:	68c7      	ldr	r7, [r0, #12]
9001fa52:	ea5f 402b 	movs.w	r0, fp, asr #16
9001fa56:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001fa5a:	6892      	ldr	r2, [r2, #8]
9001fa5c:	f100 80fb 	bmi.w	9001fc56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001fa60:	f102 3cff 	add.w	ip, r2, #4294967295
9001fa64:	4560      	cmp	r0, ip
9001fa66:	f280 80f6 	bge.w	9001fc56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001fa6a:	2e00      	cmp	r6, #0
9001fa6c:	f2c0 80f3 	blt.w	9001fc56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001fa70:	f107 3cff 	add.w	ip, r7, #4294967295
9001fa74:	4566      	cmp	r6, ip
9001fa76:	f280 80ee 	bge.w	9001fc56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001fa7a:	b212      	sxth	r2, r2
9001fa7c:	fb06 0002 	mla	r0, r6, r2, r0
9001fa80:	9e08      	ldr	r6, [sp, #32]
9001fa82:	1837      	adds	r7, r6, r0
9001fa84:	5c30      	ldrb	r0, [r6, r0]
9001fa86:	eb00 0840 	add.w	r8, r0, r0, lsl #1
9001fa8a:	eb04 0c08 	add.w	ip, r4, r8
9001fa8e:	2b00      	cmp	r3, #0
9001fa90:	f000 80d3 	beq.w	9001fc3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
9001fa94:	787e      	ldrb	r6, [r7, #1]
9001fa96:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001fa9a:	4426      	add	r6, r4
9001fa9c:	2900      	cmp	r1, #0
9001fa9e:	f000 80d4 	beq.w	9001fc4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001faa2:	18b8      	adds	r0, r7, r2
9001faa4:	5cba      	ldrb	r2, [r7, r2]
9001faa6:	7840      	ldrb	r0, [r0, #1]
9001faa8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001faac:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001fab0:	4422      	add	r2, r4
9001fab2:	4420      	add	r0, r4
9001fab4:	b29b      	uxth	r3, r3
9001fab6:	78b7      	ldrb	r7, [r6, #2]
9001fab8:	b289      	uxth	r1, r1
9001faba:	f89c a002 	ldrb.w	sl, [ip, #2]
9001fabe:	f89c c001 	ldrb.w	ip, [ip, #1]
9001fac2:	fb03 f901 	mul.w	r9, r3, r1
9001fac6:	011b      	lsls	r3, r3, #4
9001fac8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001facc:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9001fad0:	eba3 0309 	sub.w	r3, r3, r9
9001fad4:	b289      	uxth	r1, r1
9001fad6:	b29b      	uxth	r3, r3
9001fad8:	ebae 0e01 	sub.w	lr, lr, r1
9001fadc:	435f      	muls	r7, r3
9001fade:	fa1f fe8e 	uxth.w	lr, lr
9001fae2:	fb0e 770a 	mla	r7, lr, sl, r7
9001fae6:	f892 a002 	ldrb.w	sl, [r2, #2]
9001faea:	fb01 770a 	mla	r7, r1, sl, r7
9001faee:	f890 a002 	ldrb.w	sl, [r0, #2]
9001faf2:	fb09 7a0a 	mla	sl, r9, sl, r7
9001faf6:	f814 7008 	ldrb.w	r7, [r4, r8]
9001fafa:	f896 8000 	ldrb.w	r8, [r6]
9001fafe:	7876      	ldrb	r6, [r6, #1]
9001fb00:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9001fb04:	fb03 f808 	mul.w	r8, r3, r8
9001fb08:	4373      	muls	r3, r6
9001fb0a:	fb0e 8807 	mla	r8, lr, r7, r8
9001fb0e:	7817      	ldrb	r7, [r2, #0]
9001fb10:	fb0e 330c 	mla	r3, lr, ip, r3
9001fb14:	fb01 8807 	mla	r8, r1, r7, r8
9001fb18:	7807      	ldrb	r7, [r0, #0]
9001fb1a:	fb09 8707 	mla	r7, r9, r7, r8
9001fb1e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001fb22:	ea47 070a 	orr.w	r7, r7, sl
9001fb26:	f892 a001 	ldrb.w	sl, [r2, #1]
9001fb2a:	fb01 310a 	mla	r1, r1, sl, r3
9001fb2e:	f890 a001 	ldrb.w	sl, [r0, #1]
9001fb32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fb34:	fb09 1a0a 	mla	sl, r9, sl, r1
9001fb38:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fb3c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001fb40:	ea47 070a 	orr.w	r7, r7, sl
9001fb44:	801f      	strh	r7, [r3, #0]
9001fb46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fb48:	3302      	adds	r3, #2
9001fb4a:	9309      	str	r3, [sp, #36]	@ 0x24
9001fb4c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9001fb4e:	449b      	add	fp, r3
9001fb50:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001fb52:	441d      	add	r5, r3
9001fb54:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fb56:	3b01      	subs	r3, #1
9001fb58:	930b      	str	r3, [sp, #44]	@ 0x2c
9001fb5a:	e770      	b.n	9001fa3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9001fb5c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9001fb5e:	449b      	add	fp, r3
9001fb60:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001fb62:	441d      	add	r5, r3
9001fb64:	9b06      	ldr	r3, [sp, #24]
9001fb66:	3b01      	subs	r3, #1
9001fb68:	9306      	str	r3, [sp, #24]
9001fb6a:	9b07      	ldr	r3, [sp, #28]
9001fb6c:	3302      	adds	r3, #2
9001fb6e:	9307      	str	r3, [sp, #28]
9001fb70:	e745      	b.n	9001f9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9001fb72:	d023      	beq.n	9001fbbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9001fb74:	9b06      	ldr	r3, [sp, #24]
9001fb76:	981b      	ldr	r0, [sp, #108]	@ 0x6c
9001fb78:	3b01      	subs	r3, #1
9001fb7a:	fb00 b003 	mla	r0, r0, r3, fp
9001fb7e:	1400      	asrs	r0, r0, #16
9001fb80:	f53f af59 	bmi.w	9001fa36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001fb84:	3901      	subs	r1, #1
9001fb86:	4288      	cmp	r0, r1
9001fb88:	f6bf af55 	bge.w	9001fa36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001fb8c:	991c      	ldr	r1, [sp, #112]	@ 0x70
9001fb8e:	fb01 5303 	mla	r3, r1, r3, r5
9001fb92:	141b      	asrs	r3, r3, #16
9001fb94:	f53f af4f 	bmi.w	9001fa36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001fb98:	3a01      	subs	r2, #1
9001fb9a:	4293      	cmp	r3, r2
9001fb9c:	f6bf af4b 	bge.w	9001fa36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001fba0:	9b06      	ldr	r3, [sp, #24]
9001fba2:	9309      	str	r3, [sp, #36]	@ 0x24
9001fba4:	9b07      	ldr	r3, [sp, #28]
9001fba6:	930b      	str	r3, [sp, #44]	@ 0x2c
9001fba8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fbaa:	2b00      	cmp	r3, #0
9001fbac:	dc70      	bgt.n	9001fc90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
9001fbae:	9b06      	ldr	r3, [sp, #24]
9001fbb0:	9a07      	ldr	r2, [sp, #28]
9001fbb2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001fbb6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001fbba:	9307      	str	r3, [sp, #28]
9001fbbc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001fbbe:	2b00      	cmp	r3, #0
9001fbc0:	f340 80eb 	ble.w	9001fd9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001fbc4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001fbc8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001fbca:	ee30 0a04 	vadd.f32	s0, s0, s8
9001fbce:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001fbd2:	eef0 6a62 	vmov.f32	s13, s5
9001fbd6:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001fbda:	ee31 1a05 	vadd.f32	s2, s2, s10
9001fbde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fbe2:	ee16 ba90 	vmov	fp, s13
9001fbe6:	eef0 6a43 	vmov.f32	s13, s6
9001fbea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001fbee:	ee16 5a90 	vmov	r5, s13
9001fbf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001fbf6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001fbfa:	ee77 2a62 	vsub.f32	s5, s14, s5
9001fbfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001fc02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fc06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fc0a:	ee12 2a90 	vmov	r2, s5
9001fc0e:	eef0 2a47 	vmov.f32	s5, s14
9001fc12:	fb92 f3f3 	sdiv	r3, r2, r3
9001fc16:	ee13 2a10 	vmov	r2, s6
9001fc1a:	931b      	str	r3, [sp, #108]	@ 0x6c
9001fc1c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001fc1e:	eeb0 3a67 	vmov.f32	s6, s15
9001fc22:	fb92 f3f3 	sdiv	r3, r2, r3
9001fc26:	931c      	str	r3, [sp, #112]	@ 0x70
9001fc28:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001fc2a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001fc2c:	3b01      	subs	r3, #1
9001fc2e:	930a      	str	r3, [sp, #40]	@ 0x28
9001fc30:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001fc32:	bf08      	it	eq
9001fc34:	4613      	moveq	r3, r2
9001fc36:	9306      	str	r3, [sp, #24]
9001fc38:	e6d3      	b.n	9001f9e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001fc3a:	b149      	cbz	r1, 9001fc50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
9001fc3c:	5cba      	ldrb	r2, [r7, r2]
9001fc3e:	4660      	mov	r0, ip
9001fc40:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001fc44:	4422      	add	r2, r4
9001fc46:	4666      	mov	r6, ip
9001fc48:	e734      	b.n	9001fab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001fc4a:	4660      	mov	r0, ip
9001fc4c:	4662      	mov	r2, ip
9001fc4e:	e731      	b.n	9001fab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001fc50:	4660      	mov	r0, ip
9001fc52:	4662      	mov	r2, ip
9001fc54:	e7f7      	b.n	9001fc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001fc56:	f110 0c01 	adds.w	ip, r0, #1
9001fc5a:	f53f af74 	bmi.w	9001fb46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fc5e:	4562      	cmp	r2, ip
9001fc60:	f6ff af71 	blt.w	9001fb46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fc64:	f116 0c01 	adds.w	ip, r6, #1
9001fc68:	f53f af6d 	bmi.w	9001fb46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fc6c:	4567      	cmp	r7, ip
9001fc6e:	f6ff af6a 	blt.w	9001fb46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fc72:	b23f      	sxth	r7, r7
9001fc74:	b212      	sxth	r2, r2
9001fc76:	9701      	str	r7, [sp, #4]
9001fc78:	9200      	str	r2, [sp, #0]
9001fc7a:	e9cd 3104 	strd	r3, r1, [sp, #16]
9001fc7e:	e9cd 0602 	strd	r0, r6, [sp, #8]
9001fc82:	4623      	mov	r3, r4
9001fc84:	980d      	ldr	r0, [sp, #52]	@ 0x34
9001fc86:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001fc8a:	f7ff fde7 	bl	9001f85c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
9001fc8e:	e75a      	b.n	9001fb46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fc90:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9001fc92:	ea4f 462b 	mov.w	r6, fp, asr #16
9001fc96:	1428      	asrs	r0, r5, #16
9001fc98:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001fc9c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001fca0:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001fca4:	fb02 6000 	mla	r0, r2, r0, r6
9001fca8:	9e08      	ldr	r6, [sp, #32]
9001fcaa:	f816 8000 	ldrb.w	r8, [r6, r0]
9001fcae:	1837      	adds	r7, r6, r0
9001fcb0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001fcb4:	eb04 0c08 	add.w	ip, r4, r8
9001fcb8:	2b00      	cmp	r3, #0
9001fcba:	d060      	beq.n	9001fd7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
9001fcbc:	787e      	ldrb	r6, [r7, #1]
9001fcbe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001fcc2:	4426      	add	r6, r4
9001fcc4:	2900      	cmp	r1, #0
9001fcc6:	d062      	beq.n	9001fd8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
9001fcc8:	18b8      	adds	r0, r7, r2
9001fcca:	5cba      	ldrb	r2, [r7, r2]
9001fccc:	7840      	ldrb	r0, [r0, #1]
9001fcce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001fcd2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001fcd6:	4422      	add	r2, r4
9001fcd8:	4420      	add	r0, r4
9001fcda:	b29b      	uxth	r3, r3
9001fcdc:	78b7      	ldrb	r7, [r6, #2]
9001fcde:	b289      	uxth	r1, r1
9001fce0:	f89c a002 	ldrb.w	sl, [ip, #2]
9001fce4:	f89c c001 	ldrb.w	ip, [ip, #1]
9001fce8:	fb03 f901 	mul.w	r9, r3, r1
9001fcec:	011b      	lsls	r3, r3, #4
9001fcee:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001fcf2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9001fcf6:	eba3 0309 	sub.w	r3, r3, r9
9001fcfa:	b289      	uxth	r1, r1
9001fcfc:	b29b      	uxth	r3, r3
9001fcfe:	ebae 0e01 	sub.w	lr, lr, r1
9001fd02:	435f      	muls	r7, r3
9001fd04:	fa1f fe8e 	uxth.w	lr, lr
9001fd08:	fb0e 770a 	mla	r7, lr, sl, r7
9001fd0c:	f892 a002 	ldrb.w	sl, [r2, #2]
9001fd10:	fb01 770a 	mla	r7, r1, sl, r7
9001fd14:	f890 a002 	ldrb.w	sl, [r0, #2]
9001fd18:	fb09 7a0a 	mla	sl, r9, sl, r7
9001fd1c:	f814 7008 	ldrb.w	r7, [r4, r8]
9001fd20:	f896 8000 	ldrb.w	r8, [r6]
9001fd24:	7876      	ldrb	r6, [r6, #1]
9001fd26:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9001fd2a:	fb03 f808 	mul.w	r8, r3, r8
9001fd2e:	4373      	muls	r3, r6
9001fd30:	7856      	ldrb	r6, [r2, #1]
9001fd32:	fb0e 8807 	mla	r8, lr, r7, r8
9001fd36:	7817      	ldrb	r7, [r2, #0]
9001fd38:	fb0e 330c 	mla	r3, lr, ip, r3
9001fd3c:	fb01 8807 	mla	r8, r1, r7, r8
9001fd40:	7807      	ldrb	r7, [r0, #0]
9001fd42:	fb01 3306 	mla	r3, r1, r6, r3
9001fd46:	fb09 8707 	mla	r7, r9, r7, r8
9001fd4a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001fd4e:	ea47 070a 	orr.w	r7, r7, sl
9001fd52:	f890 a001 	ldrb.w	sl, [r0, #1]
9001fd56:	fb09 3a0a 	mla	sl, r9, sl, r3
9001fd5a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001fd5c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fd60:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001fd64:	ea47 070a 	orr.w	r7, r7, sl
9001fd68:	f823 7b02 	strh.w	r7, [r3], #2
9001fd6c:	930b      	str	r3, [sp, #44]	@ 0x2c
9001fd6e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9001fd70:	449b      	add	fp, r3
9001fd72:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001fd74:	441d      	add	r5, r3
9001fd76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fd78:	3b01      	subs	r3, #1
9001fd7a:	9309      	str	r3, [sp, #36]	@ 0x24
9001fd7c:	e714      	b.n	9001fba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
9001fd7e:	b149      	cbz	r1, 9001fd94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
9001fd80:	5cba      	ldrb	r2, [r7, r2]
9001fd82:	4660      	mov	r0, ip
9001fd84:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001fd88:	4422      	add	r2, r4
9001fd8a:	4666      	mov	r6, ip
9001fd8c:	e7a5      	b.n	9001fcda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001fd8e:	4660      	mov	r0, ip
9001fd90:	4662      	mov	r2, ip
9001fd92:	e7a2      	b.n	9001fcda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001fd94:	4660      	mov	r0, ip
9001fd96:	4662      	mov	r2, ip
9001fd98:	e7f7      	b.n	9001fd8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
9001fd9a:	b00f      	add	sp, #60	@ 0x3c
9001fd9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001fda0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
9001fda0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fda4:	b085      	sub	sp, #20
9001fda6:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
9001fdaa:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
9001fdae:	9102      	str	r1, [sp, #8]
9001fdb0:	2c00      	cmp	r4, #0
9001fdb2:	fb04 710c 	mla	r1, r4, ip, r7
9001fdb6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
9001fdba:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
9001fdbe:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
9001fdc2:	eb02 0e01 	add.w	lr, r2, r1
9001fdc6:	f2c0 8122 	blt.w	9002000e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001fdca:	45a0      	cmp	r8, r4
9001fdcc:	f340 811f 	ble.w	9002000e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001fdd0:	2f00      	cmp	r7, #0
9001fdd2:	f2c0 811a 	blt.w	9002000a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001fdd6:	45bc      	cmp	ip, r7
9001fdd8:	f340 8117 	ble.w	9002000a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001fddc:	5c52      	ldrb	r2, [r2, r1]
9001fdde:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9001fde2:	1c7a      	adds	r2, r7, #1
9001fde4:	f100 8116 	bmi.w	90020014 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001fde8:	4594      	cmp	ip, r2
9001fdea:	f340 8113 	ble.w	90020014 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001fdee:	2e00      	cmp	r6, #0
9001fdf0:	f000 8112 	beq.w	90020018 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9001fdf4:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001fdf8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9001fdfc:	3401      	adds	r4, #1
9001fdfe:	f100 810f 	bmi.w	90020020 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001fe02:	45a0      	cmp	r8, r4
9001fe04:	f340 810c 	ble.w	90020020 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001fe08:	2800      	cmp	r0, #0
9001fe0a:	f000 810c 	beq.w	90020026 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9001fe0e:	2f00      	cmp	r7, #0
9001fe10:	f2c0 8104 	blt.w	9002001c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001fe14:	45bc      	cmp	ip, r7
9001fe16:	f340 8101 	ble.w	9002001c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001fe1a:	f81e 200c 	ldrb.w	r2, [lr, ip]
9001fe1e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9001fe22:	3701      	adds	r7, #1
9001fe24:	f100 8102 	bmi.w	9002002c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001fe28:	45bc      	cmp	ip, r7
9001fe2a:	f340 80ff 	ble.w	9002002c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001fe2e:	2e00      	cmp	r6, #0
9001fe30:	f000 80fe 	beq.w	90020030 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9001fe34:	44f4      	add	ip, lr
9001fe36:	f89c 2001 	ldrb.w	r2, [ip, #1]
9001fe3a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001fe3e:	b2b6      	uxth	r6, r6
9001fe40:	b280      	uxth	r0, r0
9001fe42:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9001fe46:	fb00 fe06 	mul.w	lr, r0, r6
9001fe4a:	0136      	lsls	r6, r6, #4
9001fe4c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9001fe50:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9001fe54:	eba6 070e 	sub.w	r7, r6, lr
9001fe58:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9001fe5c:	ea4f 6914 	mov.w	r9, r4, lsr #24
9001fe60:	b280      	uxth	r0, r0
9001fe62:	b2bf      	uxth	r7, r7
9001fe64:	1a1b      	subs	r3, r3, r0
9001fe66:	ea4f 6812 	mov.w	r8, r2, lsr #24
9001fe6a:	fb0a f607 	mul.w	r6, sl, r7
9001fe6e:	b29b      	uxth	r3, r3
9001fe70:	fb0b 6603 	mla	r6, fp, r3, r6
9001fe74:	fb00 6609 	mla	r6, r0, r9, r6
9001fe78:	fb0e 6608 	mla	r6, lr, r8, r6
9001fe7c:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001fe80:	9600      	str	r6, [sp, #0]
9001fe82:	2e00      	cmp	r6, #0
9001fe84:	f000 80be 	beq.w	90020004 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9001fe88:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
9001fe8c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9001fe90:	9e02      	ldr	r6, [sp, #8]
9001fe92:	fb0b fc0c 	mul.w	ip, fp, ip
9001fe96:	fb0b f505 	mul.w	r5, fp, r5
9001fe9a:	8836      	ldrh	r6, [r6, #0]
9001fe9c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9001fea0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9001fea4:	9501      	str	r5, [sp, #4]
9001fea6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
9001feaa:	44dc      	add	ip, fp
9001feac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001feb0:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9001feb4:	9503      	str	r5, [sp, #12]
9001feb6:	9d01      	ldr	r5, [sp, #4]
9001feb8:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
9001febc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fec0:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9001fec4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9001fec8:	fb0a fc0c 	mul.w	ip, sl, ip
9001fecc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9001fed0:	fb0a fa01 	mul.w	sl, sl, r1
9001fed4:	ea4f 251c 	mov.w	r5, ip, lsr #8
9001fed8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9001fedc:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
9001fee0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9001fee4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9001fee8:	4465      	add	r5, ip
9001feea:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9001feee:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
9001fef2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fef6:	fb09 fc0c 	mul.w	ip, r9, ip
9001fefa:	0a2d      	lsrs	r5, r5, #8
9001fefc:	fb09 f904 	mul.w	r9, r9, r4
9001ff00:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9001ff04:	ea4f 211c 	mov.w	r1, ip, lsr #8
9001ff08:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9001ff0c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9001ff10:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9001ff14:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9001ff18:	437d      	muls	r5, r7
9001ff1a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9001ff1e:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
9001ff22:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9001ff26:	4461      	add	r1, ip
9001ff28:	fb08 f404 	mul.w	r4, r8, r4
9001ff2c:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001ff30:	fb08 f802 	mul.w	r8, r8, r2
9001ff34:	0a09      	lsrs	r1, r1, #8
9001ff36:	0a22      	lsrs	r2, r4, #8
9001ff38:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9001ff3c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9001ff40:	fb07 f70a 	mul.w	r7, r7, sl
9001ff44:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9001ff48:	4414      	add	r4, r2
9001ff4a:	f508 7280 	add.w	r2, r8, #256	@ 0x100
9001ff4e:	0a24      	lsrs	r4, r4, #8
9001ff50:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9001ff54:	9a03      	ldr	r2, [sp, #12]
9001ff56:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9001ff5a:	fb02 5503 	mla	r5, r2, r3, r5
9001ff5e:	ea4f 2818 	mov.w	r8, r8, lsr #8
9001ff62:	9a00      	ldr	r2, [sp, #0]
9001ff64:	fb04 540e 	mla	r4, r4, lr, r5
9001ff68:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9001ff6c:	1235      	asrs	r5, r6, #8
9001ff6e:	fb01 4100 	mla	r1, r1, r0, r4
9001ff72:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001ff76:	0a09      	lsrs	r1, r1, #8
9001ff78:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
9001ff7c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9001ff80:	fb03 7101 	mla	r1, r3, r1, r7
9001ff84:	fb0e 1e08 	mla	lr, lr, r8, r1
9001ff88:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
9001ff8c:	fb00 e101 	mla	r1, r0, r1, lr
9001ff90:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
9001ff94:	b287      	uxth	r7, r0
9001ff96:	0a09      	lsrs	r1, r1, #8
9001ff98:	437a      	muls	r2, r7
9001ff9a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9001ff9e:	1c53      	adds	r3, r2, #1
9001ffa0:	4321      	orrs	r1, r4
9001ffa2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001ffa6:	0c0a      	lsrs	r2, r1, #16
9001ffa8:	f3c1 2407 	ubfx	r4, r1, #8, #8
9001ffac:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9001ffb0:	b2c8      	uxtb	r0, r1
9001ffb2:	fb12 f207 	smulbb	r2, r2, r7
9001ffb6:	fb14 f407 	smulbb	r4, r4, r7
9001ffba:	b2db      	uxtb	r3, r3
9001ffbc:	fb10 f007 	smulbb	r0, r0, r7
9001ffc0:	fb05 2503 	mla	r5, r5, r3, r2
9001ffc4:	10f2      	asrs	r2, r6, #3
9001ffc6:	00f6      	lsls	r6, r6, #3
9001ffc8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001ffcc:	b2ad      	uxth	r5, r5
9001ffce:	b2f6      	uxtb	r6, r6
9001ffd0:	fb02 4203 	mla	r2, r2, r3, r4
9001ffd4:	fb06 0303 	mla	r3, r6, r3, r0
9001ffd8:	b294      	uxth	r4, r2
9001ffda:	b299      	uxth	r1, r3
9001ffdc:	1c6b      	adds	r3, r5, #1
9001ffde:	1c62      	adds	r2, r4, #1
9001ffe0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001ffe4:	1c4b      	adds	r3, r1, #1
9001ffe6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9001ffea:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9001ffee:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001fff2:	0952      	lsrs	r2, r2, #5
9001fff4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fff8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001fffc:	432b      	orrs	r3, r5
9001fffe:	4313      	orrs	r3, r2
90020000:	9a02      	ldr	r2, [sp, #8]
90020002:	8013      	strh	r3, [r2, #0]
90020004:	b005      	add	sp, #20
90020006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002000a:	2500      	movs	r5, #0
9002000c:	e6e9      	b.n	9001fde2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
9002000e:	2100      	movs	r1, #0
90020010:	460d      	mov	r5, r1
90020012:	e6f3      	b.n	9001fdfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90020014:	2100      	movs	r1, #0
90020016:	e6f1      	b.n	9001fdfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90020018:	4631      	mov	r1, r6
9002001a:	e6ef      	b.n	9001fdfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002001c:	2400      	movs	r4, #0
9002001e:	e700      	b.n	9001fe22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90020020:	2200      	movs	r2, #0
90020022:	4614      	mov	r4, r2
90020024:	e70b      	b.n	9001fe3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90020026:	4602      	mov	r2, r0
90020028:	4604      	mov	r4, r0
9002002a:	e708      	b.n	9001fe3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002002c:	2200      	movs	r2, #0
9002002e:	e706      	b.n	9001fe3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90020030:	4632      	mov	r2, r6
90020032:	e704      	b.n	9001fe3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90020034 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020038:	b09f      	sub	sp, #124	@ 0x7c
9002003a:	921b      	str	r2, [sp, #108]	@ 0x6c
9002003c:	9309      	str	r3, [sp, #36]	@ 0x24
9002003e:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90020040:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90020044:	901d      	str	r0, [sp, #116]	@ 0x74
90020046:	931c      	str	r3, [sp, #112]	@ 0x70
90020048:	6850      	ldr	r0, [r2, #4]
9002004a:	9119      	str	r1, [sp, #100]	@ 0x64
9002004c:	6812      	ldr	r2, [r2, #0]
9002004e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90020050:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90020054:	fb00 1303 	mla	r3, r0, r3, r1
90020058:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002005c:	930c      	str	r3, [sp, #48]	@ 0x30
9002005e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90020060:	681b      	ldr	r3, [r3, #0]
90020062:	9312      	str	r3, [sp, #72]	@ 0x48
90020064:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90020066:	685e      	ldr	r6, [r3, #4]
90020068:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
9002006c:	3604      	adds	r6, #4
9002006e:	930d      	str	r3, [sp, #52]	@ 0x34
90020070:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90020072:	2b00      	cmp	r3, #0
90020074:	dc03      	bgt.n	9002007e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90020076:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90020078:	2b00      	cmp	r3, #0
9002007a:	f340 8387 	ble.w	9002078c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002007e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90020080:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020084:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020088:	1e48      	subs	r0, r1, #1
9002008a:	1e57      	subs	r7, r2, #1
9002008c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002008e:	2b00      	cmp	r3, #0
90020090:	f340 8194 	ble.w	900203bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90020094:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90020096:	142b      	asrs	r3, r5, #16
90020098:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002009c:	d406      	bmi.n	900200ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002009e:	4584      	cmp	ip, r0
900200a0:	da04      	bge.n	900200ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900200a2:	2b00      	cmp	r3, #0
900200a4:	db02      	blt.n	900200ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900200a6:	42bb      	cmp	r3, r7
900200a8:	f2c0 8189 	blt.w	900203be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900200ac:	f11c 0c01 	adds.w	ip, ip, #1
900200b0:	f100 8177 	bmi.w	900203a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900200b4:	4561      	cmp	r1, ip
900200b6:	f2c0 8174 	blt.w	900203a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900200ba:	3301      	adds	r3, #1
900200bc:	f100 8171 	bmi.w	900203a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900200c0:	429a      	cmp	r2, r3
900200c2:	f2c0 816e 	blt.w	900203a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900200c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900200c8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900200ca:	931a      	str	r3, [sp, #104]	@ 0x68
900200cc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900200ce:	2b00      	cmp	r3, #0
900200d0:	f340 8193 	ble.w	900203fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
900200d4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900200d6:	ea4f 4c25 	mov.w	ip, r5, asr #16
900200da:	f3c5 3103 	ubfx	r1, r5, #12, #4
900200de:	f3c3 3203 	ubfx	r2, r3, #12, #4
900200e2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900200e4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
900200e8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900200ea:	141b      	asrs	r3, r3, #16
900200ec:	f100 81d6 	bmi.w	9002049c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900200f0:	f100 38ff 	add.w	r8, r0, #4294967295
900200f4:	4543      	cmp	r3, r8
900200f6:	f280 81d1 	bge.w	9002049c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900200fa:	f1bc 0f00 	cmp.w	ip, #0
900200fe:	f2c0 81cd 	blt.w	9002049c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90020102:	f10e 38ff 	add.w	r8, lr, #4294967295
90020106:	45c4      	cmp	ip, r8
90020108:	f280 81c8 	bge.w	9002049c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002010c:	b200      	sxth	r0, r0
9002010e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020110:	fb0c 3300 	mla	r3, ip, r0, r3
90020114:	eb04 0803 	add.w	r8, r4, r3
90020118:	5ce3      	ldrb	r3, [r4, r3]
9002011a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002011e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90020122:	2a00      	cmp	r2, #0
90020124:	f000 81af 	beq.w	90020486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020128:	f898 c001 	ldrb.w	ip, [r8, #1]
9002012c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90020130:	940e      	str	r4, [sp, #56]	@ 0x38
90020132:	0e24      	lsrs	r4, r4, #24
90020134:	9415      	str	r4, [sp, #84]	@ 0x54
90020136:	b179      	cbz	r1, 90020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90020138:	eb08 0c00 	add.w	ip, r8, r0
9002013c:	f818 0000 	ldrb.w	r0, [r8, r0]
90020140:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90020144:	900a      	str	r0, [sp, #40]	@ 0x28
90020146:	0e00      	lsrs	r0, r0, #24
90020148:	9013      	str	r0, [sp, #76]	@ 0x4c
9002014a:	f89c 0001 	ldrb.w	r0, [ip, #1]
9002014e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90020152:	900f      	str	r0, [sp, #60]	@ 0x3c
90020154:	0e00      	lsrs	r0, r0, #24
90020156:	9016      	str	r0, [sp, #88]	@ 0x58
90020158:	b292      	uxth	r2, r2
9002015a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002015c:	b289      	uxth	r1, r1
9002015e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90020160:	fb02 f901 	mul.w	r9, r2, r1
90020164:	0112      	lsls	r2, r2, #4
90020166:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002016a:	eba2 0809 	sub.w	r8, r2, r9
9002016e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90020172:	b289      	uxth	r1, r1
90020174:	fa1f f888 	uxth.w	r8, r8
90020178:	1a52      	subs	r2, r2, r1
9002017a:	fb08 f000 	mul.w	r0, r8, r0
9002017e:	b292      	uxth	r2, r2
90020180:	fb02 000e 	mla	r0, r2, lr, r0
90020184:	fb01 0004 	mla	r0, r1, r4, r0
90020188:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002018a:	fb09 0004 	mla	r0, r9, r4, r0
9002018e:	f3c0 2007 	ubfx	r0, r0, #8, #8
90020192:	2800      	cmp	r0, #0
90020194:	f000 80fa 	beq.w	9002038c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020198:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002019c:	d01b      	beq.n	900201d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002019e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900201a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900201a6:	fb0e fa0a 	mul.w	sl, lr, sl
900201aa:	fb0e fe03 	mul.w	lr, lr, r3
900201ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
900201b2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900201b6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900201ba:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900201be:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900201c2:	4453      	add	r3, sl
900201c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900201c8:	0a1b      	lsrs	r3, r3, #8
900201ca:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900201ce:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900201d2:	ea43 030c 	orr.w	r3, r3, ip
900201d6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900201d8:	2cff      	cmp	r4, #255	@ 0xff
900201da:	d021      	beq.n	90020220 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900201dc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900201de:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900201e2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900201e4:	fb04 fb0b 	mul.w	fp, r4, fp
900201e8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900201ea:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900201ee:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900201f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900201f4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900201f8:	fb04 fa0a 	mul.w	sl, r4, sl
900201fc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020200:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90020204:	44de      	add	lr, fp
90020206:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002020a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002020e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020212:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020216:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002021a:	ea4e 040a 	orr.w	r4, lr, sl
9002021e:	940e      	str	r4, [sp, #56]	@ 0x38
90020220:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90020222:	2cff      	cmp	r4, #255	@ 0xff
90020224:	d021      	beq.n	9002026a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90020226:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90020228:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002022c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002022e:	fb04 fb0b 	mul.w	fp, r4, fp
90020232:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90020234:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020238:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002023a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002023e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90020242:	fb04 fa0a 	mul.w	sl, r4, sl
90020246:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002024a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002024e:	44de      	add	lr, fp
90020250:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020254:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020258:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002025c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020260:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90020264:	ea4e 040a 	orr.w	r4, lr, sl
90020268:	940a      	str	r4, [sp, #40]	@ 0x28
9002026a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002026c:	2cff      	cmp	r4, #255	@ 0xff
9002026e:	d021      	beq.n	900202b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90020270:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90020272:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90020276:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90020278:	fb04 fb0b 	mul.w	fp, r4, fp
9002027c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002027e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020282:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90020284:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020288:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002028c:	fb04 fa0a 	mul.w	sl, r4, sl
90020290:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020294:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90020298:	44de      	add	lr, fp
9002029a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002029e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900202a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900202a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900202aa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900202ae:	ea4e 040a 	orr.w	r4, lr, sl
900202b2:	940f      	str	r4, [sp, #60]	@ 0x3c
900202b4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900202b6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900202ba:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900202be:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900202c2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900202c4:	fb08 fc0c 	mul.w	ip, r8, ip
900202c8:	fb02 cc0e 	mla	ip, r2, lr, ip
900202cc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900202d0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900202d2:	fb01 cc0e 	mla	ip, r1, lr, ip
900202d6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900202da:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900202dc:	fb09 cc0e 	mla	ip, r9, lr, ip
900202e0:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900202e4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900202e6:	fb08 f80e 	mul.w	r8, r8, lr
900202ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900202ee:	fb02 8303 	mla	r3, r2, r3, r8
900202f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900202f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900202f8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900202fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900202fe:	fb01 330a 	mla	r3, r1, sl, r3
90020302:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90020306:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90020308:	fb09 3901 	mla	r9, r9, r1, r3
9002030c:	883b      	ldrh	r3, [r7, #0]
9002030e:	4342      	muls	r2, r0
90020310:	ea4f 2919 	mov.w	r9, r9, lsr #8
90020314:	1c50      	adds	r0, r2, #1
90020316:	1219      	asrs	r1, r3, #8
90020318:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
9002031c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90020320:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90020324:	ea4c 0c09 	orr.w	ip, ip, r9
90020328:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9002032c:	ea4f 421c 	mov.w	r2, ip, lsr #16
90020330:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90020334:	b2c0      	uxtb	r0, r0
90020336:	fb12 f204 	smulbb	r2, r2, r4
9002033a:	fa5f fc8c 	uxtb.w	ip, ip
9002033e:	fb1e fe04 	smulbb	lr, lr, r4
90020342:	fb01 2100 	mla	r1, r1, r0, r2
90020346:	10da      	asrs	r2, r3, #3
90020348:	fb1c fc04 	smulbb	ip, ip, r4
9002034c:	00db      	lsls	r3, r3, #3
9002034e:	b289      	uxth	r1, r1
90020350:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90020354:	b2db      	uxtb	r3, r3
90020356:	fb02 e200 	mla	r2, r2, r0, lr
9002035a:	fb03 c300 	mla	r3, r3, r0, ip
9002035e:	b292      	uxth	r2, r2
90020360:	fa1f fc83 	uxth.w	ip, r3
90020364:	1c4b      	adds	r3, r1, #1
90020366:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002036a:	f10c 0301 	add.w	r3, ip, #1
9002036e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90020372:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90020376:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002037a:	430b      	orrs	r3, r1
9002037c:	1c51      	adds	r1, r2, #1
9002037e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90020382:	0952      	lsrs	r2, r2, #5
90020384:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90020388:	4313      	orrs	r3, r2
9002038a:	803b      	strh	r3, [r7, #0]
9002038c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
9002038e:	3702      	adds	r7, #2
90020390:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90020392:	441a      	add	r2, r3
90020394:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90020396:	441d      	add	r5, r3
90020398:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
9002039a:	9229      	str	r2, [sp, #164]	@ 0xa4
9002039c:	3b01      	subs	r3, #1
9002039e:	931a      	str	r3, [sp, #104]	@ 0x68
900203a0:	e694      	b.n	900200cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900203a2:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900203a4:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900203a6:	441c      	add	r4, r3
900203a8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900203aa:	441d      	add	r5, r3
900203ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900203ae:	9429      	str	r4, [sp, #164]	@ 0xa4
900203b0:	3b01      	subs	r3, #1
900203b2:	9309      	str	r3, [sp, #36]	@ 0x24
900203b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900203b6:	3302      	adds	r3, #2
900203b8:	930c      	str	r3, [sp, #48]	@ 0x30
900203ba:	e667      	b.n	9002008c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900203bc:	d024      	beq.n	90020408 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900203be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900203c0:	982b      	ldr	r0, [sp, #172]	@ 0xac
900203c2:	3b01      	subs	r3, #1
900203c4:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900203c6:	fb00 4003 	mla	r0, r0, r3, r4
900203ca:	1400      	asrs	r0, r0, #16
900203cc:	f53f ae7b 	bmi.w	900200c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900203d0:	3901      	subs	r1, #1
900203d2:	4288      	cmp	r0, r1
900203d4:	f6bf ae77 	bge.w	900200c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900203d8:	992c      	ldr	r1, [sp, #176]	@ 0xb0
900203da:	fb01 5303 	mla	r3, r1, r3, r5
900203de:	141b      	asrs	r3, r3, #16
900203e0:	f53f ae71 	bmi.w	900200c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900203e4:	3a01      	subs	r2, #1
900203e6:	4293      	cmp	r3, r2
900203e8:	f6bf ae6d 	bge.w	900200c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900203ec:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900203f0:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
900203f4:	f1bb 0f00 	cmp.w	fp, #0
900203f8:	dc70      	bgt.n	900204dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
900203fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900203fc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90020400:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020402:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90020406:	930c      	str	r3, [sp, #48]	@ 0x30
90020408:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002040a:	2b00      	cmp	r3, #0
9002040c:	f340 81be 	ble.w	9002078c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90020410:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90020414:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90020416:	ee30 0a04 	vadd.f32	s0, s0, s8
9002041a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002041e:	eef0 6a62 	vmov.f32	s13, s5
90020422:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020426:	ee31 1a05 	vadd.f32	s2, s2, s10
9002042a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002042e:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90020432:	eef0 6a43 	vmov.f32	s13, s6
90020436:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002043a:	ee16 5a90 	vmov	r5, s13
9002043e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020442:	ee61 7a27 	vmul.f32	s15, s2, s15
90020446:	ee77 2a62 	vsub.f32	s5, s14, s5
9002044a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002044e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020452:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020456:	ee12 2a90 	vmov	r2, s5
9002045a:	eef0 2a47 	vmov.f32	s5, s14
9002045e:	fb92 f3f3 	sdiv	r3, r2, r3
90020462:	ee13 2a10 	vmov	r2, s6
90020466:	932b      	str	r3, [sp, #172]	@ 0xac
90020468:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002046a:	eeb0 3a67 	vmov.f32	s6, s15
9002046e:	fb92 f3f3 	sdiv	r3, r2, r3
90020472:	932c      	str	r3, [sp, #176]	@ 0xb0
90020474:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90020476:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90020478:	3b01      	subs	r3, #1
9002047a:	9319      	str	r3, [sp, #100]	@ 0x64
9002047c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002047e:	bf08      	it	eq
90020480:	4613      	moveq	r3, r2
90020482:	9309      	str	r3, [sp, #36]	@ 0x24
90020484:	e5f4      	b.n	90020070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020486:	2900      	cmp	r1, #0
90020488:	f43f ae66 	beq.w	90020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9002048c:	f818 0000 	ldrb.w	r0, [r8, r0]
90020490:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90020494:	900a      	str	r0, [sp, #40]	@ 0x28
90020496:	0e00      	lsrs	r0, r0, #24
90020498:	9013      	str	r0, [sp, #76]	@ 0x4c
9002049a:	e65d      	b.n	90020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9002049c:	f113 0801 	adds.w	r8, r3, #1
900204a0:	f53f af74 	bmi.w	9002038c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900204a4:	4540      	cmp	r0, r8
900204a6:	f6ff af71 	blt.w	9002038c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900204aa:	f11c 0801 	adds.w	r8, ip, #1
900204ae:	f53f af6d 	bmi.w	9002038c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900204b2:	45c6      	cmp	lr, r8
900204b4:	f6ff af6a 	blt.w	9002038c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900204b8:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
900204ba:	b200      	sxth	r0, r0
900204bc:	9302      	str	r3, [sp, #8]
900204be:	fa0f f38e 	sxth.w	r3, lr
900204c2:	9000      	str	r0, [sp, #0]
900204c4:	9301      	str	r3, [sp, #4]
900204c6:	4633      	mov	r3, r6
900204c8:	981d      	ldr	r0, [sp, #116]	@ 0x74
900204ca:	e9cd 1405 	strd	r1, r4, [sp, #20]
900204ce:	e9cd c203 	strd	ip, r2, [sp, #12]
900204d2:	4639      	mov	r1, r7
900204d4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900204d6:	f7ff fc63 	bl	9001fda0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900204da:	e757      	b.n	9002038c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900204dc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900204de:	f3c5 3003 	ubfx	r0, r5, #12, #4
900204e2:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900204e4:	f3c3 3203 	ubfx	r2, r3, #12, #4
900204e8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900204ea:	1427      	asrs	r7, r4, #16
900204ec:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900204ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900204f2:	142b      	asrs	r3, r5, #16
900204f4:	fb01 7303 	mla	r3, r1, r3, r7
900204f8:	18e7      	adds	r7, r4, r3
900204fa:	5ce3      	ldrb	r3, [r4, r3]
900204fc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90020500:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020504:	2a00      	cmp	r2, #0
90020506:	f000 8137 	beq.w	90020778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
9002050a:	f897 e001 	ldrb.w	lr, [r7, #1]
9002050e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90020512:	9410      	str	r4, [sp, #64]	@ 0x40
90020514:	0e24      	lsrs	r4, r4, #24
90020516:	9417      	str	r4, [sp, #92]	@ 0x5c
90020518:	b170      	cbz	r0, 90020538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002051a:	eb07 0e01 	add.w	lr, r7, r1
9002051e:	5c79      	ldrb	r1, [r7, r1]
90020520:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020524:	910b      	str	r1, [sp, #44]	@ 0x2c
90020526:	0e09      	lsrs	r1, r1, #24
90020528:	9114      	str	r1, [sp, #80]	@ 0x50
9002052a:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002052e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020532:	9111      	str	r1, [sp, #68]	@ 0x44
90020534:	0e09      	lsrs	r1, r1, #24
90020536:	9118      	str	r1, [sp, #96]	@ 0x60
90020538:	b292      	uxth	r2, r2
9002053a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
9002053c:	b280      	uxth	r0, r0
9002053e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90020540:	fb02 f800 	mul.w	r8, r2, r0
90020544:	0112      	lsls	r2, r2, #4
90020546:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002054a:	eba2 0e08 	sub.w	lr, r2, r8
9002054e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90020552:	b280      	uxth	r0, r0
90020554:	fa1f fe8e 	uxth.w	lr, lr
90020558:	1a12      	subs	r2, r2, r0
9002055a:	fb0e f101 	mul.w	r1, lr, r1
9002055e:	b292      	uxth	r2, r2
90020560:	fb02 110c 	mla	r1, r2, ip, r1
90020564:	fb00 1104 	mla	r1, r0, r4, r1
90020568:	9c18      	ldr	r4, [sp, #96]	@ 0x60
9002056a:	fb08 1104 	mla	r1, r8, r4, r1
9002056e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90020572:	2900      	cmp	r1, #0
90020574:	f000 80f5 	beq.w	90020762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90020578:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
9002057c:	d019      	beq.n	900205b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9002057e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90020582:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90020586:	fb0c fa0a 	mul.w	sl, ip, sl
9002058a:	fb0c fc03 	mul.w	ip, ip, r3
9002058e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020592:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90020596:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002059a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002059e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900205a2:	4453      	add	r3, sl
900205a4:	0a3f      	lsrs	r7, r7, #8
900205a6:	0a1b      	lsrs	r3, r3, #8
900205a8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900205ac:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900205b0:	433b      	orrs	r3, r7
900205b2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900205b4:	2cff      	cmp	r4, #255	@ 0xff
900205b6:	d020      	beq.n	900205fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900205b8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900205ba:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900205be:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900205c0:	4367      	muls	r7, r4
900205c2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900205c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900205c8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900205cc:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900205ce:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900205d2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900205d6:	fb04 fa0a 	mul.w	sl, r4, sl
900205da:	44bc      	add	ip, r7
900205dc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900205e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900205e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900205e8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900205ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900205f0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900205f4:	ea4c 040a 	orr.w	r4, ip, sl
900205f8:	9410      	str	r4, [sp, #64]	@ 0x40
900205fa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900205fc:	2cff      	cmp	r4, #255	@ 0xff
900205fe:	d020      	beq.n	90020642 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90020600:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90020602:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90020606:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90020608:	4367      	muls	r7, r4
9002060a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002060c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020610:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020614:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90020616:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002061a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002061e:	fb04 fa0a 	mul.w	sl, r4, sl
90020622:	44bc      	add	ip, r7
90020624:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90020628:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002062c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020630:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90020634:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020638:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002063c:	ea4c 040a 	orr.w	r4, ip, sl
90020640:	940b      	str	r4, [sp, #44]	@ 0x2c
90020642:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90020644:	2cff      	cmp	r4, #255	@ 0xff
90020646:	d020      	beq.n	9002068a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90020648:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002064a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002064e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90020650:	4367      	muls	r7, r4
90020652:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90020654:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020658:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002065c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
9002065e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90020662:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90020666:	fb04 fa0a 	mul.w	sl, r4, sl
9002066a:	44bc      	add	ip, r7
9002066c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90020670:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020674:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020678:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002067c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020680:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90020684:	ea4c 040a 	orr.w	r4, ip, sl
90020688:	9411      	str	r4, [sp, #68]	@ 0x44
9002068a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002068c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90020690:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90020694:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90020698:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002069a:	fb0e f707 	mul.w	r7, lr, r7
9002069e:	fb02 770c 	mla	r7, r2, ip, r7
900206a2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900206a6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900206a8:	fb00 770c 	mla	r7, r0, ip, r7
900206ac:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900206b0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900206b2:	fb08 770c 	mla	r7, r8, ip, r7
900206b6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900206ba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900206bc:	fb0e fe0c 	mul.w	lr, lr, ip
900206c0:	0a3f      	lsrs	r7, r7, #8
900206c2:	fb02 e303 	mla	r3, r2, r3, lr
900206c6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900206c8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900206cc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900206d0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900206d2:	fb00 330a 	mla	r3, r0, sl, r3
900206d6:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900206da:	f8b9 0000 	ldrh.w	r0, [r9]
900206de:	fb08 3c0c 	mla	ip, r8, ip, r3
900206e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900206e4:	1202      	asrs	r2, r0, #8
900206e6:	434b      	muls	r3, r1
900206e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900206ec:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900206f0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900206f4:	1c59      	adds	r1, r3, #1
900206f6:	ea47 070c 	orr.w	r7, r7, ip
900206fa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900206fe:	0c3b      	lsrs	r3, r7, #16
90020700:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90020704:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90020708:	b2ff      	uxtb	r7, r7
9002070a:	fb13 f304 	smulbb	r3, r3, r4
9002070e:	b2c9      	uxtb	r1, r1
90020710:	fb1c fc04 	smulbb	ip, ip, r4
90020714:	fb02 3201 	mla	r2, r2, r1, r3
90020718:	10c3      	asrs	r3, r0, #3
9002071a:	fb17 f704 	smulbb	r7, r7, r4
9002071e:	00c0      	lsls	r0, r0, #3
90020720:	b292      	uxth	r2, r2
90020722:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90020726:	b2c0      	uxtb	r0, r0
90020728:	fb03 c301 	mla	r3, r3, r1, ip
9002072c:	f102 0c01 	add.w	ip, r2, #1
90020730:	fb00 7001 	mla	r0, r0, r1, r7
90020734:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90020738:	b280      	uxth	r0, r0
9002073a:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
9002073e:	b29b      	uxth	r3, r3
90020740:	1c42      	adds	r2, r0, #1
90020742:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90020746:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002074a:	ea42 020c 	orr.w	r2, r2, ip
9002074e:	f103 0c01 	add.w	ip, r3, #1
90020752:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90020756:	095b      	lsrs	r3, r3, #5
90020758:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002075c:	431a      	orrs	r2, r3
9002075e:	f8a9 2000 	strh.w	r2, [r9]
90020762:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90020764:	f109 0902 	add.w	r9, r9, #2
90020768:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002076a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002076e:	441a      	add	r2, r3
90020770:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90020772:	9229      	str	r2, [sp, #164]	@ 0xa4
90020774:	441d      	add	r5, r3
90020776:	e63d      	b.n	900203f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90020778:	2800      	cmp	r0, #0
9002077a:	f43f aedd 	beq.w	90020538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002077e:	5c79      	ldrb	r1, [r7, r1]
90020780:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020784:	910b      	str	r1, [sp, #44]	@ 0x2c
90020786:	0e09      	lsrs	r1, r1, #24
90020788:	9114      	str	r1, [sp, #80]	@ 0x50
9002078a:	e6d5      	b.n	90020538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002078c:	b01f      	add	sp, #124	@ 0x7c
9002078e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90020792 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90020792:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020796:	b089      	sub	sp, #36	@ 0x24
90020798:	9101      	str	r1, [sp, #4]
9002079a:	9801      	ldr	r0, [sp, #4]
9002079c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
900207a0:	8800      	ldrh	r0, [r0, #0]
900207a2:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
900207a6:	1206      	asrs	r6, r0, #8
900207a8:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900207ac:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
900207b0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900207b4:	9602      	str	r6, [sp, #8]
900207b6:	10c6      	asrs	r6, r0, #3
900207b8:	00c0      	lsls	r0, r0, #3
900207ba:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900207be:	b2c0      	uxtb	r0, r0
900207c0:	9603      	str	r6, [sp, #12]
900207c2:	9004      	str	r0, [sp, #16]
900207c4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
900207c8:	fb07 100c 	mla	r0, r7, ip, r1
900207cc:	2f00      	cmp	r7, #0
900207ce:	eb02 0e00 	add.w	lr, r2, r0
900207d2:	f2c0 810a 	blt.w	900209ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900207d6:	45b8      	cmp	r8, r7
900207d8:	f340 8107 	ble.w	900209ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900207dc:	2900      	cmp	r1, #0
900207de:	f2c0 8102 	blt.w	900209e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900207e2:	458c      	cmp	ip, r1
900207e4:	f340 80ff 	ble.w	900209e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900207e8:	5c12      	ldrb	r2, [r2, r0]
900207ea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900207ee:	1c4a      	adds	r2, r1, #1
900207f0:	f100 80fe 	bmi.w	900209f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900207f4:	4594      	cmp	ip, r2
900207f6:	f340 80fb 	ble.w	900209f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900207fa:	2d00      	cmp	r5, #0
900207fc:	f000 80fa 	beq.w	900209f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90020800:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020804:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90020808:	3701      	adds	r7, #1
9002080a:	f100 80f7 	bmi.w	900209fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002080e:	45b8      	cmp	r8, r7
90020810:	f340 80f4 	ble.w	900209fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90020814:	2c00      	cmp	r4, #0
90020816:	f000 80f4 	beq.w	90020a02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
9002081a:	2900      	cmp	r1, #0
9002081c:	eb0e 020c 	add.w	r2, lr, ip
90020820:	f2c0 80ea 	blt.w	900209f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90020824:	458c      	cmp	ip, r1
90020826:	f340 80e7 	ble.w	900209f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002082a:	f81e 700c 	ldrb.w	r7, [lr, ip]
9002082e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90020832:	3101      	adds	r1, #1
90020834:	f100 80e8 	bmi.w	90020a08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90020838:	458c      	cmp	ip, r1
9002083a:	f340 80e5 	ble.w	90020a08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
9002083e:	2d00      	cmp	r5, #0
90020840:	f000 80e4 	beq.w	90020a0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90020844:	7852      	ldrb	r2, [r2, #1]
90020846:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9002084a:	0e0b      	lsrs	r3, r1, #24
9002084c:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90020850:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90020854:	9300      	str	r3, [sp, #0]
90020856:	b2a4      	uxth	r4, r4
90020858:	b2ab      	uxth	r3, r5
9002085a:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
9002085e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90020862:	fb03 f904 	mul.w	r9, r3, r4
90020866:	011b      	lsls	r3, r3, #4
90020868:	fb0a f505 	mul.w	r5, sl, r5
9002086c:	ea4f 6817 	mov.w	r8, r7, lsr #24
90020870:	eba3 0e09 	sub.w	lr, r3, r9
90020874:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90020878:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
9002087c:	0a28      	lsrs	r0, r5, #8
9002087e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90020882:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90020886:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
9002088a:	fb0a f303 	mul.w	r3, sl, r3
9002088e:	fb08 f707 	mul.w	r7, r8, r7
90020892:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90020896:	4405      	add	r5, r0
90020898:	fb08 fc0c 	mul.w	ip, r8, ip
9002089c:	b2a4      	uxth	r4, r4
9002089e:	0a2d      	lsrs	r5, r5, #8
900208a0:	fa1f fe8e 	uxth.w	lr, lr
900208a4:	1b12      	subs	r2, r2, r4
900208a6:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
900208aa:	b292      	uxth	r2, r2
900208ac:	9005      	str	r0, [sp, #20]
900208ae:	f503 7080 	add.w	r0, r3, #256	@ 0x100
900208b2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900208b6:	ea4f 201c 	mov.w	r0, ip, lsr #8
900208ba:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900208be:	0a1b      	lsrs	r3, r3, #8
900208c0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900208c4:	9306      	str	r3, [sp, #24]
900208c6:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
900208ca:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
900208ce:	4460      	add	r0, ip
900208d0:	fb0b f303 	mul.w	r3, fp, r3
900208d4:	fb0b f606 	mul.w	r6, fp, r6
900208d8:	0a00      	lsrs	r0, r0, #8
900208da:	0a1d      	lsrs	r5, r3, #8
900208dc:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
900208e0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900208e4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900208e8:	441d      	add	r5, r3
900208ea:	f506 7380 	add.w	r3, r6, #256	@ 0x100
900208ee:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900208f2:	f507 7380 	add.w	r3, r7, #256	@ 0x100
900208f6:	0a2d      	lsrs	r5, r5, #8
900208f8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
900208fc:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90020900:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90020904:	0a36      	lsrs	r6, r6, #8
90020906:	0a1b      	lsrs	r3, r3, #8
90020908:	fb05 f50e 	mul.w	r5, r5, lr
9002090c:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90020910:	9307      	str	r3, [sp, #28]
90020912:	0e0b      	lsrs	r3, r1, #24
90020914:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90020918:	fb0e f606 	mul.w	r6, lr, r6
9002091c:	435f      	muls	r7, r3
9002091e:	4359      	muls	r1, r3
90020920:	9b05      	ldr	r3, [sp, #20]
90020922:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020926:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002092a:	fb03 5502 	mla	r5, r3, r2, r5
9002092e:	9b06      	ldr	r3, [sp, #24]
90020930:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90020934:	fb0e fe0b 	mul.w	lr, lr, fp
90020938:	44bc      	add	ip, r7
9002093a:	f501 7780 	add.w	r7, r1, #256	@ 0x100
9002093e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020942:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90020946:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002094a:	0a09      	lsrs	r1, r1, #8
9002094c:	fb0c 5509 	mla	r5, ip, r9, r5
90020950:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90020954:	fb00 5504 	mla	r5, r0, r4, r5
90020958:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
9002095c:	9b07      	ldr	r3, [sp, #28]
9002095e:	fb02 6000 	mla	r0, r2, r0, r6
90020962:	0a2d      	lsrs	r5, r5, #8
90020964:	fb02 e20a 	mla	r2, r2, sl, lr
90020968:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002096c:	fb09 0001 	mla	r0, r9, r1, r0
90020970:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90020974:	fb04 0003 	mla	r0, r4, r3, r0
90020978:	9b00      	ldr	r3, [sp, #0]
9002097a:	fb04 2408 	mla	r4, r4, r8, r2
9002097e:	9a04      	ldr	r2, [sp, #16]
90020980:	0a00      	lsrs	r0, r0, #8
90020982:	fb09 4903 	mla	r9, r9, r3, r4
90020986:	9b02      	ldr	r3, [sp, #8]
90020988:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
9002098c:	ea6f 2929 	mvn.w	r9, r9, asr #8
90020990:	4305      	orrs	r5, r0
90020992:	fa5f f989 	uxtb.w	r9, r9
90020996:	fb03 f109 	mul.w	r1, r3, r9
9002099a:	9b03      	ldr	r3, [sp, #12]
9002099c:	fb03 f309 	mul.w	r3, r3, r9
900209a0:	fb02 f909 	mul.w	r9, r2, r9
900209a4:	1c4a      	adds	r2, r1, #1
900209a6:	1c58      	adds	r0, r3, #1
900209a8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900209ac:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900209b0:	0c2a      	lsrs	r2, r5, #16
900209b2:	0a2b      	lsrs	r3, r5, #8
900209b4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900209b8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900209bc:	0212      	lsls	r2, r2, #8
900209be:	00db      	lsls	r3, r3, #3
900209c0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900209c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900209c8:	4313      	orrs	r3, r2
900209ca:	f109 0201 	add.w	r2, r9, #1
900209ce:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900209d2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900209d6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900209da:	431d      	orrs	r5, r3
900209dc:	9b01      	ldr	r3, [sp, #4]
900209de:	801d      	strh	r5, [r3, #0]
900209e0:	b009      	add	sp, #36	@ 0x24
900209e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900209e6:	2000      	movs	r0, #0
900209e8:	e701      	b.n	900207ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900209ea:	2600      	movs	r6, #0
900209ec:	4630      	mov	r0, r6
900209ee:	e70b      	b.n	90020808 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900209f0:	2600      	movs	r6, #0
900209f2:	e709      	b.n	90020808 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900209f4:	462e      	mov	r6, r5
900209f6:	e707      	b.n	90020808 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900209f8:	2700      	movs	r7, #0
900209fa:	e71a      	b.n	90020832 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
900209fc:	2100      	movs	r1, #0
900209fe:	460f      	mov	r7, r1
90020a00:	e723      	b.n	9002084a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020a02:	4621      	mov	r1, r4
90020a04:	4627      	mov	r7, r4
90020a06:	e720      	b.n	9002084a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020a08:	2100      	movs	r1, #0
90020a0a:	e71e      	b.n	9002084a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020a0c:	4629      	mov	r1, r5
90020a0e:	e71c      	b.n	9002084a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90020a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020a14:	b09b      	sub	sp, #108	@ 0x6c
90020a16:	9218      	str	r2, [sp, #96]	@ 0x60
90020a18:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90020a1a:	9019      	str	r0, [sp, #100]	@ 0x64
90020a1c:	9116      	str	r1, [sp, #88]	@ 0x58
90020a1e:	6850      	ldr	r0, [r2, #4]
90020a20:	9307      	str	r3, [sp, #28]
90020a22:	6812      	ldr	r2, [r2, #0]
90020a24:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90020a26:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90020a2a:	fb00 1303 	mla	r3, r0, r3, r1
90020a2e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020a32:	930a      	str	r3, [sp, #40]	@ 0x28
90020a34:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90020a36:	681b      	ldr	r3, [r3, #0]
90020a38:	930f      	str	r3, [sp, #60]	@ 0x3c
90020a3a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90020a3c:	685e      	ldr	r6, [r3, #4]
90020a3e:	3604      	adds	r6, #4
90020a40:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90020a42:	2b00      	cmp	r3, #0
90020a44:	dc03      	bgt.n	90020a4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90020a46:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90020a48:	2b00      	cmp	r3, #0
90020a4a:	f340 8373 	ble.w	90021134 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90020a4e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90020a50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020a54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020a58:	1e48      	subs	r0, r1, #1
90020a5a:	1e57      	subs	r7, r2, #1
90020a5c:	9b07      	ldr	r3, [sp, #28]
90020a5e:	2b00      	cmp	r3, #0
90020a60:	f340 818f 	ble.w	90020d82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90020a64:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90020a66:	142b      	asrs	r3, r5, #16
90020a68:	ea5f 4c24 	movs.w	ip, r4, asr #16
90020a6c:	d406      	bmi.n	90020a7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90020a6e:	4584      	cmp	ip, r0
90020a70:	da04      	bge.n	90020a7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90020a72:	2b00      	cmp	r3, #0
90020a74:	db02      	blt.n	90020a7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90020a76:	42bb      	cmp	r3, r7
90020a78:	f2c0 8184 	blt.w	90020d84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90020a7c:	f11c 0c01 	adds.w	ip, ip, #1
90020a80:	f100 8172 	bmi.w	90020d68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020a84:	4561      	cmp	r1, ip
90020a86:	f2c0 816f 	blt.w	90020d68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020a8a:	3301      	adds	r3, #1
90020a8c:	f100 816c 	bmi.w	90020d68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020a90:	429a      	cmp	r2, r3
90020a92:	f2c0 8169 	blt.w	90020d68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020a96:	9b07      	ldr	r3, [sp, #28]
90020a98:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90020a9a:	9317      	str	r3, [sp, #92]	@ 0x5c
90020a9c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90020a9e:	2b00      	cmp	r3, #0
90020aa0:	f340 818e 	ble.w	90020dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90020aa4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90020aa6:	ea4f 4c25 	mov.w	ip, r5, asr #16
90020aaa:	f3c5 3003 	ubfx	r0, r5, #12, #4
90020aae:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020ab2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90020ab4:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90020ab8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90020aba:	141b      	asrs	r3, r3, #16
90020abc:	f100 81d1 	bmi.w	90020e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020ac0:	f101 38ff 	add.w	r8, r1, #4294967295
90020ac4:	4543      	cmp	r3, r8
90020ac6:	f280 81cc 	bge.w	90020e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020aca:	f1bc 0f00 	cmp.w	ip, #0
90020ace:	f2c0 81c8 	blt.w	90020e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020ad2:	f10e 38ff 	add.w	r8, lr, #4294967295
90020ad6:	45c4      	cmp	ip, r8
90020ad8:	f280 81c3 	bge.w	90020e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020adc:	b209      	sxth	r1, r1
90020ade:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90020ae0:	fb0c 3301 	mla	r3, ip, r1, r3
90020ae4:	eb04 0803 	add.w	r8, r4, r3
90020ae8:	5ce3      	ldrb	r3, [r4, r3]
90020aea:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90020aee:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90020af2:	2a00      	cmp	r2, #0
90020af4:	f000 81aa 	beq.w	90020e4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90020af8:	f898 c001 	ldrb.w	ip, [r8, #1]
90020afc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90020b00:	940b      	str	r4, [sp, #44]	@ 0x2c
90020b02:	0e24      	lsrs	r4, r4, #24
90020b04:	9412      	str	r4, [sp, #72]	@ 0x48
90020b06:	b178      	cbz	r0, 90020b28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020b08:	eb08 0c01 	add.w	ip, r8, r1
90020b0c:	f818 1001 	ldrb.w	r1, [r8, r1]
90020b10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020b14:	9108      	str	r1, [sp, #32]
90020b16:	0e09      	lsrs	r1, r1, #24
90020b18:	9110      	str	r1, [sp, #64]	@ 0x40
90020b1a:	f89c 1001 	ldrb.w	r1, [ip, #1]
90020b1e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020b22:	910c      	str	r1, [sp, #48]	@ 0x30
90020b24:	0e09      	lsrs	r1, r1, #24
90020b26:	9113      	str	r1, [sp, #76]	@ 0x4c
90020b28:	b292      	uxth	r2, r2
90020b2a:	9912      	ldr	r1, [sp, #72]	@ 0x48
90020b2c:	b280      	uxth	r0, r0
90020b2e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90020b30:	fb02 f900 	mul.w	r9, r2, r0
90020b34:	0112      	lsls	r2, r2, #4
90020b36:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90020b3a:	eba2 0809 	sub.w	r8, r2, r9
90020b3e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90020b42:	b280      	uxth	r0, r0
90020b44:	fa1f f888 	uxth.w	r8, r8
90020b48:	1a12      	subs	r2, r2, r0
90020b4a:	fb08 f101 	mul.w	r1, r8, r1
90020b4e:	b292      	uxth	r2, r2
90020b50:	fb02 110e 	mla	r1, r2, lr, r1
90020b54:	fb00 1104 	mla	r1, r0, r4, r1
90020b58:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90020b5a:	fb09 1104 	mla	r1, r9, r4, r1
90020b5e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90020b62:	2900      	cmp	r1, #0
90020b64:	f000 80f5 	beq.w	90020d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020b68:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90020b6c:	d01b      	beq.n	90020ba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90020b6e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90020b72:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90020b76:	fb0e fa0a 	mul.w	sl, lr, sl
90020b7a:	fb0e fe03 	mul.w	lr, lr, r3
90020b7e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020b82:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90020b86:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90020b8a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90020b8e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020b92:	4453      	add	r3, sl
90020b94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020b98:	0a1b      	lsrs	r3, r3, #8
90020b9a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90020b9e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90020ba2:	ea43 030c 	orr.w	r3, r3, ip
90020ba6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020ba8:	2cff      	cmp	r4, #255	@ 0xff
90020baa:	d021      	beq.n	90020bf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90020bac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90020bae:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90020bb2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020bb4:	fb04 fb0b 	mul.w	fp, r4, fp
90020bb8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90020bba:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020bbe:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90020bc0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020bc4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90020bc8:	fb04 fa0a 	mul.w	sl, r4, sl
90020bcc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020bd0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90020bd4:	44de      	add	lr, fp
90020bd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020bda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020bde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020be2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020be6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90020bea:	ea4e 040a 	orr.w	r4, lr, sl
90020bee:	940b      	str	r4, [sp, #44]	@ 0x2c
90020bf0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90020bf2:	2cff      	cmp	r4, #255	@ 0xff
90020bf4:	d021      	beq.n	90020c3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90020bf6:	9c08      	ldr	r4, [sp, #32]
90020bf8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90020bfc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90020bfe:	fb04 fb0b 	mul.w	fp, r4, fp
90020c02:	9c08      	ldr	r4, [sp, #32]
90020c04:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020c08:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90020c0a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020c0e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90020c12:	fb04 fa0a 	mul.w	sl, r4, sl
90020c16:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020c1a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90020c1e:	44de      	add	lr, fp
90020c20:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020c24:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020c28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020c2c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020c30:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90020c34:	ea4e 040a 	orr.w	r4, lr, sl
90020c38:	9408      	str	r4, [sp, #32]
90020c3a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90020c3c:	2cff      	cmp	r4, #255	@ 0xff
90020c3e:	d021      	beq.n	90020c84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90020c40:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90020c42:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90020c46:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90020c48:	fb04 fb0b 	mul.w	fp, r4, fp
90020c4c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90020c4e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020c52:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90020c54:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020c58:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90020c5c:	fb04 fa0a 	mul.w	sl, r4, sl
90020c60:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020c64:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90020c68:	44de      	add	lr, fp
90020c6a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020c6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020c72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020c76:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90020c7a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90020c7e:	ea4e 040a 	orr.w	r4, lr, sl
90020c82:	940c      	str	r4, [sp, #48]	@ 0x30
90020c84:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90020c86:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90020c8a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90020c8e:	43c9      	mvns	r1, r1
90020c90:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90020c94:	9c08      	ldr	r4, [sp, #32]
90020c96:	fb08 fc0c 	mul.w	ip, r8, ip
90020c9a:	fb02 cc0e 	mla	ip, r2, lr, ip
90020c9e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90020ca2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90020ca4:	fb00 cc0e 	mla	ip, r0, lr, ip
90020ca8:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90020cac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90020cae:	fb09 cc0e 	mla	ip, r9, lr, ip
90020cb2:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90020cb6:	fb08 f80e 	mul.w	r8, r8, lr
90020cba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020cbe:	fa5f fe81 	uxtb.w	lr, r1
90020cc2:	fb02 8303 	mla	r3, r2, r3, r8
90020cc6:	9a08      	ldr	r2, [sp, #32]
90020cc8:	f8b7 8000 	ldrh.w	r8, [r7]
90020ccc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90020cd0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90020cd4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90020cd6:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90020cda:	fb00 330a 	mla	r3, r0, sl, r3
90020cde:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90020ce2:	ea4f 2228 	mov.w	r2, r8, asr #8
90020ce6:	fb09 3900 	mla	r9, r9, r0, r3
90020cea:	ea4f 00e8 	mov.w	r0, r8, asr #3
90020cee:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90020cf2:	b2c9      	uxtb	r1, r1
90020cf4:	ea4f 2919 	mov.w	r9, r9, lsr #8
90020cf8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90020cfc:	fb02 f20e 	mul.w	r2, r2, lr
90020d00:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90020d04:	fb00 f00e 	mul.w	r0, r0, lr
90020d08:	1c53      	adds	r3, r2, #1
90020d0a:	fb01 f10e 	mul.w	r1, r1, lr
90020d0e:	ea4c 0c09 	orr.w	ip, ip, r9
90020d12:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90020d16:	ea4f 431c 	mov.w	r3, ip, lsr #16
90020d1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020d1e:	4a60      	ldr	r2, [pc, #384]	@ (90020ea0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90020d20:	b2db      	uxtb	r3, r3
90020d22:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90020d26:	1c43      	adds	r3, r0, #1
90020d28:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020d2c:	ea4f 231c 	mov.w	r3, ip, lsr #8
90020d30:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90020d34:	00db      	lsls	r3, r3, #3
90020d36:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020d3a:	4313      	orrs	r3, r2
90020d3c:	1c4a      	adds	r2, r1, #1
90020d3e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020d42:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90020d46:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90020d4a:	ea4c 0c03 	orr.w	ip, ip, r3
90020d4e:	f8a7 c000 	strh.w	ip, [r7]
90020d52:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90020d54:	3702      	adds	r7, #2
90020d56:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90020d58:	441a      	add	r2, r3
90020d5a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90020d5c:	441d      	add	r5, r3
90020d5e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90020d60:	9225      	str	r2, [sp, #148]	@ 0x94
90020d62:	3b01      	subs	r3, #1
90020d64:	9317      	str	r3, [sp, #92]	@ 0x5c
90020d66:	e699      	b.n	90020a9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020d68:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90020d6a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90020d6c:	441c      	add	r4, r3
90020d6e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90020d70:	441d      	add	r5, r3
90020d72:	9b07      	ldr	r3, [sp, #28]
90020d74:	9425      	str	r4, [sp, #148]	@ 0x94
90020d76:	3b01      	subs	r3, #1
90020d78:	9307      	str	r3, [sp, #28]
90020d7a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020d7c:	3302      	adds	r3, #2
90020d7e:	930a      	str	r3, [sp, #40]	@ 0x28
90020d80:	e66c      	b.n	90020a5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90020d82:	d024      	beq.n	90020dce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90020d84:	9b07      	ldr	r3, [sp, #28]
90020d86:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90020d88:	3b01      	subs	r3, #1
90020d8a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90020d8c:	fb00 4003 	mla	r0, r0, r3, r4
90020d90:	1400      	asrs	r0, r0, #16
90020d92:	f53f ae80 	bmi.w	90020a96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020d96:	3901      	subs	r1, #1
90020d98:	4288      	cmp	r0, r1
90020d9a:	f6bf ae7c 	bge.w	90020a96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020d9e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90020da0:	fb01 5303 	mla	r3, r1, r3, r5
90020da4:	141b      	asrs	r3, r3, #16
90020da6:	f53f ae76 	bmi.w	90020a96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020daa:	3a01      	subs	r2, #1
90020dac:	4293      	cmp	r3, r2
90020dae:	f6bf ae72 	bge.w	90020a96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020db2:	f8dd b01c 	ldr.w	fp, [sp, #28]
90020db6:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90020dba:	f1bb 0f00 	cmp.w	fp, #0
90020dbe:	dc71      	bgt.n	90020ea4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90020dc0:	9b07      	ldr	r3, [sp, #28]
90020dc2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90020dc6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020dc8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90020dcc:	930a      	str	r3, [sp, #40]	@ 0x28
90020dce:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90020dd0:	2b00      	cmp	r3, #0
90020dd2:	f340 81af 	ble.w	90021134 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90020dd6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90020dda:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90020ddc:	ee30 0a04 	vadd.f32	s0, s0, s8
90020de0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020de4:	eef0 6a62 	vmov.f32	s13, s5
90020de8:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020dec:	ee31 1a05 	vadd.f32	s2, s2, s10
90020df0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020df4:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90020df8:	eef0 6a43 	vmov.f32	s13, s6
90020dfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020e00:	ee16 5a90 	vmov	r5, s13
90020e04:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020e08:	ee61 7a27 	vmul.f32	s15, s2, s15
90020e0c:	ee77 2a62 	vsub.f32	s5, s14, s5
90020e10:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020e14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020e18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020e1c:	ee12 2a90 	vmov	r2, s5
90020e20:	eef0 2a47 	vmov.f32	s5, s14
90020e24:	fb92 f3f3 	sdiv	r3, r2, r3
90020e28:	ee13 2a10 	vmov	r2, s6
90020e2c:	9327      	str	r3, [sp, #156]	@ 0x9c
90020e2e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90020e30:	eeb0 3a67 	vmov.f32	s6, s15
90020e34:	fb92 f3f3 	sdiv	r3, r2, r3
90020e38:	9328      	str	r3, [sp, #160]	@ 0xa0
90020e3a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90020e3c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90020e3e:	3b01      	subs	r3, #1
90020e40:	9316      	str	r3, [sp, #88]	@ 0x58
90020e42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90020e44:	bf08      	it	eq
90020e46:	4613      	moveq	r3, r2
90020e48:	9307      	str	r3, [sp, #28]
90020e4a:	e5f9      	b.n	90020a40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90020e4c:	2800      	cmp	r0, #0
90020e4e:	f43f ae6b 	beq.w	90020b28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020e52:	f818 1001 	ldrb.w	r1, [r8, r1]
90020e56:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020e5a:	9108      	str	r1, [sp, #32]
90020e5c:	0e09      	lsrs	r1, r1, #24
90020e5e:	9110      	str	r1, [sp, #64]	@ 0x40
90020e60:	e662      	b.n	90020b28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020e62:	f113 0801 	adds.w	r8, r3, #1
90020e66:	f53f af74 	bmi.w	90020d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020e6a:	4541      	cmp	r1, r8
90020e6c:	f6ff af71 	blt.w	90020d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020e70:	f11c 0801 	adds.w	r8, ip, #1
90020e74:	f53f af6d 	bmi.w	90020d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020e78:	45c6      	cmp	lr, r8
90020e7a:	f6ff af6a 	blt.w	90020d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020e7e:	b209      	sxth	r1, r1
90020e80:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90020e84:	fa0f f38e 	sxth.w	r3, lr
90020e88:	9100      	str	r1, [sp, #0]
90020e8a:	4639      	mov	r1, r7
90020e8c:	9301      	str	r3, [sp, #4]
90020e8e:	4633      	mov	r3, r6
90020e90:	e9cd 2004 	strd	r2, r0, [sp, #16]
90020e94:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90020e96:	9819      	ldr	r0, [sp, #100]	@ 0x64
90020e98:	f7ff fc7b 	bl	90020792 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90020e9c:	e759      	b.n	90020d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020e9e:	bf00      	nop
90020ea0:	fffff800 	.word	0xfffff800
90020ea4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90020ea6:	f3c5 3003 	ubfx	r0, r5, #12, #4
90020eaa:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90020eac:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020eb0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90020eb2:	1427      	asrs	r7, r4, #16
90020eb4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90020eb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020eba:	142b      	asrs	r3, r5, #16
90020ebc:	fb01 7303 	mla	r3, r1, r3, r7
90020ec0:	18e7      	adds	r7, r4, r3
90020ec2:	5ce3      	ldrb	r3, [r4, r3]
90020ec4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90020ec8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020ecc:	2a00      	cmp	r2, #0
90020ece:	f000 8127 	beq.w	90021120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90020ed2:	f897 e001 	ldrb.w	lr, [r7, #1]
90020ed6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90020eda:	940d      	str	r4, [sp, #52]	@ 0x34
90020edc:	0e24      	lsrs	r4, r4, #24
90020ede:	9414      	str	r4, [sp, #80]	@ 0x50
90020ee0:	b170      	cbz	r0, 90020f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020ee2:	eb07 0e01 	add.w	lr, r7, r1
90020ee6:	5c79      	ldrb	r1, [r7, r1]
90020ee8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020eec:	9109      	str	r1, [sp, #36]	@ 0x24
90020eee:	0e09      	lsrs	r1, r1, #24
90020ef0:	9111      	str	r1, [sp, #68]	@ 0x44
90020ef2:	f89e 1001 	ldrb.w	r1, [lr, #1]
90020ef6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020efa:	910e      	str	r1, [sp, #56]	@ 0x38
90020efc:	0e09      	lsrs	r1, r1, #24
90020efe:	9115      	str	r1, [sp, #84]	@ 0x54
90020f00:	b292      	uxth	r2, r2
90020f02:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90020f04:	b280      	uxth	r0, r0
90020f06:	fb02 f800 	mul.w	r8, r2, r0
90020f0a:	0112      	lsls	r2, r2, #4
90020f0c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90020f10:	eba2 0e08 	sub.w	lr, r2, r8
90020f14:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90020f18:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90020f1a:	b280      	uxth	r0, r0
90020f1c:	fa1f fe8e 	uxth.w	lr, lr
90020f20:	1a09      	subs	r1, r1, r0
90020f22:	fb0e f202 	mul.w	r2, lr, r2
90020f26:	b289      	uxth	r1, r1
90020f28:	fb01 220c 	mla	r2, r1, ip, r2
90020f2c:	fb00 2204 	mla	r2, r0, r4, r2
90020f30:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90020f32:	fb08 2204 	mla	r2, r8, r4, r2
90020f36:	f3c2 2207 	ubfx	r2, r2, #8, #8
90020f3a:	2a00      	cmp	r2, #0
90020f3c:	f000 80e5 	beq.w	9002110a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90020f40:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90020f44:	d019      	beq.n	90020f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90020f46:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90020f4a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90020f4e:	fb0c fa0a 	mul.w	sl, ip, sl
90020f52:	fb0c fc03 	mul.w	ip, ip, r3
90020f56:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020f5a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90020f5e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90020f62:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90020f66:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020f6a:	4453      	add	r3, sl
90020f6c:	0a3f      	lsrs	r7, r7, #8
90020f6e:	0a1b      	lsrs	r3, r3, #8
90020f70:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90020f74:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90020f78:	433b      	orrs	r3, r7
90020f7a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90020f7c:	2cff      	cmp	r4, #255	@ 0xff
90020f7e:	d020      	beq.n	90020fc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90020f80:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90020f82:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90020f86:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90020f88:	4367      	muls	r7, r4
90020f8a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90020f8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020f90:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020f94:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90020f96:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90020f9a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90020f9e:	fb04 fa0a 	mul.w	sl, r4, sl
90020fa2:	44bc      	add	ip, r7
90020fa4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90020fa8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020fac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020fb0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90020fb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020fb8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90020fbc:	ea4c 040a 	orr.w	r4, ip, sl
90020fc0:	940d      	str	r4, [sp, #52]	@ 0x34
90020fc2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90020fc4:	2cff      	cmp	r4, #255	@ 0xff
90020fc6:	d020      	beq.n	9002100a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90020fc8:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90020fca:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90020fce:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90020fd0:	4367      	muls	r7, r4
90020fd2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90020fd4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020fd8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90020fdc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90020fde:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90020fe2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90020fe6:	fb04 fa0a 	mul.w	sl, r4, sl
90020fea:	44bc      	add	ip, r7
90020fec:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90020ff0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020ff4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020ff8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90020ffc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021000:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90021004:	ea4c 040a 	orr.w	r4, ip, sl
90021008:	9409      	str	r4, [sp, #36]	@ 0x24
9002100a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002100c:	2cff      	cmp	r4, #255	@ 0xff
9002100e:	d020      	beq.n	90021052 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90021010:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021012:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021016:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021018:	4367      	muls	r7, r4
9002101a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002101c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021020:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90021024:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90021026:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002102a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002102e:	fb04 fa0a 	mul.w	sl, r4, sl
90021032:	44bc      	add	ip, r7
90021034:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90021038:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002103c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021040:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90021044:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021048:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002104c:	ea4c 040a 	orr.w	r4, ip, sl
90021050:	940e      	str	r4, [sp, #56]	@ 0x38
90021052:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021054:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90021058:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002105c:	43d2      	mvns	r2, r2
9002105e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90021062:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90021064:	b2d2      	uxtb	r2, r2
90021066:	fb0e f707 	mul.w	r7, lr, r7
9002106a:	fb01 770c 	mla	r7, r1, ip, r7
9002106e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90021072:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021074:	fb00 770c 	mla	r7, r0, ip, r7
90021078:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002107c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002107e:	fb08 770c 	mla	r7, r8, ip, r7
90021082:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90021086:	fb0e fe0c 	mul.w	lr, lr, ip
9002108a:	0a3f      	lsrs	r7, r7, #8
9002108c:	fb01 e303 	mla	r3, r1, r3, lr
90021090:	9909      	ldr	r1, [sp, #36]	@ 0x24
90021092:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90021096:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002109a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9002109c:	fb00 330a 	mla	r3, r0, sl, r3
900210a0:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900210a4:	fb08 3c0c 	mla	ip, r8, ip, r3
900210a8:	f8b9 3000 	ldrh.w	r3, [r9]
900210ac:	1218      	asrs	r0, r3, #8
900210ae:	10d9      	asrs	r1, r3, #3
900210b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900210b4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900210b8:	00db      	lsls	r3, r3, #3
900210ba:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900210be:	4350      	muls	r0, r2
900210c0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900210c4:	b2db      	uxtb	r3, r3
900210c6:	4351      	muls	r1, r2
900210c8:	ea47 070c 	orr.w	r7, r7, ip
900210cc:	4353      	muls	r3, r2
900210ce:	1c42      	adds	r2, r0, #1
900210d0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900210d4:	0c3a      	lsrs	r2, r7, #16
900210d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900210da:	4a18      	ldr	r2, [pc, #96]	@ (9002113c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
900210dc:	b2c0      	uxtb	r0, r0
900210de:	ea02 2000 	and.w	r0, r2, r0, lsl #8
900210e2:	1c4a      	adds	r2, r1, #1
900210e4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900210e8:	0a3a      	lsrs	r2, r7, #8
900210ea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900210ee:	00c9      	lsls	r1, r1, #3
900210f0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900210f4:	4301      	orrs	r1, r0
900210f6:	1c58      	adds	r0, r3, #1
900210f8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900210fc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90021100:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90021104:	4308      	orrs	r0, r1
90021106:	f8a9 0000 	strh.w	r0, [r9]
9002110a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002110c:	f109 0902 	add.w	r9, r9, #2
90021110:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90021112:	f10b 3bff 	add.w	fp, fp, #4294967295
90021116:	441a      	add	r2, r3
90021118:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002111a:	9225      	str	r2, [sp, #148]	@ 0x94
9002111c:	441d      	add	r5, r3
9002111e:	e64c      	b.n	90020dba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90021120:	2800      	cmp	r0, #0
90021122:	f43f aeed 	beq.w	90020f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90021126:	5c79      	ldrb	r1, [r7, r1]
90021128:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002112c:	9109      	str	r1, [sp, #36]	@ 0x24
9002112e:	0e09      	lsrs	r1, r1, #24
90021130:	9111      	str	r1, [sp, #68]	@ 0x44
90021132:	e6e5      	b.n	90020f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90021134:	b01b      	add	sp, #108	@ 0x6c
90021136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002113a:	bf00      	nop
9002113c:	fffff800 	.word	0xfffff800

90021140 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90021140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021144:	b085      	sub	sp, #20
90021146:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002114a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
9002114e:	2800      	cmp	r0, #0
90021150:	9103      	str	r1, [sp, #12]
90021152:	fb00 7406 	mla	r4, r0, r6, r7
90021156:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002115a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
9002115e:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90021162:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90021166:	eb03 0904 	add.w	r9, r3, r4
9002116a:	9501      	str	r5, [sp, #4]
9002116c:	f2c0 8150 	blt.w	90021410 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90021170:	4583      	cmp	fp, r0
90021172:	f340 814d 	ble.w	90021410 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90021176:	2f00      	cmp	r7, #0
90021178:	f2c0 8146 	blt.w	90021408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002117c:	42be      	cmp	r6, r7
9002117e:	f340 8143 	ble.w	90021408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90021182:	f813 c004 	ldrb.w	ip, [r3, r4]
90021186:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
9002118a:	f64f 041f 	movw	r4, #63519	@ 0xf81f
9002118e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90021192:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90021196:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002119a:	4355      	muls	r5, r2
9002119c:	fb0c f203 	mul.w	r2, ip, r3
900211a0:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900211a4:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900211a8:	441d      	add	r5, r3
900211aa:	f102 0320 	add.w	r3, r2, #32
900211ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900211b2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900211b6:	0a1b      	lsrs	r3, r3, #8
900211b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900211bc:	431c      	orrs	r4, r3
900211be:	1c7b      	adds	r3, r7, #1
900211c0:	f100 812b 	bmi.w	9002141a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900211c4:	429e      	cmp	r6, r3
900211c6:	f340 8128 	ble.w	9002141a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900211ca:	2900      	cmp	r1, #0
900211cc:	f000 8128 	beq.w	90021420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
900211d0:	9a01      	ldr	r2, [sp, #4]
900211d2:	f899 3001 	ldrb.w	r3, [r9, #1]
900211d6:	8855      	ldrh	r5, [r2, #2]
900211d8:	ea4f 08e3 	mov.w	r8, r3, asr #3
900211dc:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
900211e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900211e4:	fb08 f802 	mul.w	r8, r8, r2
900211e8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
900211ec:	435d      	muls	r5, r3
900211ee:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
900211f2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900211f6:	44d0      	add	r8, sl
900211f8:	f105 0a20 	add.w	sl, r5, #32
900211fc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90021200:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90021204:	0a2d      	lsrs	r5, r5, #8
90021206:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002120a:	432a      	orrs	r2, r5
9002120c:	3001      	adds	r0, #1
9002120e:	f100 810d 	bmi.w	9002142c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90021212:	4583      	cmp	fp, r0
90021214:	f340 810a 	ble.w	9002142c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90021218:	f1be 0f00 	cmp.w	lr, #0
9002121c:	f000 810b 	beq.w	90021436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90021220:	2f00      	cmp	r7, #0
90021222:	f2c0 8100 	blt.w	90021426 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90021226:	42be      	cmp	r6, r7
90021228:	f340 80fd 	ble.w	90021426 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002122c:	9801      	ldr	r0, [sp, #4]
9002122e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90021232:	f819 5006 	ldrb.w	r5, [r9, r6]
90021236:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002123a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002123e:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90021242:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90021246:	fb0a fa00 	mul.w	sl, sl, r0
9002124a:	fb05 f808 	mul.w	r8, r5, r8
9002124e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90021252:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90021256:	4482      	add	sl, r0
90021258:	f108 0020 	add.w	r0, r8, #32
9002125c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021260:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90021264:	0a00      	lsrs	r0, r0, #8
90021266:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002126a:	ea4b 0b00 	orr.w	fp, fp, r0
9002126e:	3701      	adds	r7, #1
90021270:	f100 80e6 	bmi.w	90021440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90021274:	42be      	cmp	r6, r7
90021276:	f340 80e3 	ble.w	90021440 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
9002127a:	2900      	cmp	r1, #0
9002127c:	f000 80e3 	beq.w	90021446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90021280:	3601      	adds	r6, #1
90021282:	9801      	ldr	r0, [sp, #4]
90021284:	f819 7006 	ldrb.w	r7, [r9, r6]
90021288:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
9002128c:	ea4f 09e7 	mov.w	r9, r7, asr #3
90021290:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90021294:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90021298:	fb09 f906 	mul.w	r9, r9, r6
9002129c:	fb07 f800 	mul.w	r8, r7, r0
900212a0:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900212a4:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900212a8:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900212ac:	44d1      	add	r9, sl
900212ae:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900212b2:	f108 0020 	add.w	r0, r8, #32
900212b6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900212ba:	0a00      	lsrs	r0, r0, #8
900212bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900212c0:	4330      	orrs	r0, r6
900212c2:	b28e      	uxth	r6, r1
900212c4:	fa1f f98e 	uxth.w	r9, lr
900212c8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900212cc:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900212d0:	fb06 f809 	mul.w	r8, r6, r9
900212d4:	0136      	lsls	r6, r6, #4
900212d6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900212da:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900212de:	9601      	str	r6, [sp, #4]
900212e0:	ea4a 0404 	orr.w	r4, sl, r4
900212e4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900212e8:	fa1f f689 	uxth.w	r6, r9
900212ec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900212f0:	fb11 f90e 	smulbb	r9, r1, lr
900212f4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900212f8:	9602      	str	r6, [sp, #8]
900212fa:	4626      	mov	r6, r4
900212fc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90021300:	f1ce 0410 	rsb	r4, lr, #16
90021304:	ea4a 0202 	orr.w	r2, sl, r2
90021308:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002130c:	1a64      	subs	r4, r4, r1
9002130e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90021312:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90021316:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002131a:	434a      	muls	r2, r1
9002131c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90021320:	ea4a 0000 	orr.w	r0, sl, r0
90021324:	9903      	ldr	r1, [sp, #12]
90021326:	fb04 2406 	mla	r4, r4, r6, r2
9002132a:	9e02      	ldr	r6, [sp, #8]
9002132c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90021330:	fb09 4200 	mla	r2, r9, r0, r4
90021334:	ea4f 440b 	mov.w	r4, fp, lsl #16
90021338:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
9002133c:	8808      	ldrh	r0, [r1, #0]
9002133e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021342:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90021346:	ea44 0b0b 	orr.w	fp, r4, fp
9002134a:	9c01      	ldr	r4, [sp, #4]
9002134c:	b289      	uxth	r1, r1
9002134e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90021352:	fb0e 2e0b 	mla	lr, lr, fp, r2
90021356:	1ba4      	subs	r4, r4, r6
90021358:	9e01      	ldr	r6, [sp, #4]
9002135a:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002135e:	eba6 0608 	sub.w	r6, r6, r8
90021362:	b2a4      	uxth	r4, r4
90021364:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021368:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002136c:	b2b6      	uxth	r6, r6
9002136e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021372:	4373      	muls	r3, r6
90021374:	ea42 0e0e 	orr.w	lr, r2, lr
90021378:	fb0c 3304 	mla	r3, ip, r4, r3
9002137c:	9c02      	ldr	r4, [sp, #8]
9002137e:	fa1f f28e 	uxth.w	r2, lr
90021382:	fb04 3505 	mla	r5, r4, r5, r3
90021386:	10d4      	asrs	r4, r2, #3
90021388:	fb08 5707 	mla	r7, r8, r7, r5
9002138c:	1215      	asrs	r5, r2, #8
9002138e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90021392:	00d2      	lsls	r2, r2, #3
90021394:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021398:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002139c:	b2d2      	uxtb	r2, r2
9002139e:	434f      	muls	r7, r1
900213a0:	1c7b      	adds	r3, r7, #1
900213a2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900213a6:	1203      	asrs	r3, r0, #8
900213a8:	ea6f 2717 	mvn.w	r7, r7, lsr #8
900213ac:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900213b0:	b2ff      	uxtb	r7, r7
900213b2:	fb13 f307 	smulbb	r3, r3, r7
900213b6:	fb05 3501 	mla	r5, r5, r1, r3
900213ba:	10c3      	asrs	r3, r0, #3
900213bc:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900213c0:	b2ad      	uxth	r5, r5
900213c2:	fb13 f307 	smulbb	r3, r3, r7
900213c6:	fb04 3401 	mla	r4, r4, r1, r3
900213ca:	00c3      	lsls	r3, r0, #3
900213cc:	b2db      	uxtb	r3, r3
900213ce:	b2a4      	uxth	r4, r4
900213d0:	fb13 f307 	smulbb	r3, r3, r7
900213d4:	fb02 3101 	mla	r1, r2, r1, r3
900213d8:	1c6b      	adds	r3, r5, #1
900213da:	1c62      	adds	r2, r4, #1
900213dc:	b289      	uxth	r1, r1
900213de:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900213e2:	1c4b      	adds	r3, r1, #1
900213e4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900213e8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900213ec:	9a03      	ldr	r2, [sp, #12]
900213ee:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900213f2:	0964      	lsrs	r4, r4, #5
900213f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900213f8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900213fc:	432b      	orrs	r3, r5
900213fe:	4323      	orrs	r3, r4
90021400:	8013      	strh	r3, [r2, #0]
90021402:	b005      	add	sp, #20
90021404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021408:	f04f 0c00 	mov.w	ip, #0
9002140c:	4664      	mov	r4, ip
9002140e:	e6d6      	b.n	900211be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90021410:	2300      	movs	r3, #0
90021412:	469c      	mov	ip, r3
90021414:	461a      	mov	r2, r3
90021416:	461c      	mov	r4, r3
90021418:	e6f8      	b.n	9002120c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002141a:	2300      	movs	r3, #0
9002141c:	461a      	mov	r2, r3
9002141e:	e6f5      	b.n	9002120c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90021420:	460b      	mov	r3, r1
90021422:	460a      	mov	r2, r1
90021424:	e6f2      	b.n	9002120c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90021426:	2500      	movs	r5, #0
90021428:	46ab      	mov	fp, r5
9002142a:	e720      	b.n	9002126e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
9002142c:	2700      	movs	r7, #0
9002142e:	463d      	mov	r5, r7
90021430:	4638      	mov	r0, r7
90021432:	46bb      	mov	fp, r7
90021434:	e745      	b.n	900212c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90021436:	4677      	mov	r7, lr
90021438:	4675      	mov	r5, lr
9002143a:	4670      	mov	r0, lr
9002143c:	46f3      	mov	fp, lr
9002143e:	e740      	b.n	900212c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90021440:	2700      	movs	r7, #0
90021442:	4638      	mov	r0, r7
90021444:	e73d      	b.n	900212c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90021446:	460f      	mov	r7, r1
90021448:	4608      	mov	r0, r1
9002144a:	e73a      	b.n	900212c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

9002144c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002144c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021450:	b097      	sub	sp, #92	@ 0x5c
90021452:	9214      	str	r2, [sp, #80]	@ 0x50
90021454:	9308      	str	r3, [sp, #32]
90021456:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90021458:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9002145c:	9015      	str	r0, [sp, #84]	@ 0x54
9002145e:	9312      	str	r3, [sp, #72]	@ 0x48
90021460:	6850      	ldr	r0, [r2, #4]
90021462:	9111      	str	r1, [sp, #68]	@ 0x44
90021464:	6812      	ldr	r2, [r2, #0]
90021466:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
9002146a:	fb00 1303 	mla	r3, r0, r3, r1
9002146e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021472:	9309      	str	r3, [sp, #36]	@ 0x24
90021474:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021476:	681b      	ldr	r3, [r3, #0]
90021478:	930b      	str	r3, [sp, #44]	@ 0x2c
9002147a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002147c:	685b      	ldr	r3, [r3, #4]
9002147e:	930c      	str	r3, [sp, #48]	@ 0x30
90021480:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90021484:	930a      	str	r3, [sp, #40]	@ 0x28
90021486:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021488:	2b00      	cmp	r3, #0
9002148a:	dc03      	bgt.n	90021494 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002148c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9002148e:	2b00      	cmp	r3, #0
90021490:	f340 83cd 	ble.w	90021c2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90021494:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021496:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002149a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002149e:	1e48      	subs	r0, r1, #1
900214a0:	1e55      	subs	r5, r2, #1
900214a2:	9b08      	ldr	r3, [sp, #32]
900214a4:	2b00      	cmp	r3, #0
900214a6:	f340 81a5 	ble.w	900217f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
900214aa:	9e21      	ldr	r6, [sp, #132]	@ 0x84
900214ac:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900214ae:	1436      	asrs	r6, r6, #16
900214b0:	ea4f 4323 	mov.w	r3, r3, asr #16
900214b4:	d406      	bmi.n	900214c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900214b6:	4286      	cmp	r6, r0
900214b8:	da04      	bge.n	900214c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900214ba:	2b00      	cmp	r3, #0
900214bc:	db02      	blt.n	900214c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900214be:	42ab      	cmp	r3, r5
900214c0:	f2c0 8199 	blt.w	900217f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900214c4:	3601      	adds	r6, #1
900214c6:	f100 8186 	bmi.w	900217d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900214ca:	42b1      	cmp	r1, r6
900214cc:	f2c0 8183 	blt.w	900217d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900214d0:	3301      	adds	r3, #1
900214d2:	f100 8180 	bmi.w	900217d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900214d6:	429a      	cmp	r2, r3
900214d8:	f2c0 817d 	blt.w	900217d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900214dc:	9b08      	ldr	r3, [sp, #32]
900214de:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900214e2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900214e4:	9313      	str	r3, [sp, #76]	@ 0x4c
900214e6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900214e8:	2b00      	cmp	r3, #0
900214ea:	f340 81a6 	ble.w	9002183a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900214ee:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900214f0:	9d21      	ldr	r5, [sp, #132]	@ 0x84
900214f2:	1418      	asrs	r0, r3, #16
900214f4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900214f6:	142d      	asrs	r5, r5, #16
900214f8:	f3c3 3103 	ubfx	r1, r3, #12, #4
900214fc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900214fe:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90021502:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90021504:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021508:	f100 81fa 	bmi.w	90021900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002150c:	f102 3eff 	add.w	lr, r2, #4294967295
90021510:	4575      	cmp	r5, lr
90021512:	f280 81f5 	bge.w	90021900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021516:	2800      	cmp	r0, #0
90021518:	f2c0 81f2 	blt.w	90021900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002151c:	f103 3eff 	add.w	lr, r3, #4294967295
90021520:	4570      	cmp	r0, lr
90021522:	f280 81ed 	bge.w	90021900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021526:	b212      	sxth	r2, r2
90021528:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002152a:	fa1f fe81 	uxth.w	lr, r1
9002152e:	fb00 5002 	mla	r0, r0, r2, r5
90021532:	ea4f 150e 	mov.w	r5, lr, lsl #4
90021536:	eb03 0a00 	add.w	sl, r3, r0
9002153a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002153e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90021542:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021546:	b29b      	uxth	r3, r3
90021548:	f1bc 0f00 	cmp.w	ip, #0
9002154c:	f000 81bb 	beq.w	900218c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90021550:	f81a 4002 	ldrb.w	r4, [sl, r2]
90021554:	eb0a 0b02 	add.w	fp, sl, r2
90021558:	fa1f fa8c 	uxth.w	sl, ip
9002155c:	940d      	str	r4, [sp, #52]	@ 0x34
9002155e:	fb0a fe0e 	mul.w	lr, sl, lr
90021562:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021566:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002156a:	eba5 050e 	sub.w	r5, r5, lr
9002156e:	940e      	str	r4, [sp, #56]	@ 0x38
90021570:	fa1f fa8a 	uxth.w	sl, sl
90021574:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90021576:	b2ad      	uxth	r5, r5
90021578:	eba3 030a 	sub.w	r3, r3, sl
9002157c:	fb08 f505 	mul.w	r5, r8, r5
90021580:	b29b      	uxth	r3, r3
90021582:	fb09 5303 	mla	r3, r9, r3, r5
90021586:	fb0a 3304 	mla	r3, sl, r4, r3
9002158a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002158c:	fb0e 3304 	mla	r3, lr, r4, r3
90021590:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021594:	2b00      	cmp	r3, #0
90021596:	f000 8111 	beq.w	900217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002159a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002159c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900215a0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900215a4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900215a8:	f000 8192 	beq.w	900218d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
900215ac:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900215b0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900215b4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900215b8:	fb0a fe0e 	mul.w	lr, sl, lr
900215bc:	fb09 f000 	mul.w	r0, r9, r0
900215c0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900215c4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900215c8:	f100 0b20 	add.w	fp, r0, #32
900215cc:	44ce      	add	lr, r9
900215ce:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900215d2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900215d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900215da:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900215de:	ea4e 0909 	orr.w	r9, lr, r9
900215e2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900215e6:	8868      	ldrh	r0, [r5, #2]
900215e8:	d019      	beq.n	9002161e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
900215ea:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900215ee:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900215f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900215f6:	fb0a fe0e 	mul.w	lr, sl, lr
900215fa:	fb08 f800 	mul.w	r8, r8, r0
900215fe:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90021602:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90021606:	f108 0b20 	add.w	fp, r8, #32
9002160a:	4486      	add	lr, r0
9002160c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90021610:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021614:	0a00      	lsrs	r0, r0, #8
90021616:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002161a:	ea4e 0000 	orr.w	r0, lr, r0
9002161e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90021622:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90021626:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002162a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002162e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90021632:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90021636:	ea4e 0909 	orr.w	r9, lr, r9
9002163a:	ea4a 0000 	orr.w	r0, sl, r0
9002163e:	f1bc 0f00 	cmp.w	ip, #0
90021642:	f000 8147 	beq.w	900218d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90021646:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002164a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002164c:	3a01      	subs	r2, #1
9002164e:	2cff      	cmp	r4, #255	@ 0xff
90021650:	ea4f 0242 	mov.w	r2, r2, lsl #1
90021654:	f102 0202 	add.w	r2, r2, #2
90021658:	eb05 0e02 	add.w	lr, r5, r2
9002165c:	5aaa      	ldrh	r2, [r5, r2]
9002165e:	d018      	beq.n	90021692 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90021660:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90021664:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021668:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002166c:	fb04 fa02 	mul.w	sl, r4, r2
90021670:	fb08 f805 	mul.w	r8, r8, r5
90021674:	f10a 0520 	add.w	r5, sl, #32
90021678:	ea06 1258 	and.w	r2, r6, r8, lsr #5
9002167c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90021680:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90021684:	4442      	add	r2, r8
90021686:	0a2d      	lsrs	r5, r5, #8
90021688:	ea06 1252 	and.w	r2, r6, r2, lsr #5
9002168c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021690:	432a      	orrs	r2, r5
90021692:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90021694:	f8be 5002 	ldrh.w	r5, [lr, #2]
90021698:	2cff      	cmp	r4, #255	@ 0xff
9002169a:	d01a      	beq.n	900216d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
9002169c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900216a0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900216a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
900216a8:	fb04 fa05 	mul.w	sl, r4, r5
900216ac:	fb08 f80e 	mul.w	r8, r8, lr
900216b0:	f10a 0e20 	add.w	lr, sl, #32
900216b4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900216b8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900216bc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900216c0:	4445      	add	r5, r8
900216c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900216c6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900216ca:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900216ce:	ea45 050e 	orr.w	r5, r5, lr
900216d2:	fb1c fe01 	smulbb	lr, ip, r1
900216d6:	f1cc 0810 	rsb	r8, ip, #16
900216da:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900216de:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900216e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
900216e6:	eba8 0801 	sub.w	r8, r8, r1
900216ea:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900216ee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900216f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900216f6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900216fa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900216fe:	ea4a 0202 	orr.w	r2, sl, r2
90021702:	4341      	muls	r1, r0
90021704:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90021708:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002170c:	fb09 1108 	mla	r1, r9, r8, r1
90021710:	ea4b 0505 	orr.w	r5, fp, r5
90021714:	fb0c 1102 	mla	r1, ip, r2, r1
90021718:	fb0e 1e05 	mla	lr, lr, r5, r1
9002171c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90021720:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021724:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021728:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002172c:	ea42 0e0e 	orr.w	lr, r2, lr
90021730:	fa1f f28e 	uxth.w	r2, lr
90021734:	2bff      	cmp	r3, #255	@ 0xff
90021736:	d103      	bne.n	90021740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90021738:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002173a:	29ff      	cmp	r1, #255	@ 0xff
9002173c:	f000 80de 	beq.w	900218fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90021740:	990a      	ldr	r1, [sp, #40]	@ 0x28
90021742:	1215      	asrs	r5, r2, #8
90021744:	8838      	ldrh	r0, [r7, #0]
90021746:	434b      	muls	r3, r1
90021748:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002174c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002174e:	f103 0c01 	add.w	ip, r3, #1
90021752:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90021756:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002175a:	fa5f fc83 	uxtb.w	ip, r3
9002175e:	1203      	asrs	r3, r0, #8
90021760:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90021764:	fb13 f30c 	smulbb	r3, r3, ip
90021768:	fb05 3501 	mla	r5, r5, r1, r3
9002176c:	10c3      	asrs	r3, r0, #3
9002176e:	10d1      	asrs	r1, r2, #3
90021770:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90021774:	00d2      	lsls	r2, r2, #3
90021776:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002177a:	b2ad      	uxth	r5, r5
9002177c:	fb13 f30c 	smulbb	r3, r3, ip
90021780:	b2d2      	uxtb	r2, r2
90021782:	fb01 3104 	mla	r1, r1, r4, r3
90021786:	00c3      	lsls	r3, r0, #3
90021788:	b2db      	uxtb	r3, r3
9002178a:	b289      	uxth	r1, r1
9002178c:	fb13 f30c 	smulbb	r3, r3, ip
90021790:	fb02 3304 	mla	r3, r2, r4, r3
90021794:	b29a      	uxth	r2, r3
90021796:	1c6b      	adds	r3, r5, #1
90021798:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002179c:	1c53      	adds	r3, r2, #1
9002179e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900217a2:	1c4a      	adds	r2, r1, #1
900217a4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900217a8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900217ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900217b0:	0949      	lsrs	r1, r1, #5
900217b2:	432b      	orrs	r3, r5
900217b4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900217b8:	430b      	orrs	r3, r1
900217ba:	803b      	strh	r3, [r7, #0]
900217bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900217be:	3702      	adds	r7, #2
900217c0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900217c2:	4413      	add	r3, r2
900217c4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900217c6:	9321      	str	r3, [sp, #132]	@ 0x84
900217c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900217ca:	441a      	add	r2, r3
900217cc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900217ce:	3b01      	subs	r3, #1
900217d0:	9222      	str	r2, [sp, #136]	@ 0x88
900217d2:	9313      	str	r3, [sp, #76]	@ 0x4c
900217d4:	e687      	b.n	900214e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900217d6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900217d8:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
900217da:	9c22      	ldr	r4, [sp, #136]	@ 0x88
900217dc:	4433      	add	r3, r6
900217de:	9321      	str	r3, [sp, #132]	@ 0x84
900217e0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900217e2:	441c      	add	r4, r3
900217e4:	9b08      	ldr	r3, [sp, #32]
900217e6:	3b01      	subs	r3, #1
900217e8:	9422      	str	r4, [sp, #136]	@ 0x88
900217ea:	9308      	str	r3, [sp, #32]
900217ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900217ee:	3302      	adds	r3, #2
900217f0:	9309      	str	r3, [sp, #36]	@ 0x24
900217f2:	e656      	b.n	900214a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900217f4:	d028      	beq.n	90021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900217f6:	9b08      	ldr	r3, [sp, #32]
900217f8:	9823      	ldr	r0, [sp, #140]	@ 0x8c
900217fa:	3b01      	subs	r3, #1
900217fc:	9d21      	ldr	r5, [sp, #132]	@ 0x84
900217fe:	fb00 5003 	mla	r0, r0, r3, r5
90021802:	1400      	asrs	r0, r0, #16
90021804:	f53f ae6a 	bmi.w	900214dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90021808:	3901      	subs	r1, #1
9002180a:	4288      	cmp	r0, r1
9002180c:	f6bf ae66 	bge.w	900214dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90021810:	9924      	ldr	r1, [sp, #144]	@ 0x90
90021812:	9822      	ldr	r0, [sp, #136]	@ 0x88
90021814:	fb01 0303 	mla	r3, r1, r3, r0
90021818:	141b      	asrs	r3, r3, #16
9002181a:	f53f ae5f 	bmi.w	900214dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002181e:	3a01      	subs	r2, #1
90021820:	4293      	cmp	r3, r2
90021822:	f6bf ae5b 	bge.w	900214dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90021826:	9b08      	ldr	r3, [sp, #32]
90021828:	f64f 061f 	movw	r6, #63519	@ 0xf81f
9002182c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90021830:	9313      	str	r3, [sp, #76]	@ 0x4c
90021832:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90021834:	2b00      	cmp	r3, #0
90021836:	f300 8082 	bgt.w	9002193e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
9002183a:	9b08      	ldr	r3, [sp, #32]
9002183c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021840:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021842:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021846:	9309      	str	r3, [sp, #36]	@ 0x24
90021848:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002184a:	2b00      	cmp	r3, #0
9002184c:	f340 81ef 	ble.w	90021c2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90021850:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021854:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021856:	ee30 0a04 	vadd.f32	s0, s0, s8
9002185a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002185e:	eef0 6a62 	vmov.f32	s13, s5
90021862:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021866:	ee31 1a05 	vadd.f32	s2, s2, s10
9002186a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002186e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90021872:	eef0 6a43 	vmov.f32	s13, s6
90021876:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002187a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
9002187e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021882:	ee61 7a27 	vmul.f32	s15, s2, s15
90021886:	ee77 2a62 	vsub.f32	s5, s14, s5
9002188a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002188e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021892:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021896:	ee12 2a90 	vmov	r2, s5
9002189a:	eef0 2a47 	vmov.f32	s5, s14
9002189e:	fb92 f3f3 	sdiv	r3, r2, r3
900218a2:	ee13 2a10 	vmov	r2, s6
900218a6:	9323      	str	r3, [sp, #140]	@ 0x8c
900218a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900218aa:	eeb0 3a67 	vmov.f32	s6, s15
900218ae:	fb92 f3f3 	sdiv	r3, r2, r3
900218b2:	9324      	str	r3, [sp, #144]	@ 0x90
900218b4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900218b6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900218b8:	3b01      	subs	r3, #1
900218ba:	9311      	str	r3, [sp, #68]	@ 0x44
900218bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900218be:	bf08      	it	eq
900218c0:	4613      	moveq	r3, r2
900218c2:	9308      	str	r3, [sp, #32]
900218c4:	e5df      	b.n	90021486 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900218c6:	fb08 f505 	mul.w	r5, r8, r5
900218ca:	fb09 5303 	mla	r3, r9, r3, r5
900218ce:	e65f      	b.n	90021590 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900218d0:	4681      	mov	r9, r0
900218d2:	e686      	b.n	900215e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900218d4:	f1c1 0210 	rsb	r2, r1, #16
900218d8:	4341      	muls	r1, r0
900218da:	fb09 1902 	mla	r9, r9, r2, r1
900218de:	ea4f 0949 	mov.w	r9, r9, lsl #1
900218e2:	ea4f 5259 	mov.w	r2, r9, lsr #21
900218e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
900218ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900218ee:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900218f2:	ea42 0909 	orr.w	r9, r2, r9
900218f6:	fa1f f289 	uxth.w	r2, r9
900218fa:	e71b      	b.n	90021734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900218fc:	803a      	strh	r2, [r7, #0]
900218fe:	e75d      	b.n	900217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021900:	f115 0e01 	adds.w	lr, r5, #1
90021904:	f53f af5a 	bmi.w	900217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021908:	4572      	cmp	r2, lr
9002190a:	f6ff af57 	blt.w	900217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002190e:	f110 0e01 	adds.w	lr, r0, #1
90021912:	f53f af53 	bmi.w	900217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021916:	4573      	cmp	r3, lr
90021918:	f6ff af50 	blt.w	900217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002191c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002191e:	b21b      	sxth	r3, r3
90021920:	b212      	sxth	r2, r2
90021922:	9502      	str	r5, [sp, #8]
90021924:	9301      	str	r3, [sp, #4]
90021926:	9200      	str	r2, [sp, #0]
90021928:	e9cd 0103 	strd	r0, r1, [sp, #12]
9002192c:	e9cd c405 	strd	ip, r4, [sp, #20]
90021930:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90021934:	4639      	mov	r1, r7
90021936:	9815      	ldr	r0, [sp, #84]	@ 0x54
90021938:	f7ff fc02 	bl	90021140 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
9002193c:	e73e      	b.n	900217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002193e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90021940:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021944:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021946:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002194a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002194c:	fa1f fc82 	uxth.w	ip, r2
90021950:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021954:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021956:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002195a:	141f      	asrs	r7, r3, #16
9002195c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002195e:	141b      	asrs	r3, r3, #16
90021960:	fb01 3707 	mla	r7, r1, r7, r3
90021964:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021966:	eb03 0a07 	add.w	sl, r3, r7
9002196a:	f813 9007 	ldrb.w	r9, [r3, r7]
9002196e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90021972:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021976:	b29b      	uxth	r3, r3
90021978:	2d00      	cmp	r5, #0
9002197a:	f000 813d 	beq.w	90021bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
9002197e:	f81a 4001 	ldrb.w	r4, [sl, r1]
90021982:	eb0a 0b01 	add.w	fp, sl, r1
90021986:	fa1f fa85 	uxth.w	sl, r5
9002198a:	940f      	str	r4, [sp, #60]	@ 0x3c
9002198c:	fb0a fc0c 	mul.w	ip, sl, ip
90021990:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021994:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90021998:	eba0 000c 	sub.w	r0, r0, ip
9002199c:	9410      	str	r4, [sp, #64]	@ 0x40
9002199e:	fa1f fa8a 	uxth.w	sl, sl
900219a2:	b280      	uxth	r0, r0
900219a4:	eba3 030a 	sub.w	r3, r3, sl
900219a8:	fb08 f000 	mul.w	r0, r8, r0
900219ac:	b29b      	uxth	r3, r3
900219ae:	fb09 0303 	mla	r3, r9, r3, r0
900219b2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900219b4:	fb0a 3300 	mla	r3, sl, r0, r3
900219b8:	fb0c 3304 	mla	r3, ip, r4, r3
900219bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
900219c0:	2b00      	cmp	r3, #0
900219c2:	f000 810b 	beq.w	90021bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900219c6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900219c8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900219cc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900219ce:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900219d2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900219d6:	f000 8114 	beq.w	90021c02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900219da:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900219de:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900219e2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900219e6:	fb0a fc0c 	mul.w	ip, sl, ip
900219ea:	fb09 f707 	mul.w	r7, r9, r7
900219ee:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900219f2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900219f6:	f107 0b20 	add.w	fp, r7, #32
900219fa:	44cc      	add	ip, r9
900219fc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90021a00:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90021a04:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021a08:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90021a0c:	ea4c 0909 	orr.w	r9, ip, r9
90021a10:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90021a14:	8847      	ldrh	r7, [r0, #2]
90021a16:	d019      	beq.n	90021a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90021a18:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90021a1c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90021a20:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90021a24:	fb0a fc0c 	mul.w	ip, sl, ip
90021a28:	fb08 f807 	mul.w	r8, r8, r7
90021a2c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90021a30:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90021a34:	f108 0b20 	add.w	fp, r8, #32
90021a38:	44bc      	add	ip, r7
90021a3a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90021a3e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90021a42:	0a3f      	lsrs	r7, r7, #8
90021a44:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90021a48:	ea4c 0707 	orr.w	r7, ip, r7
90021a4c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90021a50:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90021a54:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90021a58:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90021a5c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021a60:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90021a64:	ea4c 0909 	orr.w	r9, ip, r9
90021a68:	ea4a 0707 	orr.w	r7, sl, r7
90021a6c:	2d00      	cmp	r5, #0
90021a6e:	f000 80ca 	beq.w	90021c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90021a72:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90021a76:	3901      	subs	r1, #1
90021a78:	0049      	lsls	r1, r1, #1
90021a7a:	3102      	adds	r1, #2
90021a7c:	eb00 0c01 	add.w	ip, r0, r1
90021a80:	5a41      	ldrh	r1, [r0, r1]
90021a82:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90021a84:	28ff      	cmp	r0, #255	@ 0xff
90021a86:	d019      	beq.n	90021abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90021a88:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90021a8c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90021a8e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021a92:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021a96:	fb04 fa01 	mul.w	sl, r4, r1
90021a9a:	fb08 f800 	mul.w	r8, r8, r0
90021a9e:	f10a 0020 	add.w	r0, sl, #32
90021aa2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90021aa6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90021aaa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90021aae:	4441      	add	r1, r8
90021ab0:	0a00      	lsrs	r0, r0, #8
90021ab2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90021ab6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90021aba:	4301      	orrs	r1, r0
90021abc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90021abe:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90021ac2:	2cff      	cmp	r4, #255	@ 0xff
90021ac4:	d01a      	beq.n	90021afc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90021ac6:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90021aca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90021ace:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021ad2:	fb04 fa00 	mul.w	sl, r4, r0
90021ad6:	fb08 f80c 	mul.w	r8, r8, ip
90021ada:	f10a 0c20 	add.w	ip, sl, #32
90021ade:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90021ae2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90021ae6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90021aea:	4440      	add	r0, r8
90021aec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021af0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90021af4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90021af8:	ea40 000c 	orr.w	r0, r0, ip
90021afc:	fb15 fc02 	smulbb	ip, r5, r2
90021b00:	f1c5 0810 	rsb	r8, r5, #16
90021b04:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90021b08:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90021b0c:	ea4f 0cec 	mov.w	ip, ip, asr #3
90021b10:	eba8 0802 	sub.w	r8, r8, r2
90021b14:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90021b18:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90021b1c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90021b20:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90021b24:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90021b28:	ea4a 0101 	orr.w	r1, sl, r1
90021b2c:	437a      	muls	r2, r7
90021b2e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90021b32:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90021b36:	fb09 2208 	mla	r2, r9, r8, r2
90021b3a:	ea4b 0000 	orr.w	r0, fp, r0
90021b3e:	fb05 2201 	mla	r2, r5, r1, r2
90021b42:	fb0c 2200 	mla	r2, ip, r0, r2
90021b46:	0d57      	lsrs	r7, r2, #21
90021b48:	0952      	lsrs	r2, r2, #5
90021b4a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90021b4e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021b52:	433a      	orrs	r2, r7
90021b54:	2bff      	cmp	r3, #255	@ 0xff
90021b56:	b292      	uxth	r2, r2
90021b58:	d102      	bne.n	90021b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90021b5a:	9912      	ldr	r1, [sp, #72]	@ 0x48
90021b5c:	29ff      	cmp	r1, #255	@ 0xff
90021b5e:	d063      	beq.n	90021c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90021b60:	980a      	ldr	r0, [sp, #40]	@ 0x28
90021b62:	1215      	asrs	r5, r2, #8
90021b64:	f8be 1000 	ldrh.w	r1, [lr]
90021b68:	4343      	muls	r3, r0
90021b6a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90021b6c:	10cf      	asrs	r7, r1, #3
90021b6e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90021b72:	1c58      	adds	r0, r3, #1
90021b74:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021b78:	eb00 2323 	add.w	r3, r0, r3, asr #8
90021b7c:	1208      	asrs	r0, r1, #8
90021b7e:	ea6f 2323 	mvn.w	r3, r3, asr #8
90021b82:	00c9      	lsls	r1, r1, #3
90021b84:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90021b88:	b2db      	uxtb	r3, r3
90021b8a:	b2c9      	uxtb	r1, r1
90021b8c:	fb10 f003 	smulbb	r0, r0, r3
90021b90:	fb11 f103 	smulbb	r1, r1, r3
90021b94:	fb05 0504 	mla	r5, r5, r4, r0
90021b98:	10d0      	asrs	r0, r2, #3
90021b9a:	fb17 f703 	smulbb	r7, r7, r3
90021b9e:	00d2      	lsls	r2, r2, #3
90021ba0:	b2ad      	uxth	r5, r5
90021ba2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90021ba6:	b2d2      	uxtb	r2, r2
90021ba8:	fb00 7004 	mla	r0, r0, r4, r7
90021bac:	1c6b      	adds	r3, r5, #1
90021bae:	fb02 1204 	mla	r2, r2, r4, r1
90021bb2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021bb6:	b292      	uxth	r2, r2
90021bb8:	b280      	uxth	r0, r0
90021bba:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90021bbe:	1c57      	adds	r7, r2, #1
90021bc0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90021bc4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021bc8:	433d      	orrs	r5, r7
90021bca:	1c47      	adds	r7, r0, #1
90021bcc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90021bd0:	097f      	lsrs	r7, r7, #5
90021bd2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90021bd6:	433d      	orrs	r5, r7
90021bd8:	f8ae 5000 	strh.w	r5, [lr]
90021bdc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90021bde:	f10e 0e02 	add.w	lr, lr, #2
90021be2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90021be4:	4413      	add	r3, r2
90021be6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90021be8:	9321      	str	r3, [sp, #132]	@ 0x84
90021bea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021bec:	441a      	add	r2, r3
90021bee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90021bf0:	3b01      	subs	r3, #1
90021bf2:	9222      	str	r2, [sp, #136]	@ 0x88
90021bf4:	9313      	str	r3, [sp, #76]	@ 0x4c
90021bf6:	e61c      	b.n	90021832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90021bf8:	fb08 f000 	mul.w	r0, r8, r0
90021bfc:	fb09 0303 	mla	r3, r9, r3, r0
90021c00:	e6dc      	b.n	900219bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90021c02:	46b9      	mov	r9, r7
90021c04:	e704      	b.n	90021a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90021c06:	f1c2 0110 	rsb	r1, r2, #16
90021c0a:	437a      	muls	r2, r7
90021c0c:	fb09 2901 	mla	r9, r9, r1, r2
90021c10:	ea4f 0949 	mov.w	r9, r9, lsl #1
90021c14:	ea4f 5059 	mov.w	r0, r9, lsr #21
90021c18:	ea4f 1259 	mov.w	r2, r9, lsr #5
90021c1c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90021c20:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021c24:	4302      	orrs	r2, r0
90021c26:	e795      	b.n	90021b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90021c28:	f8ae 2000 	strh.w	r2, [lr]
90021c2c:	e7d6      	b.n	90021bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90021c2e:	b017      	add	sp, #92	@ 0x5c
90021c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021c38:	b085      	sub	sp, #20
90021c3a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90021c3e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90021c42:	2800      	cmp	r0, #0
90021c44:	9103      	str	r1, [sp, #12]
90021c46:	fb00 7406 	mla	r4, r0, r6, r7
90021c4a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90021c4e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90021c52:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90021c56:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90021c5a:	eb02 0904 	add.w	r9, r2, r4
90021c5e:	9501      	str	r5, [sp, #4]
90021c60:	f2c0 8141 	blt.w	90021ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90021c64:	4583      	cmp	fp, r0
90021c66:	f340 813e 	ble.w	90021ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90021c6a:	2f00      	cmp	r7, #0
90021c6c:	f2c0 8137 	blt.w	90021ede <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90021c70:	42be      	cmp	r6, r7
90021c72:	f340 8134 	ble.w	90021ede <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90021c76:	f812 c004 	ldrb.w	ip, [r2, r4]
90021c7a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90021c7e:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90021c82:	ea4f 02ec 	mov.w	r2, ip, asr #3
90021c86:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90021c8a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021c8e:	4355      	muls	r5, r2
90021c90:	fb0c f203 	mul.w	r2, ip, r3
90021c94:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90021c98:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90021c9c:	441d      	add	r5, r3
90021c9e:	f102 0320 	add.w	r3, r2, #32
90021ca2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021ca6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90021caa:	0a1b      	lsrs	r3, r3, #8
90021cac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021cb0:	431c      	orrs	r4, r3
90021cb2:	1c7b      	adds	r3, r7, #1
90021cb4:	f100 811c 	bmi.w	90021ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90021cb8:	429e      	cmp	r6, r3
90021cba:	f340 8119 	ble.w	90021ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90021cbe:	2900      	cmp	r1, #0
90021cc0:	f000 8119 	beq.w	90021ef6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90021cc4:	9a01      	ldr	r2, [sp, #4]
90021cc6:	f899 3001 	ldrb.w	r3, [r9, #1]
90021cca:	8855      	ldrh	r5, [r2, #2]
90021ccc:	ea4f 08e3 	mov.w	r8, r3, asr #3
90021cd0:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90021cd4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021cd8:	fb08 f802 	mul.w	r8, r8, r2
90021cdc:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90021ce0:	435d      	muls	r5, r3
90021ce2:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90021ce6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90021cea:	44d0      	add	r8, sl
90021cec:	f105 0a20 	add.w	sl, r5, #32
90021cf0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90021cf4:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90021cf8:	0a2d      	lsrs	r5, r5, #8
90021cfa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021cfe:	432a      	orrs	r2, r5
90021d00:	3001      	adds	r0, #1
90021d02:	f100 80fe 	bmi.w	90021f02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021d06:	4583      	cmp	fp, r0
90021d08:	f340 80fb 	ble.w	90021f02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021d0c:	f1be 0f00 	cmp.w	lr, #0
90021d10:	f000 80fc 	beq.w	90021f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90021d14:	2f00      	cmp	r7, #0
90021d16:	f2c0 80f1 	blt.w	90021efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90021d1a:	42be      	cmp	r6, r7
90021d1c:	f340 80ee 	ble.w	90021efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90021d20:	9801      	ldr	r0, [sp, #4]
90021d22:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90021d26:	f819 5006 	ldrb.w	r5, [r9, r6]
90021d2a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90021d2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90021d32:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90021d36:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90021d3a:	fb0a fa00 	mul.w	sl, sl, r0
90021d3e:	fb05 f808 	mul.w	r8, r5, r8
90021d42:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90021d46:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90021d4a:	4482      	add	sl, r0
90021d4c:	f108 0020 	add.w	r0, r8, #32
90021d50:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021d54:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90021d58:	0a00      	lsrs	r0, r0, #8
90021d5a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90021d5e:	ea4b 0b00 	orr.w	fp, fp, r0
90021d62:	3701      	adds	r7, #1
90021d64:	f100 80d7 	bmi.w	90021f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90021d68:	42be      	cmp	r6, r7
90021d6a:	f340 80d4 	ble.w	90021f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90021d6e:	2900      	cmp	r1, #0
90021d70:	f000 80d4 	beq.w	90021f1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90021d74:	3601      	adds	r6, #1
90021d76:	9801      	ldr	r0, [sp, #4]
90021d78:	f819 7006 	ldrb.w	r7, [r9, r6]
90021d7c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90021d80:	ea4f 09e7 	mov.w	r9, r7, asr #3
90021d84:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90021d88:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90021d8c:	fb09 f906 	mul.w	r9, r9, r6
90021d90:	fb07 f800 	mul.w	r8, r7, r0
90021d94:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90021d98:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90021d9c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90021da0:	44d1      	add	r9, sl
90021da2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90021da6:	f108 0020 	add.w	r0, r8, #32
90021daa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021dae:	0a00      	lsrs	r0, r0, #8
90021db0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90021db4:	4330      	orrs	r0, r6
90021db6:	b28e      	uxth	r6, r1
90021db8:	fa1f f98e 	uxth.w	r9, lr
90021dbc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90021dc0:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90021dc4:	fb06 f809 	mul.w	r8, r6, r9
90021dc8:	0136      	lsls	r6, r6, #4
90021dca:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90021dce:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90021dd2:	9601      	str	r6, [sp, #4]
90021dd4:	ea4a 0404 	orr.w	r4, sl, r4
90021dd8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021ddc:	fa1f f689 	uxth.w	r6, r9
90021de0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021de4:	fb11 f90e 	smulbb	r9, r1, lr
90021de8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90021dec:	9602      	str	r6, [sp, #8]
90021dee:	4626      	mov	r6, r4
90021df0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90021df4:	f1ce 0410 	rsb	r4, lr, #16
90021df8:	ea4a 0202 	orr.w	r2, sl, r2
90021dfc:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021e00:	1a64      	subs	r4, r4, r1
90021e02:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90021e06:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90021e0a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90021e0e:	434a      	muls	r2, r1
90021e10:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90021e14:	ea4a 0000 	orr.w	r0, sl, r0
90021e18:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90021e1c:	fb04 2406 	mla	r4, r4, r6, r2
90021e20:	9903      	ldr	r1, [sp, #12]
90021e22:	fb09 4200 	mla	r2, r9, r0, r4
90021e26:	ea4f 440b 	mov.w	r4, fp, lsl #16
90021e2a:	9801      	ldr	r0, [sp, #4]
90021e2c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90021e30:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90021e34:	8809      	ldrh	r1, [r1, #0]
90021e36:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90021e3a:	ea44 0b0b 	orr.w	fp, r4, fp
90021e3e:	9c02      	ldr	r4, [sp, #8]
90021e40:	1b00      	subs	r0, r0, r4
90021e42:	9c01      	ldr	r4, [sp, #4]
90021e44:	fb0e 2e0b 	mla	lr, lr, fp, r2
90021e48:	eba4 0608 	sub.w	r6, r4, r8
90021e4c:	b280      	uxth	r0, r0
90021e4e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90021e52:	b2b6      	uxth	r6, r6
90021e54:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021e58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021e5c:	4373      	muls	r3, r6
90021e5e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021e62:	fb0c 3300 	mla	r3, ip, r0, r3
90021e66:	9802      	ldr	r0, [sp, #8]
90021e68:	ea42 0e0e 	orr.w	lr, r2, lr
90021e6c:	fb00 3505 	mla	r5, r0, r5, r3
90021e70:	120b      	asrs	r3, r1, #8
90021e72:	10c8      	asrs	r0, r1, #3
90021e74:	fb08 5707 	mla	r7, r8, r7, r5
90021e78:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90021e7c:	00c9      	lsls	r1, r1, #3
90021e7e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90021e82:	ea6f 2727 	mvn.w	r7, r7, asr #8
90021e86:	fa1f f28e 	uxth.w	r2, lr
90021e8a:	b2c9      	uxtb	r1, r1
90021e8c:	b2ff      	uxtb	r7, r7
90021e8e:	437b      	muls	r3, r7
90021e90:	4378      	muls	r0, r7
90021e92:	434f      	muls	r7, r1
90021e94:	1c59      	adds	r1, r3, #1
90021e96:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021e9a:	1213      	asrs	r3, r2, #8
90021e9c:	f023 0307 	bic.w	r3, r3, #7
90021ea0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90021ea4:	1c41      	adds	r1, r0, #1
90021ea6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90021eaa:	10d1      	asrs	r1, r2, #3
90021eac:	021b      	lsls	r3, r3, #8
90021eae:	f021 0103 	bic.w	r1, r1, #3
90021eb2:	00d2      	lsls	r2, r2, #3
90021eb4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90021eb8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90021ebc:	00c9      	lsls	r1, r1, #3
90021ebe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021ec2:	430b      	orrs	r3, r1
90021ec4:	1c79      	adds	r1, r7, #1
90021ec6:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90021eca:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90021ece:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021ed2:	431a      	orrs	r2, r3
90021ed4:	9b03      	ldr	r3, [sp, #12]
90021ed6:	801a      	strh	r2, [r3, #0]
90021ed8:	b005      	add	sp, #20
90021eda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021ede:	f04f 0c00 	mov.w	ip, #0
90021ee2:	4664      	mov	r4, ip
90021ee4:	e6e5      	b.n	90021cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90021ee6:	2300      	movs	r3, #0
90021ee8:	469c      	mov	ip, r3
90021eea:	461a      	mov	r2, r3
90021eec:	461c      	mov	r4, r3
90021eee:	e707      	b.n	90021d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021ef0:	2300      	movs	r3, #0
90021ef2:	461a      	mov	r2, r3
90021ef4:	e704      	b.n	90021d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021ef6:	460b      	mov	r3, r1
90021ef8:	460a      	mov	r2, r1
90021efa:	e701      	b.n	90021d00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021efc:	2500      	movs	r5, #0
90021efe:	46ab      	mov	fp, r5
90021f00:	e72f      	b.n	90021d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90021f02:	2700      	movs	r7, #0
90021f04:	463d      	mov	r5, r7
90021f06:	4638      	mov	r0, r7
90021f08:	46bb      	mov	fp, r7
90021f0a:	e754      	b.n	90021db6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021f0c:	4677      	mov	r7, lr
90021f0e:	4675      	mov	r5, lr
90021f10:	4670      	mov	r0, lr
90021f12:	46f3      	mov	fp, lr
90021f14:	e74f      	b.n	90021db6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021f16:	2700      	movs	r7, #0
90021f18:	4638      	mov	r0, r7
90021f1a:	e74c      	b.n	90021db6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021f1c:	460f      	mov	r7, r1
90021f1e:	4608      	mov	r0, r1
90021f20:	e749      	b.n	90021db6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90021f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f28:	b093      	sub	sp, #76	@ 0x4c
90021f2a:	9210      	str	r2, [sp, #64]	@ 0x40
90021f2c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021f2e:	9011      	str	r0, [sp, #68]	@ 0x44
90021f30:	910e      	str	r1, [sp, #56]	@ 0x38
90021f32:	6850      	ldr	r0, [r2, #4]
90021f34:	9306      	str	r3, [sp, #24]
90021f36:	6812      	ldr	r2, [r2, #0]
90021f38:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90021f3c:	fb00 1303 	mla	r3, r0, r3, r1
90021f40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021f44:	9307      	str	r3, [sp, #28]
90021f46:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021f48:	681b      	ldr	r3, [r3, #0]
90021f4a:	9308      	str	r3, [sp, #32]
90021f4c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021f4e:	685b      	ldr	r3, [r3, #4]
90021f50:	9309      	str	r3, [sp, #36]	@ 0x24
90021f52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021f54:	2b00      	cmp	r3, #0
90021f56:	dc03      	bgt.n	90021f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021f58:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021f5a:	2b00      	cmp	r3, #0
90021f5c:	f340 83b6 	ble.w	900226cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90021f60:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021f62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021f66:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021f6a:	1e48      	subs	r0, r1, #1
90021f6c:	1e55      	subs	r5, r2, #1
90021f6e:	9b06      	ldr	r3, [sp, #24]
90021f70:	2b00      	cmp	r3, #0
90021f72:	f340 8165 	ble.w	90022240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90021f76:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
90021f78:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021f7a:	1436      	asrs	r6, r6, #16
90021f7c:	ea4f 4323 	mov.w	r3, r3, asr #16
90021f80:	d406      	bmi.n	90021f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021f82:	4286      	cmp	r6, r0
90021f84:	da04      	bge.n	90021f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021f86:	2b00      	cmp	r3, #0
90021f88:	db02      	blt.n	90021f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021f8a:	42ab      	cmp	r3, r5
90021f8c:	f2c0 8159 	blt.w	90022242 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90021f90:	3601      	adds	r6, #1
90021f92:	f100 8146 	bmi.w	90022222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021f96:	42b1      	cmp	r1, r6
90021f98:	f2c0 8143 	blt.w	90022222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021f9c:	3301      	adds	r3, #1
90021f9e:	f100 8140 	bmi.w	90022222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021fa2:	429a      	cmp	r2, r3
90021fa4:	f2c0 813d 	blt.w	90022222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021fa8:	9b06      	ldr	r3, [sp, #24]
90021faa:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90021fae:	9f07      	ldr	r7, [sp, #28]
90021fb0:	930f      	str	r3, [sp, #60]	@ 0x3c
90021fb2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021fb4:	2b00      	cmp	r3, #0
90021fb6:	f340 8166 	ble.w	90022286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90021fba:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021fbc:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90021fbe:	1418      	asrs	r0, r3, #16
90021fc0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90021fc2:	142d      	asrs	r5, r5, #16
90021fc4:	f3c3 3103 	ubfx	r1, r3, #12, #4
90021fc8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021fca:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90021fce:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021fd0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021fd4:	f100 81f0 	bmi.w	900223b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021fd8:	f102 3eff 	add.w	lr, r2, #4294967295
90021fdc:	4575      	cmp	r5, lr
90021fde:	f280 81eb 	bge.w	900223b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021fe2:	2800      	cmp	r0, #0
90021fe4:	f2c0 81e8 	blt.w	900223b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021fe8:	f103 3eff 	add.w	lr, r3, #4294967295
90021fec:	4570      	cmp	r0, lr
90021fee:	f280 81e3 	bge.w	900223b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021ff2:	b212      	sxth	r2, r2
90021ff4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021ff6:	fa1f fe81 	uxth.w	lr, r1
90021ffa:	fb00 5002 	mla	r0, r0, r2, r5
90021ffe:	ea4f 150e 	mov.w	r5, lr, lsl #4
90022002:	eb03 0a00 	add.w	sl, r3, r0
90022006:	f813 9000 	ldrb.w	r9, [r3, r0]
9002200a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
9002200e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022012:	b29b      	uxth	r3, r3
90022014:	f1bc 0f00 	cmp.w	ip, #0
90022018:	f000 817b 	beq.w	90022312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002201c:	f81a 4002 	ldrb.w	r4, [sl, r2]
90022020:	eb0a 0b02 	add.w	fp, sl, r2
90022024:	fa1f fa8c 	uxth.w	sl, ip
90022028:	940a      	str	r4, [sp, #40]	@ 0x28
9002202a:	fb0a fe0e 	mul.w	lr, sl, lr
9002202e:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022032:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90022036:	eba5 050e 	sub.w	r5, r5, lr
9002203a:	940b      	str	r4, [sp, #44]	@ 0x2c
9002203c:	fa1f fa8a 	uxth.w	sl, sl
90022040:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022042:	b2ad      	uxth	r5, r5
90022044:	eba3 030a 	sub.w	r3, r3, sl
90022048:	fb08 f505 	mul.w	r5, r8, r5
9002204c:	b29b      	uxth	r3, r3
9002204e:	fb09 5303 	mla	r3, r9, r3, r5
90022052:	fb0a 3304 	mla	r3, sl, r4, r3
90022056:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022058:	fb0e 3304 	mla	r3, lr, r4, r3
9002205c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022060:	2b00      	cmp	r3, #0
90022062:	f000 80d1 	beq.w	90022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90022066:	9c08      	ldr	r4, [sp, #32]
90022068:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9002206c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90022070:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90022074:	f000 8152 	beq.w	9002231c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90022078:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
9002207c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022080:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022084:	fb0a fe0e 	mul.w	lr, sl, lr
90022088:	fb09 f000 	mul.w	r0, r9, r0
9002208c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90022090:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90022094:	f100 0b20 	add.w	fp, r0, #32
90022098:	44ce      	add	lr, r9
9002209a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002209e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900220a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
900220a6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900220aa:	ea4e 0909 	orr.w	r9, lr, r9
900220ae:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900220b2:	8868      	ldrh	r0, [r5, #2]
900220b4:	d019      	beq.n	900220ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900220b6:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900220ba:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900220be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900220c2:	fb0a fe0e 	mul.w	lr, sl, lr
900220c6:	fb08 f800 	mul.w	r8, r8, r0
900220ca:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900220ce:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900220d2:	f108 0b20 	add.w	fp, r8, #32
900220d6:	4486      	add	lr, r0
900220d8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900220dc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900220e0:	0a00      	lsrs	r0, r0, #8
900220e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900220e6:	ea4e 0000 	orr.w	r0, lr, r0
900220ea:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900220ee:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900220f2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900220f6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900220fa:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900220fe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022102:	ea4e 0909 	orr.w	r9, lr, r9
90022106:	ea4a 0000 	orr.w	r0, sl, r0
9002210a:	f1bc 0f00 	cmp.w	ip, #0
9002210e:	f000 8107 	beq.w	90022320 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90022112:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90022116:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022118:	3a01      	subs	r2, #1
9002211a:	2cff      	cmp	r4, #255	@ 0xff
9002211c:	ea4f 0242 	mov.w	r2, r2, lsl #1
90022120:	f102 0202 	add.w	r2, r2, #2
90022124:	eb05 0e02 	add.w	lr, r5, r2
90022128:	5aaa      	ldrh	r2, [r5, r2]
9002212a:	d018      	beq.n	9002215e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
9002212c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90022130:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022134:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022138:	fb04 fa02 	mul.w	sl, r4, r2
9002213c:	fb08 f805 	mul.w	r8, r8, r5
90022140:	f10a 0520 	add.w	r5, sl, #32
90022144:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90022148:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002214c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90022150:	4442      	add	r2, r8
90022152:	0a2d      	lsrs	r5, r5, #8
90022154:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90022158:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002215c:	432a      	orrs	r2, r5
9002215e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022160:	f8be 5002 	ldrh.w	r5, [lr, #2]
90022164:	2cff      	cmp	r4, #255	@ 0xff
90022166:	d01a      	beq.n	9002219e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90022168:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
9002216c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022170:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022174:	fb04 fa05 	mul.w	sl, r4, r5
90022178:	fb08 f80e 	mul.w	r8, r8, lr
9002217c:	f10a 0e20 	add.w	lr, sl, #32
90022180:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022184:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90022188:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9002218c:	4445      	add	r5, r8
9002218e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022192:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90022196:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002219a:	ea45 050e 	orr.w	r5, r5, lr
9002219e:	fb1c fe01 	smulbb	lr, ip, r1
900221a2:	f1cc 0810 	rsb	r8, ip, #16
900221a6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900221aa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900221ae:	ea4f 0eee 	mov.w	lr, lr, asr #3
900221b2:	eba8 0801 	sub.w	r8, r8, r1
900221b6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900221ba:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900221be:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900221c2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900221c6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900221ca:	ea4a 0202 	orr.w	r2, sl, r2
900221ce:	4341      	muls	r1, r0
900221d0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900221d4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900221d8:	fb09 1108 	mla	r1, r9, r8, r1
900221dc:	ea4b 0505 	orr.w	r5, fp, r5
900221e0:	fb0c 1102 	mla	r1, ip, r2, r1
900221e4:	fb0e 1e05 	mla	lr, lr, r5, r1
900221e8:	ea4f 525e 	mov.w	r2, lr, lsr #21
900221ec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900221f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900221f4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900221f8:	ea42 0e0e 	orr.w	lr, r2, lr
900221fc:	fa1f f28e 	uxth.w	r2, lr
90022200:	2bff      	cmp	r3, #255	@ 0xff
90022202:	f040 80a1 	bne.w	90022348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90022206:	803a      	strh	r2, [r7, #0]
90022208:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002220a:	3702      	adds	r7, #2
9002220c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
9002220e:	4413      	add	r3, r2
90022210:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90022212:	931d      	str	r3, [sp, #116]	@ 0x74
90022214:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022216:	441a      	add	r2, r3
90022218:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002221a:	3b01      	subs	r3, #1
9002221c:	921e      	str	r2, [sp, #120]	@ 0x78
9002221e:	930f      	str	r3, [sp, #60]	@ 0x3c
90022220:	e6c7      	b.n	90021fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022222:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90022224:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90022226:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
90022228:	4433      	add	r3, r6
9002222a:	931d      	str	r3, [sp, #116]	@ 0x74
9002222c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002222e:	441c      	add	r4, r3
90022230:	9b06      	ldr	r3, [sp, #24]
90022232:	3b01      	subs	r3, #1
90022234:	941e      	str	r4, [sp, #120]	@ 0x78
90022236:	9306      	str	r3, [sp, #24]
90022238:	9b07      	ldr	r3, [sp, #28]
9002223a:	3302      	adds	r3, #2
9002223c:	9307      	str	r3, [sp, #28]
9002223e:	e696      	b.n	90021f6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90022240:	d028      	beq.n	90022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022242:	9b06      	ldr	r3, [sp, #24]
90022244:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90022246:	3b01      	subs	r3, #1
90022248:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
9002224a:	fb00 5003 	mla	r0, r0, r3, r5
9002224e:	1400      	asrs	r0, r0, #16
90022250:	f53f aeaa 	bmi.w	90021fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90022254:	3901      	subs	r1, #1
90022256:	4288      	cmp	r0, r1
90022258:	f6bf aea6 	bge.w	90021fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002225c:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002225e:	981e      	ldr	r0, [sp, #120]	@ 0x78
90022260:	fb01 0303 	mla	r3, r1, r3, r0
90022264:	141b      	asrs	r3, r3, #16
90022266:	f53f ae9f 	bmi.w	90021fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002226a:	3a01      	subs	r2, #1
9002226c:	4293      	cmp	r3, r2
9002226e:	f6bf ae9b 	bge.w	90021fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90022272:	9b06      	ldr	r3, [sp, #24]
90022274:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90022278:	f8dd e01c 	ldr.w	lr, [sp, #28]
9002227c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002227e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022280:	2b00      	cmp	r3, #0
90022282:	f300 80b6 	bgt.w	900223f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90022286:	9b06      	ldr	r3, [sp, #24]
90022288:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002228c:	9b07      	ldr	r3, [sp, #28]
9002228e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022292:	9307      	str	r3, [sp, #28]
90022294:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022296:	2b00      	cmp	r3, #0
90022298:	f340 8218 	ble.w	900226cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
9002229c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900222a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900222a2:	ee30 0a04 	vadd.f32	s0, s0, s8
900222a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900222aa:	eef0 6a62 	vmov.f32	s13, s5
900222ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
900222b2:	ee31 1a05 	vadd.f32	s2, s2, s10
900222b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900222ba:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
900222be:	eef0 6a43 	vmov.f32	s13, s6
900222c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900222c6:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
900222ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
900222ce:	ee61 7a27 	vmul.f32	s15, s2, s15
900222d2:	ee77 2a62 	vsub.f32	s5, s14, s5
900222d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900222da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900222de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900222e2:	ee12 2a90 	vmov	r2, s5
900222e6:	eef0 2a47 	vmov.f32	s5, s14
900222ea:	fb92 f3f3 	sdiv	r3, r2, r3
900222ee:	ee13 2a10 	vmov	r2, s6
900222f2:	931f      	str	r3, [sp, #124]	@ 0x7c
900222f4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900222f6:	eeb0 3a67 	vmov.f32	s6, s15
900222fa:	fb92 f3f3 	sdiv	r3, r2, r3
900222fe:	9320      	str	r3, [sp, #128]	@ 0x80
90022300:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022302:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90022304:	3b01      	subs	r3, #1
90022306:	930e      	str	r3, [sp, #56]	@ 0x38
90022308:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002230a:	bf08      	it	eq
9002230c:	4613      	moveq	r3, r2
9002230e:	9306      	str	r3, [sp, #24]
90022310:	e61f      	b.n	90021f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90022312:	fb08 f505 	mul.w	r5, r8, r5
90022316:	fb09 5303 	mla	r3, r9, r3, r5
9002231a:	e69f      	b.n	9002205c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
9002231c:	4681      	mov	r9, r0
9002231e:	e6c6      	b.n	900220ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90022320:	f1c1 0210 	rsb	r2, r1, #16
90022324:	4341      	muls	r1, r0
90022326:	fb09 1902 	mla	r9, r9, r2, r1
9002232a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002232e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90022332:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022336:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002233a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002233e:	ea42 0909 	orr.w	r9, r2, r9
90022342:	fa1f f289 	uxth.w	r2, r9
90022346:	e75b      	b.n	90022200 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90022348:	f8b7 c000 	ldrh.w	ip, [r7]
9002234c:	43db      	mvns	r3, r3
9002234e:	ea4f 202c 	mov.w	r0, ip, asr #8
90022352:	fa5f fe83 	uxtb.w	lr, r3
90022356:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002235a:	ea4f 05ec 	mov.w	r5, ip, asr #3
9002235e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90022362:	fb00 f00e 	mul.w	r0, r0, lr
90022366:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002236a:	b2db      	uxtb	r3, r3
9002236c:	1c41      	adds	r1, r0, #1
9002236e:	fb05 f50e 	mul.w	r5, r5, lr
90022372:	fb03 f30e 	mul.w	r3, r3, lr
90022376:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002237a:	1211      	asrs	r1, r2, #8
9002237c:	f021 0107 	bic.w	r1, r1, #7
90022380:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90022384:	48d3      	ldr	r0, [pc, #844]	@ (900226d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90022386:	b2c9      	uxtb	r1, r1
90022388:	ea00 2001 	and.w	r0, r0, r1, lsl #8
9002238c:	1c69      	adds	r1, r5, #1
9002238e:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90022392:	10d1      	asrs	r1, r2, #3
90022394:	00d2      	lsls	r2, r2, #3
90022396:	f021 0103 	bic.w	r1, r1, #3
9002239a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002239e:	00c9      	lsls	r1, r1, #3
900223a0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900223a4:	4301      	orrs	r1, r0
900223a6:	1c58      	adds	r0, r3, #1
900223a8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900223ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900223b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900223b4:	430a      	orrs	r2, r1
900223b6:	e726      	b.n	90022206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900223b8:	f115 0e01 	adds.w	lr, r5, #1
900223bc:	f53f af24 	bmi.w	90022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900223c0:	4572      	cmp	r2, lr
900223c2:	f6ff af21 	blt.w	90022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900223c6:	f110 0e01 	adds.w	lr, r0, #1
900223ca:	f53f af1d 	bmi.w	90022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900223ce:	4573      	cmp	r3, lr
900223d0:	f6ff af1a 	blt.w	90022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900223d4:	b21b      	sxth	r3, r3
900223d6:	b212      	sxth	r2, r2
900223d8:	9301      	str	r3, [sp, #4]
900223da:	9200      	str	r2, [sp, #0]
900223dc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
900223e0:	e9cd 5002 	strd	r5, r0, [sp, #8]
900223e4:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
900223e8:	4639      	mov	r1, r7
900223ea:	9811      	ldr	r0, [sp, #68]	@ 0x44
900223ec:	f7ff fc22 	bl	90021c34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900223f0:	e70a      	b.n	90022208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900223f2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900223f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
900223f8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900223fa:	f3c3 3503 	ubfx	r5, r3, #12, #4
900223fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022400:	fa1f fc82 	uxth.w	ip, r2
90022404:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022408:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002240a:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002240e:	141f      	asrs	r7, r3, #16
90022410:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90022412:	141b      	asrs	r3, r3, #16
90022414:	fb01 3707 	mla	r7, r1, r7, r3
90022418:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002241a:	eb03 0a07 	add.w	sl, r3, r7
9002241e:	f813 9007 	ldrb.w	r9, [r3, r7]
90022422:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90022426:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002242a:	b29b      	uxth	r3, r3
9002242c:	2d00      	cmp	r5, #0
9002242e:	f000 80fe 	beq.w	9002262e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90022432:	f81a 4001 	ldrb.w	r4, [sl, r1]
90022436:	eb0a 0b01 	add.w	fp, sl, r1
9002243a:	fa1f fa85 	uxth.w	sl, r5
9002243e:	940c      	str	r4, [sp, #48]	@ 0x30
90022440:	fb0a fc0c 	mul.w	ip, sl, ip
90022444:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022448:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
9002244c:	eba0 000c 	sub.w	r0, r0, ip
90022450:	940d      	str	r4, [sp, #52]	@ 0x34
90022452:	fa1f fa8a 	uxth.w	sl, sl
90022456:	b280      	uxth	r0, r0
90022458:	eba3 030a 	sub.w	r3, r3, sl
9002245c:	fb08 f000 	mul.w	r0, r8, r0
90022460:	b29b      	uxth	r3, r3
90022462:	fb09 0303 	mla	r3, r9, r3, r0
90022466:	980c      	ldr	r0, [sp, #48]	@ 0x30
90022468:	fb0a 3300 	mla	r3, sl, r0, r3
9002246c:	fb0c 3304 	mla	r3, ip, r4, r3
90022470:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022474:	2b00      	cmp	r3, #0
90022476:	f000 80cc 	beq.w	90022612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
9002247a:	9808      	ldr	r0, [sp, #32]
9002247c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90022480:	9c08      	ldr	r4, [sp, #32]
90022482:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90022486:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9002248a:	f000 80d5 	beq.w	90022638 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002248e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90022492:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022496:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002249a:	fb0a fc0c 	mul.w	ip, sl, ip
9002249e:	fb09 f707 	mul.w	r7, r9, r7
900224a2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900224a6:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900224aa:	f107 0b20 	add.w	fp, r7, #32
900224ae:	44cc      	add	ip, r9
900224b0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900224b4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900224b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900224bc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900224c0:	ea4c 0909 	orr.w	r9, ip, r9
900224c4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900224c8:	8847      	ldrh	r7, [r0, #2]
900224ca:	d019      	beq.n	90022500 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900224cc:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900224d0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900224d4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900224d8:	fb0a fc0c 	mul.w	ip, sl, ip
900224dc:	fb08 f807 	mul.w	r8, r8, r7
900224e0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
900224e4:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900224e8:	f108 0b20 	add.w	fp, r8, #32
900224ec:	44bc      	add	ip, r7
900224ee:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900224f2:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900224f6:	0a3f      	lsrs	r7, r7, #8
900224f8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900224fc:	ea4c 0707 	orr.w	r7, ip, r7
90022500:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90022504:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90022508:	ea4f 4a07 	mov.w	sl, r7, lsl #16
9002250c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022510:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90022514:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022518:	ea4c 0909 	orr.w	r9, ip, r9
9002251c:	ea4a 0707 	orr.w	r7, sl, r7
90022520:	2d00      	cmp	r5, #0
90022522:	f000 808b 	beq.w	9002263c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90022526:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002252a:	3901      	subs	r1, #1
9002252c:	0049      	lsls	r1, r1, #1
9002252e:	3102      	adds	r1, #2
90022530:	eb00 0c01 	add.w	ip, r0, r1
90022534:	5a41      	ldrh	r1, [r0, r1]
90022536:	980c      	ldr	r0, [sp, #48]	@ 0x30
90022538:	28ff      	cmp	r0, #255	@ 0xff
9002253a:	d019      	beq.n	90022570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
9002253c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90022540:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90022542:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022546:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002254a:	fb04 fa01 	mul.w	sl, r4, r1
9002254e:	fb08 f800 	mul.w	r8, r8, r0
90022552:	f10a 0020 	add.w	r0, sl, #32
90022556:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9002255a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002255e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90022562:	4441      	add	r1, r8
90022564:	0a00      	lsrs	r0, r0, #8
90022566:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9002256a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002256e:	4301      	orrs	r1, r0
90022570:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022572:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90022576:	2cff      	cmp	r4, #255	@ 0xff
90022578:	d01a      	beq.n	900225b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
9002257a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
9002257e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022582:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022586:	fb04 fa00 	mul.w	sl, r4, r0
9002258a:	fb08 f80c 	mul.w	r8, r8, ip
9002258e:	f10a 0c20 	add.w	ip, sl, #32
90022592:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90022596:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002259a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002259e:	4440      	add	r0, r8
900225a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900225a4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900225a8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900225ac:	ea40 000c 	orr.w	r0, r0, ip
900225b0:	fb15 fc02 	smulbb	ip, r5, r2
900225b4:	f1c5 0810 	rsb	r8, r5, #16
900225b8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900225bc:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900225c0:	ea4f 0cec 	mov.w	ip, ip, asr #3
900225c4:	eba8 0802 	sub.w	r8, r8, r2
900225c8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900225cc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900225d0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900225d4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900225d8:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900225dc:	ea4a 0101 	orr.w	r1, sl, r1
900225e0:	437a      	muls	r2, r7
900225e2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
900225e6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900225ea:	fb09 2208 	mla	r2, r9, r8, r2
900225ee:	ea4b 0000 	orr.w	r0, fp, r0
900225f2:	fb05 2201 	mla	r2, r5, r1, r2
900225f6:	fb0c 2200 	mla	r2, ip, r0, r2
900225fa:	0d57      	lsrs	r7, r2, #21
900225fc:	0952      	lsrs	r2, r2, #5
900225fe:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90022602:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022606:	433a      	orrs	r2, r7
90022608:	2bff      	cmp	r3, #255	@ 0xff
9002260a:	b292      	uxth	r2, r2
9002260c:	d127      	bne.n	9002265e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
9002260e:	f8ae 2000 	strh.w	r2, [lr]
90022612:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90022614:	f10e 0e02 	add.w	lr, lr, #2
90022618:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
9002261a:	4413      	add	r3, r2
9002261c:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
9002261e:	931d      	str	r3, [sp, #116]	@ 0x74
90022620:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022622:	441a      	add	r2, r3
90022624:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022626:	3b01      	subs	r3, #1
90022628:	921e      	str	r2, [sp, #120]	@ 0x78
9002262a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002262c:	e627      	b.n	9002227e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002262e:	fb08 f000 	mul.w	r0, r8, r0
90022632:	fb09 0303 	mla	r3, r9, r3, r0
90022636:	e71b      	b.n	90022470 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90022638:	46b9      	mov	r9, r7
9002263a:	e743      	b.n	900224c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
9002263c:	f1c2 0110 	rsb	r1, r2, #16
90022640:	437a      	muls	r2, r7
90022642:	fb09 2901 	mla	r9, r9, r1, r2
90022646:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002264a:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002264e:	ea4f 1259 	mov.w	r2, r9, lsr #5
90022652:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90022656:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002265a:	4302      	orrs	r2, r0
9002265c:	e7d4      	b.n	90022608 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
9002265e:	f8be 7000 	ldrh.w	r7, [lr]
90022662:	43db      	mvns	r3, r3
90022664:	4c1b      	ldr	r4, [pc, #108]	@ (900226d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90022666:	1238      	asrs	r0, r7, #8
90022668:	fa5f fc83 	uxtb.w	ip, r3
9002266c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90022670:	10fd      	asrs	r5, r7, #3
90022672:	00fb      	lsls	r3, r7, #3
90022674:	fb00 f00c 	mul.w	r0, r0, ip
90022678:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002267c:	b2db      	uxtb	r3, r3
9002267e:	fb05 f10c 	mul.w	r1, r5, ip
90022682:	1c45      	adds	r5, r0, #1
90022684:	fb03 f30c 	mul.w	r3, r3, ip
90022688:	eb05 2010 	add.w	r0, r5, r0, lsr #8
9002268c:	1215      	asrs	r5, r2, #8
9002268e:	f025 0507 	bic.w	r5, r5, #7
90022692:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90022696:	1c4d      	adds	r5, r1, #1
90022698:	eb05 2511 	add.w	r5, r5, r1, lsr #8
9002269c:	10d1      	asrs	r1, r2, #3
9002269e:	b2c0      	uxtb	r0, r0
900226a0:	f021 0103 	bic.w	r1, r1, #3
900226a4:	00d2      	lsls	r2, r2, #3
900226a6:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900226aa:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900226ae:	00c9      	lsls	r1, r1, #3
900226b0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900226b4:	4308      	orrs	r0, r1
900226b6:	1c59      	adds	r1, r3, #1
900226b8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900226bc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900226c0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
900226c4:	4318      	orrs	r0, r3
900226c6:	f8ae 0000 	strh.w	r0, [lr]
900226ca:	e7a2      	b.n	90022612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900226cc:	b013      	add	sp, #76	@ 0x4c
900226ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900226d2:	bf00      	nop
900226d4:	fffff800 	.word	0xfffff800

900226d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
900226d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900226dc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
900226e0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
900226e4:	fb05 4c03 	mla	ip, r5, r3, r4
900226e8:	2d00      	cmp	r5, #0
900226ea:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
900226ee:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900226f2:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
900226f6:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
900226fa:	8808      	ldrh	r0, [r1, #0]
900226fc:	f2c0 80a7 	blt.w	9002284e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90022700:	45aa      	cmp	sl, r5
90022702:	f340 80a4 	ble.w	9002284e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90022706:	2c00      	cmp	r4, #0
90022708:	f2c0 809f 	blt.w	9002284a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002270c:	42a3      	cmp	r3, r4
9002270e:	f340 809c 	ble.w	9002284a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90022712:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90022716:	1c62      	adds	r2, r4, #1
90022718:	f100 809c 	bmi.w	90022854 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002271c:	4293      	cmp	r3, r2
9002271e:	f340 8099 	ble.w	90022854 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90022722:	f1b9 0f00 	cmp.w	r9, #0
90022726:	f000 8095 	beq.w	90022854 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002272a:	f8be c002 	ldrh.w	ip, [lr, #2]
9002272e:	3501      	adds	r5, #1
90022730:	f100 8094 	bmi.w	9002285c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90022734:	45aa      	cmp	sl, r5
90022736:	f340 8091 	ble.w	9002285c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002273a:	2f00      	cmp	r7, #0
9002273c:	f000 808e 	beq.w	9002285c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90022740:	2c00      	cmp	r4, #0
90022742:	f2c0 8089 	blt.w	90022858 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90022746:	42a3      	cmp	r3, r4
90022748:	f340 8086 	ble.w	90022858 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002274c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90022750:	3401      	adds	r4, #1
90022752:	f100 8086 	bmi.w	90022862 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90022756:	42a3      	cmp	r3, r4
90022758:	f340 8083 	ble.w	90022862 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002275c:	f1b9 0f00 	cmp.w	r9, #0
90022760:	d07f      	beq.n	90022862 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90022762:	3301      	adds	r3, #1
90022764:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90022768:	ea4f 4408 	mov.w	r4, r8, lsl #16
9002276c:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90022770:	fb19 fe07 	smulbb	lr, r9, r7
90022774:	f1c7 0210 	rsb	r2, r7, #16
90022778:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002277c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90022780:	eba2 0209 	sub.w	r2, r2, r9
90022784:	ea44 0808 	orr.w	r8, r4, r8
90022788:	ea4f 440c 	mov.w	r4, ip, lsl #16
9002278c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022790:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90022794:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90022798:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9002279c:	ea44 0c0c 	orr.w	ip, r4, ip
900227a0:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900227a4:	fb04 f40c 	mul.w	r4, r4, ip
900227a8:	fb02 4808 	mla	r8, r2, r8, r4
900227ac:	041a      	lsls	r2, r3, #16
900227ae:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900227b2:	b2b4      	uxth	r4, r6
900227b4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900227b8:	43f6      	mvns	r6, r6
900227ba:	4313      	orrs	r3, r2
900227bc:	042a      	lsls	r2, r5, #16
900227be:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900227c2:	b2f6      	uxtb	r6, r6
900227c4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900227c8:	fb0e 8303 	mla	r3, lr, r3, r8
900227cc:	432a      	orrs	r2, r5
900227ce:	fb07 3202 	mla	r2, r7, r2, r3
900227d2:	10c7      	asrs	r7, r0, #3
900227d4:	0d53      	lsrs	r3, r2, #21
900227d6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900227da:	0952      	lsrs	r2, r2, #5
900227dc:	fb17 f706 	smulbb	r7, r7, r6
900227e0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900227e4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900227e8:	431a      	orrs	r2, r3
900227ea:	b293      	uxth	r3, r2
900227ec:	1202      	asrs	r2, r0, #8
900227ee:	121d      	asrs	r5, r3, #8
900227f0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
900227f4:	00c0      	lsls	r0, r0, #3
900227f6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900227fa:	fb12 f206 	smulbb	r2, r2, r6
900227fe:	b2c0      	uxtb	r0, r0
90022800:	fb05 2504 	mla	r5, r5, r4, r2
90022804:	10da      	asrs	r2, r3, #3
90022806:	fb10 f006 	smulbb	r0, r0, r6
9002280a:	00db      	lsls	r3, r3, #3
9002280c:	b2ad      	uxth	r5, r5
9002280e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90022812:	b2db      	uxtb	r3, r3
90022814:	fb02 7204 	mla	r2, r2, r4, r7
90022818:	fb03 0004 	mla	r0, r3, r4, r0
9002281c:	1c6b      	adds	r3, r5, #1
9002281e:	b292      	uxth	r2, r2
90022820:	b280      	uxth	r0, r0
90022822:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022826:	1c43      	adds	r3, r0, #1
90022828:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002282c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90022830:	1c50      	adds	r0, r2, #1
90022832:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90022836:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002283a:	0952      	lsrs	r2, r2, #5
9002283c:	432b      	orrs	r3, r5
9002283e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022842:	4313      	orrs	r3, r2
90022844:	800b      	strh	r3, [r1, #0]
90022846:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002284a:	4680      	mov	r8, r0
9002284c:	e763      	b.n	90022716 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
9002284e:	4684      	mov	ip, r0
90022850:	4680      	mov	r8, r0
90022852:	e76c      	b.n	9002272e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90022854:	4684      	mov	ip, r0
90022856:	e76a      	b.n	9002272e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90022858:	4605      	mov	r5, r0
9002285a:	e779      	b.n	90022750 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
9002285c:	4603      	mov	r3, r0
9002285e:	4605      	mov	r5, r0
90022860:	e782      	b.n	90022768 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90022862:	4603      	mov	r3, r0
90022864:	e780      	b.n	90022768 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90022866 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022866:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002286a:	b093      	sub	sp, #76	@ 0x4c
9002286c:	461d      	mov	r5, r3
9002286e:	9210      	str	r2, [sp, #64]	@ 0x40
90022870:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90022872:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
90022876:	910a      	str	r1, [sp, #40]	@ 0x28
90022878:	920b      	str	r2, [sp, #44]	@ 0x2c
9002287a:	6859      	ldr	r1, [r3, #4]
9002287c:	681b      	ldr	r3, [r3, #0]
9002287e:	9011      	str	r0, [sp, #68]	@ 0x44
90022880:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90022884:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90022888:	fb01 2707 	mla	r7, r1, r7, r2
9002288c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90022890:	9307      	str	r3, [sp, #28]
90022892:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022894:	681b      	ldr	r3, [r3, #0]
90022896:	9309      	str	r3, [sp, #36]	@ 0x24
90022898:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002289a:	43db      	mvns	r3, r3
9002289c:	b2db      	uxtb	r3, r3
9002289e:	9308      	str	r3, [sp, #32]
900228a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900228a2:	2b00      	cmp	r3, #0
900228a4:	dc03      	bgt.n	900228ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900228a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900228a8:	2b00      	cmp	r3, #0
900228aa:	f340 8205 	ble.w	90022cb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900228ae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900228b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900228b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900228b8:	1e48      	subs	r0, r1, #1
900228ba:	f102 3cff 	add.w	ip, r2, #4294967295
900228be:	2d00      	cmp	r5, #0
900228c0:	f340 80da 	ble.w	90022a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900228c4:	ea5f 4e24 	movs.w	lr, r4, asr #16
900228c8:	ea4f 4326 	mov.w	r3, r6, asr #16
900228cc:	d406      	bmi.n	900228dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900228ce:	4586      	cmp	lr, r0
900228d0:	da04      	bge.n	900228dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900228d2:	2b00      	cmp	r3, #0
900228d4:	db02      	blt.n	900228dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900228d6:	4563      	cmp	r3, ip
900228d8:	f2c0 80cf 	blt.w	90022a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900228dc:	f11e 0e01 	adds.w	lr, lr, #1
900228e0:	f100 80c1 	bmi.w	90022a66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900228e4:	4571      	cmp	r1, lr
900228e6:	f2c0 80be 	blt.w	90022a66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900228ea:	3301      	adds	r3, #1
900228ec:	f100 80bb 	bmi.w	90022a66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900228f0:	429a      	cmp	r2, r3
900228f2:	f2c0 80b8 	blt.w	90022a66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900228f6:	46a9      	mov	r9, r5
900228f8:	f8dd 801c 	ldr.w	r8, [sp, #28]
900228fc:	f1b9 0f00 	cmp.w	r9, #0
90022900:	f340 80d8 	ble.w	90022ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90022904:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022906:	1421      	asrs	r1, r4, #16
90022908:	ea4f 4026 	mov.w	r0, r6, asr #16
9002290c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022910:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90022914:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90022918:	f100 8112 	bmi.w	90022b40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002291c:	f10e 3aff 	add.w	sl, lr, #4294967295
90022920:	4551      	cmp	r1, sl
90022922:	f280 810d 	bge.w	90022b40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022926:	2800      	cmp	r0, #0
90022928:	f2c0 810a 	blt.w	90022b40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002292c:	f103 3aff 	add.w	sl, r3, #4294967295
90022930:	4550      	cmp	r0, sl
90022932:	f280 8105 	bge.w	90022b40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022936:	fa0f f38e 	sxth.w	r3, lr
9002293a:	fb00 1103 	mla	r1, r0, r3, r1
9002293e:	9809      	ldr	r0, [sp, #36]	@ 0x24
90022940:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90022944:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90022948:	f8ba 1002 	ldrh.w	r1, [sl, #2]
9002294c:	f1bc 0f00 	cmp.w	ip, #0
90022950:	d007      	beq.n	90022962 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90022952:	005b      	lsls	r3, r3, #1
90022954:	eb0a 0003 	add.w	r0, sl, r3
90022958:	f83a 3003 	ldrh.w	r3, [sl, r3]
9002295c:	930c      	str	r3, [sp, #48]	@ 0x30
9002295e:	8843      	ldrh	r3, [r0, #2]
90022960:	930d      	str	r3, [sp, #52]	@ 0x34
90022962:	ea4f 400e 	mov.w	r0, lr, lsl #16
90022966:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002296a:	fb12 f30c 	smulbb	r3, r2, ip
9002296e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90022972:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90022976:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002297a:	10db      	asrs	r3, r3, #3
9002297c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90022980:	ea40 000e 	orr.w	r0, r0, lr
90022984:	f1cc 0e10 	rsb	lr, ip, #16
90022988:	ea4a 0101 	orr.w	r1, sl, r1
9002298c:	9f08      	ldr	r7, [sp, #32]
9002298e:	ebae 0e02 	sub.w	lr, lr, r2
90022992:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022996:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9002299a:	4351      	muls	r1, r2
9002299c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002299e:	fb0e 1e00 	mla	lr, lr, r0, r1
900229a2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900229a4:	0410      	lsls	r0, r2, #16
900229a6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900229aa:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900229ae:	4310      	orrs	r0, r2
900229b0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900229b2:	0412      	lsls	r2, r2, #16
900229b4:	fb03 e000 	mla	r0, r3, r0, lr
900229b8:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900229bc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900229c0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900229c4:	ea42 020e 	orr.w	r2, r2, lr
900229c8:	fb03 0302 	mla	r3, r3, r2, r0
900229cc:	f8b8 0000 	ldrh.w	r0, [r8]
900229d0:	0d5a      	lsrs	r2, r3, #21
900229d2:	095b      	lsrs	r3, r3, #5
900229d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900229d8:	1201      	asrs	r1, r0, #8
900229da:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900229de:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900229e2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900229e6:	00c0      	lsls	r0, r0, #3
900229e8:	4313      	orrs	r3, r2
900229ea:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900229ee:	fb11 f107 	smulbb	r1, r1, r7
900229f2:	b2c0      	uxtb	r0, r0
900229f4:	b29b      	uxth	r3, r3
900229f6:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900229fa:	fb10 f007 	smulbb	r0, r0, r7
900229fe:	fb1e fe07 	smulbb	lr, lr, r7
90022a02:	ea4f 2c23 	mov.w	ip, r3, asr #8
90022a06:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90022a0a:	fb0c 1c02 	mla	ip, ip, r2, r1
90022a0e:	10d9      	asrs	r1, r3, #3
90022a10:	00db      	lsls	r3, r3, #3
90022a12:	fa1f fc8c 	uxth.w	ip, ip
90022a16:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90022a1a:	b2db      	uxtb	r3, r3
90022a1c:	fb01 e102 	mla	r1, r1, r2, lr
90022a20:	fb03 0302 	mla	r3, r3, r2, r0
90022a24:	b289      	uxth	r1, r1
90022a26:	b29a      	uxth	r2, r3
90022a28:	f10c 0301 	add.w	r3, ip, #1
90022a2c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90022a30:	1c53      	adds	r3, r2, #1
90022a32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022a36:	1c4a      	adds	r2, r1, #1
90022a38:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90022a3c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022a40:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022a44:	0949      	lsrs	r1, r1, #5
90022a46:	ea43 030c 	orr.w	r3, r3, ip
90022a4a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90022a4e:	430b      	orrs	r3, r1
90022a50:	f8a8 3000 	strh.w	r3, [r8]
90022a54:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022a56:	f108 0802 	add.w	r8, r8, #2
90022a5a:	f109 39ff 	add.w	r9, r9, #4294967295
90022a5e:	441c      	add	r4, r3
90022a60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022a62:	441e      	add	r6, r3
90022a64:	e74a      	b.n	900228fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90022a66:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022a68:	3d01      	subs	r5, #1
90022a6a:	441c      	add	r4, r3
90022a6c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022a6e:	441e      	add	r6, r3
90022a70:	9b07      	ldr	r3, [sp, #28]
90022a72:	3302      	adds	r3, #2
90022a74:	9307      	str	r3, [sp, #28]
90022a76:	e722      	b.n	900228be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022a78:	d022      	beq.n	90022ac0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90022a7a:	1e6b      	subs	r3, r5, #1
90022a7c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90022a7e:	fb00 4003 	mla	r0, r0, r3, r4
90022a82:	1400      	asrs	r0, r0, #16
90022a84:	f53f af37 	bmi.w	900228f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022a88:	3901      	subs	r1, #1
90022a8a:	4288      	cmp	r0, r1
90022a8c:	f6bf af33 	bge.w	900228f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022a90:	9920      	ldr	r1, [sp, #128]	@ 0x80
90022a92:	fb01 6303 	mla	r3, r1, r3, r6
90022a96:	141b      	asrs	r3, r3, #16
90022a98:	f53f af2d 	bmi.w	900228f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022a9c:	3a01      	subs	r2, #1
90022a9e:	4293      	cmp	r3, r2
90022aa0:	f6bf af29 	bge.w	900228f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022aa4:	46a8      	mov	r8, r5
90022aa6:	f8dd 901c 	ldr.w	r9, [sp, #28]
90022aaa:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90022aae:	f1b8 0f00 	cmp.w	r8, #0
90022ab2:	dc60      	bgt.n	90022b76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90022ab4:	9b07      	ldr	r3, [sp, #28]
90022ab6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90022aba:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90022abe:	9307      	str	r3, [sp, #28]
90022ac0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022ac2:	2b00      	cmp	r3, #0
90022ac4:	f340 80f8 	ble.w	90022cb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022ac8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022acc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022ace:	ee30 0a04 	vadd.f32	s0, s0, s8
90022ad2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022ad6:	eef0 6a62 	vmov.f32	s13, s5
90022ada:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022ade:	ee31 1a05 	vadd.f32	s2, s2, s10
90022ae2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022ae6:	ee16 4a90 	vmov	r4, s13
90022aea:	eef0 6a43 	vmov.f32	s13, s6
90022aee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022af2:	ee16 6a90 	vmov	r6, s13
90022af6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022afa:	ee61 7a27 	vmul.f32	s15, s2, s15
90022afe:	ee77 2a62 	vsub.f32	s5, s14, s5
90022b02:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022b06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022b0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022b0e:	ee12 2a90 	vmov	r2, s5
90022b12:	eef0 2a47 	vmov.f32	s5, s14
90022b16:	fb92 f3f3 	sdiv	r3, r2, r3
90022b1a:	ee13 2a10 	vmov	r2, s6
90022b1e:	931f      	str	r3, [sp, #124]	@ 0x7c
90022b20:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022b22:	eeb0 3a67 	vmov.f32	s6, s15
90022b26:	fb92 f3f3 	sdiv	r3, r2, r3
90022b2a:	9320      	str	r3, [sp, #128]	@ 0x80
90022b2c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022b2e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90022b30:	3b01      	subs	r3, #1
90022b32:	930a      	str	r3, [sp, #40]	@ 0x28
90022b34:	bf08      	it	eq
90022b36:	4615      	moveq	r5, r2
90022b38:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022b3a:	bf18      	it	ne
90022b3c:	461d      	movne	r5, r3
90022b3e:	e6af      	b.n	900228a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90022b40:	f111 0a01 	adds.w	sl, r1, #1
90022b44:	d486      	bmi.n	90022a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022b46:	45d6      	cmp	lr, sl
90022b48:	db84      	blt.n	90022a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022b4a:	f110 0a01 	adds.w	sl, r0, #1
90022b4e:	d481      	bmi.n	90022a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022b50:	4553      	cmp	r3, sl
90022b52:	f6ff af7f 	blt.w	90022a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022b56:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90022b58:	b21b      	sxth	r3, r3
90022b5a:	9101      	str	r1, [sp, #4]
90022b5c:	4641      	mov	r1, r8
90022b5e:	9300      	str	r3, [sp, #0]
90022b60:	fa0f f38e 	sxth.w	r3, lr
90022b64:	e9cd 0202 	strd	r0, r2, [sp, #8]
90022b68:	e9cd c704 	strd	ip, r7, [sp, #16]
90022b6c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90022b6e:	9811      	ldr	r0, [sp, #68]	@ 0x44
90022b70:	f7ff fdb2 	bl	900226d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90022b74:	e76e      	b.n	90022a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022b76:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90022b78:	1430      	asrs	r0, r6, #16
90022b7a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90022b7c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90022b80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022b84:	1423      	asrs	r3, r4, #16
90022b86:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022b8a:	fb01 3000 	mla	r0, r1, r0, r3
90022b8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022b90:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90022b94:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90022b98:	8858      	ldrh	r0, [r3, #2]
90022b9a:	f1be 0f00 	cmp.w	lr, #0
90022b9e:	d00b      	beq.n	90022bb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90022ba0:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90022ba4:	3901      	subs	r1, #1
90022ba6:	0049      	lsls	r1, r1, #1
90022ba8:	3102      	adds	r1, #2
90022baa:	eb03 0b01 	add.w	fp, r3, r1
90022bae:	5a5b      	ldrh	r3, [r3, r1]
90022bb0:	930e      	str	r3, [sp, #56]	@ 0x38
90022bb2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90022bb6:	930f      	str	r3, [sp, #60]	@ 0x3c
90022bb8:	ea4f 410c 	mov.w	r1, ip, lsl #16
90022bbc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022bc0:	fb12 f30e 	smulbb	r3, r2, lr
90022bc4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022bc8:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
90022bcc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022bd0:	10db      	asrs	r3, r3, #3
90022bd2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022bd6:	ea41 010c 	orr.w	r1, r1, ip
90022bda:	f1ce 0c10 	rsb	ip, lr, #16
90022bde:	ea4b 0000 	orr.w	r0, fp, r0
90022be2:	9f08      	ldr	r7, [sp, #32]
90022be4:	ebac 0c02 	sub.w	ip, ip, r2
90022be8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022bec:	f108 38ff 	add.w	r8, r8, #4294967295
90022bf0:	4350      	muls	r0, r2
90022bf2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90022bf6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90022bf8:	fb0c 0c01 	mla	ip, ip, r1, r0
90022bfc:	980e      	ldr	r0, [sp, #56]	@ 0x38
90022bfe:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90022c02:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
90022c06:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90022c08:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022c0c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022c10:	0412      	lsls	r2, r2, #16
90022c12:	ea4b 0101 	orr.w	r1, fp, r1
90022c16:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90022c1a:	fb03 c101 	mla	r1, r3, r1, ip
90022c1e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90022c22:	4302      	orrs	r2, r0
90022c24:	fb03 1202 	mla	r2, r3, r2, r1
90022c28:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90022c2c:	0952      	lsrs	r2, r2, #5
90022c2e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90022c32:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
90022c36:	f8b9 2000 	ldrh.w	r2, [r9]
90022c3a:	ea4b 0303 	orr.w	r3, fp, r3
90022c3e:	1211      	asrs	r1, r2, #8
90022c40:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90022c44:	b29b      	uxth	r3, r3
90022c46:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90022c4a:	00d2      	lsls	r2, r2, #3
90022c4c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90022c50:	fb11 f107 	smulbb	r1, r1, r7
90022c54:	1218      	asrs	r0, r3, #8
90022c56:	fb1c fc07 	smulbb	ip, ip, r7
90022c5a:	b2d2      	uxtb	r2, r2
90022c5c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90022c60:	fb12 f207 	smulbb	r2, r2, r7
90022c64:	fb00 100a 	mla	r0, r0, sl, r1
90022c68:	10d9      	asrs	r1, r3, #3
90022c6a:	00db      	lsls	r3, r3, #3
90022c6c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90022c70:	b280      	uxth	r0, r0
90022c72:	b2db      	uxtb	r3, r3
90022c74:	fb01 c10a 	mla	r1, r1, sl, ip
90022c78:	fb03 230a 	mla	r3, r3, sl, r2
90022c7c:	1c42      	adds	r2, r0, #1
90022c7e:	b289      	uxth	r1, r1
90022c80:	b29b      	uxth	r3, r3
90022c82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022c86:	f101 0c01 	add.w	ip, r1, #1
90022c8a:	1c5a      	adds	r2, r3, #1
90022c8c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90022c90:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90022c94:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90022c98:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90022c9a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90022c9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022ca2:	441c      	add	r4, r3
90022ca4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90022ca8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022caa:	4310      	orrs	r0, r2
90022cac:	441e      	add	r6, r3
90022cae:	ea40 000c 	orr.w	r0, r0, ip
90022cb2:	f829 0b02 	strh.w	r0, [r9], #2
90022cb6:	e6fa      	b.n	90022aae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90022cb8:	b013      	add	sp, #76	@ 0x4c
90022cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022cbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90022cbe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90022cc2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90022cc6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90022cca:	fb0e 4703 	mla	r7, lr, r3, r4
90022cce:	f1be 0f00 	cmp.w	lr, #0
90022cd2:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
90022cd6:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
90022cda:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90022cde:	8808      	ldrh	r0, [r1, #0]
90022ce0:	db60      	blt.n	90022da4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90022ce2:	45f1      	cmp	r9, lr
90022ce4:	dd5e      	ble.n	90022da4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90022ce6:	2c00      	cmp	r4, #0
90022ce8:	db5a      	blt.n	90022da0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90022cea:	42a3      	cmp	r3, r4
90022cec:	dd58      	ble.n	90022da0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90022cee:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90022cf2:	1c62      	adds	r2, r4, #1
90022cf4:	d459      	bmi.n	90022daa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022cf6:	4293      	cmp	r3, r2
90022cf8:	dd57      	ble.n	90022daa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022cfa:	2d00      	cmp	r5, #0
90022cfc:	d055      	beq.n	90022daa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022cfe:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90022d02:	f11e 0e01 	adds.w	lr, lr, #1
90022d06:	d454      	bmi.n	90022db2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022d08:	45f1      	cmp	r9, lr
90022d0a:	dd52      	ble.n	90022db2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022d0c:	2e00      	cmp	r6, #0
90022d0e:	d050      	beq.n	90022db2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022d10:	2c00      	cmp	r4, #0
90022d12:	db4c      	blt.n	90022dae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90022d14:	42a3      	cmp	r3, r4
90022d16:	dd4a      	ble.n	90022dae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90022d18:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90022d1c:	3401      	adds	r4, #1
90022d1e:	d405      	bmi.n	90022d2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022d20:	42a3      	cmp	r3, r4
90022d22:	dd03      	ble.n	90022d2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022d24:	b115      	cbz	r5, 90022d2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022d26:	3301      	adds	r3, #1
90022d28:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90022d2c:	fb15 f406 	smulbb	r4, r5, r6
90022d30:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022d34:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90022d38:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90022d3c:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022d40:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022d44:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90022d48:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90022d4c:	ea43 0c0c 	orr.w	ip, r3, ip
90022d50:	f1c6 0310 	rsb	r3, r6, #16
90022d54:	ea4e 0707 	orr.w	r7, lr, r7
90022d58:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90022d5c:	1b5b      	subs	r3, r3, r5
90022d5e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90022d62:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90022d66:	437d      	muls	r5, r7
90022d68:	fb03 5c0c 	mla	ip, r3, ip, r5
90022d6c:	0403      	lsls	r3, r0, #16
90022d6e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022d72:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022d76:	4318      	orrs	r0, r3
90022d78:	0413      	lsls	r3, r2, #16
90022d7a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022d7e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90022d82:	fb04 c000 	mla	r0, r4, r0, ip
90022d86:	4313      	orrs	r3, r2
90022d88:	fb06 0003 	mla	r0, r6, r3, r0
90022d8c:	0d43      	lsrs	r3, r0, #21
90022d8e:	0940      	lsrs	r0, r0, #5
90022d90:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022d94:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90022d98:	4318      	orrs	r0, r3
90022d9a:	8008      	strh	r0, [r1, #0]
90022d9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90022da0:	4684      	mov	ip, r0
90022da2:	e7a6      	b.n	90022cf2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90022da4:	4607      	mov	r7, r0
90022da6:	4684      	mov	ip, r0
90022da8:	e7ab      	b.n	90022d02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90022daa:	4607      	mov	r7, r0
90022dac:	e7a9      	b.n	90022d02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90022dae:	4602      	mov	r2, r0
90022db0:	e7b4      	b.n	90022d1c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90022db2:	4602      	mov	r2, r0
90022db4:	e7ba      	b.n	90022d2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90022db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022db6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022dba:	b08f      	sub	sp, #60	@ 0x3c
90022dbc:	461d      	mov	r5, r3
90022dbe:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90022dc0:	9107      	str	r1, [sp, #28]
90022dc2:	920c      	str	r2, [sp, #48]	@ 0x30
90022dc4:	6859      	ldr	r1, [r3, #4]
90022dc6:	681b      	ldr	r3, [r3, #0]
90022dc8:	900d      	str	r0, [sp, #52]	@ 0x34
90022dca:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90022dce:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90022dd2:	fb01 2707 	mla	r7, r1, r7, r2
90022dd6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90022dda:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022ddc:	f8d3 8000 	ldr.w	r8, [r3]
90022de0:	9b07      	ldr	r3, [sp, #28]
90022de2:	2b00      	cmp	r3, #0
90022de4:	dc03      	bgt.n	90022dee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90022de6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022de8:	2b00      	cmp	r3, #0
90022dea:	f340 8182 	ble.w	900230f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022dee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022df0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022df4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022df8:	1e48      	subs	r0, r1, #1
90022dfa:	f102 3cff 	add.w	ip, r2, #4294967295
90022dfe:	2d00      	cmp	r5, #0
90022e00:	f340 809b 	ble.w	90022f3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90022e04:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022e08:	ea4f 4326 	mov.w	r3, r6, asr #16
90022e0c:	d406      	bmi.n	90022e1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022e0e:	4586      	cmp	lr, r0
90022e10:	da04      	bge.n	90022e1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022e12:	2b00      	cmp	r3, #0
90022e14:	db02      	blt.n	90022e1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022e16:	4563      	cmp	r3, ip
90022e18:	f2c0 8090 	blt.w	90022f3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022e1c:	f11e 0e01 	adds.w	lr, lr, #1
90022e20:	f100 8084 	bmi.w	90022f2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022e24:	4571      	cmp	r1, lr
90022e26:	f2c0 8081 	blt.w	90022f2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022e2a:	3301      	adds	r3, #1
90022e2c:	d47e      	bmi.n	90022f2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022e2e:	429a      	cmp	r2, r3
90022e30:	db7c      	blt.n	90022f2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022e32:	46aa      	mov	sl, r5
90022e34:	46b9      	mov	r9, r7
90022e36:	f1ba 0f00 	cmp.w	sl, #0
90022e3a:	f340 8099 	ble.w	90022f70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90022e3e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022e40:	1421      	asrs	r1, r4, #16
90022e42:	ea4f 4026 	mov.w	r0, r6, asr #16
90022e46:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022e4a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90022e4e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90022e52:	f100 80d1 	bmi.w	90022ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022e56:	f10e 3bff 	add.w	fp, lr, #4294967295
90022e5a:	4559      	cmp	r1, fp
90022e5c:	f280 80cc 	bge.w	90022ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022e60:	2800      	cmp	r0, #0
90022e62:	f2c0 80c9 	blt.w	90022ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022e66:	f103 3bff 	add.w	fp, r3, #4294967295
90022e6a:	4558      	cmp	r0, fp
90022e6c:	f280 80c4 	bge.w	90022ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022e70:	fa0f fe8e 	sxth.w	lr, lr
90022e74:	fb00 110e 	mla	r1, r0, lr, r1
90022e78:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90022e7c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90022e80:	8841      	ldrh	r1, [r0, #2]
90022e82:	f1bc 0f00 	cmp.w	ip, #0
90022e86:	d00b      	beq.n	90022ea0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90022e88:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90022e8c:	3b01      	subs	r3, #1
90022e8e:	005b      	lsls	r3, r3, #1
90022e90:	3302      	adds	r3, #2
90022e92:	eb00 0e03 	add.w	lr, r0, r3
90022e96:	5ac3      	ldrh	r3, [r0, r3]
90022e98:	9308      	str	r3, [sp, #32]
90022e9a:	f8be 3002 	ldrh.w	r3, [lr, #2]
90022e9e:	9309      	str	r3, [sp, #36]	@ 0x24
90022ea0:	ea4f 400b 	mov.w	r0, fp, lsl #16
90022ea4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90022ea8:	fb12 f30c 	smulbb	r3, r2, ip
90022eac:	f1cc 0e10 	rsb	lr, ip, #16
90022eb0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90022eb4:	10db      	asrs	r3, r3, #3
90022eb6:	ebae 0e02 	sub.w	lr, lr, r2
90022eba:	ea40 000b 	orr.w	r0, r0, fp
90022ebe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022ec2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90022ec6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022eca:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90022ece:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90022ed2:	ea4b 0101 	orr.w	r1, fp, r1
90022ed6:	4351      	muls	r1, r2
90022ed8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90022eda:	fb0e 1e00 	mla	lr, lr, r0, r1
90022ede:	0410      	lsls	r0, r2, #16
90022ee0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90022ee4:	9908      	ldr	r1, [sp, #32]
90022ee6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90022eea:	4310      	orrs	r0, r2
90022eec:	9a08      	ldr	r2, [sp, #32]
90022eee:	0412      	lsls	r2, r2, #16
90022ef0:	fb03 e000 	mla	r0, r3, r0, lr
90022ef4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90022ef8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90022efc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90022f00:	ea42 020e 	orr.w	r2, r2, lr
90022f04:	fb03 0302 	mla	r3, r3, r2, r0
90022f08:	0d5a      	lsrs	r2, r3, #21
90022f0a:	095b      	lsrs	r3, r3, #5
90022f0c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022f10:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90022f14:	4313      	orrs	r3, r2
90022f16:	f8a9 3000 	strh.w	r3, [r9]
90022f1a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022f1c:	f109 0902 	add.w	r9, r9, #2
90022f20:	f10a 3aff 	add.w	sl, sl, #4294967295
90022f24:	441c      	add	r4, r3
90022f26:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022f28:	441e      	add	r6, r3
90022f2a:	e784      	b.n	90022e36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90022f2c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022f2e:	3d01      	subs	r5, #1
90022f30:	3702      	adds	r7, #2
90022f32:	441c      	add	r4, r3
90022f34:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022f36:	441e      	add	r6, r3
90022f38:	e761      	b.n	90022dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022f3a:	d01d      	beq.n	90022f78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022f3c:	1e6b      	subs	r3, r5, #1
90022f3e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90022f40:	fb00 4003 	mla	r0, r0, r3, r4
90022f44:	1400      	asrs	r0, r0, #16
90022f46:	f53f af74 	bmi.w	90022e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022f4a:	3901      	subs	r1, #1
90022f4c:	4288      	cmp	r0, r1
90022f4e:	f6bf af70 	bge.w	90022e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022f52:	991c      	ldr	r1, [sp, #112]	@ 0x70
90022f54:	fb01 6303 	mla	r3, r1, r3, r6
90022f58:	141b      	asrs	r3, r3, #16
90022f5a:	f53f af6a 	bmi.w	90022e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022f5e:	3a01      	subs	r2, #1
90022f60:	4293      	cmp	r3, r2
90022f62:	f6bf af66 	bge.w	90022e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022f66:	46a9      	mov	r9, r5
90022f68:	46ba      	mov	sl, r7
90022f6a:	f1b9 0f00 	cmp.w	r9, #0
90022f6e:	dc5b      	bgt.n	90023028 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90022f70:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90022f74:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90022f78:	9b07      	ldr	r3, [sp, #28]
90022f7a:	2b00      	cmp	r3, #0
90022f7c:	f340 80b9 	ble.w	900230f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022f80:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022f84:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022f86:	ee30 0a04 	vadd.f32	s0, s0, s8
90022f8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022f8e:	eef0 6a62 	vmov.f32	s13, s5
90022f92:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022f96:	ee31 1a05 	vadd.f32	s2, s2, s10
90022f9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022f9e:	ee16 4a90 	vmov	r4, s13
90022fa2:	eef0 6a43 	vmov.f32	s13, s6
90022fa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022faa:	ee16 6a90 	vmov	r6, s13
90022fae:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022fb2:	ee61 7a27 	vmul.f32	s15, s2, s15
90022fb6:	ee77 2a62 	vsub.f32	s5, s14, s5
90022fba:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022fbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022fc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022fc6:	ee12 2a90 	vmov	r2, s5
90022fca:	eef0 2a47 	vmov.f32	s5, s14
90022fce:	fb92 f3f3 	sdiv	r3, r2, r3
90022fd2:	ee13 2a10 	vmov	r2, s6
90022fd6:	931b      	str	r3, [sp, #108]	@ 0x6c
90022fd8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022fda:	eeb0 3a67 	vmov.f32	s6, s15
90022fde:	fb92 f3f3 	sdiv	r3, r2, r3
90022fe2:	931c      	str	r3, [sp, #112]	@ 0x70
90022fe4:	9b07      	ldr	r3, [sp, #28]
90022fe6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90022fe8:	3b01      	subs	r3, #1
90022fea:	9307      	str	r3, [sp, #28]
90022fec:	bf08      	it	eq
90022fee:	4615      	moveq	r5, r2
90022ff0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022ff2:	bf18      	it	ne
90022ff4:	461d      	movne	r5, r3
90022ff6:	e6f3      	b.n	90022de0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90022ff8:	f111 0b01 	adds.w	fp, r1, #1
90022ffc:	d48d      	bmi.n	90022f1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022ffe:	45de      	cmp	lr, fp
90023000:	db8b      	blt.n	90022f1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90023002:	f110 0b01 	adds.w	fp, r0, #1
90023006:	d488      	bmi.n	90022f1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90023008:	455b      	cmp	r3, fp
9002300a:	db86      	blt.n	90022f1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002300c:	b21b      	sxth	r3, r3
9002300e:	e9cd 1001 	strd	r1, r0, [sp, #4]
90023012:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90023016:	9300      	str	r3, [sp, #0]
90023018:	4642      	mov	r2, r8
9002301a:	fa0f f38e 	sxth.w	r3, lr
9002301e:	4649      	mov	r1, r9
90023020:	980d      	ldr	r0, [sp, #52]	@ 0x34
90023022:	f7ff fe4c 	bl	90022cbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90023026:	e778      	b.n	90022f1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90023028:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002302a:	1420      	asrs	r0, r4, #16
9002302c:	1431      	asrs	r1, r6, #16
9002302e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90023032:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90023036:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002303a:	fb03 0101 	mla	r1, r3, r1, r0
9002303e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90023042:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90023046:	8841      	ldrh	r1, [r0, #2]
90023048:	f1be 0f00 	cmp.w	lr, #0
9002304c:	d00b      	beq.n	90023066 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
9002304e:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90023052:	3b01      	subs	r3, #1
90023054:	005b      	lsls	r3, r3, #1
90023056:	3302      	adds	r3, #2
90023058:	eb00 0b03 	add.w	fp, r0, r3
9002305c:	5ac3      	ldrh	r3, [r0, r3]
9002305e:	930a      	str	r3, [sp, #40]	@ 0x28
90023060:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90023064:	930b      	str	r3, [sp, #44]	@ 0x2c
90023066:	ea4f 400c 	mov.w	r0, ip, lsl #16
9002306a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
9002306e:	fb12 f30e 	smulbb	r3, r2, lr
90023072:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023076:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002307a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002307e:	10db      	asrs	r3, r3, #3
90023080:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023084:	ea40 000c 	orr.w	r0, r0, ip
90023088:	f1ce 0c10 	rsb	ip, lr, #16
9002308c:	ea4b 0101 	orr.w	r1, fp, r1
90023090:	f109 39ff 	add.w	r9, r9, #4294967295
90023094:	ebac 0c02 	sub.w	ip, ip, r2
90023098:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002309c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900230a0:	4351      	muls	r1, r2
900230a2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900230a4:	fb0c 1c00 	mla	ip, ip, r0, r1
900230a8:	990a      	ldr	r1, [sp, #40]	@ 0x28
900230aa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900230ae:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
900230b2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900230b4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900230b8:	0412      	lsls	r2, r2, #16
900230ba:	ea4b 0000 	orr.w	r0, fp, r0
900230be:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
900230c2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900230c6:	fb03 c000 	mla	r0, r3, r0, ip
900230ca:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900230ce:	ea42 0b0b 	orr.w	fp, r2, fp
900230d2:	fb03 000b 	mla	r0, r3, fp, r0
900230d6:	0d43      	lsrs	r3, r0, #21
900230d8:	0940      	lsrs	r0, r0, #5
900230da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900230de:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900230e2:	4318      	orrs	r0, r3
900230e4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900230e6:	441c      	add	r4, r3
900230e8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900230ea:	f82a 0b02 	strh.w	r0, [sl], #2
900230ee:	441e      	add	r6, r3
900230f0:	e73b      	b.n	90022f6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
900230f2:	b00f      	add	sp, #60	@ 0x3c
900230f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900230f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
900230f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900230fc:	b085      	sub	sp, #20
900230fe:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90023102:	9102      	str	r1, [sp, #8]
90023104:	2c00      	cmp	r4, #0
90023106:	fb04 7103 	mla	r1, r4, r3, r7
9002310a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
9002310e:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90023112:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90023116:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
9002311a:	f2c0 811b 	blt.w	90023354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002311e:	45a6      	cmp	lr, r4
90023120:	f340 8118 	ble.w	90023354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90023124:	2f00      	cmp	r7, #0
90023126:	f2c0 8113 	blt.w	90023350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002312a:	42bb      	cmp	r3, r7
9002312c:	f340 8110 	ble.w	90023350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90023130:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90023134:	1c7a      	adds	r2, r7, #1
90023136:	f100 8110 	bmi.w	9002335a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002313a:	4293      	cmp	r3, r2
9002313c:	f340 810d 	ble.w	9002335a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90023140:	2e00      	cmp	r6, #0
90023142:	f000 810c 	beq.w	9002335e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90023146:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002314a:	3401      	adds	r4, #1
9002314c:	f100 810b 	bmi.w	90023366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90023150:	45a6      	cmp	lr, r4
90023152:	f340 8108 	ble.w	90023366 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90023156:	2800      	cmp	r0, #0
90023158:	f000 8108 	beq.w	9002336c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
9002315c:	2f00      	cmp	r7, #0
9002315e:	f2c0 8100 	blt.w	90023362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90023162:	42bb      	cmp	r3, r7
90023164:	f340 80fd 	ble.w	90023362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90023168:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9002316c:	3701      	adds	r7, #1
9002316e:	f100 8100 	bmi.w	90023372 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90023172:	42bb      	cmp	r3, r7
90023174:	f340 80fd 	ble.w	90023372 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90023178:	2e00      	cmp	r6, #0
9002317a:	f000 80fc 	beq.w	90023376 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
9002317e:	3301      	adds	r3, #1
90023180:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90023184:	b2b6      	uxth	r6, r6
90023186:	b280      	uxth	r0, r0
90023188:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002318c:	fb00 fe06 	mul.w	lr, r0, r6
90023190:	0136      	lsls	r6, r6, #4
90023192:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90023196:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002319a:	eba6 070e 	sub.w	r7, r6, lr
9002319e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900231a2:	ea4f 6914 	mov.w	r9, r4, lsr #24
900231a6:	b280      	uxth	r0, r0
900231a8:	b2bf      	uxth	r7, r7
900231aa:	1a1b      	subs	r3, r3, r0
900231ac:	ea4f 6812 	mov.w	r8, r2, lsr #24
900231b0:	fb0a f607 	mul.w	r6, sl, r7
900231b4:	b29b      	uxth	r3, r3
900231b6:	fb0b 6603 	mla	r6, fp, r3, r6
900231ba:	fb00 6609 	mla	r6, r0, r9, r6
900231be:	fb0e 6608 	mla	r6, lr, r8, r6
900231c2:	f3c6 2607 	ubfx	r6, r6, #8, #8
900231c6:	9600      	str	r6, [sp, #0]
900231c8:	2e00      	cmp	r6, #0
900231ca:	f000 80be 	beq.w	9002334a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
900231ce:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900231d2:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900231d6:	9e02      	ldr	r6, [sp, #8]
900231d8:	fb0b fc0c 	mul.w	ip, fp, ip
900231dc:	fb0b f505 	mul.w	r5, fp, r5
900231e0:	8836      	ldrh	r6, [r6, #0]
900231e2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900231e6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900231ea:	9501      	str	r5, [sp, #4]
900231ec:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900231f0:	44dc      	add	ip, fp
900231f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900231f6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900231fa:	9503      	str	r5, [sp, #12]
900231fc:	9d01      	ldr	r5, [sp, #4]
900231fe:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90023202:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90023206:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002320a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002320e:	fb0a fc0c 	mul.w	ip, sl, ip
90023212:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90023216:	fb0a fa01 	mul.w	sl, sl, r1
9002321a:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002321e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023222:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90023226:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002322a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002322e:	4465      	add	r5, ip
90023230:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023234:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90023238:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002323c:	fb09 fc0c 	mul.w	ip, r9, ip
90023240:	0a2d      	lsrs	r5, r5, #8
90023242:	fb09 f904 	mul.w	r9, r9, r4
90023246:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002324a:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002324e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023252:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90023256:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002325a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002325e:	437d      	muls	r5, r7
90023260:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023264:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90023268:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002326c:	4461      	add	r1, ip
9002326e:	fb08 f404 	mul.w	r4, r8, r4
90023272:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023276:	fb08 f802 	mul.w	r8, r8, r2
9002327a:	0a09      	lsrs	r1, r1, #8
9002327c:	0a22      	lsrs	r2, r4, #8
9002327e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90023282:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90023286:	fb07 f70a 	mul.w	r7, r7, sl
9002328a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002328e:	4414      	add	r4, r2
90023290:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90023294:	0a24      	lsrs	r4, r4, #8
90023296:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002329a:	9a03      	ldr	r2, [sp, #12]
9002329c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900232a0:	fb02 5503 	mla	r5, r2, r3, r5
900232a4:	ea4f 2818 	mov.w	r8, r8, lsr #8
900232a8:	9a00      	ldr	r2, [sp, #0]
900232aa:	fb04 540e 	mla	r4, r4, lr, r5
900232ae:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900232b2:	1235      	asrs	r5, r6, #8
900232b4:	fb01 4100 	mla	r1, r1, r0, r4
900232b8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900232bc:	0a09      	lsrs	r1, r1, #8
900232be:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900232c2:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900232c6:	fb03 7101 	mla	r1, r3, r1, r7
900232ca:	fb0e 1e08 	mla	lr, lr, r8, r1
900232ce:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900232d2:	fb00 e101 	mla	r1, r0, r1, lr
900232d6:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900232da:	b287      	uxth	r7, r0
900232dc:	0a09      	lsrs	r1, r1, #8
900232de:	437a      	muls	r2, r7
900232e0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900232e4:	1c53      	adds	r3, r2, #1
900232e6:	4321      	orrs	r1, r4
900232e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900232ec:	0c0a      	lsrs	r2, r1, #16
900232ee:	f3c1 2407 	ubfx	r4, r1, #8, #8
900232f2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900232f6:	b2c8      	uxtb	r0, r1
900232f8:	fb12 f207 	smulbb	r2, r2, r7
900232fc:	fb14 f407 	smulbb	r4, r4, r7
90023300:	b2db      	uxtb	r3, r3
90023302:	fb10 f007 	smulbb	r0, r0, r7
90023306:	fb05 2503 	mla	r5, r5, r3, r2
9002330a:	10f2      	asrs	r2, r6, #3
9002330c:	00f6      	lsls	r6, r6, #3
9002330e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023312:	b2ad      	uxth	r5, r5
90023314:	b2f6      	uxtb	r6, r6
90023316:	fb02 4203 	mla	r2, r2, r3, r4
9002331a:	fb06 0303 	mla	r3, r6, r3, r0
9002331e:	b294      	uxth	r4, r2
90023320:	b299      	uxth	r1, r3
90023322:	1c6b      	adds	r3, r5, #1
90023324:	1c62      	adds	r2, r4, #1
90023326:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002332a:	1c4b      	adds	r3, r1, #1
9002332c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90023330:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90023334:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023338:	0952      	lsrs	r2, r2, #5
9002333a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002333e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023342:	432b      	orrs	r3, r5
90023344:	4313      	orrs	r3, r2
90023346:	9a02      	ldr	r2, [sp, #8]
90023348:	8013      	strh	r3, [r2, #0]
9002334a:	b005      	add	sp, #20
9002334c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023350:	2500      	movs	r5, #0
90023352:	e6ef      	b.n	90023134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90023354:	2100      	movs	r1, #0
90023356:	460d      	mov	r5, r1
90023358:	e6f7      	b.n	9002314a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002335a:	2100      	movs	r1, #0
9002335c:	e6f5      	b.n	9002314a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002335e:	4631      	mov	r1, r6
90023360:	e6f3      	b.n	9002314a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90023362:	2400      	movs	r4, #0
90023364:	e702      	b.n	9002316c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90023366:	2200      	movs	r2, #0
90023368:	4614      	mov	r4, r2
9002336a:	e70b      	b.n	90023184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002336c:	4602      	mov	r2, r0
9002336e:	4604      	mov	r4, r0
90023370:	e708      	b.n	90023184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90023372:	2200      	movs	r2, #0
90023374:	e706      	b.n	90023184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90023376:	4632      	mov	r2, r6
90023378:	e704      	b.n	90023184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

9002337a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002337a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002337e:	b09d      	sub	sp, #116	@ 0x74
90023380:	9219      	str	r2, [sp, #100]	@ 0x64
90023382:	9307      	str	r3, [sp, #28]
90023384:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90023386:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
9002338a:	901b      	str	r0, [sp, #108]	@ 0x6c
9002338c:	931a      	str	r3, [sp, #104]	@ 0x68
9002338e:	6850      	ldr	r0, [r2, #4]
90023390:	9117      	str	r1, [sp, #92]	@ 0x5c
90023392:	6812      	ldr	r2, [r2, #0]
90023394:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90023398:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
9002339c:	fb00 1303 	mla	r3, r0, r3, r1
900233a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900233a4:	930a      	str	r3, [sp, #40]	@ 0x28
900233a6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900233a8:	681b      	ldr	r3, [r3, #0]
900233aa:	9310      	str	r3, [sp, #64]	@ 0x40
900233ac:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
900233b0:	930b      	str	r3, [sp, #44]	@ 0x2c
900233b2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900233b4:	2b00      	cmp	r3, #0
900233b6:	dc03      	bgt.n	900233c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900233b8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900233ba:	2b00      	cmp	r3, #0
900233bc:	f340 8375 	ble.w	90023aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900233c0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900233c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900233c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900233ca:	1e48      	subs	r0, r1, #1
900233cc:	1e57      	subs	r7, r2, #1
900233ce:	9b07      	ldr	r3, [sp, #28]
900233d0:	2b00      	cmp	r3, #0
900233d2:	f340 818e 	ble.w	900236f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900233d6:	ea5f 4c24 	movs.w	ip, r4, asr #16
900233da:	ea4f 4326 	mov.w	r3, r6, asr #16
900233de:	d406      	bmi.n	900233ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900233e0:	4584      	cmp	ip, r0
900233e2:	da04      	bge.n	900233ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900233e4:	2b00      	cmp	r3, #0
900233e6:	db02      	blt.n	900233ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900233e8:	42bb      	cmp	r3, r7
900233ea:	f2c0 8183 	blt.w	900236f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
900233ee:	f11c 0c01 	adds.w	ip, ip, #1
900233f2:	f100 8173 	bmi.w	900236dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900233f6:	4561      	cmp	r1, ip
900233f8:	f2c0 8170 	blt.w	900236dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900233fc:	3301      	adds	r3, #1
900233fe:	f100 816d 	bmi.w	900236dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023402:	429a      	cmp	r2, r3
90023404:	f2c0 816a 	blt.w	900236dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023408:	9b07      	ldr	r3, [sp, #28]
9002340a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9002340c:	9318      	str	r3, [sp, #96]	@ 0x60
9002340e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023410:	2b00      	cmp	r3, #0
90023412:	f340 818c 	ble.w	9002372e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90023416:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90023418:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002341c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002341e:	f3c4 3003 	ubfx	r0, r4, #12, #4
90023422:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023426:	1422      	asrs	r2, r4, #16
90023428:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002342c:	689b      	ldr	r3, [r3, #8]
9002342e:	f100 81cd 	bmi.w	900237cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023432:	f103 38ff 	add.w	r8, r3, #4294967295
90023436:	4542      	cmp	r2, r8
90023438:	f280 81c8 	bge.w	900237cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002343c:	f1bc 0f00 	cmp.w	ip, #0
90023440:	f2c0 81c4 	blt.w	900237cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023444:	f10e 38ff 	add.w	r8, lr, #4294967295
90023448:	45c4      	cmp	ip, r8
9002344a:	f280 81bf 	bge.w	900237cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002344e:	b21b      	sxth	r3, r3
90023450:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90023452:	fb0c 2203 	mla	r2, ip, r3, r2
90023456:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002345a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9002345e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90023462:	2800      	cmp	r0, #0
90023464:	f000 81a9 	beq.w	900237ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90023468:	f8d8 5004 	ldr.w	r5, [r8, #4]
9002346c:	950c      	str	r5, [sp, #48]	@ 0x30
9002346e:	0e2d      	lsrs	r5, r5, #24
90023470:	9513      	str	r5, [sp, #76]	@ 0x4c
90023472:	b181      	cbz	r1, 90023496 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90023474:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90023478:	3b01      	subs	r3, #1
9002347a:	009b      	lsls	r3, r3, #2
9002347c:	3304      	adds	r3, #4
9002347e:	eb08 0c03 	add.w	ip, r8, r3
90023482:	f858 3003 	ldr.w	r3, [r8, r3]
90023486:	9308      	str	r3, [sp, #32]
90023488:	0e1b      	lsrs	r3, r3, #24
9002348a:	9311      	str	r3, [sp, #68]	@ 0x44
9002348c:	f8dc 3004 	ldr.w	r3, [ip, #4]
90023490:	930d      	str	r3, [sp, #52]	@ 0x34
90023492:	0e1b      	lsrs	r3, r3, #24
90023494:	9314      	str	r3, [sp, #80]	@ 0x50
90023496:	b280      	uxth	r0, r0
90023498:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002349a:	b289      	uxth	r1, r1
9002349c:	fb00 f901 	mul.w	r9, r0, r1
900234a0:	0100      	lsls	r0, r0, #4
900234a2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900234a6:	eba0 0809 	sub.w	r8, r0, r9
900234aa:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900234ae:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900234b0:	b289      	uxth	r1, r1
900234b2:	fa1f f888 	uxth.w	r8, r8
900234b6:	1a5b      	subs	r3, r3, r1
900234b8:	fb08 f000 	mul.w	r0, r8, r0
900234bc:	b29b      	uxth	r3, r3
900234be:	fb03 000e 	mla	r0, r3, lr, r0
900234c2:	fb01 0005 	mla	r0, r1, r5, r0
900234c6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900234c8:	fb09 0005 	mla	r0, r9, r5, r0
900234cc:	f3c0 2007 	ubfx	r0, r0, #8, #8
900234d0:	2800      	cmp	r0, #0
900234d2:	f000 80fa 	beq.w	900236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900234d6:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900234da:	d01b      	beq.n	90023514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
900234dc:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
900234e0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900234e4:	fb0e fa0a 	mul.w	sl, lr, sl
900234e8:	fb0e fe02 	mul.w	lr, lr, r2
900234ec:	ea4f 221a 	mov.w	r2, sl, lsr #8
900234f0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900234f4:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900234f8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900234fc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023500:	4452      	add	r2, sl
90023502:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023506:	0a12      	lsrs	r2, r2, #8
90023508:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002350c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90023510:	ea42 020c 	orr.w	r2, r2, ip
90023514:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90023516:	2dff      	cmp	r5, #255	@ 0xff
90023518:	d021      	beq.n	9002355e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
9002351a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002351c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90023520:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90023522:	fb05 fb0b 	mul.w	fp, r5, fp
90023526:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90023528:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002352c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002352e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023532:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023536:	fb05 fa0a 	mul.w	sl, r5, sl
9002353a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002353e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023542:	44de      	add	lr, fp
90023544:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023548:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002354c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023550:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023554:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023558:	ea4e 050a 	orr.w	r5, lr, sl
9002355c:	950c      	str	r5, [sp, #48]	@ 0x30
9002355e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90023560:	2dff      	cmp	r5, #255	@ 0xff
90023562:	d021      	beq.n	900235a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90023564:	9d08      	ldr	r5, [sp, #32]
90023566:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002356a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002356c:	fb05 fb0b 	mul.w	fp, r5, fp
90023570:	9d08      	ldr	r5, [sp, #32]
90023572:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90023576:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90023578:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002357c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023580:	fb05 fa0a 	mul.w	sl, r5, sl
90023584:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023588:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002358c:	44de      	add	lr, fp
9002358e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023592:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023596:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002359a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002359e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900235a2:	ea4e 050a 	orr.w	r5, lr, sl
900235a6:	9508      	str	r5, [sp, #32]
900235a8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900235aa:	2dff      	cmp	r5, #255	@ 0xff
900235ac:	d021      	beq.n	900235f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
900235ae:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900235b0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900235b4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900235b6:	fb05 fb0b 	mul.w	fp, r5, fp
900235ba:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900235bc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900235c0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900235c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900235c6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900235ca:	fb05 fa0a 	mul.w	sl, r5, sl
900235ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900235d2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900235d6:	44de      	add	lr, fp
900235d8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900235dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900235e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900235e4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900235e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900235ec:	ea4e 050a 	orr.w	r5, lr, sl
900235f0:	950d      	str	r5, [sp, #52]	@ 0x34
900235f2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900235f4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
900235f8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900235fc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90023600:	9d08      	ldr	r5, [sp, #32]
90023602:	fb08 fc0c 	mul.w	ip, r8, ip
90023606:	fb03 cc0e 	mla	ip, r3, lr, ip
9002360a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002360e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90023610:	fb01 cc0e 	mla	ip, r1, lr, ip
90023614:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90023618:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002361a:	fb09 cc0e 	mla	ip, r9, lr, ip
9002361e:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90023622:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90023624:	fb08 f80e 	mul.w	r8, r8, lr
90023628:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002362c:	fb03 8202 	mla	r2, r3, r2, r8
90023630:	9b08      	ldr	r3, [sp, #32]
90023632:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023636:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
9002363a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002363c:	fb01 220a 	mla	r2, r1, sl, r2
90023640:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90023644:	883b      	ldrh	r3, [r7, #0]
90023646:	fb09 2901 	mla	r9, r9, r1, r2
9002364a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002364c:	1219      	asrs	r1, r3, #8
9002364e:	4342      	muls	r2, r0
90023650:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023654:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023658:	1c50      	adds	r0, r2, #1
9002365a:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
9002365e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90023662:	ea4c 0c09 	orr.w	ip, ip, r9
90023666:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9002366a:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002366e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90023672:	fa5f fc8c 	uxtb.w	ip, ip
90023676:	fb12 f205 	smulbb	r2, r2, r5
9002367a:	b2c0      	uxtb	r0, r0
9002367c:	fb1c fc05 	smulbb	ip, ip, r5
90023680:	fb01 2100 	mla	r1, r1, r0, r2
90023684:	10da      	asrs	r2, r3, #3
90023686:	fb1e fe05 	smulbb	lr, lr, r5
9002368a:	00db      	lsls	r3, r3, #3
9002368c:	b289      	uxth	r1, r1
9002368e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023692:	b2db      	uxtb	r3, r3
90023694:	fb02 e200 	mla	r2, r2, r0, lr
90023698:	fb03 c300 	mla	r3, r3, r0, ip
9002369c:	b292      	uxth	r2, r2
9002369e:	fa1f fc83 	uxth.w	ip, r3
900236a2:	1c4b      	adds	r3, r1, #1
900236a4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900236a8:	f10c 0301 	add.w	r3, ip, #1
900236ac:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900236b0:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900236b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900236b8:	430b      	orrs	r3, r1
900236ba:	1c51      	adds	r1, r2, #1
900236bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900236c0:	0952      	lsrs	r2, r2, #5
900236c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900236c6:	4313      	orrs	r3, r2
900236c8:	803b      	strh	r3, [r7, #0]
900236ca:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900236cc:	3702      	adds	r7, #2
900236ce:	441c      	add	r4, r3
900236d0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900236d2:	441e      	add	r6, r3
900236d4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900236d6:	3b01      	subs	r3, #1
900236d8:	9318      	str	r3, [sp, #96]	@ 0x60
900236da:	e698      	b.n	9002340e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900236dc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900236de:	441c      	add	r4, r3
900236e0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900236e2:	441e      	add	r6, r3
900236e4:	9b07      	ldr	r3, [sp, #28]
900236e6:	3b01      	subs	r3, #1
900236e8:	9307      	str	r3, [sp, #28]
900236ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900236ec:	3302      	adds	r3, #2
900236ee:	930a      	str	r3, [sp, #40]	@ 0x28
900236f0:	e66d      	b.n	900233ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900236f2:	d023      	beq.n	9002373c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
900236f4:	9b07      	ldr	r3, [sp, #28]
900236f6:	9829      	ldr	r0, [sp, #164]	@ 0xa4
900236f8:	3b01      	subs	r3, #1
900236fa:	fb00 4003 	mla	r0, r0, r3, r4
900236fe:	1400      	asrs	r0, r0, #16
90023700:	f53f ae82 	bmi.w	90023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023704:	3901      	subs	r1, #1
90023706:	4288      	cmp	r0, r1
90023708:	f6bf ae7e 	bge.w	90023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002370c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
9002370e:	fb01 6303 	mla	r3, r1, r3, r6
90023712:	141b      	asrs	r3, r3, #16
90023714:	f53f ae78 	bmi.w	90023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023718:	3a01      	subs	r2, #1
9002371a:	4293      	cmp	r3, r2
9002371c:	f6bf ae74 	bge.w	90023408 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023720:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023724:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90023728:	f1bb 0f00 	cmp.w	fp, #0
9002372c:	dc6c      	bgt.n	90023808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002372e:	9b07      	ldr	r3, [sp, #28]
90023730:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023734:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90023736:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002373a:	930a      	str	r3, [sp, #40]	@ 0x28
9002373c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002373e:	2b00      	cmp	r3, #0
90023740:	f340 81b3 	ble.w	90023aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90023744:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023748:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002374a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002374e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023752:	eef0 6a62 	vmov.f32	s13, s5
90023756:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002375a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002375e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023762:	ee16 4a90 	vmov	r4, s13
90023766:	eef0 6a43 	vmov.f32	s13, s6
9002376a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002376e:	ee16 6a90 	vmov	r6, s13
90023772:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023776:	ee61 7a27 	vmul.f32	s15, s2, s15
9002377a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002377e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023782:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023786:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002378a:	ee12 2a90 	vmov	r2, s5
9002378e:	eef0 2a47 	vmov.f32	s5, s14
90023792:	fb92 f3f3 	sdiv	r3, r2, r3
90023796:	ee13 2a10 	vmov	r2, s6
9002379a:	9329      	str	r3, [sp, #164]	@ 0xa4
9002379c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002379e:	eeb0 3a67 	vmov.f32	s6, s15
900237a2:	fb92 f3f3 	sdiv	r3, r2, r3
900237a6:	932a      	str	r3, [sp, #168]	@ 0xa8
900237a8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900237aa:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900237ac:	3b01      	subs	r3, #1
900237ae:	9317      	str	r3, [sp, #92]	@ 0x5c
900237b0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900237b2:	bf08      	it	eq
900237b4:	4613      	moveq	r3, r2
900237b6:	9307      	str	r3, [sp, #28]
900237b8:	e5fb      	b.n	900233b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900237ba:	2900      	cmp	r1, #0
900237bc:	f43f ae6b 	beq.w	90023496 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900237c0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900237c4:	9308      	str	r3, [sp, #32]
900237c6:	0e1b      	lsrs	r3, r3, #24
900237c8:	9311      	str	r3, [sp, #68]	@ 0x44
900237ca:	e664      	b.n	90023496 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900237cc:	f112 0801 	adds.w	r8, r2, #1
900237d0:	f53f af7b 	bmi.w	900236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900237d4:	4543      	cmp	r3, r8
900237d6:	f6ff af78 	blt.w	900236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900237da:	f11c 0801 	adds.w	r8, ip, #1
900237de:	f53f af74 	bmi.w	900236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900237e2:	45c6      	cmp	lr, r8
900237e4:	f6ff af71 	blt.w	900236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900237e8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
900237ea:	b21b      	sxth	r3, r3
900237ec:	9201      	str	r2, [sp, #4]
900237ee:	fa0f f28e 	sxth.w	r2, lr
900237f2:	e9cd 1504 	strd	r1, r5, [sp, #16]
900237f6:	e9cd c002 	strd	ip, r0, [sp, #8]
900237fa:	9200      	str	r2, [sp, #0]
900237fc:	4639      	mov	r1, r7
900237fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90023800:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90023802:	f7ff fc79 	bl	900230f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90023806:	e760      	b.n	900236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023808:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002380a:	1427      	asrs	r7, r4, #16
9002380c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002380e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023812:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023816:	1433      	asrs	r3, r6, #16
90023818:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002381c:	fb01 7303 	mla	r3, r1, r3, r7
90023820:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90023824:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90023828:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9002382c:	2a00      	cmp	r2, #0
9002382e:	f000 8133 	beq.w	90023a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90023832:	687d      	ldr	r5, [r7, #4]
90023834:	950e      	str	r5, [sp, #56]	@ 0x38
90023836:	0e2d      	lsrs	r5, r5, #24
90023838:	9515      	str	r5, [sp, #84]	@ 0x54
9002383a:	b178      	cbz	r0, 9002385c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
9002383c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90023840:	3901      	subs	r1, #1
90023842:	0089      	lsls	r1, r1, #2
90023844:	3104      	adds	r1, #4
90023846:	eb07 0e01 	add.w	lr, r7, r1
9002384a:	5879      	ldr	r1, [r7, r1]
9002384c:	9109      	str	r1, [sp, #36]	@ 0x24
9002384e:	0e09      	lsrs	r1, r1, #24
90023850:	9112      	str	r1, [sp, #72]	@ 0x48
90023852:	f8de 1004 	ldr.w	r1, [lr, #4]
90023856:	910f      	str	r1, [sp, #60]	@ 0x3c
90023858:	0e09      	lsrs	r1, r1, #24
9002385a:	9116      	str	r1, [sp, #88]	@ 0x58
9002385c:	b292      	uxth	r2, r2
9002385e:	9915      	ldr	r1, [sp, #84]	@ 0x54
90023860:	b280      	uxth	r0, r0
90023862:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90023864:	fb02 f800 	mul.w	r8, r2, r0
90023868:	0112      	lsls	r2, r2, #4
9002386a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002386e:	eba2 0e08 	sub.w	lr, r2, r8
90023872:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023876:	b280      	uxth	r0, r0
90023878:	fa1f fe8e 	uxth.w	lr, lr
9002387c:	1a12      	subs	r2, r2, r0
9002387e:	fb0e f101 	mul.w	r1, lr, r1
90023882:	b292      	uxth	r2, r2
90023884:	fb02 110c 	mla	r1, r2, ip, r1
90023888:	fb00 1105 	mla	r1, r0, r5, r1
9002388c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002388e:	fb08 1105 	mla	r1, r8, r5, r1
90023892:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023896:	2900      	cmp	r1, #0
90023898:	f000 80f5 	beq.w	90023a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
9002389c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900238a0:	d019      	beq.n	900238d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
900238a2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900238a6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900238aa:	fb0c fa0a 	mul.w	sl, ip, sl
900238ae:	fb0c fc03 	mul.w	ip, ip, r3
900238b2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900238b6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900238ba:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900238be:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900238c2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900238c6:	4453      	add	r3, sl
900238c8:	0a3f      	lsrs	r7, r7, #8
900238ca:	0a1b      	lsrs	r3, r3, #8
900238cc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900238d0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900238d4:	433b      	orrs	r3, r7
900238d6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900238d8:	2dff      	cmp	r5, #255	@ 0xff
900238da:	d020      	beq.n	9002391e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
900238dc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900238de:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900238e2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900238e4:	436f      	muls	r7, r5
900238e6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900238e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900238ec:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900238f0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900238f2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900238f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900238fa:	fb05 fa0a 	mul.w	sl, r5, sl
900238fe:	44bc      	add	ip, r7
90023900:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023904:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023908:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002390c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023910:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023914:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023918:	ea4c 050a 	orr.w	r5, ip, sl
9002391c:	950e      	str	r5, [sp, #56]	@ 0x38
9002391e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90023920:	2dff      	cmp	r5, #255	@ 0xff
90023922:	d020      	beq.n	90023966 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90023924:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90023926:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002392a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002392c:	436f      	muls	r7, r5
9002392e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90023930:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023934:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90023938:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002393a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002393e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023942:	fb05 fa0a 	mul.w	sl, r5, sl
90023946:	44bc      	add	ip, r7
90023948:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002394c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023950:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023954:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023958:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002395c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023960:	ea4c 050a 	orr.w	r5, ip, sl
90023964:	9509      	str	r5, [sp, #36]	@ 0x24
90023966:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90023968:	2dff      	cmp	r5, #255	@ 0xff
9002396a:	d020      	beq.n	900239ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
9002396c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002396e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90023972:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90023974:	436f      	muls	r7, r5
90023976:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90023978:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002397c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90023980:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90023982:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023986:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002398a:	fb05 fa0a 	mul.w	sl, r5, sl
9002398e:	44bc      	add	ip, r7
90023990:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023994:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023998:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002399c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900239a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900239a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900239a8:	ea4c 050a 	orr.w	r5, ip, sl
900239ac:	950f      	str	r5, [sp, #60]	@ 0x3c
900239ae:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900239b0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900239b4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900239b8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900239bc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900239be:	fb0e f707 	mul.w	r7, lr, r7
900239c2:	fb02 770c 	mla	r7, r2, ip, r7
900239c6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900239ca:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900239cc:	fb00 770c 	mla	r7, r0, ip, r7
900239d0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900239d4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900239d6:	fb08 770c 	mla	r7, r8, ip, r7
900239da:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900239de:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900239e0:	fb0e fe0c 	mul.w	lr, lr, ip
900239e4:	0a3f      	lsrs	r7, r7, #8
900239e6:	fb02 e303 	mla	r3, r2, r3, lr
900239ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900239ec:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900239f0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
900239f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900239f6:	fb00 330a 	mla	r3, r0, sl, r3
900239fa:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
900239fe:	f8b9 0000 	ldrh.w	r0, [r9]
90023a02:	fb08 3c0c 	mla	ip, r8, ip, r3
90023a06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90023a08:	1202      	asrs	r2, r0, #8
90023a0a:	4359      	muls	r1, r3
90023a0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023a10:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023a14:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023a18:	1c4b      	adds	r3, r1, #1
90023a1a:	ea47 070c 	orr.w	r7, r7, ip
90023a1e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023a22:	0c3b      	lsrs	r3, r7, #16
90023a24:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90023a28:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90023a2c:	b2ff      	uxtb	r7, r7
90023a2e:	fb13 f305 	smulbb	r3, r3, r5
90023a32:	b2c9      	uxtb	r1, r1
90023a34:	fb17 f705 	smulbb	r7, r7, r5
90023a38:	fb02 3201 	mla	r2, r2, r1, r3
90023a3c:	10c3      	asrs	r3, r0, #3
90023a3e:	fb1c fc05 	smulbb	ip, ip, r5
90023a42:	00c0      	lsls	r0, r0, #3
90023a44:	b292      	uxth	r2, r2
90023a46:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90023a4a:	b2c0      	uxtb	r0, r0
90023a4c:	fb03 c301 	mla	r3, r3, r1, ip
90023a50:	fb00 7001 	mla	r0, r0, r1, r7
90023a54:	1c51      	adds	r1, r2, #1
90023a56:	b29b      	uxth	r3, r3
90023a58:	b280      	uxth	r0, r0
90023a5a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90023a5e:	f100 0c01 	add.w	ip, r0, #1
90023a62:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90023a66:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90023a6a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90023a6e:	ea4c 0202 	orr.w	r2, ip, r2
90023a72:	f103 0c01 	add.w	ip, r3, #1
90023a76:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90023a7a:	095b      	lsrs	r3, r3, #5
90023a7c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023a80:	431a      	orrs	r2, r3
90023a82:	f8a9 2000 	strh.w	r2, [r9]
90023a86:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90023a88:	f109 0902 	add.w	r9, r9, #2
90023a8c:	f10b 3bff 	add.w	fp, fp, #4294967295
90023a90:	441c      	add	r4, r3
90023a92:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023a94:	441e      	add	r6, r3
90023a96:	e647      	b.n	90023728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90023a98:	2800      	cmp	r0, #0
90023a9a:	f43f aedf 	beq.w	9002385c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90023a9e:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90023aa2:	9109      	str	r1, [sp, #36]	@ 0x24
90023aa4:	0e09      	lsrs	r1, r1, #24
90023aa6:	9112      	str	r1, [sp, #72]	@ 0x48
90023aa8:	e6d8      	b.n	9002385c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90023aaa:	b01d      	add	sp, #116	@ 0x74
90023aac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023ab0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90023ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023ab4:	b085      	sub	sp, #20
90023ab6:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90023aba:	9102      	str	r1, [sp, #8]
90023abc:	2c00      	cmp	r4, #0
90023abe:	fb04 7103 	mla	r1, r4, r3, r7
90023ac2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90023ac6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90023aca:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90023ace:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90023ad2:	f2c0 810c 	blt.w	90023cee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90023ad6:	45a6      	cmp	lr, r4
90023ad8:	f340 8109 	ble.w	90023cee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90023adc:	2f00      	cmp	r7, #0
90023ade:	f2c0 8104 	blt.w	90023cea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90023ae2:	42bb      	cmp	r3, r7
90023ae4:	f340 8101 	ble.w	90023cea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90023ae8:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90023aec:	1c7a      	adds	r2, r7, #1
90023aee:	f100 8101 	bmi.w	90023cf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90023af2:	4293      	cmp	r3, r2
90023af4:	f340 80fe 	ble.w	90023cf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90023af8:	2e00      	cmp	r6, #0
90023afa:	f000 80fd 	beq.w	90023cf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90023afe:	f8dc 1004 	ldr.w	r1, [ip, #4]
90023b02:	3401      	adds	r4, #1
90023b04:	f100 80fc 	bmi.w	90023d00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90023b08:	45a6      	cmp	lr, r4
90023b0a:	f340 80f9 	ble.w	90023d00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90023b0e:	2800      	cmp	r0, #0
90023b10:	f000 80f9 	beq.w	90023d06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90023b14:	2f00      	cmp	r7, #0
90023b16:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90023b1a:	f2c0 80ef 	blt.w	90023cfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90023b1e:	42bb      	cmp	r3, r7
90023b20:	f340 80ec 	ble.w	90023cfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90023b24:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90023b28:	3701      	adds	r7, #1
90023b2a:	f100 80ef 	bmi.w	90023d0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90023b2e:	42bb      	cmp	r3, r7
90023b30:	f340 80ec 	ble.w	90023d0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90023b34:	2e00      	cmp	r6, #0
90023b36:	f000 80eb 	beq.w	90023d10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90023b3a:	6852      	ldr	r2, [r2, #4]
90023b3c:	b2b6      	uxth	r6, r6
90023b3e:	b280      	uxth	r0, r0
90023b40:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90023b44:	fb00 fe06 	mul.w	lr, r0, r6
90023b48:	0136      	lsls	r6, r6, #4
90023b4a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90023b4e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90023b52:	eba6 070e 	sub.w	r7, r6, lr
90023b56:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90023b5a:	ea4f 6914 	mov.w	r9, r4, lsr #24
90023b5e:	b280      	uxth	r0, r0
90023b60:	b2bf      	uxth	r7, r7
90023b62:	1a1b      	subs	r3, r3, r0
90023b64:	ea4f 6812 	mov.w	r8, r2, lsr #24
90023b68:	fb07 f60a 	mul.w	r6, r7, sl
90023b6c:	b29b      	uxth	r3, r3
90023b6e:	fb0b 6603 	mla	r6, fp, r3, r6
90023b72:	fb00 6609 	mla	r6, r0, r9, r6
90023b76:	fb0e 6608 	mla	r6, lr, r8, r6
90023b7a:	f3c6 2607 	ubfx	r6, r6, #8, #8
90023b7e:	9600      	str	r6, [sp, #0]
90023b80:	2e00      	cmp	r6, #0
90023b82:	f000 80af 	beq.w	90023ce4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90023b86:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90023b8a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90023b8e:	9e02      	ldr	r6, [sp, #8]
90023b90:	fb0b fc0c 	mul.w	ip, fp, ip
90023b94:	fb0b f505 	mul.w	r5, fp, r5
90023b98:	8836      	ldrh	r6, [r6, #0]
90023b9a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90023b9e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023ba2:	9501      	str	r5, [sp, #4]
90023ba4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90023ba8:	44dc      	add	ip, fp
90023baa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023bae:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90023bb2:	9503      	str	r5, [sp, #12]
90023bb4:	9d01      	ldr	r5, [sp, #4]
90023bb6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90023bba:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90023bbe:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90023bc2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023bc6:	fb0a fc0c 	mul.w	ip, sl, ip
90023bca:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90023bce:	fb0a fa01 	mul.w	sl, sl, r1
90023bd2:	ea4f 251c 	mov.w	r5, ip, lsr #8
90023bd6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023bda:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90023bde:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023be2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90023be6:	4465      	add	r5, ip
90023be8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90023bec:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90023bf0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023bf4:	fb09 fc0c 	mul.w	ip, r9, ip
90023bf8:	0a2d      	lsrs	r5, r5, #8
90023bfa:	fb09 f904 	mul.w	r9, r9, r4
90023bfe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023c02:	ea4f 211c 	mov.w	r1, ip, lsr #8
90023c06:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023c0a:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90023c0e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90023c12:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90023c16:	437d      	muls	r5, r7
90023c18:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023c1c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90023c20:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90023c24:	4461      	add	r1, ip
90023c26:	fb08 f404 	mul.w	r4, r8, r4
90023c2a:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023c2e:	fb08 f802 	mul.w	r8, r8, r2
90023c32:	0a09      	lsrs	r1, r1, #8
90023c34:	0a22      	lsrs	r2, r4, #8
90023c36:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90023c3a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90023c3e:	fb07 f70a 	mul.w	r7, r7, sl
90023c42:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90023c46:	4414      	add	r4, r2
90023c48:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90023c4c:	0a24      	lsrs	r4, r4, #8
90023c4e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023c52:	9a03      	ldr	r2, [sp, #12]
90023c54:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90023c58:	fb02 5503 	mla	r5, r2, r3, r5
90023c5c:	ea4f 2818 	mov.w	r8, r8, lsr #8
90023c60:	fb04 540e 	mla	r4, r4, lr, r5
90023c64:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90023c68:	fb01 4100 	mla	r1, r1, r0, r4
90023c6c:	0a09      	lsrs	r1, r1, #8
90023c6e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90023c72:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90023c76:	fb03 7101 	mla	r1, r3, r1, r7
90023c7a:	9b00      	ldr	r3, [sp, #0]
90023c7c:	fb0e 1e08 	mla	lr, lr, r8, r1
90023c80:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90023c84:	43da      	mvns	r2, r3
90023c86:	1233      	asrs	r3, r6, #8
90023c88:	fb00 e101 	mla	r1, r0, r1, lr
90023c8c:	10f0      	asrs	r0, r6, #3
90023c8e:	b2d2      	uxtb	r2, r2
90023c90:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90023c94:	0a09      	lsrs	r1, r1, #8
90023c96:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90023c9a:	00f6      	lsls	r6, r6, #3
90023c9c:	4353      	muls	r3, r2
90023c9e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023ca2:	4350      	muls	r0, r2
90023ca4:	b2f6      	uxtb	r6, r6
90023ca6:	4321      	orrs	r1, r4
90023ca8:	4356      	muls	r6, r2
90023caa:	1c5a      	adds	r2, r3, #1
90023cac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023cb0:	0c0b      	lsrs	r3, r1, #16
90023cb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023cb6:	1c42      	adds	r2, r0, #1
90023cb8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023cbc:	0a0a      	lsrs	r2, r1, #8
90023cbe:	021b      	lsls	r3, r3, #8
90023cc0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023cc4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90023cc8:	00d2      	lsls	r2, r2, #3
90023cca:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023cce:	4313      	orrs	r3, r2
90023cd0:	1c72      	adds	r2, r6, #1
90023cd2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90023cd6:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90023cda:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90023cde:	4319      	orrs	r1, r3
90023ce0:	9b02      	ldr	r3, [sp, #8]
90023ce2:	8019      	strh	r1, [r3, #0]
90023ce4:	b005      	add	sp, #20
90023ce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023cea:	2500      	movs	r5, #0
90023cec:	e6fe      	b.n	90023aec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90023cee:	2100      	movs	r1, #0
90023cf0:	460d      	mov	r5, r1
90023cf2:	e706      	b.n	90023b02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023cf4:	2100      	movs	r1, #0
90023cf6:	e704      	b.n	90023b02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023cf8:	4631      	mov	r1, r6
90023cfa:	e702      	b.n	90023b02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023cfc:	2400      	movs	r4, #0
90023cfe:	e713      	b.n	90023b28 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90023d00:	2200      	movs	r2, #0
90023d02:	4614      	mov	r4, r2
90023d04:	e71a      	b.n	90023b3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023d06:	4602      	mov	r2, r0
90023d08:	4604      	mov	r4, r0
90023d0a:	e717      	b.n	90023b3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023d0c:	2200      	movs	r2, #0
90023d0e:	e715      	b.n	90023b3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023d10:	4632      	mov	r2, r6
90023d12:	e713      	b.n	90023b3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90023d14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023d18:	b09b      	sub	sp, #108	@ 0x6c
90023d1a:	9218      	str	r2, [sp, #96]	@ 0x60
90023d1c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90023d1e:	9019      	str	r0, [sp, #100]	@ 0x64
90023d20:	9116      	str	r1, [sp, #88]	@ 0x58
90023d22:	6850      	ldr	r0, [r2, #4]
90023d24:	9307      	str	r3, [sp, #28]
90023d26:	6812      	ldr	r2, [r2, #0]
90023d28:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90023d2c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90023d30:	fb00 1303 	mla	r3, r0, r3, r1
90023d34:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023d38:	930a      	str	r3, [sp, #40]	@ 0x28
90023d3a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023d3c:	681b      	ldr	r3, [r3, #0]
90023d3e:	930f      	str	r3, [sp, #60]	@ 0x3c
90023d40:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023d42:	2b00      	cmp	r3, #0
90023d44:	dc03      	bgt.n	90023d4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023d46:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90023d48:	2b00      	cmp	r3, #0
90023d4a:	f340 8387 	ble.w	9002445c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90023d4e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023d50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023d54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023d58:	1e48      	subs	r0, r1, #1
90023d5a:	1e57      	subs	r7, r2, #1
90023d5c:	9b07      	ldr	r3, [sp, #28]
90023d5e:	2b00      	cmp	r3, #0
90023d60:	f340 8166 	ble.w	90024030 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90023d64:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023d68:	ea4f 4326 	mov.w	r3, r6, asr #16
90023d6c:	d406      	bmi.n	90023d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023d6e:	4584      	cmp	ip, r0
90023d70:	da04      	bge.n	90023d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023d72:	2b00      	cmp	r3, #0
90023d74:	db02      	blt.n	90023d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023d76:	42bb      	cmp	r3, r7
90023d78:	f2c0 815b 	blt.w	90024032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90023d7c:	f11c 0c01 	adds.w	ip, ip, #1
90023d80:	f100 814b 	bmi.w	9002401a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023d84:	4561      	cmp	r1, ip
90023d86:	f2c0 8148 	blt.w	9002401a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023d8a:	3301      	adds	r3, #1
90023d8c:	f100 8145 	bmi.w	9002401a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023d90:	429a      	cmp	r2, r3
90023d92:	f2c0 8142 	blt.w	9002401a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023d96:	9b07      	ldr	r3, [sp, #28]
90023d98:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90023d9a:	9317      	str	r3, [sp, #92]	@ 0x5c
90023d9c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90023d9e:	2b00      	cmp	r3, #0
90023da0:	f340 8165 	ble.w	9002406e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023da4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
90023da6:	ea4f 4c26 	mov.w	ip, r6, asr #16
90023daa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023dac:	f3c4 3103 	ubfx	r1, r4, #12, #4
90023db0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023db4:	1422      	asrs	r2, r4, #16
90023db6:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023dba:	689b      	ldr	r3, [r3, #8]
90023dbc:	f100 81d5 	bmi.w	9002416a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023dc0:	f103 38ff 	add.w	r8, r3, #4294967295
90023dc4:	4542      	cmp	r2, r8
90023dc6:	f280 81d0 	bge.w	9002416a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023dca:	f1bc 0f00 	cmp.w	ip, #0
90023dce:	f2c0 81cc 	blt.w	9002416a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023dd2:	f10e 38ff 	add.w	r8, lr, #4294967295
90023dd6:	45c4      	cmp	ip, r8
90023dd8:	f280 81c7 	bge.w	9002416a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023ddc:	b21b      	sxth	r3, r3
90023dde:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90023de0:	fb0c 2203 	mla	r2, ip, r3, r2
90023de4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90023de8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90023dec:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90023df0:	2900      	cmp	r1, #0
90023df2:	f000 8182 	beq.w	900240fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90023df6:	f8d8 5004 	ldr.w	r5, [r8, #4]
90023dfa:	950b      	str	r5, [sp, #44]	@ 0x2c
90023dfc:	0e2d      	lsrs	r5, r5, #24
90023dfe:	9512      	str	r5, [sp, #72]	@ 0x48
90023e00:	b180      	cbz	r0, 90023e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023e02:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90023e06:	3b01      	subs	r3, #1
90023e08:	009b      	lsls	r3, r3, #2
90023e0a:	3304      	adds	r3, #4
90023e0c:	eb08 0c03 	add.w	ip, r8, r3
90023e10:	f858 3003 	ldr.w	r3, [r8, r3]
90023e14:	9308      	str	r3, [sp, #32]
90023e16:	0e1b      	lsrs	r3, r3, #24
90023e18:	9310      	str	r3, [sp, #64]	@ 0x40
90023e1a:	f8dc 3004 	ldr.w	r3, [ip, #4]
90023e1e:	930c      	str	r3, [sp, #48]	@ 0x30
90023e20:	0e1b      	lsrs	r3, r3, #24
90023e22:	9313      	str	r3, [sp, #76]	@ 0x4c
90023e24:	b289      	uxth	r1, r1
90023e26:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90023e28:	b280      	uxth	r0, r0
90023e2a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90023e2c:	fb01 f900 	mul.w	r9, r1, r0
90023e30:	0109      	lsls	r1, r1, #4
90023e32:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023e36:	eba1 0809 	sub.w	r8, r1, r9
90023e3a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90023e3e:	b280      	uxth	r0, r0
90023e40:	fa1f f888 	uxth.w	r8, r8
90023e44:	1a09      	subs	r1, r1, r0
90023e46:	fb08 f303 	mul.w	r3, r8, r3
90023e4a:	b289      	uxth	r1, r1
90023e4c:	fb01 330e 	mla	r3, r1, lr, r3
90023e50:	fb00 3305 	mla	r3, r0, r5, r3
90023e54:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90023e56:	fb09 3305 	mla	r3, r9, r5, r3
90023e5a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023e5e:	2b00      	cmp	r3, #0
90023e60:	f000 80d2 	beq.w	90024008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023e64:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90023e68:	d01b      	beq.n	90023ea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90023e6a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90023e6e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90023e72:	fb0e fa0a 	mul.w	sl, lr, sl
90023e76:	fb0e fe02 	mul.w	lr, lr, r2
90023e7a:	ea4f 221a 	mov.w	r2, sl, lsr #8
90023e7e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023e82:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90023e86:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90023e8a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023e8e:	4452      	add	r2, sl
90023e90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e94:	0a12      	lsrs	r2, r2, #8
90023e96:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90023e9a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90023e9e:	ea42 020c 	orr.w	r2, r2, ip
90023ea2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90023ea4:	2dff      	cmp	r5, #255	@ 0xff
90023ea6:	d021      	beq.n	90023eec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90023ea8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90023eaa:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90023eae:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90023eb0:	fb05 fb0b 	mul.w	fp, r5, fp
90023eb4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90023eb6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90023eba:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90023ebc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023ec0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023ec4:	fb05 fa0a 	mul.w	sl, r5, sl
90023ec8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023ecc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023ed0:	44de      	add	lr, fp
90023ed2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023ed6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023eda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023ede:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023ee2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023ee6:	ea4e 050a 	orr.w	r5, lr, sl
90023eea:	950b      	str	r5, [sp, #44]	@ 0x2c
90023eec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90023eee:	2dff      	cmp	r5, #255	@ 0xff
90023ef0:	d021      	beq.n	90023f36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90023ef2:	9d08      	ldr	r5, [sp, #32]
90023ef4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90023ef8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90023efa:	fb05 fb0b 	mul.w	fp, r5, fp
90023efe:	9d08      	ldr	r5, [sp, #32]
90023f00:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90023f04:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90023f06:	fb05 fa0e 	mul.w	sl, r5, lr
90023f0a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023f0e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023f12:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023f16:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023f1a:	44de      	add	lr, fp
90023f1c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023f20:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023f24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023f28:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023f2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023f30:	ea4e 050a 	orr.w	r5, lr, sl
90023f34:	9508      	str	r5, [sp, #32]
90023f36:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90023f38:	2dff      	cmp	r5, #255	@ 0xff
90023f3a:	d021      	beq.n	90023f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90023f3c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90023f3e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90023f42:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90023f44:	fb05 fb0b 	mul.w	fp, r5, fp
90023f48:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90023f4a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90023f4e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90023f50:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023f54:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023f58:	fb05 fa0a 	mul.w	sl, r5, sl
90023f5c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023f60:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023f64:	44de      	add	lr, fp
90023f66:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023f6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023f6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023f72:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023f76:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023f7a:	ea4e 050a 	orr.w	r5, lr, sl
90023f7e:	950c      	str	r5, [sp, #48]	@ 0x30
90023f80:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90023f82:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90023f86:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90023f8a:	2bff      	cmp	r3, #255	@ 0xff
90023f8c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90023f90:	9d08      	ldr	r5, [sp, #32]
90023f92:	fb08 fc0c 	mul.w	ip, r8, ip
90023f96:	fb01 cc0e 	mla	ip, r1, lr, ip
90023f9a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90023f9e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90023fa0:	fb00 cc0e 	mla	ip, r0, lr, ip
90023fa4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90023fa8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90023faa:	fb09 cc0e 	mla	ip, r9, lr, ip
90023fae:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90023fb2:	fb08 f80e 	mul.w	r8, r8, lr
90023fb6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023fba:	fb01 8202 	mla	r2, r1, r2, r8
90023fbe:	9908      	ldr	r1, [sp, #32]
90023fc0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023fc4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90023fc8:	990c      	ldr	r1, [sp, #48]	@ 0x30
90023fca:	fb00 220a 	mla	r2, r0, sl, r2
90023fce:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90023fd2:	fb09 2900 	mla	r9, r9, r0, r2
90023fd6:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023fda:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023fde:	ea4c 0c09 	orr.w	ip, ip, r9
90023fe2:	ea4f 221c 	mov.w	r2, ip, lsr #8
90023fe6:	f040 8091 	bne.w	9002410c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90023fea:	ea4f 135c 	mov.w	r3, ip, lsr #5
90023fee:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90023ff2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023ff6:	f022 0207 	bic.w	r2, r2, #7
90023ffa:	431a      	orrs	r2, r3
90023ffc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90024000:	ea4c 0c02 	orr.w	ip, ip, r2
90024004:	f8a7 c000 	strh.w	ip, [r7]
90024008:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002400a:	3702      	adds	r7, #2
9002400c:	441c      	add	r4, r3
9002400e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024010:	441e      	add	r6, r3
90024012:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90024014:	3b01      	subs	r3, #1
90024016:	9317      	str	r3, [sp, #92]	@ 0x5c
90024018:	e6c0      	b.n	90023d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002401a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002401c:	441c      	add	r4, r3
9002401e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024020:	441e      	add	r6, r3
90024022:	9b07      	ldr	r3, [sp, #28]
90024024:	3b01      	subs	r3, #1
90024026:	9307      	str	r3, [sp, #28]
90024028:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002402a:	3302      	adds	r3, #2
9002402c:	930a      	str	r3, [sp, #40]	@ 0x28
9002402e:	e695      	b.n	90023d5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024030:	d024      	beq.n	9002407c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90024032:	9b07      	ldr	r3, [sp, #28]
90024034:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90024036:	3b01      	subs	r3, #1
90024038:	fb00 4003 	mla	r0, r0, r3, r4
9002403c:	1400      	asrs	r0, r0, #16
9002403e:	f53f aeaa 	bmi.w	90023d96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90024042:	3901      	subs	r1, #1
90024044:	4288      	cmp	r0, r1
90024046:	f6bf aea6 	bge.w	90023d96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002404a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
9002404c:	fb01 6303 	mla	r3, r1, r3, r6
90024050:	141b      	asrs	r3, r3, #16
90024052:	f53f aea0 	bmi.w	90023d96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90024056:	3a01      	subs	r2, #1
90024058:	4293      	cmp	r3, r2
9002405a:	f6bf ae9c 	bge.w	90023d96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002405e:	f8dd b01c 	ldr.w	fp, [sp, #28]
90024062:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
90024066:	f1bb 0f00 	cmp.w	fp, #0
9002406a:	f300 809a 	bgt.w	900241a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002406e:	9b07      	ldr	r3, [sp, #28]
90024070:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90024074:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024076:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002407a:	930a      	str	r3, [sp, #40]	@ 0x28
9002407c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002407e:	2b00      	cmp	r3, #0
90024080:	f340 81ec 	ble.w	9002445c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90024084:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024088:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002408a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002408e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024092:	eef0 6a62 	vmov.f32	s13, s5
90024096:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002409a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002409e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900240a2:	ee16 4a90 	vmov	r4, s13
900240a6:	eef0 6a43 	vmov.f32	s13, s6
900240aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900240ae:	ee16 6a90 	vmov	r6, s13
900240b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900240b6:	ee61 7a27 	vmul.f32	s15, s2, s15
900240ba:	ee77 2a62 	vsub.f32	s5, s14, s5
900240be:	ee37 3ac3 	vsub.f32	s6, s15, s6
900240c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900240c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900240ca:	ee12 2a90 	vmov	r2, s5
900240ce:	eef0 2a47 	vmov.f32	s5, s14
900240d2:	fb92 f3f3 	sdiv	r3, r2, r3
900240d6:	ee13 2a10 	vmov	r2, s6
900240da:	9327      	str	r3, [sp, #156]	@ 0x9c
900240dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900240de:	eeb0 3a67 	vmov.f32	s6, s15
900240e2:	fb92 f3f3 	sdiv	r3, r2, r3
900240e6:	9328      	str	r3, [sp, #160]	@ 0xa0
900240e8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900240ea:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900240ec:	3b01      	subs	r3, #1
900240ee:	9316      	str	r3, [sp, #88]	@ 0x58
900240f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900240f2:	bf08      	it	eq
900240f4:	4613      	moveq	r3, r2
900240f6:	9307      	str	r3, [sp, #28]
900240f8:	e622      	b.n	90023d40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
900240fa:	2800      	cmp	r0, #0
900240fc:	f43f ae92 	beq.w	90023e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90024100:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90024104:	9308      	str	r3, [sp, #32]
90024106:	0e1b      	lsrs	r3, r3, #24
90024108:	9310      	str	r3, [sp, #64]	@ 0x40
9002410a:	e68b      	b.n	90023e24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002410c:	8839      	ldrh	r1, [r7, #0]
9002410e:	43db      	mvns	r3, r3
90024110:	4dd4      	ldr	r5, [pc, #848]	@ (90024464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90024112:	ea4f 2e21 	mov.w	lr, r1, asr #8
90024116:	fa5f f883 	uxtb.w	r8, r3
9002411a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9002411e:	10c8      	asrs	r0, r1, #3
90024120:	00cb      	lsls	r3, r1, #3
90024122:	fb0e fe08 	mul.w	lr, lr, r8
90024126:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002412a:	b2db      	uxtb	r3, r3
9002412c:	f10e 0101 	add.w	r1, lr, #1
90024130:	fb00 f008 	mul.w	r0, r0, r8
90024134:	fb03 f308 	mul.w	r3, r3, r8
90024138:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
9002413c:	ea4f 411c 	mov.w	r1, ip, lsr #16
90024140:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90024144:	f100 0e01 	add.w	lr, r0, #1
90024148:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
9002414c:	b2c9      	uxtb	r1, r1
9002414e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90024152:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90024156:	00d2      	lsls	r2, r2, #3
90024158:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002415c:	430a      	orrs	r2, r1
9002415e:	1c59      	adds	r1, r3, #1
90024160:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90024164:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90024168:	e748      	b.n	90023ffc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
9002416a:	f112 0801 	adds.w	r8, r2, #1
9002416e:	f53f af4b 	bmi.w	90024008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024172:	4543      	cmp	r3, r8
90024174:	f6ff af48 	blt.w	90024008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024178:	f11c 0801 	adds.w	r8, ip, #1
9002417c:	f53f af44 	bmi.w	90024008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024180:	45c6      	cmp	lr, r8
90024182:	f6ff af41 	blt.w	90024008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90024186:	b21b      	sxth	r3, r3
90024188:	e9cd 2c01 	strd	r2, ip, [sp, #4]
9002418c:	fa0f f28e 	sxth.w	r2, lr
90024190:	e9cd 1003 	strd	r1, r0, [sp, #12]
90024194:	9200      	str	r2, [sp, #0]
90024196:	4639      	mov	r1, r7
90024198:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002419a:	9819      	ldr	r0, [sp, #100]	@ 0x64
9002419c:	f7ff fc88 	bl	90023ab0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900241a0:	e732      	b.n	90024008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900241a2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900241a4:	1421      	asrs	r1, r4, #16
900241a6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900241a8:	f3c4 3203 	ubfx	r2, r4, #12, #4
900241ac:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
900241b0:	1433      	asrs	r3, r6, #16
900241b2:	f3c6 3003 	ubfx	r0, r6, #12, #4
900241b6:	fb07 1303 	mla	r3, r7, r3, r1
900241ba:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900241bc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900241c0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900241c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900241c8:	2a00      	cmp	r2, #0
900241ca:	f000 8108 	beq.w	900243de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
900241ce:	684d      	ldr	r5, [r1, #4]
900241d0:	950d      	str	r5, [sp, #52]	@ 0x34
900241d2:	0e2d      	lsrs	r5, r5, #24
900241d4:	9514      	str	r5, [sp, #80]	@ 0x50
900241d6:	b178      	cbz	r0, 900241f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900241d8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
900241dc:	3f01      	subs	r7, #1
900241de:	00bf      	lsls	r7, r7, #2
900241e0:	3704      	adds	r7, #4
900241e2:	eb01 0e07 	add.w	lr, r1, r7
900241e6:	59c9      	ldr	r1, [r1, r7]
900241e8:	9109      	str	r1, [sp, #36]	@ 0x24
900241ea:	0e09      	lsrs	r1, r1, #24
900241ec:	9111      	str	r1, [sp, #68]	@ 0x44
900241ee:	f8de 1004 	ldr.w	r1, [lr, #4]
900241f2:	910e      	str	r1, [sp, #56]	@ 0x38
900241f4:	0e09      	lsrs	r1, r1, #24
900241f6:	9115      	str	r1, [sp, #84]	@ 0x54
900241f8:	b292      	uxth	r2, r2
900241fa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900241fc:	b280      	uxth	r0, r0
900241fe:	fb02 f900 	mul.w	r9, r2, r0
90024202:	0112      	lsls	r2, r2, #4
90024204:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90024208:	eba2 0e09 	sub.w	lr, r2, r9
9002420c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90024210:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90024212:	b280      	uxth	r0, r0
90024214:	fa1f fe8e 	uxth.w	lr, lr
90024218:	1a09      	subs	r1, r1, r0
9002421a:	fb0e f202 	mul.w	r2, lr, r2
9002421e:	b289      	uxth	r1, r1
90024220:	fb01 220c 	mla	r2, r1, ip, r2
90024224:	fb00 2205 	mla	r2, r0, r5, r2
90024228:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002422a:	fb09 2205 	mla	r2, r9, r5, r2
9002422e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90024232:	2a00      	cmp	r2, #0
90024234:	f000 80ca 	beq.w	900243cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90024238:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
9002423c:	d019      	beq.n	90024272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
9002423e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90024242:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024246:	fb0c fa0a 	mul.w	sl, ip, sl
9002424a:	fb0c fc03 	mul.w	ip, ip, r3
9002424e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90024252:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90024256:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002425a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002425e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024262:	4453      	add	r3, sl
90024264:	0a3f      	lsrs	r7, r7, #8
90024266:	0a1b      	lsrs	r3, r3, #8
90024268:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
9002426c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90024270:	433b      	orrs	r3, r7
90024272:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024274:	2dff      	cmp	r5, #255	@ 0xff
90024276:	d020      	beq.n	900242ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90024278:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002427a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002427e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90024280:	436f      	muls	r7, r5
90024282:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024284:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024288:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002428c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002428e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024292:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024296:	fb05 fa0a 	mul.w	sl, r5, sl
9002429a:	44bc      	add	ip, r7
9002429c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900242a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900242a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900242a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900242ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900242b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900242b4:	ea4c 050a 	orr.w	r5, ip, sl
900242b8:	950d      	str	r5, [sp, #52]	@ 0x34
900242ba:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900242bc:	2dff      	cmp	r5, #255	@ 0xff
900242be:	d020      	beq.n	90024302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900242c0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900242c2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900242c6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900242c8:	436f      	muls	r7, r5
900242ca:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900242cc:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900242d0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900242d2:	fb05 fa0c 	mul.w	sl, r5, ip
900242d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900242da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900242de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900242e2:	44bc      	add	ip, r7
900242e4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900242e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900242ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900242f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900242f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900242f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900242fc:	ea4c 050a 	orr.w	r5, ip, sl
90024300:	9509      	str	r5, [sp, #36]	@ 0x24
90024302:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90024304:	2dff      	cmp	r5, #255	@ 0xff
90024306:	d020      	beq.n	9002434a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90024308:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002430a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002430e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90024310:	436f      	muls	r7, r5
90024312:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90024314:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024318:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002431c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002431e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90024322:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90024326:	fb05 fa0a 	mul.w	sl, r5, sl
9002432a:	44bc      	add	ip, r7
9002432c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90024330:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024334:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024338:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002433c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024340:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90024344:	ea4c 050a 	orr.w	r5, ip, sl
90024348:	950e      	str	r5, [sp, #56]	@ 0x38
9002434a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002434c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90024350:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90024354:	2aff      	cmp	r2, #255	@ 0xff
90024356:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002435a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002435c:	fb0e f707 	mul.w	r7, lr, r7
90024360:	fb01 770c 	mla	r7, r1, ip, r7
90024364:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024368:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002436a:	fb00 770c 	mla	r7, r0, ip, r7
9002436e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024372:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024374:	fb09 770c 	mla	r7, r9, ip, r7
90024378:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
9002437c:	fb0e fe0c 	mul.w	lr, lr, ip
90024380:	ea4f 2717 	mov.w	r7, r7, lsr #8
90024384:	fb01 e303 	mla	r3, r1, r3, lr
90024388:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002438a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
9002438e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90024392:	990e      	ldr	r1, [sp, #56]	@ 0x38
90024394:	fb00 330a 	mla	r3, r0, sl, r3
90024398:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
9002439c:	fb09 3c0c 	mla	ip, r9, ip, r3
900243a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900243a4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900243a8:	ea47 070c 	orr.w	r7, r7, ip
900243ac:	ea4f 2317 	mov.w	r3, r7, lsr #8
900243b0:	d11e      	bne.n	900243f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
900243b2:	097a      	lsrs	r2, r7, #5
900243b4:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
900243b8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900243bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900243c0:	f023 0307 	bic.w	r3, r3, #7
900243c4:	4313      	orrs	r3, r2
900243c6:	431f      	orrs	r7, r3
900243c8:	f8a8 7000 	strh.w	r7, [r8]
900243cc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900243ce:	f108 0802 	add.w	r8, r8, #2
900243d2:	f10b 3bff 	add.w	fp, fp, #4294967295
900243d6:	441c      	add	r4, r3
900243d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900243da:	441e      	add	r6, r3
900243dc:	e643      	b.n	90024066 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900243de:	2800      	cmp	r0, #0
900243e0:	f43f af0a 	beq.w	900241f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900243e4:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
900243e8:	9109      	str	r1, [sp, #36]	@ 0x24
900243ea:	0e09      	lsrs	r1, r1, #24
900243ec:	9111      	str	r1, [sp, #68]	@ 0x44
900243ee:	e703      	b.n	900241f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900243f0:	f8b8 1000 	ldrh.w	r1, [r8]
900243f4:	43d2      	mvns	r2, r2
900243f6:	ea4f 2c21 	mov.w	ip, r1, asr #8
900243fa:	fa5f fe82 	uxtb.w	lr, r2
900243fe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90024402:	10c8      	asrs	r0, r1, #3
90024404:	00ca      	lsls	r2, r1, #3
90024406:	fb0c fc0e 	mul.w	ip, ip, lr
9002440a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002440e:	b2d2      	uxtb	r2, r2
90024410:	f10c 0101 	add.w	r1, ip, #1
90024414:	fb00 f00e 	mul.w	r0, r0, lr
90024418:	fb02 f20e 	mul.w	r2, r2, lr
9002441c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024420:	0c39      	lsrs	r1, r7, #16
90024422:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024426:	490f      	ldr	r1, [pc, #60]	@ (90024464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90024428:	fa5f fc8c 	uxtb.w	ip, ip
9002442c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90024430:	1c41      	adds	r1, r0, #1
90024432:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90024436:	1c51      	adds	r1, r2, #1
90024438:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9002443c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024440:	00c0      	lsls	r0, r0, #3
90024442:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90024446:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002444a:	f3c7 07c4 	ubfx	r7, r7, #3, #5
9002444e:	ea4c 0c00 	orr.w	ip, ip, r0
90024452:	ea47 0c0c 	orr.w	ip, r7, ip
90024456:	f8a8 c000 	strh.w	ip, [r8]
9002445a:	e7b7      	b.n	900243cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
9002445c:	b01b      	add	sp, #108	@ 0x6c
9002445e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024462:	bf00      	nop
90024464:	fffff800 	.word	0xfffff800

90024468 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90024468:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002446c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90024470:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90024474:	2d00      	cmp	r5, #0
90024476:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
9002447a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
9002447e:	fb05 0e03 	mla	lr, r5, r3, r0
90024482:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90024486:	f2c0 808c 	blt.w	900245a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
9002448a:	45a9      	cmp	r9, r5
9002448c:	f340 8089 	ble.w	900245a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90024490:	2800      	cmp	r0, #0
90024492:	f2c0 8084 	blt.w	9002459e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90024496:	4580      	cmp	r8, r0
90024498:	f340 8081 	ble.w	9002459e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
9002449c:	ea4f 045e 	mov.w	r4, lr, lsr #1
900244a0:	f01e 0f01 	tst.w	lr, #1
900244a4:	5d16      	ldrb	r6, [r2, r4]
900244a6:	bf0c      	ite	eq
900244a8:	f006 060f 	andeq.w	r6, r6, #15
900244ac:	1136      	asrne	r6, r6, #4
900244ae:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900244b2:	b2f6      	uxtb	r6, r6
900244b4:	1c44      	adds	r4, r0, #1
900244b6:	d477      	bmi.n	900245a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900244b8:	45a0      	cmp	r8, r4
900244ba:	dd75      	ble.n	900245a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900244bc:	2f00      	cmp	r7, #0
900244be:	d075      	beq.n	900245ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
900244c0:	f10e 0a01 	add.w	sl, lr, #1
900244c4:	ea4f 045a 	mov.w	r4, sl, lsr #1
900244c8:	f01a 0f01 	tst.w	sl, #1
900244cc:	5d14      	ldrb	r4, [r2, r4]
900244ce:	bf0c      	ite	eq
900244d0:	f004 040f 	andeq.w	r4, r4, #15
900244d4:	1124      	asrne	r4, r4, #4
900244d6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900244da:	b2e4      	uxtb	r4, r4
900244dc:	3501      	adds	r5, #1
900244de:	d469      	bmi.n	900245b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900244e0:	45a9      	cmp	r9, r5
900244e2:	dd67      	ble.n	900245b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900244e4:	f1bc 0f00 	cmp.w	ip, #0
900244e8:	d067      	beq.n	900245ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
900244ea:	2800      	cmp	r0, #0
900244ec:	db60      	blt.n	900245b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900244ee:	4580      	cmp	r8, r0
900244f0:	dd5e      	ble.n	900245b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900244f2:	eb03 090e 	add.w	r9, r3, lr
900244f6:	ea4f 0559 	mov.w	r5, r9, lsr #1
900244fa:	f019 0f01 	tst.w	r9, #1
900244fe:	5d55      	ldrb	r5, [r2, r5]
90024500:	bf0c      	ite	eq
90024502:	f005 050f 	andeq.w	r5, r5, #15
90024506:	112d      	asrne	r5, r5, #4
90024508:	eb05 1505 	add.w	r5, r5, r5, lsl #4
9002450c:	b2ed      	uxtb	r5, r5
9002450e:	3001      	adds	r0, #1
90024510:	d456      	bmi.n	900245c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90024512:	4580      	cmp	r8, r0
90024514:	dd54      	ble.n	900245c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90024516:	2f00      	cmp	r7, #0
90024518:	d054      	beq.n	900245c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
9002451a:	3301      	adds	r3, #1
9002451c:	449e      	add	lr, r3
9002451e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90024522:	f01e 0f01 	tst.w	lr, #1
90024526:	5cd0      	ldrb	r0, [r2, r3]
90024528:	bf0c      	ite	eq
9002452a:	f000 000f 	andeq.w	r0, r0, #15
9002452e:	1100      	asrne	r0, r0, #4
90024530:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024534:	b2c3      	uxtb	r3, r0
90024536:	b2ba      	uxth	r2, r7
90024538:	fa1f fc8c 	uxth.w	ip, ip
9002453c:	fb02 f00c 	mul.w	r0, r2, ip
90024540:	0112      	lsls	r2, r2, #4
90024542:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90024546:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
9002454a:	1a12      	subs	r2, r2, r0
9002454c:	fa1f fc8c 	uxth.w	ip, ip
90024550:	b292      	uxth	r2, r2
90024552:	eba7 070c 	sub.w	r7, r7, ip
90024556:	4362      	muls	r2, r4
90024558:	b2bf      	uxth	r7, r7
9002455a:	fb06 2207 	mla	r2, r6, r7, r2
9002455e:	fb0c 2505 	mla	r5, ip, r5, r2
90024562:	fb00 5303 	mla	r3, r0, r3, r5
90024566:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002456a:	b1b3      	cbz	r3, 9002459a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002456c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90024570:	435a      	muls	r2, r3
90024572:	1c53      	adds	r3, r2, #1
90024574:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024578:	4a2d      	ldr	r2, [pc, #180]	@ (90024630 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
9002457a:	121b      	asrs	r3, r3, #8
9002457c:	6812      	ldr	r2, [r2, #0]
9002457e:	2bff      	cmp	r3, #255	@ 0xff
90024580:	ea4f 2612 	mov.w	r6, r2, lsr #8
90024584:	d120      	bne.n	900245c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90024586:	0950      	lsrs	r0, r2, #5
90024588:	4b2a      	ldr	r3, [pc, #168]	@ (90024634 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
9002458a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002458e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024592:	4033      	ands	r3, r6
90024594:	4318      	orrs	r0, r3
90024596:	4302      	orrs	r2, r0
90024598:	800a      	strh	r2, [r1, #0]
9002459a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002459e:	2600      	movs	r6, #0
900245a0:	e788      	b.n	900244b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
900245a2:	2400      	movs	r4, #0
900245a4:	4626      	mov	r6, r4
900245a6:	e799      	b.n	900244dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900245a8:	2400      	movs	r4, #0
900245aa:	e797      	b.n	900244dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900245ac:	463c      	mov	r4, r7
900245ae:	e795      	b.n	900244dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900245b0:	2500      	movs	r5, #0
900245b2:	e7ac      	b.n	9002450e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
900245b4:	2300      	movs	r3, #0
900245b6:	461d      	mov	r5, r3
900245b8:	e7bd      	b.n	90024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900245ba:	4663      	mov	r3, ip
900245bc:	4665      	mov	r5, ip
900245be:	e7ba      	b.n	90024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900245c0:	2300      	movs	r3, #0
900245c2:	e7b8      	b.n	90024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900245c4:	463b      	mov	r3, r7
900245c6:	e7b6      	b.n	90024536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900245c8:	880d      	ldrh	r5, [r1, #0]
900245ca:	b29f      	uxth	r7, r3
900245cc:	f3c2 4007 	ubfx	r0, r2, #16, #8
900245d0:	43db      	mvns	r3, r3
900245d2:	122c      	asrs	r4, r5, #8
900245d4:	fb10 f007 	smulbb	r0, r0, r7
900245d8:	b2db      	uxtb	r3, r3
900245da:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900245de:	b2f6      	uxtb	r6, r6
900245e0:	b2d2      	uxtb	r2, r2
900245e2:	fb04 0403 	mla	r4, r4, r3, r0
900245e6:	10e8      	asrs	r0, r5, #3
900245e8:	fb12 f207 	smulbb	r2, r2, r7
900245ec:	00ed      	lsls	r5, r5, #3
900245ee:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900245f2:	b2a4      	uxth	r4, r4
900245f4:	fb16 f607 	smulbb	r6, r6, r7
900245f8:	b2ed      	uxtb	r5, r5
900245fa:	fb00 6603 	mla	r6, r0, r3, r6
900245fe:	fb05 2303 	mla	r3, r5, r3, r2
90024602:	b2b0      	uxth	r0, r6
90024604:	b29a      	uxth	r2, r3
90024606:	1c63      	adds	r3, r4, #1
90024608:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002460c:	1c53      	adds	r3, r2, #1
9002460e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024612:	1c42      	adds	r2, r0, #1
90024614:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90024618:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002461c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024620:	0940      	lsrs	r0, r0, #5
90024622:	4323      	orrs	r3, r4
90024624:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024628:	4303      	orrs	r3, r0
9002462a:	800b      	strh	r3, [r1, #0]
9002462c:	e7b5      	b.n	9002459a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002462e:	bf00      	nop
90024630:	24021c6c 	.word	0x24021c6c
90024634:	00fff800 	.word	0x00fff800

90024638 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002463c:	b097      	sub	sp, #92	@ 0x5c
9002463e:	9214      	str	r2, [sp, #80]	@ 0x50
90024640:	9309      	str	r3, [sp, #36]	@ 0x24
90024642:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90024644:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90024648:	9015      	str	r0, [sp, #84]	@ 0x54
9002464a:	910d      	str	r1, [sp, #52]	@ 0x34
9002464c:	6850      	ldr	r0, [r2, #4]
9002464e:	930f      	str	r3, [sp, #60]	@ 0x3c
90024650:	6812      	ldr	r2, [r2, #0]
90024652:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90024656:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
9002465a:	fb00 1303 	mla	r3, r0, r3, r1
9002465e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90024662:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024664:	689b      	ldr	r3, [r3, #8]
90024666:	3301      	adds	r3, #1
90024668:	f023 0301 	bic.w	r3, r3, #1
9002466c:	930a      	str	r3, [sp, #40]	@ 0x28
9002466e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024670:	681f      	ldr	r7, [r3, #0]
90024672:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90024674:	2b00      	cmp	r3, #0
90024676:	dc03      	bgt.n	90024680 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024678:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9002467a:	2b00      	cmp	r3, #0
9002467c:	f340 8289 	ble.w	90024b92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90024680:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024682:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024686:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002468a:	1e48      	subs	r0, r1, #1
9002468c:	f102 3cff 	add.w	ip, r2, #4294967295
90024690:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024692:	2b00      	cmp	r3, #0
90024694:	f340 80c5 	ble.w	90024822 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90024698:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002469c:	ea4f 4326 	mov.w	r3, r6, asr #16
900246a0:	d406      	bmi.n	900246b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900246a2:	4586      	cmp	lr, r0
900246a4:	da04      	bge.n	900246b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900246a6:	2b00      	cmp	r3, #0
900246a8:	db02      	blt.n	900246b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900246aa:	4563      	cmp	r3, ip
900246ac:	f2c0 80ba 	blt.w	90024824 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900246b0:	f11e 0e01 	adds.w	lr, lr, #1
900246b4:	f100 80ab 	bmi.w	9002480e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900246b8:	4571      	cmp	r1, lr
900246ba:	f2c0 80a8 	blt.w	9002480e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900246be:	3301      	adds	r3, #1
900246c0:	f100 80a5 	bmi.w	9002480e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900246c4:	429a      	cmp	r2, r3
900246c6:	f2c0 80a2 	blt.w	9002480e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900246ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900246cc:	46c8      	mov	r8, r9
900246ce:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
900246d2:	930e      	str	r3, [sp, #56]	@ 0x38
900246d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900246d6:	2b00      	cmp	r3, #0
900246d8:	f340 80c4 	ble.w	90024864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
900246dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900246de:	1430      	asrs	r0, r6, #16
900246e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
900246e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
900246e8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900246ec:	1423      	asrs	r3, r4, #16
900246ee:	f100 814f 	bmi.w	90024990 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900246f2:	f10c 3bff 	add.w	fp, ip, #4294967295
900246f6:	455b      	cmp	r3, fp
900246f8:	f280 814a 	bge.w	90024990 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900246fc:	2800      	cmp	r0, #0
900246fe:	f2c0 8147 	blt.w	90024990 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024702:	f10e 3bff 	add.w	fp, lr, #4294967295
90024706:	4558      	cmp	r0, fp
90024708:	f280 8142 	bge.w	90024990 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002470c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9002470e:	fb00 3305 	mla	r3, r0, r5, r3
90024712:	0858      	lsrs	r0, r3, #1
90024714:	07dd      	lsls	r5, r3, #31
90024716:	f817 c000 	ldrb.w	ip, [r7, r0]
9002471a:	bf54      	ite	pl
9002471c:	f00c 0c0f 	andpl.w	ip, ip, #15
90024720:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024724:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024728:	fa5f fc8c 	uxtb.w	ip, ip
9002472c:	2a00      	cmp	r2, #0
9002472e:	f000 80dd 	beq.w	900248ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90024732:	1c58      	adds	r0, r3, #1
90024734:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90024738:	07c0      	lsls	r0, r0, #31
9002473a:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002473e:	bf54      	ite	pl
90024740:	f00e 0e0f 	andpl.w	lr, lr, #15
90024744:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90024748:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
9002474c:	fa5f f08e 	uxtb.w	r0, lr
90024750:	9010      	str	r0, [sp, #64]	@ 0x40
90024752:	b1d9      	cbz	r1, 9002478c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90024754:	4453      	add	r3, sl
90024756:	0858      	lsrs	r0, r3, #1
90024758:	07dd      	lsls	r5, r3, #31
9002475a:	f103 0301 	add.w	r3, r3, #1
9002475e:	5c38      	ldrb	r0, [r7, r0]
90024760:	bf54      	ite	pl
90024762:	f000 000f 	andpl.w	r0, r0, #15
90024766:	1100      	asrmi	r0, r0, #4
90024768:	07dd      	lsls	r5, r3, #31
9002476a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002476e:	b2c0      	uxtb	r0, r0
90024770:	900b      	str	r0, [sp, #44]	@ 0x2c
90024772:	ea4f 0053 	mov.w	r0, r3, lsr #1
90024776:	f817 e000 	ldrb.w	lr, [r7, r0]
9002477a:	bf54      	ite	pl
9002477c:	f00e 030f 	andpl.w	r3, lr, #15
90024780:	ea4f 132e 	movmi.w	r3, lr, asr #4
90024784:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024788:	b2db      	uxtb	r3, r3
9002478a:	9311      	str	r3, [sp, #68]	@ 0x44
9002478c:	b292      	uxth	r2, r2
9002478e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90024790:	b289      	uxth	r1, r1
90024792:	fb02 f301 	mul.w	r3, r2, r1
90024796:	0112      	lsls	r2, r2, #4
90024798:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
9002479c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900247a0:	1ad2      	subs	r2, r2, r3
900247a2:	b289      	uxth	r1, r1
900247a4:	b292      	uxth	r2, r2
900247a6:	1a40      	subs	r0, r0, r1
900247a8:	436a      	muls	r2, r5
900247aa:	b280      	uxth	r0, r0
900247ac:	fb0c 2c00 	mla	ip, ip, r0, r2
900247b0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900247b2:	fb01 c102 	mla	r1, r1, r2, ip
900247b6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900247b8:	fb03 1302 	mla	r3, r3, r2, r1
900247bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
900247c0:	b1db      	cbz	r3, 900247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900247c2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900247c4:	4353      	muls	r3, r2
900247c6:	1c5a      	adds	r2, r3, #1
900247c8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900247cc:	4ac6      	ldr	r2, [pc, #792]	@ (90024ae8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900247ce:	121b      	asrs	r3, r3, #8
900247d0:	6812      	ldr	r2, [r2, #0]
900247d2:	2bff      	cmp	r3, #255	@ 0xff
900247d4:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900247d8:	f040 8099 	bne.w	9002490e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900247dc:	0953      	lsrs	r3, r2, #5
900247de:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900247e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900247e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900247ea:	f02c 0c07 	bic.w	ip, ip, #7
900247ee:	ea43 0c0c 	orr.w	ip, r3, ip
900247f2:	ea4c 0202 	orr.w	r2, ip, r2
900247f6:	f8a8 2000 	strh.w	r2, [r8]
900247fa:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
900247fc:	f108 0802 	add.w	r8, r8, #2
90024800:	441c      	add	r4, r3
90024802:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024804:	441e      	add	r6, r3
90024806:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024808:	3b01      	subs	r3, #1
9002480a:	930e      	str	r3, [sp, #56]	@ 0x38
9002480c:	e762      	b.n	900246d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9002480e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90024810:	f109 0902 	add.w	r9, r9, #2
90024814:	441c      	add	r4, r3
90024816:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024818:	441e      	add	r6, r3
9002481a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002481c:	3b01      	subs	r3, #1
9002481e:	9309      	str	r3, [sp, #36]	@ 0x24
90024820:	e736      	b.n	90024690 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90024822:	d024      	beq.n	9002486e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90024824:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024826:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90024828:	3b01      	subs	r3, #1
9002482a:	fb00 4003 	mla	r0, r0, r3, r4
9002482e:	1400      	asrs	r0, r0, #16
90024830:	f53f af4b 	bmi.w	900246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024834:	3901      	subs	r1, #1
90024836:	4288      	cmp	r0, r1
90024838:	f6bf af47 	bge.w	900246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002483c:	9924      	ldr	r1, [sp, #144]	@ 0x90
9002483e:	fb01 6303 	mla	r3, r1, r3, r6
90024842:	141b      	asrs	r3, r3, #16
90024844:	f53f af41 	bmi.w	900246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024848:	3a01      	subs	r2, #1
9002484a:	4293      	cmp	r3, r2
9002484c:	f6bf af3d 	bge.w	900246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024850:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90024854:	46c8      	mov	r8, r9
90024856:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
9002485a:	930e      	str	r3, [sp, #56]	@ 0x38
9002485c:	f1bb 0f00 	cmp.w	fp, #0
90024860:	f300 80b7 	bgt.w	900249d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90024864:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024866:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002486a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002486e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90024870:	2b00      	cmp	r3, #0
90024872:	f340 818e 	ble.w	90024b92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90024876:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002487a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002487c:	ee30 0a04 	vadd.f32	s0, s0, s8
90024880:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024884:	eef0 6a62 	vmov.f32	s13, s5
90024888:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002488c:	ee31 1a05 	vadd.f32	s2, s2, s10
90024890:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024894:	ee16 4a90 	vmov	r4, s13
90024898:	eef0 6a43 	vmov.f32	s13, s6
9002489c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900248a0:	ee16 6a90 	vmov	r6, s13
900248a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
900248a8:	ee61 7a27 	vmul.f32	s15, s2, s15
900248ac:	ee77 2a62 	vsub.f32	s5, s14, s5
900248b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
900248b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900248b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900248bc:	ee12 2a90 	vmov	r2, s5
900248c0:	eef0 2a47 	vmov.f32	s5, s14
900248c4:	fb92 f3f3 	sdiv	r3, r2, r3
900248c8:	ee13 2a10 	vmov	r2, s6
900248cc:	9323      	str	r3, [sp, #140]	@ 0x8c
900248ce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900248d0:	eeb0 3a67 	vmov.f32	s6, s15
900248d4:	fb92 f3f3 	sdiv	r3, r2, r3
900248d8:	9324      	str	r3, [sp, #144]	@ 0x90
900248da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900248dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900248de:	3b01      	subs	r3, #1
900248e0:	930d      	str	r3, [sp, #52]	@ 0x34
900248e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900248e4:	bf08      	it	eq
900248e6:	4613      	moveq	r3, r2
900248e8:	9309      	str	r3, [sp, #36]	@ 0x24
900248ea:	e6c2      	b.n	90024672 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900248ec:	2900      	cmp	r1, #0
900248ee:	f43f af4d 	beq.w	9002478c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900248f2:	eb0a 0003 	add.w	r0, sl, r3
900248f6:	0843      	lsrs	r3, r0, #1
900248f8:	07c0      	lsls	r0, r0, #31
900248fa:	5cfb      	ldrb	r3, [r7, r3]
900248fc:	bf54      	ite	pl
900248fe:	f003 030f 	andpl.w	r3, r3, #15
90024902:	111b      	asrmi	r3, r3, #4
90024904:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024908:	b2db      	uxtb	r3, r3
9002490a:	930b      	str	r3, [sp, #44]	@ 0x2c
9002490c:	e73e      	b.n	9002478c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002490e:	f8b8 e000 	ldrh.w	lr, [r8]
90024912:	fa1f fb83 	uxth.w	fp, r3
90024916:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002491a:	43db      	mvns	r3, r3
9002491c:	ea4f 202e 	mov.w	r0, lr, asr #8
90024920:	fb11 f10b 	smulbb	r1, r1, fp
90024924:	b2db      	uxtb	r3, r3
90024926:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002492a:	fa5f fc8c 	uxtb.w	ip, ip
9002492e:	b2d2      	uxtb	r2, r2
90024930:	fb00 1003 	mla	r0, r0, r3, r1
90024934:	ea4f 01ee 	mov.w	r1, lr, asr #3
90024938:	fb1c fc0b 	smulbb	ip, ip, fp
9002493c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90024940:	b280      	uxth	r0, r0
90024942:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024946:	fb12 fb0b 	smulbb	fp, r2, fp
9002494a:	fa5f fe8e 	uxtb.w	lr, lr
9002494e:	fb01 cc03 	mla	ip, r1, r3, ip
90024952:	fb0e bb03 	mla	fp, lr, r3, fp
90024956:	1c43      	adds	r3, r0, #1
90024958:	fa1f fc8c 	uxth.w	ip, ip
9002495c:	fa1f fb8b 	uxth.w	fp, fp
90024960:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024964:	f10c 0101 	add.w	r1, ip, #1
90024968:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
9002496c:	f10b 0001 	add.w	r0, fp, #1
90024970:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024974:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90024978:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002497c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90024980:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90024984:	4318      	orrs	r0, r3
90024986:	ea40 000c 	orr.w	r0, r0, ip
9002498a:	f8a8 0000 	strh.w	r0, [r8]
9002498e:	e734      	b.n	900247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024990:	f113 0b01 	adds.w	fp, r3, #1
90024994:	f53f af31 	bmi.w	900247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024998:	45dc      	cmp	ip, fp
9002499a:	f6ff af2e 	blt.w	900247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002499e:	f110 0b01 	adds.w	fp, r0, #1
900249a2:	f53f af2a 	bmi.w	900247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900249a6:	45de      	cmp	lr, fp
900249a8:	f6ff af27 	blt.w	900247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900249ac:	9302      	str	r3, [sp, #8]
900249ae:	fa0f f38e 	sxth.w	r3, lr
900249b2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900249b4:	9301      	str	r3, [sp, #4]
900249b6:	fa0f f38c 	sxth.w	r3, ip
900249ba:	e9cd 0203 	strd	r0, r2, [sp, #12]
900249be:	e9cd 1505 	strd	r1, r5, [sp, #20]
900249c2:	9300      	str	r3, [sp, #0]
900249c4:	463a      	mov	r2, r7
900249c6:	4653      	mov	r3, sl
900249c8:	4641      	mov	r1, r8
900249ca:	9815      	ldr	r0, [sp, #84]	@ 0x54
900249cc:	f7ff fd4c 	bl	90024468 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900249d0:	e713      	b.n	900247fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900249d2:	1422      	asrs	r2, r4, #16
900249d4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
900249d6:	1433      	asrs	r3, r6, #16
900249d8:	f3c4 3103 	ubfx	r1, r4, #12, #4
900249dc:	f3c6 3003 	ubfx	r0, r6, #12, #4
900249e0:	fb05 2303 	mla	r3, r5, r3, r2
900249e4:	085a      	lsrs	r2, r3, #1
900249e6:	07dd      	lsls	r5, r3, #31
900249e8:	5cba      	ldrb	r2, [r7, r2]
900249ea:	bf54      	ite	pl
900249ec:	f002 020f 	andpl.w	r2, r2, #15
900249f0:	1112      	asrmi	r2, r2, #4
900249f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900249f6:	b2d2      	uxtb	r2, r2
900249f8:	2900      	cmp	r1, #0
900249fa:	d077      	beq.n	90024aec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900249fc:	f103 0e01 	add.w	lr, r3, #1
90024a00:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90024a04:	f01e 0f01 	tst.w	lr, #1
90024a08:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024a0c:	bf0c      	ite	eq
90024a0e:	f00c 0c0f 	andeq.w	ip, ip, #15
90024a12:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90024a16:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024a1a:	fa5f f58c 	uxtb.w	r5, ip
90024a1e:	9512      	str	r5, [sp, #72]	@ 0x48
90024a20:	b308      	cbz	r0, 90024a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90024a22:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90024a24:	442b      	add	r3, r5
90024a26:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024a2a:	07dd      	lsls	r5, r3, #31
90024a2c:	f103 0301 	add.w	r3, r3, #1
90024a30:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024a34:	bf54      	ite	pl
90024a36:	f00c 0c0f 	andpl.w	ip, ip, #15
90024a3a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024a3e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024a42:	fa5f f58c 	uxtb.w	r5, ip
90024a46:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024a4a:	950c      	str	r5, [sp, #48]	@ 0x30
90024a4c:	07dd      	lsls	r5, r3, #31
90024a4e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024a52:	bf54      	ite	pl
90024a54:	f00c 0c0f 	andpl.w	ip, ip, #15
90024a58:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024a5c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024a60:	fa5f f38c 	uxtb.w	r3, ip
90024a64:	9313      	str	r3, [sp, #76]	@ 0x4c
90024a66:	b289      	uxth	r1, r1
90024a68:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90024a6a:	b280      	uxth	r0, r0
90024a6c:	fb01 f300 	mul.w	r3, r1, r0
90024a70:	0109      	lsls	r1, r1, #4
90024a72:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90024a76:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90024a7a:	1ac9      	subs	r1, r1, r3
90024a7c:	b280      	uxth	r0, r0
90024a7e:	b289      	uxth	r1, r1
90024a80:	ebac 0c00 	sub.w	ip, ip, r0
90024a84:	4369      	muls	r1, r5
90024a86:	fa1f fc8c 	uxth.w	ip, ip
90024a8a:	fb02 120c 	mla	r2, r2, ip, r1
90024a8e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90024a90:	fb00 2001 	mla	r0, r0, r1, r2
90024a94:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90024a96:	fb03 0302 	mla	r3, r3, r2, r0
90024a9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024a9e:	b1d3      	cbz	r3, 90024ad6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90024aa0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90024aa2:	4353      	muls	r3, r2
90024aa4:	1c5a      	adds	r2, r3, #1
90024aa6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90024aaa:	4a0f      	ldr	r2, [pc, #60]	@ (90024ae8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90024aac:	121b      	asrs	r3, r3, #8
90024aae:	6812      	ldr	r2, [r2, #0]
90024ab0:	2bff      	cmp	r3, #255	@ 0xff
90024ab2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90024ab6:	d12d      	bne.n	90024b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90024ab8:	0953      	lsrs	r3, r2, #5
90024aba:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90024abe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024ac2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024ac6:	f02c 0c07 	bic.w	ip, ip, #7
90024aca:	ea43 0c0c 	orr.w	ip, r3, ip
90024ace:	ea4c 0202 	orr.w	r2, ip, r2
90024ad2:	f8a8 2000 	strh.w	r2, [r8]
90024ad6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90024ad8:	f108 0802 	add.w	r8, r8, #2
90024adc:	f10b 3bff 	add.w	fp, fp, #4294967295
90024ae0:	441c      	add	r4, r3
90024ae2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024ae4:	441e      	add	r6, r3
90024ae6:	e6b9      	b.n	9002485c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90024ae8:	24021c6c 	.word	0x24021c6c
90024aec:	2800      	cmp	r0, #0
90024aee:	d0ba      	beq.n	90024a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90024af0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90024af2:	442b      	add	r3, r5
90024af4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024af8:	07db      	lsls	r3, r3, #31
90024afa:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024afe:	bf54      	ite	pl
90024b00:	f00c 0c0f 	andpl.w	ip, ip, #15
90024b04:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024b08:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024b0c:	fa5f f38c 	uxtb.w	r3, ip
90024b10:	930c      	str	r3, [sp, #48]	@ 0x30
90024b12:	e7a8      	b.n	90024a66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90024b14:	f8b8 e000 	ldrh.w	lr, [r8]
90024b18:	fa1f fa83 	uxth.w	sl, r3
90024b1c:	f3c2 4107 	ubfx	r1, r2, #16, #8
90024b20:	43db      	mvns	r3, r3
90024b22:	ea4f 202e 	mov.w	r0, lr, asr #8
90024b26:	fb11 f10a 	smulbb	r1, r1, sl
90024b2a:	b2db      	uxtb	r3, r3
90024b2c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024b30:	b2d2      	uxtb	r2, r2
90024b32:	fa5f fc8c 	uxtb.w	ip, ip
90024b36:	fb00 1003 	mla	r0, r0, r3, r1
90024b3a:	ea4f 01ee 	mov.w	r1, lr, asr #3
90024b3e:	fb12 f20a 	smulbb	r2, r2, sl
90024b42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90024b46:	b280      	uxth	r0, r0
90024b48:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90024b4c:	fb1c fc0a 	smulbb	ip, ip, sl
90024b50:	fa5f fe8e 	uxtb.w	lr, lr
90024b54:	fb0e 2203 	mla	r2, lr, r3, r2
90024b58:	fb01 cc03 	mla	ip, r1, r3, ip
90024b5c:	1c43      	adds	r3, r0, #1
90024b5e:	b292      	uxth	r2, r2
90024b60:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024b64:	1c51      	adds	r1, r2, #1
90024b66:	fa1f fc8c 	uxth.w	ip, ip
90024b6a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90024b6e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90024b72:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90024b76:	4308      	orrs	r0, r1
90024b78:	f10c 0101 	add.w	r1, ip, #1
90024b7c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024b80:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024b84:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90024b88:	ea40 000c 	orr.w	r0, r0, ip
90024b8c:	f8a8 0000 	strh.w	r0, [r8]
90024b90:	e7a1      	b.n	90024ad6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90024b92:	b017      	add	sp, #92	@ 0x5c
90024b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024b98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90024b98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024b9c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90024ba0:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90024ba4:	2d00      	cmp	r5, #0
90024ba6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90024baa:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90024bae:	fb05 0e03 	mla	lr, r5, r3, r0
90024bb2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90024bb6:	f2c0 80b0 	blt.w	90024d1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90024bba:	45a9      	cmp	r9, r5
90024bbc:	f340 80ad 	ble.w	90024d1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90024bc0:	2800      	cmp	r0, #0
90024bc2:	f2c0 80a8 	blt.w	90024d16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90024bc6:	4580      	cmp	r8, r0
90024bc8:	f340 80a5 	ble.w	90024d16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90024bcc:	ea4f 045e 	mov.w	r4, lr, lsr #1
90024bd0:	f01e 0f01 	tst.w	lr, #1
90024bd4:	5d16      	ldrb	r6, [r2, r4]
90024bd6:	bf0c      	ite	eq
90024bd8:	f006 060f 	andeq.w	r6, r6, #15
90024bdc:	1136      	asrne	r6, r6, #4
90024bde:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90024be2:	b2f6      	uxtb	r6, r6
90024be4:	1c44      	adds	r4, r0, #1
90024be6:	f100 809b 	bmi.w	90024d20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90024bea:	45a0      	cmp	r8, r4
90024bec:	f340 8098 	ble.w	90024d20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90024bf0:	2f00      	cmp	r7, #0
90024bf2:	f000 8097 	beq.w	90024d24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90024bf6:	f10e 0a01 	add.w	sl, lr, #1
90024bfa:	ea4f 045a 	mov.w	r4, sl, lsr #1
90024bfe:	f01a 0f01 	tst.w	sl, #1
90024c02:	5d14      	ldrb	r4, [r2, r4]
90024c04:	bf0c      	ite	eq
90024c06:	f004 040f 	andeq.w	r4, r4, #15
90024c0a:	1124      	asrne	r4, r4, #4
90024c0c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90024c10:	b2e4      	uxtb	r4, r4
90024c12:	3501      	adds	r5, #1
90024c14:	f100 808a 	bmi.w	90024d2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90024c18:	45a9      	cmp	r9, r5
90024c1a:	f340 8087 	ble.w	90024d2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90024c1e:	f1bc 0f00 	cmp.w	ip, #0
90024c22:	f000 8086 	beq.w	90024d32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90024c26:	2800      	cmp	r0, #0
90024c28:	db7e      	blt.n	90024d28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90024c2a:	4580      	cmp	r8, r0
90024c2c:	dd7c      	ble.n	90024d28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90024c2e:	eb03 090e 	add.w	r9, r3, lr
90024c32:	ea4f 0559 	mov.w	r5, r9, lsr #1
90024c36:	f019 0f01 	tst.w	r9, #1
90024c3a:	5d55      	ldrb	r5, [r2, r5]
90024c3c:	bf0c      	ite	eq
90024c3e:	f005 050f 	andeq.w	r5, r5, #15
90024c42:	112d      	asrne	r5, r5, #4
90024c44:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90024c48:	b2ed      	uxtb	r5, r5
90024c4a:	3001      	adds	r0, #1
90024c4c:	d474      	bmi.n	90024d38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90024c4e:	4580      	cmp	r8, r0
90024c50:	dd72      	ble.n	90024d38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90024c52:	2f00      	cmp	r7, #0
90024c54:	d072      	beq.n	90024d3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90024c56:	3301      	adds	r3, #1
90024c58:	449e      	add	lr, r3
90024c5a:	ea4f 035e 	mov.w	r3, lr, lsr #1
90024c5e:	f01e 0f01 	tst.w	lr, #1
90024c62:	5cd0      	ldrb	r0, [r2, r3]
90024c64:	bf0c      	ite	eq
90024c66:	f000 000f 	andeq.w	r0, r0, #15
90024c6a:	1100      	asrne	r0, r0, #4
90024c6c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024c70:	b2c3      	uxtb	r3, r0
90024c72:	b2ba      	uxth	r2, r7
90024c74:	fa1f fc8c 	uxth.w	ip, ip
90024c78:	fb02 f00c 	mul.w	r0, r2, ip
90024c7c:	0112      	lsls	r2, r2, #4
90024c7e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90024c82:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90024c86:	1a12      	subs	r2, r2, r0
90024c88:	fa1f fc8c 	uxth.w	ip, ip
90024c8c:	b292      	uxth	r2, r2
90024c8e:	eba7 070c 	sub.w	r7, r7, ip
90024c92:	4362      	muls	r2, r4
90024c94:	b2bf      	uxth	r7, r7
90024c96:	fb06 2207 	mla	r2, r6, r7, r2
90024c9a:	fb0c 2505 	mla	r5, ip, r5, r2
90024c9e:	fb00 5303 	mla	r3, r0, r3, r5
90024ca2:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024ca6:	b3a3      	cbz	r3, 90024d12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90024ca8:	4a25      	ldr	r2, [pc, #148]	@ (90024d40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90024caa:	880e      	ldrh	r6, [r1, #0]
90024cac:	6815      	ldr	r5, [r2, #0]
90024cae:	b29a      	uxth	r2, r3
90024cb0:	1234      	asrs	r4, r6, #8
90024cb2:	43db      	mvns	r3, r3
90024cb4:	f3c5 4007 	ubfx	r0, r5, #16, #8
90024cb8:	f3c5 2707 	ubfx	r7, r5, #8, #8
90024cbc:	b2db      	uxtb	r3, r3
90024cbe:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90024cc2:	fb10 f002 	smulbb	r0, r0, r2
90024cc6:	b2ed      	uxtb	r5, r5
90024cc8:	fb17 f702 	smulbb	r7, r7, r2
90024ccc:	fb04 0403 	mla	r4, r4, r3, r0
90024cd0:	10f0      	asrs	r0, r6, #3
90024cd2:	fb15 f202 	smulbb	r2, r5, r2
90024cd6:	00f6      	lsls	r6, r6, #3
90024cd8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90024cdc:	b2a4      	uxth	r4, r4
90024cde:	b2f6      	uxtb	r6, r6
90024ce0:	fb00 7003 	mla	r0, r0, r3, r7
90024ce4:	fb06 2303 	mla	r3, r6, r3, r2
90024ce8:	b280      	uxth	r0, r0
90024cea:	b29a      	uxth	r2, r3
90024cec:	1c63      	adds	r3, r4, #1
90024cee:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90024cf2:	1c53      	adds	r3, r2, #1
90024cf4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024cf8:	1c42      	adds	r2, r0, #1
90024cfa:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90024cfe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024d02:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024d06:	0940      	lsrs	r0, r0, #5
90024d08:	4323      	orrs	r3, r4
90024d0a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024d0e:	4303      	orrs	r3, r0
90024d10:	800b      	strh	r3, [r1, #0]
90024d12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90024d16:	2600      	movs	r6, #0
90024d18:	e764      	b.n	90024be4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90024d1a:	2400      	movs	r4, #0
90024d1c:	4626      	mov	r6, r4
90024d1e:	e778      	b.n	90024c12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024d20:	2400      	movs	r4, #0
90024d22:	e776      	b.n	90024c12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024d24:	463c      	mov	r4, r7
90024d26:	e774      	b.n	90024c12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024d28:	2500      	movs	r5, #0
90024d2a:	e78e      	b.n	90024c4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90024d2c:	2300      	movs	r3, #0
90024d2e:	461d      	mov	r5, r3
90024d30:	e79f      	b.n	90024c72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024d32:	4663      	mov	r3, ip
90024d34:	4665      	mov	r5, ip
90024d36:	e79c      	b.n	90024c72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024d38:	2300      	movs	r3, #0
90024d3a:	e79a      	b.n	90024c72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024d3c:	463b      	mov	r3, r7
90024d3e:	e798      	b.n	90024c72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024d40:	24021c6c 	.word	0x24021c6c

90024d44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024d48:	b093      	sub	sp, #76	@ 0x4c
90024d4a:	461d      	mov	r5, r3
90024d4c:	920c      	str	r2, [sp, #48]	@ 0x30
90024d4e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024d50:	9011      	str	r0, [sp, #68]	@ 0x44
90024d52:	9107      	str	r1, [sp, #28]
90024d54:	6850      	ldr	r0, [r2, #4]
90024d56:	6812      	ldr	r2, [r2, #0]
90024d58:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90024d5c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90024d60:	fb00 1303 	mla	r3, r0, r3, r1
90024d64:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90024d68:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024d6a:	689b      	ldr	r3, [r3, #8]
90024d6c:	3301      	adds	r3, #1
90024d6e:	f023 0301 	bic.w	r3, r3, #1
90024d72:	9306      	str	r3, [sp, #24]
90024d74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024d76:	681f      	ldr	r7, [r3, #0]
90024d78:	9b07      	ldr	r3, [sp, #28]
90024d7a:	2b00      	cmp	r3, #0
90024d7c:	dc03      	bgt.n	90024d86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90024d7e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024d80:	2b00      	cmp	r3, #0
90024d82:	f340 8267 	ble.w	90025254 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024d86:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024d88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024d8c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024d90:	1e48      	subs	r0, r1, #1
90024d92:	f102 3cff 	add.w	ip, r2, #4294967295
90024d96:	2d00      	cmp	r5, #0
90024d98:	f340 80b7 	ble.w	90024f0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90024d9c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024da0:	ea4f 4326 	mov.w	r3, r6, asr #16
90024da4:	d406      	bmi.n	90024db4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024da6:	4586      	cmp	lr, r0
90024da8:	da04      	bge.n	90024db4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024daa:	2b00      	cmp	r3, #0
90024dac:	db02      	blt.n	90024db4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024dae:	4563      	cmp	r3, ip
90024db0:	f2c0 80ac 	blt.w	90024f0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90024db4:	f11e 0e01 	adds.w	lr, lr, #1
90024db8:	f100 809f 	bmi.w	90024efa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024dbc:	4571      	cmp	r1, lr
90024dbe:	f2c0 809c 	blt.w	90024efa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024dc2:	3301      	adds	r3, #1
90024dc4:	f100 8099 	bmi.w	90024efa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024dc8:	429a      	cmp	r2, r3
90024dca:	f2c0 8096 	blt.w	90024efa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024dce:	46c8      	mov	r8, r9
90024dd0:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90024dd4:	9509      	str	r5, [sp, #36]	@ 0x24
90024dd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024dd8:	2b00      	cmp	r3, #0
90024dda:	f340 80b5 	ble.w	90024f48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90024dde:	f3c4 3303 	ubfx	r3, r4, #12, #4
90024de2:	1430      	asrs	r0, r6, #16
90024de4:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024de8:	9308      	str	r3, [sp, #32]
90024dea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024dec:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90024df0:	1423      	asrs	r3, r4, #16
90024df2:	f100 813f 	bmi.w	90025074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024df6:	f10c 3bff 	add.w	fp, ip, #4294967295
90024dfa:	455b      	cmp	r3, fp
90024dfc:	f280 813a 	bge.w	90025074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024e00:	2800      	cmp	r0, #0
90024e02:	f2c0 8137 	blt.w	90025074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024e06:	f10e 3bff 	add.w	fp, lr, #4294967295
90024e0a:	4558      	cmp	r0, fp
90024e0c:	f280 8132 	bge.w	90025074 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024e10:	9a06      	ldr	r2, [sp, #24]
90024e12:	fb00 3302 	mla	r3, r0, r2, r3
90024e16:	0858      	lsrs	r0, r3, #1
90024e18:	07da      	lsls	r2, r3, #31
90024e1a:	9a08      	ldr	r2, [sp, #32]
90024e1c:	f817 c000 	ldrb.w	ip, [r7, r0]
90024e20:	bf54      	ite	pl
90024e22:	f00c 0c0f 	andpl.w	ip, ip, #15
90024e26:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024e2a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024e2e:	fa5f fc8c 	uxtb.w	ip, ip
90024e32:	2a00      	cmp	r2, #0
90024e34:	f000 80cc 	beq.w	90024fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90024e38:	1c58      	adds	r0, r3, #1
90024e3a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90024e3e:	07c0      	lsls	r0, r0, #31
90024e40:	f817 e00e 	ldrb.w	lr, [r7, lr]
90024e44:	bf54      	ite	pl
90024e46:	f00e 0e0f 	andpl.w	lr, lr, #15
90024e4a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90024e4e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90024e52:	fa5f fe8e 	uxtb.w	lr, lr
90024e56:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90024e5a:	b1b9      	cbz	r1, 90024e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024e5c:	4453      	add	r3, sl
90024e5e:	0858      	lsrs	r0, r3, #1
90024e60:	07da      	lsls	r2, r3, #31
90024e62:	5c38      	ldrb	r0, [r7, r0]
90024e64:	bf54      	ite	pl
90024e66:	f000 000f 	andpl.w	r0, r0, #15
90024e6a:	1100      	asrmi	r0, r0, #4
90024e6c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024e70:	b2c0      	uxtb	r0, r0
90024e72:	900a      	str	r0, [sp, #40]	@ 0x28
90024e74:	1c58      	adds	r0, r3, #1
90024e76:	0843      	lsrs	r3, r0, #1
90024e78:	07c2      	lsls	r2, r0, #31
90024e7a:	5cfb      	ldrb	r3, [r7, r3]
90024e7c:	bf54      	ite	pl
90024e7e:	f003 030f 	andpl.w	r3, r3, #15
90024e82:	111b      	asrmi	r3, r3, #4
90024e84:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024e88:	b2db      	uxtb	r3, r3
90024e8a:	930e      	str	r3, [sp, #56]	@ 0x38
90024e8c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90024e90:	b289      	uxth	r1, r1
90024e92:	fb02 f301 	mul.w	r3, r2, r1
90024e96:	0112      	lsls	r2, r2, #4
90024e98:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90024e9c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90024ea0:	1ad2      	subs	r2, r2, r3
90024ea2:	b289      	uxth	r1, r1
90024ea4:	b292      	uxth	r2, r2
90024ea6:	1a40      	subs	r0, r0, r1
90024ea8:	fa1f fe80 	uxth.w	lr, r0
90024eac:	980d      	ldr	r0, [sp, #52]	@ 0x34
90024eae:	4342      	muls	r2, r0
90024eb0:	fb0c 2c0e 	mla	ip, ip, lr, r2
90024eb4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90024eb6:	fb01 c102 	mla	r1, r1, r2, ip
90024eba:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90024ebc:	fb03 1302 	mla	r3, r3, r2, r1
90024ec0:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024ec4:	2bff      	cmp	r3, #255	@ 0xff
90024ec6:	f040 8094 	bne.w	90024ff2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90024eca:	4bbf      	ldr	r3, [pc, #764]	@ (900251c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024ecc:	681a      	ldr	r2, [r3, #0]
90024ece:	4bbf      	ldr	r3, [pc, #764]	@ (900251cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90024ed0:	0951      	lsrs	r1, r2, #5
90024ed2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90024ed6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024eda:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024ede:	430b      	orrs	r3, r1
90024ee0:	4313      	orrs	r3, r2
90024ee2:	f8a8 3000 	strh.w	r3, [r8]
90024ee6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024ee8:	f108 0802 	add.w	r8, r8, #2
90024eec:	441c      	add	r4, r3
90024eee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024ef0:	441e      	add	r6, r3
90024ef2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024ef4:	3b01      	subs	r3, #1
90024ef6:	9309      	str	r3, [sp, #36]	@ 0x24
90024ef8:	e76d      	b.n	90024dd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024efa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024efc:	3d01      	subs	r5, #1
90024efe:	f109 0902 	add.w	r9, r9, #2
90024f02:	441c      	add	r4, r3
90024f04:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024f06:	441e      	add	r6, r3
90024f08:	e745      	b.n	90024d96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90024f0a:	d021      	beq.n	90024f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90024f0c:	1e6b      	subs	r3, r5, #1
90024f0e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024f10:	fb00 4003 	mla	r0, r0, r3, r4
90024f14:	1400      	asrs	r0, r0, #16
90024f16:	f53f af5a 	bmi.w	90024dce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024f1a:	3901      	subs	r1, #1
90024f1c:	4288      	cmp	r0, r1
90024f1e:	f6bf af56 	bge.w	90024dce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024f22:	9920      	ldr	r1, [sp, #128]	@ 0x80
90024f24:	fb01 6303 	mla	r3, r1, r3, r6
90024f28:	141b      	asrs	r3, r3, #16
90024f2a:	f53f af50 	bmi.w	90024dce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024f2e:	3a01      	subs	r2, #1
90024f30:	4293      	cmp	r3, r2
90024f32:	f6bf af4c 	bge.w	90024dce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024f36:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90024f3a:	46a8      	mov	r8, r5
90024f3c:	46ce      	mov	lr, r9
90024f3e:	9308      	str	r3, [sp, #32]
90024f40:	f1b8 0f00 	cmp.w	r8, #0
90024f44:	f300 80b6 	bgt.w	900250b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024f48:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90024f4c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90024f50:	9b07      	ldr	r3, [sp, #28]
90024f52:	2b00      	cmp	r3, #0
90024f54:	f340 817e 	ble.w	90025254 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024f58:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024f5c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024f5e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024f62:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024f66:	eef0 6a62 	vmov.f32	s13, s5
90024f6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024f6e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024f72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024f76:	ee16 4a90 	vmov	r4, s13
90024f7a:	eef0 6a43 	vmov.f32	s13, s6
90024f7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024f82:	ee16 6a90 	vmov	r6, s13
90024f86:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024f8a:	ee61 7a27 	vmul.f32	s15, s2, s15
90024f8e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024f92:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024f96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024f9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024f9e:	ee12 2a90 	vmov	r2, s5
90024fa2:	eef0 2a47 	vmov.f32	s5, s14
90024fa6:	fb92 f3f3 	sdiv	r3, r2, r3
90024faa:	ee13 2a10 	vmov	r2, s6
90024fae:	931f      	str	r3, [sp, #124]	@ 0x7c
90024fb0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024fb2:	eeb0 3a67 	vmov.f32	s6, s15
90024fb6:	fb92 f3f3 	sdiv	r3, r2, r3
90024fba:	9320      	str	r3, [sp, #128]	@ 0x80
90024fbc:	9b07      	ldr	r3, [sp, #28]
90024fbe:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90024fc0:	3b01      	subs	r3, #1
90024fc2:	9307      	str	r3, [sp, #28]
90024fc4:	bf08      	it	eq
90024fc6:	4615      	moveq	r5, r2
90024fc8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024fca:	bf18      	it	ne
90024fcc:	461d      	movne	r5, r3
90024fce:	e6d3      	b.n	90024d78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90024fd0:	2900      	cmp	r1, #0
90024fd2:	f43f af5b 	beq.w	90024e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024fd6:	eb0a 0003 	add.w	r0, sl, r3
90024fda:	0843      	lsrs	r3, r0, #1
90024fdc:	07c0      	lsls	r0, r0, #31
90024fde:	5cfb      	ldrb	r3, [r7, r3]
90024fe0:	bf54      	ite	pl
90024fe2:	f003 030f 	andpl.w	r3, r3, #15
90024fe6:	111b      	asrmi	r3, r3, #4
90024fe8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024fec:	b2db      	uxtb	r3, r3
90024fee:	930a      	str	r3, [sp, #40]	@ 0x28
90024ff0:	e74c      	b.n	90024e8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024ff2:	2b00      	cmp	r3, #0
90024ff4:	f43f af77 	beq.w	90024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024ff8:	4a73      	ldr	r2, [pc, #460]	@ (900251c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024ffa:	fa1f fe83 	uxth.w	lr, r3
90024ffe:	f8b8 c000 	ldrh.w	ip, [r8]
90025002:	43db      	mvns	r3, r3
90025004:	6810      	ldr	r0, [r2, #0]
90025006:	ea4f 212c 	mov.w	r1, ip, asr #8
9002500a:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002500e:	b2db      	uxtb	r3, r3
90025010:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025014:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90025018:	fb12 f20e 	smulbb	r2, r2, lr
9002501c:	b2c0      	uxtb	r0, r0
9002501e:	fb1b fb0e 	smulbb	fp, fp, lr
90025022:	fb01 2103 	mla	r1, r1, r3, r2
90025026:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002502a:	fb10 fe0e 	smulbb	lr, r0, lr
9002502e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90025032:	b289      	uxth	r1, r1
90025034:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025038:	fa5f fc8c 	uxtb.w	ip, ip
9002503c:	fb02 b203 	mla	r2, r2, r3, fp
90025040:	1c48      	adds	r0, r1, #1
90025042:	fb0c e303 	mla	r3, ip, r3, lr
90025046:	b292      	uxth	r2, r2
90025048:	b29b      	uxth	r3, r3
9002504a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
9002504e:	f102 0b01 	add.w	fp, r2, #1
90025052:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
90025056:	1c59      	adds	r1, r3, #1
90025058:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002505c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025060:	0952      	lsrs	r2, r2, #5
90025062:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90025066:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002506a:	4301      	orrs	r1, r0
9002506c:	4311      	orrs	r1, r2
9002506e:	f8a8 1000 	strh.w	r1, [r8]
90025072:	e738      	b.n	90024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025074:	f113 0b01 	adds.w	fp, r3, #1
90025078:	f53f af35 	bmi.w	90024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002507c:	45dc      	cmp	ip, fp
9002507e:	f6ff af32 	blt.w	90024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025082:	f110 0b01 	adds.w	fp, r0, #1
90025086:	f53f af2e 	bmi.w	90024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002508a:	45de      	cmp	lr, fp
9002508c:	f6ff af2b 	blt.w	90024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025090:	9302      	str	r3, [sp, #8]
90025092:	fa0f f38e 	sxth.w	r3, lr
90025096:	9a08      	ldr	r2, [sp, #32]
90025098:	9301      	str	r3, [sp, #4]
9002509a:	fa0f f38c 	sxth.w	r3, ip
9002509e:	9105      	str	r1, [sp, #20]
900250a0:	4641      	mov	r1, r8
900250a2:	9300      	str	r3, [sp, #0]
900250a4:	4653      	mov	r3, sl
900250a6:	e9cd 0203 	strd	r0, r2, [sp, #12]
900250aa:	463a      	mov	r2, r7
900250ac:	9811      	ldr	r0, [sp, #68]	@ 0x44
900250ae:	f7ff fd73 	bl	90024b98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
900250b2:	e718      	b.n	90024ee6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900250b4:	1422      	asrs	r2, r4, #16
900250b6:	9906      	ldr	r1, [sp, #24]
900250b8:	1433      	asrs	r3, r6, #16
900250ba:	f3c4 3003 	ubfx	r0, r4, #12, #4
900250be:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900250c2:	fb01 2303 	mla	r3, r1, r3, r2
900250c6:	085a      	lsrs	r2, r3, #1
900250c8:	07d9      	lsls	r1, r3, #31
900250ca:	5cba      	ldrb	r2, [r7, r2]
900250cc:	bf54      	ite	pl
900250ce:	f002 020f 	andpl.w	r2, r2, #15
900250d2:	1112      	asrmi	r2, r2, #4
900250d4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900250d8:	b2d2      	uxtb	r2, r2
900250da:	2800      	cmp	r0, #0
900250dc:	d063      	beq.n	900251a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
900250de:	f103 0a01 	add.w	sl, r3, #1
900250e2:	ea4f 015a 	mov.w	r1, sl, lsr #1
900250e6:	f01a 0f01 	tst.w	sl, #1
900250ea:	5c79      	ldrb	r1, [r7, r1]
900250ec:	bf0c      	ite	eq
900250ee:	f001 010f 	andeq.w	r1, r1, #15
900250f2:	1109      	asrne	r1, r1, #4
900250f4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900250f8:	b2c9      	uxtb	r1, r1
900250fa:	910f      	str	r1, [sp, #60]	@ 0x3c
900250fc:	f1bc 0f00 	cmp.w	ip, #0
90025100:	d01a      	beq.n	90025138 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90025102:	9908      	ldr	r1, [sp, #32]
90025104:	440b      	add	r3, r1
90025106:	0859      	lsrs	r1, r3, #1
90025108:	f013 0f01 	tst.w	r3, #1
9002510c:	f103 0301 	add.w	r3, r3, #1
90025110:	5c79      	ldrb	r1, [r7, r1]
90025112:	bf0c      	ite	eq
90025114:	f001 010f 	andeq.w	r1, r1, #15
90025118:	1109      	asrne	r1, r1, #4
9002511a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002511e:	b2c9      	uxtb	r1, r1
90025120:	910b      	str	r1, [sp, #44]	@ 0x2c
90025122:	0859      	lsrs	r1, r3, #1
90025124:	07db      	lsls	r3, r3, #31
90025126:	5c79      	ldrb	r1, [r7, r1]
90025128:	bf54      	ite	pl
9002512a:	f001 010f 	andpl.w	r1, r1, #15
9002512e:	1109      	asrmi	r1, r1, #4
90025130:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90025134:	b2c9      	uxtb	r1, r1
90025136:	9110      	str	r1, [sp, #64]	@ 0x40
90025138:	b280      	uxth	r0, r0
9002513a:	fa1f fc8c 	uxth.w	ip, ip
9002513e:	fb00 f30c 	mul.w	r3, r0, ip
90025142:	0100      	lsls	r0, r0, #4
90025144:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90025148:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
9002514c:	1ac0      	subs	r0, r0, r3
9002514e:	fa1f fc8c 	uxth.w	ip, ip
90025152:	b280      	uxth	r0, r0
90025154:	eba1 010c 	sub.w	r1, r1, ip
90025158:	fa1f fa81 	uxth.w	sl, r1
9002515c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002515e:	4348      	muls	r0, r1
90025160:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90025162:	fb02 020a 	mla	r2, r2, sl, r0
90025166:	fb0c 2c01 	mla	ip, ip, r1, r2
9002516a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9002516c:	fb03 c302 	mla	r3, r3, r2, ip
90025170:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025174:	2bff      	cmp	r3, #255	@ 0xff
90025176:	d12b      	bne.n	900251d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90025178:	4b13      	ldr	r3, [pc, #76]	@ (900251c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002517a:	681a      	ldr	r2, [r3, #0]
9002517c:	4b13      	ldr	r3, [pc, #76]	@ (900251cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002517e:	0951      	lsrs	r1, r2, #5
90025180:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90025184:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025188:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002518c:	430b      	orrs	r3, r1
9002518e:	4313      	orrs	r3, r2
90025190:	f8ae 3000 	strh.w	r3, [lr]
90025194:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90025196:	f10e 0e02 	add.w	lr, lr, #2
9002519a:	f108 38ff 	add.w	r8, r8, #4294967295
9002519e:	441c      	add	r4, r3
900251a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900251a2:	441e      	add	r6, r3
900251a4:	e6cc      	b.n	90024f40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900251a6:	f1bc 0f00 	cmp.w	ip, #0
900251aa:	d0c5      	beq.n	90025138 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900251ac:	9908      	ldr	r1, [sp, #32]
900251ae:	440b      	add	r3, r1
900251b0:	0859      	lsrs	r1, r3, #1
900251b2:	07db      	lsls	r3, r3, #31
900251b4:	5c79      	ldrb	r1, [r7, r1]
900251b6:	bf54      	ite	pl
900251b8:	f001 010f 	andpl.w	r1, r1, #15
900251bc:	1109      	asrmi	r1, r1, #4
900251be:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900251c2:	b2c9      	uxtb	r1, r1
900251c4:	910b      	str	r1, [sp, #44]	@ 0x2c
900251c6:	e7b7      	b.n	90025138 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900251c8:	24021c6c 	.word	0x24021c6c
900251cc:	fffff800 	.word	0xfffff800
900251d0:	2b00      	cmp	r3, #0
900251d2:	d0df      	beq.n	90025194 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900251d4:	4a21      	ldr	r2, [pc, #132]	@ (9002525c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
900251d6:	fa1f fa83 	uxth.w	sl, r3
900251da:	f8be c000 	ldrh.w	ip, [lr]
900251de:	43db      	mvns	r3, r3
900251e0:	6810      	ldr	r0, [r2, #0]
900251e2:	ea4f 212c 	mov.w	r1, ip, asr #8
900251e6:	f3c0 4207 	ubfx	r2, r0, #16, #8
900251ea:	b2db      	uxtb	r3, r3
900251ec:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900251f0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
900251f4:	fb12 f20a 	smulbb	r2, r2, sl
900251f8:	b2c0      	uxtb	r0, r0
900251fa:	fb1b fb0a 	smulbb	fp, fp, sl
900251fe:	fb01 2103 	mla	r1, r1, r3, r2
90025202:	ea4f 02ec 	mov.w	r2, ip, asr #3
90025206:	fb10 f00a 	smulbb	r0, r0, sl
9002520a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002520e:	b289      	uxth	r1, r1
90025210:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025214:	fa5f fc8c 	uxtb.w	ip, ip
90025218:	fb02 b203 	mla	r2, r2, r3, fp
9002521c:	fb0c 0003 	mla	r0, ip, r3, r0
90025220:	1c4b      	adds	r3, r1, #1
90025222:	b292      	uxth	r2, r2
90025224:	b280      	uxth	r0, r0
90025226:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002522a:	f100 0b01 	add.w	fp, r0, #1
9002522e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90025232:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90025236:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002523a:	ea4b 0101 	orr.w	r1, fp, r1
9002523e:	f102 0b01 	add.w	fp, r2, #1
90025242:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90025246:	0952      	lsrs	r2, r2, #5
90025248:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002524c:	4311      	orrs	r1, r2
9002524e:	f8ae 1000 	strh.w	r1, [lr]
90025252:	e79f      	b.n	90025194 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90025254:	b013      	add	sp, #76	@ 0x4c
90025256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002525a:	bf00      	nop
9002525c:	24021c6c 	.word	0x24021c6c

90025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90025260:	b570      	push	{r4, r5, r6, lr}
90025262:	1208      	asrs	r0, r1, #8
90025264:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90025268:	b29e      	uxth	r6, r3
9002526a:	1213      	asrs	r3, r2, #8
9002526c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025270:	10cc      	asrs	r4, r1, #3
90025272:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90025276:	00c9      	lsls	r1, r1, #3
90025278:	fb10 f006 	smulbb	r0, r0, r6
9002527c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90025280:	fb13 f305 	smulbb	r3, r3, r5
90025284:	fb14 f406 	smulbb	r4, r4, r6
90025288:	4418      	add	r0, r3
9002528a:	10d3      	asrs	r3, r2, #3
9002528c:	00d2      	lsls	r2, r2, #3
9002528e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90025292:	b280      	uxth	r0, r0
90025294:	b2d2      	uxtb	r2, r2
90025296:	fb13 f305 	smulbb	r3, r3, r5
9002529a:	fb12 f205 	smulbb	r2, r2, r5
9002529e:	441c      	add	r4, r3
900252a0:	b2cb      	uxtb	r3, r1
900252a2:	fb13 f306 	smulbb	r3, r3, r6
900252a6:	b2a4      	uxth	r4, r4
900252a8:	4413      	add	r3, r2
900252aa:	1c42      	adds	r2, r0, #1
900252ac:	b29b      	uxth	r3, r3
900252ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900252b2:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
900252b6:	1c58      	adds	r0, r3, #1
900252b8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900252bc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900252c0:	4310      	orrs	r0, r2
900252c2:	1c62      	adds	r2, r4, #1
900252c4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900252c8:	0964      	lsrs	r4, r4, #5
900252ca:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900252ce:	4320      	orrs	r0, r4
900252d0:	bd70      	pop	{r4, r5, r6, pc}
	...

900252d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
900252d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900252d8:	b08f      	sub	sp, #60	@ 0x3c
900252da:	461c      	mov	r4, r3
900252dc:	460d      	mov	r5, r1
900252de:	4616      	mov	r6, r2
900252e0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
900252e4:	9004      	str	r0, [sp, #16]
900252e6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900252e8:	2f00      	cmp	r7, #0
900252ea:	f000 80f6 	beq.w	900254da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
900252ee:	6820      	ldr	r0, [r4, #0]
900252f0:	aa0a      	add	r2, sp, #40	@ 0x28
900252f2:	6861      	ldr	r1, [r4, #4]
900252f4:	f04f 0802 	mov.w	r8, #2
900252f8:	3604      	adds	r6, #4
900252fa:	c203      	stmia	r2!, {r0, r1}
900252fc:	6818      	ldr	r0, [r3, #0]
900252fe:	aa0c      	add	r2, sp, #48	@ 0x30
90025300:	6859      	ldr	r1, [r3, #4]
90025302:	c203      	stmia	r2!, {r0, r1}
90025304:	a80a      	add	r0, sp, #40	@ 0x28
90025306:	f7ef febd 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002530a:	4621      	mov	r1, r4
9002530c:	a80c      	add	r0, sp, #48	@ 0x30
9002530e:	f7ef fee1 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025312:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90025316:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002531a:	f002 0301 	and.w	r3, r2, #1
9002531e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90025322:	9306      	str	r3, [sp, #24]
90025324:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90025328:	f003 0101 	and.w	r1, r3, #1
9002532c:	9105      	str	r1, [sp, #20]
9002532e:	9805      	ldr	r0, [sp, #20]
90025330:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90025334:	4403      	add	r3, r0
90025336:	fb01 2303 	mla	r3, r1, r3, r2
9002533a:	fb93 f3f8 	sdiv	r3, r3, r8
9002533e:	441d      	add	r5, r3
90025340:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90025344:	441a      	add	r2, r3
90025346:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002534a:	4419      	add	r1, r3
9002534c:	4b64      	ldr	r3, [pc, #400]	@ (900254e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002534e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90025352:	6818      	ldr	r0, [r3, #0]
90025354:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90025358:	6803      	ldr	r3, [r0, #0]
9002535a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002535c:	4798      	blx	r3
9002535e:	4a61      	ldr	r2, [pc, #388]	@ (900254e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90025360:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90025364:	2fff      	cmp	r7, #255	@ 0xff
90025366:	8813      	ldrh	r3, [r2, #0]
90025368:	4611      	mov	r1, r2
9002536a:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
9002536e:	fb03 fb0b 	mul.w	fp, r3, fp
90025372:	fb03 a404 	mla	r4, r3, r4, sl
90025376:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002537a:	d06b      	beq.n	90025454 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
9002537c:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90025380:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90025384:	9303      	str	r3, [sp, #12]
90025386:	eb04 034b 	add.w	r3, r4, fp, lsl #1
9002538a:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002538e:	9b07      	ldr	r3, [sp, #28]
90025390:	42a3      	cmp	r3, r4
90025392:	f240 809d 	bls.w	900254d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90025396:	9b06      	ldr	r3, [sp, #24]
90025398:	2b00      	cmp	r3, #0
9002539a:	d039      	beq.n	90025410 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
9002539c:	782b      	ldrb	r3, [r5, #0]
9002539e:	f105 0801 	add.w	r8, r5, #1
900253a2:	f109 3bff 	add.w	fp, r9, #4294967295
900253a6:	8822      	ldrh	r2, [r4, #0]
900253a8:	f003 030f 	and.w	r3, r3, #15
900253ac:	9804      	ldr	r0, [sp, #16]
900253ae:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900253b2:	9b03      	ldr	r3, [sp, #12]
900253b4:	9300      	str	r3, [sp, #0]
900253b6:	463b      	mov	r3, r7
900253b8:	f7ff ff52 	bl	90025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900253bc:	f824 0b02 	strh.w	r0, [r4], #2
900253c0:	f1bb 0f01 	cmp.w	fp, #1
900253c4:	46a2      	mov	sl, r4
900253c6:	f104 0404 	add.w	r4, r4, #4
900253ca:	dd24      	ble.n	90025416 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
900253cc:	f898 3000 	ldrb.w	r3, [r8]
900253d0:	f1ab 0b02 	sub.w	fp, fp, #2
900253d4:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900253d8:	091b      	lsrs	r3, r3, #4
900253da:	9804      	ldr	r0, [sp, #16]
900253dc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900253e0:	9b03      	ldr	r3, [sp, #12]
900253e2:	9300      	str	r3, [sp, #0]
900253e4:	463b      	mov	r3, r7
900253e6:	f7ff ff3b 	bl	90025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900253ea:	f824 0c04 	strh.w	r0, [r4, #-4]
900253ee:	f818 3b01 	ldrb.w	r3, [r8], #1
900253f2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900253f6:	f003 030f 	and.w	r3, r3, #15
900253fa:	9804      	ldr	r0, [sp, #16]
900253fc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90025400:	9b03      	ldr	r3, [sp, #12]
90025402:	9300      	str	r3, [sp, #0]
90025404:	463b      	mov	r3, r7
90025406:	f7ff ff2b 	bl	90025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002540a:	f824 0c02 	strh.w	r0, [r4, #-2]
9002540e:	e7d7      	b.n	900253c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90025410:	46a8      	mov	r8, r5
90025412:	46cb      	mov	fp, r9
90025414:	e7d4      	b.n	900253c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90025416:	d10e      	bne.n	90025436 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90025418:	f898 3000 	ldrb.w	r3, [r8]
9002541c:	f8ba 2000 	ldrh.w	r2, [sl]
90025420:	091b      	lsrs	r3, r3, #4
90025422:	9804      	ldr	r0, [sp, #16]
90025424:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90025428:	9b03      	ldr	r3, [sp, #12]
9002542a:	9300      	str	r3, [sp, #0]
9002542c:	463b      	mov	r3, r7
9002542e:	f7ff ff17 	bl	90025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90025432:	f82a 0b02 	strh.w	r0, [sl], #2
90025436:	9b08      	ldr	r3, [sp, #32]
90025438:	9a05      	ldr	r2, [sp, #20]
9002543a:	881c      	ldrh	r4, [r3, #0]
9002543c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90025440:	eba4 0409 	sub.w	r4, r4, r9
90025444:	4413      	add	r3, r2
90025446:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90025448:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
9002544c:	fb93 f3f2 	sdiv	r3, r3, r2
90025450:	441d      	add	r5, r3
90025452:	e79c      	b.n	9002538e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90025454:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90025458:	45a3      	cmp	fp, r4
9002545a:	d939      	bls.n	900254d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002545c:	9b06      	ldr	r3, [sp, #24]
9002545e:	b1fb      	cbz	r3, 900254a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90025460:	782b      	ldrb	r3, [r5, #0]
90025462:	1c6a      	adds	r2, r5, #1
90025464:	f109 30ff 	add.w	r0, r9, #4294967295
90025468:	3402      	adds	r4, #2
9002546a:	f003 030f 	and.w	r3, r3, #15
9002546e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90025472:	f824 3c02 	strh.w	r3, [r4, #-2]
90025476:	2801      	cmp	r0, #1
90025478:	4623      	mov	r3, r4
9002547a:	f104 0404 	add.w	r4, r4, #4
9002547e:	dd12      	ble.n	900254a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90025480:	7813      	ldrb	r3, [r2, #0]
90025482:	3802      	subs	r0, #2
90025484:	091b      	lsrs	r3, r3, #4
90025486:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002548a:	f824 3c04 	strh.w	r3, [r4, #-4]
9002548e:	f812 3b01 	ldrb.w	r3, [r2], #1
90025492:	f003 030f 	and.w	r3, r3, #15
90025496:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002549a:	f824 3c02 	strh.w	r3, [r4, #-2]
9002549e:	e7ea      	b.n	90025476 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900254a0:	462a      	mov	r2, r5
900254a2:	4648      	mov	r0, r9
900254a4:	e7e7      	b.n	90025476 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900254a6:	d106      	bne.n	900254b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
900254a8:	7812      	ldrb	r2, [r2, #0]
900254aa:	3302      	adds	r3, #2
900254ac:	0912      	lsrs	r2, r2, #4
900254ae:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900254b2:	f823 2c02 	strh.w	r2, [r3, #-2]
900254b6:	880c      	ldrh	r4, [r1, #0]
900254b8:	9a05      	ldr	r2, [sp, #20]
900254ba:	eba4 0409 	sub.w	r4, r4, r9
900254be:	eb03 0444 	add.w	r4, r3, r4, lsl #1
900254c2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900254c6:	4413      	add	r3, r2
900254c8:	fb93 f3f8 	sdiv	r3, r3, r8
900254cc:	441d      	add	r5, r3
900254ce:	e7c3      	b.n	90025458 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
900254d0:	4b03      	ldr	r3, [pc, #12]	@ (900254e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900254d2:	6818      	ldr	r0, [r3, #0]
900254d4:	6803      	ldr	r3, [r0, #0]
900254d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900254d8:	4798      	blx	r3
900254da:	b00f      	add	sp, #60	@ 0x3c
900254dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900254e0:	24021c5c 	.word	0x24021c5c
900254e4:	24021c56 	.word	0x24021c56

900254e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
900254e8:	b5f0      	push	{r4, r5, r6, r7, lr}
900254ea:	f89d 5014 	ldrb.w	r5, [sp, #20]
900254ee:	0a0f      	lsrs	r7, r1, #8
900254f0:	2dff      	cmp	r5, #255	@ 0xff
900254f2:	d10c      	bne.n	9002550e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900254f4:	2bff      	cmp	r3, #255	@ 0xff
900254f6:	d10a      	bne.n	9002550e <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900254f8:	0948      	lsrs	r0, r1, #5
900254fa:	4b25      	ldr	r3, [pc, #148]	@ (90025590 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
900254fc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90025500:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90025504:	403b      	ands	r3, r7
90025506:	4318      	orrs	r0, r3
90025508:	4308      	orrs	r0, r1
9002550a:	b280      	uxth	r0, r0
9002550c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002550e:	fb15 f503 	smulbb	r5, r5, r3
90025512:	1214      	asrs	r4, r2, #8
90025514:	10d6      	asrs	r6, r2, #3
90025516:	b2ab      	uxth	r3, r5
90025518:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002551c:	00d0      	lsls	r0, r2, #3
9002551e:	f3c1 4207 	ubfx	r2, r1, #16, #8
90025522:	1c5d      	adds	r5, r3, #1
90025524:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90025528:	b2c0      	uxtb	r0, r0
9002552a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9002552e:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90025532:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90025536:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002553a:	fa1f fc85 	uxth.w	ip, r5
9002553e:	43ed      	mvns	r5, r5
90025540:	fb12 f20c 	smulbb	r2, r2, ip
90025544:	b2eb      	uxtb	r3, r5
90025546:	b2fd      	uxtb	r5, r7
90025548:	fb04 2403 	mla	r4, r4, r3, r2
9002554c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90025550:	fb15 f50c 	smulbb	r5, r5, ip
90025554:	b2c8      	uxtb	r0, r1
90025556:	b2a4      	uxth	r4, r4
90025558:	fb10 f00c 	smulbb	r0, r0, ip
9002555c:	fb06 5503 	mla	r5, r6, r3, r5
90025560:	fb02 0003 	mla	r0, r2, r3, r0
90025564:	b2ad      	uxth	r5, r5
90025566:	b283      	uxth	r3, r0
90025568:	1c60      	adds	r0, r4, #1
9002556a:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002556e:	1c58      	adds	r0, r3, #1
90025570:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025574:	1c6b      	adds	r3, r5, #1
90025576:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002557a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002557e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90025582:	096d      	lsrs	r5, r5, #5
90025584:	4320      	orrs	r0, r4
90025586:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002558a:	4328      	orrs	r0, r5
9002558c:	e7be      	b.n	9002550c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002558e:	bf00      	nop
90025590:	00fff800 	.word	0x00fff800

90025594 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90025594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025598:	461c      	mov	r4, r3
9002559a:	b08d      	sub	sp, #52	@ 0x34
9002559c:	460d      	mov	r5, r1
9002559e:	4616      	mov	r6, r2
900255a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900255a2:	4680      	mov	r8, r0
900255a4:	6861      	ldr	r1, [r4, #4]
900255a6:	aa08      	add	r2, sp, #32
900255a8:	6820      	ldr	r0, [r4, #0]
900255aa:	f04f 0a02 	mov.w	sl, #2
900255ae:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
900255b2:	3604      	adds	r6, #4
900255b4:	c203      	stmia	r2!, {r0, r1}
900255b6:	6818      	ldr	r0, [r3, #0]
900255b8:	aa0a      	add	r2, sp, #40	@ 0x28
900255ba:	6859      	ldr	r1, [r3, #4]
900255bc:	c203      	stmia	r2!, {r0, r1}
900255be:	a808      	add	r0, sp, #32
900255c0:	f7ef fd60 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900255c4:	4621      	mov	r1, r4
900255c6:	a80a      	add	r0, sp, #40	@ 0x28
900255c8:	f7ef fd84 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900255cc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
900255d0:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
900255d4:	f002 0301 	and.w	r3, r2, #1
900255d8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
900255dc:	9303      	str	r3, [sp, #12]
900255de:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
900255e2:	f003 0101 	and.w	r1, r3, #1
900255e6:	9102      	str	r1, [sp, #8]
900255e8:	9802      	ldr	r0, [sp, #8]
900255ea:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
900255ee:	4403      	add	r3, r0
900255f0:	fb01 2303 	mla	r3, r1, r3, r2
900255f4:	fb93 f3fa 	sdiv	r3, r3, sl
900255f8:	441d      	add	r5, r3
900255fa:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900255fe:	441a      	add	r2, r3
90025600:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90025604:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90025608:	4419      	add	r1, r3
9002560a:	4a3e      	ldr	r2, [pc, #248]	@ (90025704 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
9002560c:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90025610:	6810      	ldr	r0, [r2, #0]
90025612:	9205      	str	r2, [sp, #20]
90025614:	6803      	ldr	r3, [r0, #0]
90025616:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90025618:	4798      	blx	r3
9002561a:	4b3b      	ldr	r3, [pc, #236]	@ (90025708 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
9002561c:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90025620:	8819      	ldrh	r1, [r3, #0]
90025622:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90025626:	434f      	muls	r7, r1
90025628:	fb01 c404 	mla	r4, r1, r4, ip
9002562c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90025630:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90025634:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90025638:	9204      	str	r2, [sp, #16]
9002563a:	9b04      	ldr	r3, [sp, #16]
9002563c:	429c      	cmp	r4, r3
9002563e:	d258      	bcs.n	900256f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90025640:	9b03      	ldr	r3, [sp, #12]
90025642:	2b00      	cmp	r3, #0
90025644:	d034      	beq.n	900256b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90025646:	782b      	ldrb	r3, [r5, #0]
90025648:	1c6f      	adds	r7, r5, #1
9002564a:	f003 030f 	and.w	r3, r3, #15
9002564e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025652:	0e0b      	lsrs	r3, r1, #24
90025654:	d006      	beq.n	90025664 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90025656:	8822      	ldrh	r2, [r4, #0]
90025658:	4640      	mov	r0, r8
9002565a:	9300      	str	r3, [sp, #0]
9002565c:	464b      	mov	r3, r9
9002565e:	f7ff ff43 	bl	900254e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90025662:	8020      	strh	r0, [r4, #0]
90025664:	3402      	adds	r4, #2
90025666:	f10b 3aff 	add.w	sl, fp, #4294967295
9002566a:	f1ba 0f01 	cmp.w	sl, #1
9002566e:	dd22      	ble.n	900256b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90025670:	783b      	ldrb	r3, [r7, #0]
90025672:	091b      	lsrs	r3, r3, #4
90025674:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025678:	0e0b      	lsrs	r3, r1, #24
9002567a:	d006      	beq.n	9002568a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
9002567c:	8822      	ldrh	r2, [r4, #0]
9002567e:	4640      	mov	r0, r8
90025680:	9300      	str	r3, [sp, #0]
90025682:	464b      	mov	r3, r9
90025684:	f7ff ff30 	bl	900254e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90025688:	8020      	strh	r0, [r4, #0]
9002568a:	f817 3b01 	ldrb.w	r3, [r7], #1
9002568e:	f003 030f 	and.w	r3, r3, #15
90025692:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025696:	0e0b      	lsrs	r3, r1, #24
90025698:	d006      	beq.n	900256a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
9002569a:	8862      	ldrh	r2, [r4, #2]
9002569c:	4640      	mov	r0, r8
9002569e:	9300      	str	r3, [sp, #0]
900256a0:	464b      	mov	r3, r9
900256a2:	f7ff ff21 	bl	900254e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900256a6:	8060      	strh	r0, [r4, #2]
900256a8:	3404      	adds	r4, #4
900256aa:	f1aa 0a02 	sub.w	sl, sl, #2
900256ae:	e7dc      	b.n	9002566a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900256b0:	462f      	mov	r7, r5
900256b2:	46da      	mov	sl, fp
900256b4:	e7d9      	b.n	9002566a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900256b6:	d10d      	bne.n	900256d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
900256b8:	783b      	ldrb	r3, [r7, #0]
900256ba:	091b      	lsrs	r3, r3, #4
900256bc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900256c0:	0e0b      	lsrs	r3, r1, #24
900256c2:	d006      	beq.n	900256d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
900256c4:	8822      	ldrh	r2, [r4, #0]
900256c6:	4640      	mov	r0, r8
900256c8:	9300      	str	r3, [sp, #0]
900256ca:	464b      	mov	r3, r9
900256cc:	f7ff ff0c 	bl	900254e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900256d0:	8020      	strh	r0, [r4, #0]
900256d2:	3402      	adds	r4, #2
900256d4:	9b06      	ldr	r3, [sp, #24]
900256d6:	9a02      	ldr	r2, [sp, #8]
900256d8:	881b      	ldrh	r3, [r3, #0]
900256da:	eba3 030b 	sub.w	r3, r3, fp
900256de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900256e2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
900256e6:	4413      	add	r3, r2
900256e8:	9a07      	ldr	r2, [sp, #28]
900256ea:	fb93 f3f2 	sdiv	r3, r3, r2
900256ee:	441d      	add	r5, r3
900256f0:	e7a3      	b.n	9002563a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
900256f2:	9b05      	ldr	r3, [sp, #20]
900256f4:	6818      	ldr	r0, [r3, #0]
900256f6:	6803      	ldr	r3, [r0, #0]
900256f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900256fa:	4798      	blx	r3
900256fc:	b00d      	add	sp, #52	@ 0x34
900256fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025702:	bf00      	nop
90025704:	24021c5c 	.word	0x24021c5c
90025708:	24021c56 	.word	0x24021c56

9002570c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
9002570c:	b570      	push	{r4, r5, r6, lr}
9002570e:	1214      	asrs	r4, r2, #8
90025710:	788d      	ldrb	r5, [r1, #2]
90025712:	f89d 6010 	ldrb.w	r6, [sp, #16]
90025716:	10d0      	asrs	r0, r2, #3
90025718:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002571c:	00d2      	lsls	r2, r2, #3
9002571e:	fb15 f503 	smulbb	r5, r5, r3
90025722:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025726:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002572a:	b2d2      	uxtb	r2, r2
9002572c:	fb04 5506 	mla	r5, r4, r6, r5
90025730:	784c      	ldrb	r4, [r1, #1]
90025732:	7809      	ldrb	r1, [r1, #0]
90025734:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90025738:	fb14 f403 	smulbb	r4, r4, r3
9002573c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90025740:	fb11 f303 	smulbb	r3, r1, r3
90025744:	b2ad      	uxth	r5, r5
90025746:	fb00 4406 	mla	r4, r0, r6, r4
9002574a:	fb02 3306 	mla	r3, r2, r6, r3
9002574e:	1c68      	adds	r0, r5, #1
90025750:	b2a4      	uxth	r4, r4
90025752:	b29b      	uxth	r3, r3
90025754:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90025758:	1c62      	adds	r2, r4, #1
9002575a:	1c58      	adds	r0, r3, #1
9002575c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90025760:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025764:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025768:	0964      	lsrs	r4, r4, #5
9002576a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002576e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90025772:	4328      	orrs	r0, r5
90025774:	4320      	orrs	r0, r4
90025776:	bd70      	pop	{r4, r5, r6, pc}

90025778 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90025778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002577c:	b08f      	sub	sp, #60	@ 0x3c
9002577e:	461c      	mov	r4, r3
90025780:	4682      	mov	sl, r0
90025782:	460e      	mov	r6, r1
90025784:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90025788:	4615      	mov	r5, r2
9002578a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002578c:	2f00      	cmp	r7, #0
9002578e:	f000 8141 	beq.w	90025a14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90025792:	6820      	ldr	r0, [r4, #0]
90025794:	aa0a      	add	r2, sp, #40	@ 0x28
90025796:	6861      	ldr	r1, [r4, #4]
90025798:	f04f 0802 	mov.w	r8, #2
9002579c:	3504      	adds	r5, #4
9002579e:	c203      	stmia	r2!, {r0, r1}
900257a0:	6818      	ldr	r0, [r3, #0]
900257a2:	aa0c      	add	r2, sp, #48	@ 0x30
900257a4:	6859      	ldr	r1, [r3, #4]
900257a6:	c203      	stmia	r2!, {r0, r1}
900257a8:	a80a      	add	r0, sp, #40	@ 0x28
900257aa:	f7ef fc6b 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900257ae:	4621      	mov	r1, r4
900257b0:	a80c      	add	r0, sp, #48	@ 0x30
900257b2:	f7ef fc8f 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900257b6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
900257ba:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
900257be:	f002 0301 	and.w	r3, r2, #1
900257c2:	9306      	str	r3, [sp, #24]
900257c4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900257c8:	f003 0101 	and.w	r1, r3, #1
900257cc:	9105      	str	r1, [sp, #20]
900257ce:	9805      	ldr	r0, [sp, #20]
900257d0:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
900257d4:	4403      	add	r3, r0
900257d6:	fb01 2303 	mla	r3, r1, r3, r2
900257da:	fb93 f3f8 	sdiv	r3, r3, r8
900257de:	441e      	add	r6, r3
900257e0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900257e4:	441a      	add	r2, r3
900257e6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
900257ea:	4419      	add	r1, r3
900257ec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900257f0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
900257f4:	9303      	str	r3, [sp, #12]
900257f6:	4b89      	ldr	r3, [pc, #548]	@ (90025a1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900257f8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
900257fc:	6818      	ldr	r0, [r3, #0]
900257fe:	6803      	ldr	r3, [r0, #0]
90025800:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90025802:	4798      	blx	r3
90025804:	4a86      	ldr	r2, [pc, #536]	@ (90025a20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90025806:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002580a:	2fff      	cmp	r7, #255	@ 0xff
9002580c:	8813      	ldrh	r3, [r2, #0]
9002580e:	4694      	mov	ip, r2
90025810:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90025814:	fb03 9404 	mla	r4, r3, r4, r9
90025818:	fb03 f30b 	mul.w	r3, r3, fp
9002581c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90025820:	d071      	beq.n	90025906 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90025822:	43f9      	mvns	r1, r7
90025824:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025828:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002582c:	b2c9      	uxtb	r1, r1
9002582e:	e9cd 3207 	strd	r3, r2, [sp, #28]
90025832:	9104      	str	r1, [sp, #16]
90025834:	9b07      	ldr	r3, [sp, #28]
90025836:	42a3      	cmp	r3, r4
90025838:	f240 80e7 	bls.w	90025a0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002583c:	9b06      	ldr	r3, [sp, #24]
9002583e:	2b00      	cmp	r3, #0
90025840:	d03d      	beq.n	900258be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90025842:	7831      	ldrb	r1, [r6, #0]
90025844:	4650      	mov	r0, sl
90025846:	9b04      	ldr	r3, [sp, #16]
90025848:	f106 0801 	add.w	r8, r6, #1
9002584c:	f001 010f 	and.w	r1, r1, #15
90025850:	8822      	ldrh	r2, [r4, #0]
90025852:	9300      	str	r3, [sp, #0]
90025854:	463b      	mov	r3, r7
90025856:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002585a:	4429      	add	r1, r5
9002585c:	f7ff ff56 	bl	9002570c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025860:	9b03      	ldr	r3, [sp, #12]
90025862:	f824 0b02 	strh.w	r0, [r4], #2
90025866:	f103 3bff 	add.w	fp, r3, #4294967295
9002586a:	f1bb 0f01 	cmp.w	fp, #1
9002586e:	46a1      	mov	r9, r4
90025870:	f104 0404 	add.w	r4, r4, #4
90025874:	dd27      	ble.n	900258c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90025876:	f898 1000 	ldrb.w	r1, [r8]
9002587a:	4650      	mov	r0, sl
9002587c:	9b04      	ldr	r3, [sp, #16]
9002587e:	f1ab 0b02 	sub.w	fp, fp, #2
90025882:	0909      	lsrs	r1, r1, #4
90025884:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90025888:	9300      	str	r3, [sp, #0]
9002588a:	463b      	mov	r3, r7
9002588c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90025890:	4429      	add	r1, r5
90025892:	f7ff ff3b 	bl	9002570c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025896:	f824 0c04 	strh.w	r0, [r4, #-4]
9002589a:	f818 1b01 	ldrb.w	r1, [r8], #1
9002589e:	4650      	mov	r0, sl
900258a0:	9b04      	ldr	r3, [sp, #16]
900258a2:	f001 010f 	and.w	r1, r1, #15
900258a6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900258aa:	9300      	str	r3, [sp, #0]
900258ac:	463b      	mov	r3, r7
900258ae:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900258b2:	4429      	add	r1, r5
900258b4:	f7ff ff2a 	bl	9002570c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900258b8:	f824 0c02 	strh.w	r0, [r4, #-2]
900258bc:	e7d5      	b.n	9002586a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900258be:	46b0      	mov	r8, r6
900258c0:	f8dd b00c 	ldr.w	fp, [sp, #12]
900258c4:	e7d1      	b.n	9002586a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900258c6:	d10f      	bne.n	900258e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900258c8:	f898 1000 	ldrb.w	r1, [r8]
900258cc:	4650      	mov	r0, sl
900258ce:	9b04      	ldr	r3, [sp, #16]
900258d0:	0909      	lsrs	r1, r1, #4
900258d2:	f8b9 2000 	ldrh.w	r2, [r9]
900258d6:	9300      	str	r3, [sp, #0]
900258d8:	463b      	mov	r3, r7
900258da:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900258de:	4429      	add	r1, r5
900258e0:	f7ff ff14 	bl	9002570c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900258e4:	f829 0b02 	strh.w	r0, [r9], #2
900258e8:	9b08      	ldr	r3, [sp, #32]
900258ea:	9a05      	ldr	r2, [sp, #20]
900258ec:	881c      	ldrh	r4, [r3, #0]
900258ee:	9b03      	ldr	r3, [sp, #12]
900258f0:	1ae4      	subs	r4, r4, r3
900258f2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
900258f6:	4413      	add	r3, r2
900258f8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900258fa:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900258fe:	fb93 f3f2 	sdiv	r3, r3, r2
90025902:	441e      	add	r6, r3
90025904:	e796      	b.n	90025834 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90025906:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002590a:	4f46      	ldr	r7, [pc, #280]	@ (90025a24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
9002590c:	42a3      	cmp	r3, r4
9002590e:	d97c      	bls.n	90025a0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90025910:	9a06      	ldr	r2, [sp, #24]
90025912:	2a00      	cmp	r2, #0
90025914:	d054      	beq.n	900259c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90025916:	7830      	ldrb	r0, [r6, #0]
90025918:	1c71      	adds	r1, r6, #1
9002591a:	f000 000f 	and.w	r0, r0, #15
9002591e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025922:	eb05 0e00 	add.w	lr, r5, r0
90025926:	5c28      	ldrb	r0, [r5, r0]
90025928:	f89e 2002 	ldrb.w	r2, [lr, #2]
9002592c:	f89e e001 	ldrb.w	lr, [lr, #1]
90025930:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90025934:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025938:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002593c:	ea42 020e 	orr.w	r2, r2, lr
90025940:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90025944:	f824 2b02 	strh.w	r2, [r4], #2
90025948:	9a03      	ldr	r2, [sp, #12]
9002594a:	f102 3eff 	add.w	lr, r2, #4294967295
9002594e:	f1be 0f01 	cmp.w	lr, #1
90025952:	4620      	mov	r0, r4
90025954:	f104 0404 	add.w	r4, r4, #4
90025958:	dd36      	ble.n	900259c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002595a:	7808      	ldrb	r0, [r1, #0]
9002595c:	f1ae 0e02 	sub.w	lr, lr, #2
90025960:	0900      	lsrs	r0, r0, #4
90025962:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025966:	eb05 0a00 	add.w	sl, r5, r0
9002596a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002596e:	f89a 9002 	ldrb.w	r9, [sl, #2]
90025972:	00d2      	lsls	r2, r2, #3
90025974:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90025978:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002597c:	ea49 0202 	orr.w	r2, r9, r2
90025980:	f815 9000 	ldrb.w	r9, [r5, r0]
90025984:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90025988:	f824 2c04 	strh.w	r2, [r4, #-4]
9002598c:	f811 0b01 	ldrb.w	r0, [r1], #1
90025990:	f000 000f 	and.w	r0, r0, #15
90025994:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025998:	eb05 0a00 	add.w	sl, r5, r0
9002599c:	f89a 2001 	ldrb.w	r2, [sl, #1]
900259a0:	f89a 9002 	ldrb.w	r9, [sl, #2]
900259a4:	00d2      	lsls	r2, r2, #3
900259a6:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900259aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900259ae:	ea49 0202 	orr.w	r2, r9, r2
900259b2:	f815 9000 	ldrb.w	r9, [r5, r0]
900259b6:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900259ba:	f824 2c02 	strh.w	r2, [r4, #-2]
900259be:	e7c6      	b.n	9002594e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900259c0:	4631      	mov	r1, r6
900259c2:	f8dd e00c 	ldr.w	lr, [sp, #12]
900259c6:	e7c2      	b.n	9002594e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900259c8:	d111      	bne.n	900259ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900259ca:	7809      	ldrb	r1, [r1, #0]
900259cc:	0909      	lsrs	r1, r1, #4
900259ce:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900259d2:	186c      	adds	r4, r5, r1
900259d4:	5c69      	ldrb	r1, [r5, r1]
900259d6:	78a2      	ldrb	r2, [r4, #2]
900259d8:	7864      	ldrb	r4, [r4, #1]
900259da:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900259de:	00e4      	lsls	r4, r4, #3
900259e0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900259e4:	4322      	orrs	r2, r4
900259e6:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
900259ea:	f820 2b02 	strh.w	r2, [r0], #2
900259ee:	9a03      	ldr	r2, [sp, #12]
900259f0:	f8bc 4000 	ldrh.w	r4, [ip]
900259f4:	9905      	ldr	r1, [sp, #20]
900259f6:	1aa4      	subs	r4, r4, r2
900259f8:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900259fc:	440a      	add	r2, r1
900259fe:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90025a02:	fb92 f2f8 	sdiv	r2, r2, r8
90025a06:	4416      	add	r6, r2
90025a08:	e780      	b.n	9002590c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90025a0a:	4b04      	ldr	r3, [pc, #16]	@ (90025a1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90025a0c:	6818      	ldr	r0, [r3, #0]
90025a0e:	6803      	ldr	r3, [r0, #0]
90025a10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90025a12:	4798      	blx	r3
90025a14:	b00f      	add	sp, #60	@ 0x3c
90025a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025a1a:	bf00      	nop
90025a1c:	24021c5c 	.word	0x24021c5c
90025a20:	24021c56 	.word	0x24021c56
90025a24:	fffff800 	.word	0xfffff800

90025a28 <CRC_Lock>:
90025a28:	4a20      	ldr	r2, [pc, #128]	@ (90025aac <CRC_Lock+0x84>)
90025a2a:	b530      	push	{r4, r5, lr}
90025a2c:	6813      	ldr	r3, [r2, #0]
90025a2e:	f64f 74f0 	movw	r4, #65520	@ 0xfff0
90025a32:	f24c 2540 	movw	r5, #49728	@ 0xc240
90025a36:	f023 0301 	bic.w	r3, r3, #1
90025a3a:	6013      	str	r3, [r2, #0]
90025a3c:	4b1c      	ldr	r3, [pc, #112]	@ (90025ab0 <CRC_Lock+0x88>)
90025a3e:	681a      	ldr	r2, [r3, #0]
90025a40:	4022      	ands	r2, r4
90025a42:	42aa      	cmp	r2, r5
90025a44:	d005      	beq.n	90025a52 <CRC_Lock+0x2a>
90025a46:	681b      	ldr	r3, [r3, #0]
90025a48:	f24c 2270 	movw	r2, #49776	@ 0xc270
90025a4c:	4023      	ands	r3, r4
90025a4e:	4293      	cmp	r3, r2
90025a50:	d124      	bne.n	90025a9c <CRC_Lock+0x74>
90025a52:	4b18      	ldr	r3, [pc, #96]	@ (90025ab4 <CRC_Lock+0x8c>)
90025a54:	681b      	ldr	r3, [r3, #0]
90025a56:	bb0b      	cbnz	r3, 90025a9c <CRC_Lock+0x74>
90025a58:	4b17      	ldr	r3, [pc, #92]	@ (90025ab8 <CRC_Lock+0x90>)
90025a5a:	681a      	ldr	r2, [r3, #0]
90025a5c:	f3c2 020b 	ubfx	r2, r2, #0, #12
90025a60:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
90025a64:	d00d      	beq.n	90025a82 <CRC_Lock+0x5a>
90025a66:	681a      	ldr	r2, [r3, #0]
90025a68:	f240 4483 	movw	r4, #1155	@ 0x483
90025a6c:	f3c2 020b 	ubfx	r2, r2, #0, #12
90025a70:	42a2      	cmp	r2, r4
90025a72:	d006      	beq.n	90025a82 <CRC_Lock+0x5a>
90025a74:	681b      	ldr	r3, [r3, #0]
90025a76:	f240 4285 	movw	r2, #1157	@ 0x485
90025a7a:	f3c3 030b 	ubfx	r3, r3, #0, #12
90025a7e:	4293      	cmp	r3, r2
90025a80:	d10c      	bne.n	90025a9c <CRC_Lock+0x74>
90025a82:	4b0e      	ldr	r3, [pc, #56]	@ (90025abc <CRC_Lock+0x94>)
90025a84:	2201      	movs	r2, #1
90025a86:	601a      	str	r2, [r3, #0]
90025a88:	681a      	ldr	r2, [r3, #0]
90025a8a:	2a00      	cmp	r2, #0
90025a8c:	d1fc      	bne.n	90025a88 <CRC_Lock+0x60>
90025a8e:	4b0c      	ldr	r3, [pc, #48]	@ (90025ac0 <CRC_Lock+0x98>)
90025a90:	6018      	str	r0, [r3, #0]
90025a92:	6818      	ldr	r0, [r3, #0]
90025a94:	1a43      	subs	r3, r0, r1
90025a96:	4258      	negs	r0, r3
90025a98:	4158      	adcs	r0, r3
90025a9a:	bd30      	pop	{r4, r5, pc}
90025a9c:	4b09      	ldr	r3, [pc, #36]	@ (90025ac4 <CRC_Lock+0x9c>)
90025a9e:	2201      	movs	r2, #1
90025aa0:	601a      	str	r2, [r3, #0]
90025aa2:	681a      	ldr	r2, [r3, #0]
90025aa4:	2a00      	cmp	r2, #0
90025aa6:	d1fc      	bne.n	90025aa2 <CRC_Lock+0x7a>
90025aa8:	4b07      	ldr	r3, [pc, #28]	@ (90025ac8 <CRC_Lock+0xa0>)
90025aaa:	e7f1      	b.n	90025a90 <CRC_Lock+0x68>
90025aac:	e0002000 	.word	0xe0002000
90025ab0:	e000ed00 	.word	0xe000ed00
90025ab4:	e0042000 	.word	0xe0042000
90025ab8:	5c001000 	.word	0x5c001000
90025abc:	58024c08 	.word	0x58024c08
90025ac0:	58024c00 	.word	0x58024c00
90025ac4:	40023008 	.word	0x40023008
90025ac8:	40023000 	.word	0x40023000

90025acc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90025acc:	6101      	str	r1, [r0, #16]
90025ace:	4770      	bx	lr

90025ad0 <_ZN8touchgfx8Gestures4tickEv>:
90025ad0:	7b83      	ldrb	r3, [r0, #14]
90025ad2:	b14b      	cbz	r3, 90025ae8 <_ZN8touchgfx8Gestures4tickEv+0x18>
90025ad4:	8903      	ldrh	r3, [r0, #8]
90025ad6:	3301      	adds	r3, #1
90025ad8:	b29b      	uxth	r3, r3
90025ada:	2b07      	cmp	r3, #7
90025adc:	8103      	strh	r3, [r0, #8]
90025ade:	bf81      	itttt	hi
90025ae0:	2300      	movhi	r3, #0
90025ae2:	8143      	strhhi	r3, [r0, #10]
90025ae4:	8183      	strhhi	r3, [r0, #12]
90025ae6:	7383      	strbhi	r3, [r0, #14]
90025ae8:	4770      	bx	lr
	...

90025aec <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90025aec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90025af0:	4698      	mov	r8, r3
90025af2:	8883      	ldrh	r3, [r0, #4]
90025af4:	4604      	mov	r4, r0
90025af6:	4617      	mov	r7, r2
90025af8:	f8ad 3006 	strh.w	r3, [sp, #6]
90025afc:	eba8 0303 	sub.w	r3, r8, r3
90025b00:	4a19      	ldr	r2, [pc, #100]	@ (90025b68 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90025b02:	460e      	mov	r6, r1
90025b04:	b21b      	sxth	r3, r3
90025b06:	88c1      	ldrh	r1, [r0, #6]
90025b08:	9200      	str	r2, [sp, #0]
90025b0a:	2000      	movs	r0, #0
90025b0c:	2b00      	cmp	r3, #0
90025b0e:	8aa2      	ldrh	r2, [r4, #20]
90025b10:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90025b14:	bfb8      	it	lt
90025b16:	425b      	neglt	r3, r3
90025b18:	f88d 0004 	strb.w	r0, [sp, #4]
90025b1c:	f8ad 1008 	strh.w	r1, [sp, #8]
90025b20:	b21b      	sxth	r3, r3
90025b22:	f8ad 800a 	strh.w	r8, [sp, #10]
90025b26:	f8ad 500c 	strh.w	r5, [sp, #12]
90025b2a:	4293      	cmp	r3, r2
90025b2c:	dc07      	bgt.n	90025b3e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90025b2e:	1a69      	subs	r1, r5, r1
90025b30:	b209      	sxth	r1, r1
90025b32:	2900      	cmp	r1, #0
90025b34:	bfb8      	it	lt
90025b36:	4249      	neglt	r1, r1
90025b38:	b209      	sxth	r1, r1
90025b3a:	428a      	cmp	r2, r1
90025b3c:	da10      	bge.n	90025b60 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90025b3e:	6920      	ldr	r0, [r4, #16]
90025b40:	4669      	mov	r1, sp
90025b42:	eba8 0606 	sub.w	r6, r8, r6
90025b46:	1bef      	subs	r7, r5, r7
90025b48:	6803      	ldr	r3, [r0, #0]
90025b4a:	685b      	ldr	r3, [r3, #4]
90025b4c:	4798      	blx	r3
90025b4e:	2300      	movs	r3, #0
90025b50:	2001      	movs	r0, #1
90025b52:	8166      	strh	r6, [r4, #10]
90025b54:	8123      	strh	r3, [r4, #8]
90025b56:	81a7      	strh	r7, [r4, #12]
90025b58:	f8a4 8004 	strh.w	r8, [r4, #4]
90025b5c:	80e5      	strh	r5, [r4, #6]
90025b5e:	73a0      	strb	r0, [r4, #14]
90025b60:	b004      	add	sp, #16
90025b62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025b66:	bf00      	nop
90025b68:	9002a8f8 	.word	0x9002a8f8

90025b6c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90025b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
90025b6e:	461e      	mov	r6, r3
90025b70:	1e4b      	subs	r3, r1, #1
90025b72:	b085      	sub	sp, #20
90025b74:	4604      	mov	r4, r0
90025b76:	2b01      	cmp	r3, #1
90025b78:	460d      	mov	r5, r1
90025b7a:	4617      	mov	r7, r2
90025b7c:	d84b      	bhi.n	90025c16 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90025b7e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90025b82:	1cd3      	adds	r3, r2, #3
90025b84:	b29b      	uxth	r3, r3
90025b86:	2b06      	cmp	r3, #6
90025b88:	d916      	bls.n	90025bb8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90025b8a:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 90025c2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90025b8e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90025b92:	f8cd c004 	str.w	ip, [sp, #4]
90025b96:	f04f 0c00 	mov.w	ip, #0
90025b9a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90025b9e:	6900      	ldr	r0, [r0, #16]
90025ba0:	f8ad 100c 	strh.w	r1, [sp, #12]
90025ba4:	a901      	add	r1, sp, #4
90025ba6:	f88d c008 	strb.w	ip, [sp, #8]
90025baa:	f8ad 200a 	strh.w	r2, [sp, #10]
90025bae:	f8ad 300e 	strh.w	r3, [sp, #14]
90025bb2:	6803      	ldr	r3, [r0, #0]
90025bb4:	689b      	ldr	r3, [r3, #8]
90025bb6:	4798      	blx	r3
90025bb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025bbc:	1cd3      	adds	r3, r2, #3
90025bbe:	b29b      	uxth	r3, r3
90025bc0:	2b06      	cmp	r3, #6
90025bc2:	d916      	bls.n	90025bf2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025bc4:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90025c2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90025bc8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90025bcc:	f8cd c004 	str.w	ip, [sp, #4]
90025bd0:	f04f 0c01 	mov.w	ip, #1
90025bd4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90025bd8:	6920      	ldr	r0, [r4, #16]
90025bda:	f8ad 100c 	strh.w	r1, [sp, #12]
90025bde:	a901      	add	r1, sp, #4
90025be0:	f88d c008 	strb.w	ip, [sp, #8]
90025be4:	f8ad 200a 	strh.w	r2, [sp, #10]
90025be8:	f8ad 300e 	strh.w	r3, [sp, #14]
90025bec:	6803      	ldr	r3, [r0, #0]
90025bee:	689b      	ldr	r3, [r3, #8]
90025bf0:	4798      	blx	r3
90025bf2:	4b0d      	ldr	r3, [pc, #52]	@ (90025c28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90025bf4:	a901      	add	r1, sp, #4
90025bf6:	6920      	ldr	r0, [r4, #16]
90025bf8:	9301      	str	r3, [sp, #4]
90025bfa:	2300      	movs	r3, #0
90025bfc:	f88d 5008 	strb.w	r5, [sp, #8]
90025c00:	f8ad 700a 	strh.w	r7, [sp, #10]
90025c04:	f8ad 600c 	strh.w	r6, [sp, #12]
90025c08:	f8ad 300e 	strh.w	r3, [sp, #14]
90025c0c:	6803      	ldr	r3, [r0, #0]
90025c0e:	681b      	ldr	r3, [r3, #0]
90025c10:	4798      	blx	r3
90025c12:	b005      	add	sp, #20
90025c14:	bdf0      	pop	{r4, r5, r6, r7, pc}
90025c16:	2900      	cmp	r1, #0
90025c18:	d1eb      	bne.n	90025bf2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025c1a:	80a2      	strh	r2, [r4, #4]
90025c1c:	80c6      	strh	r6, [r0, #6]
90025c1e:	60a1      	str	r1, [r4, #8]
90025c20:	81a1      	strh	r1, [r4, #12]
90025c22:	73a1      	strb	r1, [r4, #14]
90025c24:	e7e5      	b.n	90025bf2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025c26:	bf00      	nop
90025c28:	9002a8e4 	.word	0x9002a8e4
90025c2c:	9002a90c 	.word	0x9002a90c

90025c30 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90025c30:	10c9      	asrs	r1, r1, #3
90025c32:	2900      	cmp	r1, #0
90025c34:	bfb8      	it	lt
90025c36:	4249      	neglt	r1, r1
90025c38:	2801      	cmp	r0, #1
90025c3a:	d108      	bne.n	90025c4e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90025c3c:	f3c1 0008 	ubfx	r0, r1, #0, #9
90025c40:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
90025c44:	4601      	mov	r1, r0
90025c46:	dd02      	ble.n	90025c4e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90025c48:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
90025c4c:	4770      	bx	lr
90025c4e:	29ff      	cmp	r1, #255	@ 0xff
90025c50:	bfa8      	it	ge
90025c52:	21ff      	movge	r1, #255	@ 0xff
90025c54:	4608      	mov	r0, r1
90025c56:	4770      	bx	lr

90025c58 <_ZN8touchgfx10Rasterizer6lineToEii>:
90025c58:	b410      	push	{r4}
90025c5a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90025c5e:	429c      	cmp	r4, r3
90025c60:	d803      	bhi.n	90025c6a <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90025c62:	f85d 4b04 	ldr.w	r4, [sp], #4
90025c66:	f7ed bd47 	b.w	900136f8 <_ZN8touchgfx7Outline6lineToEii>
90025c6a:	f85d 4b04 	ldr.w	r4, [sp], #4
90025c6e:	4770      	bx	lr

90025c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90025c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025c74:	b08b      	sub	sp, #44	@ 0x2c
90025c76:	4606      	mov	r6, r0
90025c78:	468a      	mov	sl, r1
90025c7a:	e9cd 2306 	strd	r2, r3, [sp, #24]
90025c7e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90025c82:	9308      	str	r3, [sp, #32]
90025c84:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90025c88:	9309      	str	r3, [sp, #36]	@ 0x24
90025c8a:	f7ed fea0 	bl	900139ce <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90025c8e:	68b5      	ldr	r5, [r6, #8]
90025c90:	4604      	mov	r4, r0
90025c92:	2d00      	cmp	r5, #0
90025c94:	d044      	beq.n	90025d20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025c96:	6873      	ldr	r3, [r6, #4]
90025c98:	42ab      	cmp	r3, r5
90025c9a:	d33d      	bcc.n	90025d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90025c9c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90025ca0:	f04f 0800 	mov.w	r8, #0
90025ca4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
90025ca8:	eb02 0b03 	add.w	fp, r2, r3
90025cac:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90025cb0:	fb02 1203 	mla	r2, r2, r3, r1
90025cb4:	9205      	str	r2, [sp, #20]
90025cb6:	1e6a      	subs	r2, r5, #1
90025cb8:	9204      	str	r2, [sp, #16]
90025cba:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90025cbe:	f9b4 7000 	ldrsh.w	r7, [r4]
90025cc2:	454b      	cmp	r3, r9
90025cc4:	463a      	mov	r2, r7
90025cc6:	d008      	beq.n	90025cda <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90025cc8:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
90025ccc:	eb03 0b09 	add.w	fp, r3, r9
90025cd0:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90025cd4:	fb03 1309 	mla	r3, r3, r9, r1
90025cd8:	9305      	str	r3, [sp, #20]
90025cda:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90025cde:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90025ce2:	4498      	add	r8, r3
90025ce4:	9b04      	ldr	r3, [sp, #16]
90025ce6:	3b01      	subs	r3, #1
90025ce8:	9304      	str	r3, [sp, #16]
90025cea:	9b04      	ldr	r3, [sp, #16]
90025cec:	3301      	adds	r3, #1
90025cee:	d015      	beq.n	90025d1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90025cf0:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90025cf4:	42bb      	cmp	r3, r7
90025cf6:	d117      	bne.n	90025d28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90025cf8:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90025cfc:	9b04      	ldr	r3, [sp, #16]
90025cfe:	4548      	cmp	r0, r9
90025d00:	f103 33ff 	add.w	r3, r3, #4294967295
90025d04:	d17d      	bne.n	90025e02 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90025d06:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90025d0a:	4401      	add	r1, r0
90025d0c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90025d10:	4480      	add	r8, r0
90025d12:	e7e9      	b.n	90025ce8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90025d14:	461f      	mov	r7, r3
90025d16:	e042      	b.n	90025d9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90025d18:	2000      	movs	r0, #0
90025d1a:	e002      	b.n	90025d22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90025d1c:	2900      	cmp	r1, #0
90025d1e:	d16d      	bne.n	90025dfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90025d20:	2001      	movs	r0, #1
90025d22:	b00b      	add	sp, #44	@ 0x2c
90025d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025d28:	b379      	cbz	r1, 90025d8a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90025d2a:	2f00      	cmp	r7, #0
90025d2c:	db29      	blt.n	90025d82 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025d2e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90025d32:	42bb      	cmp	r3, r7
90025d34:	dd25      	ble.n	90025d82 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025d36:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90025d3a:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90025d3e:	f7ff ff77 	bl	90025c30 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90025d42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025d44:	fb10 f003 	smulbb	r0, r0, r3
90025d48:	b280      	uxth	r0, r0
90025d4a:	1c41      	adds	r1, r0, #1
90025d4c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025d50:	1209      	asrs	r1, r1, #8
90025d52:	f011 0fff 	tst.w	r1, #255	@ 0xff
90025d56:	d014      	beq.n	90025d82 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025d58:	b2c9      	uxtb	r1, r1
90025d5a:	9808      	ldr	r0, [sp, #32]
90025d5c:	b2ba      	uxth	r2, r7
90025d5e:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90025d60:	9102      	str	r1, [sp, #8]
90025d62:	2101      	movs	r1, #1
90025d64:	4413      	add	r3, r2
90025d66:	4402      	add	r2, r0
90025d68:	9101      	str	r1, [sp, #4]
90025d6a:	fa0f f18b 	sxth.w	r1, fp
90025d6e:	f8da 0000 	ldr.w	r0, [sl]
90025d72:	b21b      	sxth	r3, r3
90025d74:	9100      	str	r1, [sp, #0]
90025d76:	b212      	sxth	r2, r2
90025d78:	6941      	ldr	r1, [r0, #20]
90025d7a:	4650      	mov	r0, sl
90025d7c:	460d      	mov	r5, r1
90025d7e:	9905      	ldr	r1, [sp, #20]
90025d80:	47a8      	blx	r5
90025d82:	9b04      	ldr	r3, [sp, #16]
90025d84:	1c7a      	adds	r2, r7, #1
90025d86:	3301      	adds	r3, #1
90025d88:	d0ca      	beq.n	90025d20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025d8a:	f9b4 7000 	ldrsh.w	r7, [r4]
90025d8e:	1abb      	subs	r3, r7, r2
90025d90:	2b00      	cmp	r3, #0
90025d92:	dd31      	ble.n	90025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025d94:	2a00      	cmp	r2, #0
90025d96:	dabd      	bge.n	90025d14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90025d98:	2f00      	cmp	r7, #0
90025d9a:	dd2d      	ble.n	90025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025d9c:	2200      	movs	r2, #0
90025d9e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90025da2:	19d1      	adds	r1, r2, r7
90025da4:	4299      	cmp	r1, r3
90025da6:	db02      	blt.n	90025dae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90025da8:	1a9f      	subs	r7, r3, r2
90025daa:	2f00      	cmp	r7, #0
90025dac:	dd24      	ble.n	90025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025dae:	ea4f 1188 	mov.w	r1, r8, lsl #6
90025db2:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
90025db6:	f7ff ff3b 	bl	90025c30 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90025dba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025dbc:	fb10 f003 	smulbb	r0, r0, r3
90025dc0:	b280      	uxth	r0, r0
90025dc2:	1c41      	adds	r1, r0, #1
90025dc4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025dc8:	1209      	asrs	r1, r1, #8
90025dca:	f011 0fff 	tst.w	r1, #255	@ 0xff
90025dce:	d013      	beq.n	90025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025dd0:	b292      	uxth	r2, r2
90025dd2:	9808      	ldr	r0, [sp, #32]
90025dd4:	b2c9      	uxtb	r1, r1
90025dd6:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
90025dd8:	b23f      	sxth	r7, r7
90025dda:	4413      	add	r3, r2
90025ddc:	9102      	str	r1, [sp, #8]
90025dde:	4402      	add	r2, r0
90025de0:	fa0f f18b 	sxth.w	r1, fp
90025de4:	f8da 0000 	ldr.w	r0, [sl]
90025de8:	b21b      	sxth	r3, r3
90025dea:	9100      	str	r1, [sp, #0]
90025dec:	b212      	sxth	r2, r2
90025dee:	9701      	str	r7, [sp, #4]
90025df0:	9905      	ldr	r1, [sp, #20]
90025df2:	6947      	ldr	r7, [r0, #20]
90025df4:	4650      	mov	r0, sl
90025df6:	47b8      	blx	r7
90025df8:	464b      	mov	r3, r9
90025dfa:	e75e      	b.n	90025cba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90025dfc:	2f00      	cmp	r7, #0
90025dfe:	da96      	bge.n	90025d2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90025e00:	e78e      	b.n	90025d20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025e02:	2900      	cmp	r1, #0
90025e04:	d0f8      	beq.n	90025df8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025e06:	e790      	b.n	90025d2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90025e08 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90025e08:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025e0c:	461e      	mov	r6, r3
90025e0e:	4b36      	ldr	r3, [pc, #216]	@ (90025ee8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90025e10:	2500      	movs	r5, #0
90025e12:	f100 0814 	add.w	r8, r0, #20
90025e16:	4604      	mov	r4, r0
90025e18:	4617      	mov	r7, r2
90025e1a:	e9c0 3100 	strd	r3, r1, [r0]
90025e1e:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90025e22:	8185      	strh	r5, [r0, #12]
90025e24:	8103      	strh	r3, [r0, #8]
90025e26:	f89d 3020 	ldrb.w	r3, [sp, #32]
90025e2a:	81c5      	strh	r5, [r0, #14]
90025e2c:	7283      	strb	r3, [r0, #10]
90025e2e:	8205      	strh	r5, [r0, #16]
90025e30:	8245      	strh	r5, [r0, #18]
90025e32:	4640      	mov	r0, r8
90025e34:	f7ec ffa6 	bl	90012d84 <_ZN8touchgfx7OutlineC1Ev>
90025e38:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
90025e3c:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
90025e40:	466b      	mov	r3, sp
90025e42:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
90025e46:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
90025e4a:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
90025e4e:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
90025e52:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
90025e56:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
90025e5a:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
90025e5e:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
90025e62:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
90025e66:	6830      	ldr	r0, [r6, #0]
90025e68:	6871      	ldr	r1, [r6, #4]
90025e6a:	8872      	ldrh	r2, [r6, #2]
90025e6c:	8835      	ldrh	r5, [r6, #0]
90025e6e:	c303      	stmia	r3!, {r0, r1}
90025e70:	887b      	ldrh	r3, [r7, #2]
90025e72:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
90025e76:	4413      	add	r3, r2
90025e78:	883a      	ldrh	r2, [r7, #0]
90025e7a:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90025e7e:	442a      	add	r2, r5
90025e80:	81e3      	strh	r3, [r4, #14]
90025e82:	8220      	strh	r0, [r4, #16]
90025e84:	4668      	mov	r0, sp
90025e86:	81a2      	strh	r2, [r4, #12]
90025e88:	8261      	strh	r1, [r4, #18]
90025e8a:	4639      	mov	r1, r7
90025e8c:	f7ef f922 	bl	900150d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025e90:	f104 000c 	add.w	r0, r4, #12
90025e94:	f7ef f8f6 	bl	90015084 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90025e98:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90025e9c:	f8bd 2000 	ldrh.w	r2, [sp]
90025ea0:	4640      	mov	r0, r8
90025ea2:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
90025ea6:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
90025eaa:	f7ec ff4f 	bl	90012d4c <_ZN8touchgfx7Outline5resetEv>
90025eae:	f9bd 3000 	ldrsh.w	r3, [sp]
90025eb2:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
90025eb6:	4620      	mov	r0, r4
90025eb8:	015b      	lsls	r3, r3, #5
90025eba:	64e3      	str	r3, [r4, #76]	@ 0x4c
90025ebc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90025ec0:	015b      	lsls	r3, r3, #5
90025ec2:	6523      	str	r3, [r4, #80]	@ 0x50
90025ec4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90025ec8:	015b      	lsls	r3, r3, #5
90025eca:	6563      	str	r3, [r4, #84]	@ 0x54
90025ecc:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90025ed0:	015b      	lsls	r3, r3, #5
90025ed2:	65a3      	str	r3, [r4, #88]	@ 0x58
90025ed4:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90025ed8:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90025edc:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90025ee0:	b002      	add	sp, #8
90025ee2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025ee6:	bf00      	nop
90025ee8:	9002ac30 	.word	0x9002ac30

90025eec <_ZN8touchgfx6Canvas5closeEv>:
90025eec:	b538      	push	{r3, r4, r5, lr}
90025eee:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90025ef2:	4604      	mov	r4, r0
90025ef4:	b193      	cbz	r3, 90025f1c <_ZN8touchgfx6Canvas5closeEv+0x30>
90025ef6:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
90025efa:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90025efe:	4213      	tst	r3, r2
90025f00:	d10c      	bne.n	90025f1c <_ZN8touchgfx6Canvas5closeEv+0x30>
90025f02:	f100 0514 	add.w	r5, r0, #20
90025f06:	b123      	cbz	r3, 90025f12 <_ZN8touchgfx6Canvas5closeEv+0x26>
90025f08:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90025f0c:	4628      	mov	r0, r5
90025f0e:	f7ff fea3 	bl	90025c58 <_ZN8touchgfx10Rasterizer6lineToEii>
90025f12:	4628      	mov	r0, r5
90025f14:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
90025f18:	f7ff fe9e 	bl	90025c58 <_ZN8touchgfx10Rasterizer6lineToEii>
90025f1c:	2300      	movs	r3, #0
90025f1e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90025f22:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90025f26:	4298      	cmp	r0, r3
90025f28:	bf34      	ite	cc
90025f2a:	2000      	movcc	r0, #0
90025f2c:	2001      	movcs	r0, #1
90025f2e:	bd38      	pop	{r3, r4, r5, pc}

90025f30 <_ZN8touchgfx6Canvas6renderEh>:
90025f30:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025f34:	7a85      	ldrb	r5, [r0, #10]
90025f36:	4604      	mov	r4, r0
90025f38:	4369      	muls	r1, r5
90025f3a:	1c4d      	adds	r5, r1, #1
90025f3c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025f40:	122d      	asrs	r5, r5, #8
90025f42:	f000 8098 	beq.w	90026076 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025f46:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
90025f4a:	2b00      	cmp	r3, #0
90025f4c:	f000 8093 	beq.w	90026076 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025f50:	f7ff ffcc 	bl	90025eec <_ZN8touchgfx6Canvas5closeEv>
90025f54:	4607      	mov	r7, r0
90025f56:	2800      	cmp	r0, #0
90025f58:	d045      	beq.n	90025fe6 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025f5a:	6860      	ldr	r0, [r4, #4]
90025f5c:	4e47      	ldr	r6, [pc, #284]	@ (9002607c <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90025f5e:	6803      	ldr	r3, [r0, #0]
90025f60:	6837      	ldr	r7, [r6, #0]
90025f62:	689b      	ldr	r3, [r3, #8]
90025f64:	4798      	blx	r3
90025f66:	4601      	mov	r1, r0
90025f68:	4638      	mov	r0, r7
90025f6a:	f7ea fec3 	bl	90010cf4 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90025f6e:	4607      	mov	r7, r0
90025f70:	f7ea fa84 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90025f74:	6803      	ldr	r3, [r0, #0]
90025f76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90025f78:	4798      	blx	r3
90025f7a:	4680      	mov	r8, r0
90025f7c:	f7ea fa7e 	bl	9001047c <_ZN8touchgfx3HAL3lcdEv>
90025f80:	6803      	ldr	r3, [r0, #0]
90025f82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90025f84:	4798      	blx	r3
90025f86:	280b      	cmp	r0, #11
90025f88:	d85a      	bhi.n	90026040 <_ZN8touchgfx6Canvas6renderEh+0x110>
90025f8a:	e8df f000 	tbb	[pc, r0]
90025f8e:	5b50      	.short	0x5b50
90025f90:	3059066b 	.word	0x3059066b
90025f94:	64646440 	.word	0x64646440
90025f98:	6464      	.short	0x6464
90025f9a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025f9e:	2208      	movs	r2, #8
90025fa0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025fa4:	fb91 f2f2 	sdiv	r2, r1, r2
90025fa8:	fb08 2303 	mla	r3, r8, r3, r2
90025fac:	441f      	add	r7, r3
90025fae:	424b      	negs	r3, r1
90025fb0:	f001 0107 	and.w	r1, r1, #7
90025fb4:	f003 0307 	and.w	r3, r3, #7
90025fb8:	bf58      	it	pl
90025fba:	4259      	negpl	r1, r3
90025fbc:	b2c9      	uxtb	r1, r1
90025fbe:	b2ed      	uxtb	r5, r5
90025fc0:	463a      	mov	r2, r7
90025fc2:	fa0f f388 	sxth.w	r3, r8
90025fc6:	f104 0014 	add.w	r0, r4, #20
90025fca:	e9cd 1500 	strd	r1, r5, [sp]
90025fce:	6861      	ldr	r1, [r4, #4]
90025fd0:	f7ff fe4e 	bl	90025c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90025fd4:	4607      	mov	r7, r0
90025fd6:	6860      	ldr	r0, [r4, #4]
90025fd8:	6803      	ldr	r3, [r0, #0]
90025fda:	691b      	ldr	r3, [r3, #16]
90025fdc:	4798      	blx	r3
90025fde:	6830      	ldr	r0, [r6, #0]
90025fe0:	6803      	ldr	r3, [r0, #0]
90025fe2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90025fe4:	4798      	blx	r3
90025fe6:	4638      	mov	r0, r7
90025fe8:	b002      	add	sp, #8
90025fea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025fee:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025ff2:	2204      	movs	r2, #4
90025ff4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ff8:	fb91 f2f2 	sdiv	r2, r1, r2
90025ffc:	fb08 2303 	mla	r3, r8, r3, r2
90026000:	441f      	add	r7, r3
90026002:	424b      	negs	r3, r1
90026004:	f001 0103 	and.w	r1, r1, #3
90026008:	f003 0303 	and.w	r3, r3, #3
9002600c:	e7d4      	b.n	90025fb8 <_ZN8touchgfx6Canvas6renderEh+0x88>
9002600e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90026012:	2202      	movs	r2, #2
90026014:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026018:	2900      	cmp	r1, #0
9002601a:	fb91 f2f2 	sdiv	r2, r1, r2
9002601e:	f001 0101 	and.w	r1, r1, #1
90026022:	fb08 2303 	mla	r3, r8, r3, r2
90026026:	bfb8      	it	lt
90026028:	4249      	neglt	r1, r1
9002602a:	441f      	add	r7, r3
9002602c:	e7c6      	b.n	90025fbc <_ZN8touchgfx6Canvas6renderEh+0x8c>
9002602e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026032:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026036:	fb08 f303 	mul.w	r3, r8, r3
9002603a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002603e:	441f      	add	r7, r3
90026040:	2100      	movs	r1, #0
90026042:	e7bc      	b.n	90025fbe <_ZN8touchgfx6Canvas6renderEh+0x8e>
90026044:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026048:	2103      	movs	r1, #3
9002604a:	fb08 f203 	mul.w	r2, r8, r3
9002604e:	89a3      	ldrh	r3, [r4, #12]
90026050:	fb13 2301 	smlabb	r3, r3, r1, r2
90026054:	e7f3      	b.n	9002603e <_ZN8touchgfx6Canvas6renderEh+0x10e>
90026056:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002605a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002605e:	fb08 2303 	mla	r3, r8, r3, r2
90026062:	e7ec      	b.n	9002603e <_ZN8touchgfx6Canvas6renderEh+0x10e>
90026064:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90026068:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002606c:	fb08 f303 	mul.w	r3, r8, r3
90026070:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90026074:	e7e3      	b.n	9002603e <_ZN8touchgfx6Canvas6renderEh+0x10e>
90026076:	2701      	movs	r7, #1
90026078:	e7b5      	b.n	90025fe6 <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002607a:	bf00      	nop
9002607c:	24021c5c 	.word	0x24021c5c

90026080 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90026080:	4b06      	ldr	r3, [pc, #24]	@ (9002609c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90026082:	b510      	push	{r4, lr}
90026084:	781b      	ldrb	r3, [r3, #0]
90026086:	2b01      	cmp	r3, #1
90026088:	d107      	bne.n	9002609a <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
9002608a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
9002608e:	680b      	ldr	r3, [r1, #0]
90026090:	6814      	ldr	r4, [r2, #0]
90026092:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90026096:	6013      	str	r3, [r2, #0]
90026098:	600c      	str	r4, [r1, #0]
9002609a:	bd10      	pop	{r4, pc}
9002609c:	24021c54 	.word	0x24021c54

900260a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
900260a0:	b513      	push	{r0, r1, r4, lr}
900260a2:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
900260a6:	4604      	mov	r4, r0
900260a8:	e9cd 2100 	strd	r2, r1, [sp]
900260ac:	b9a3      	cbnz	r3, 900260d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
900260ae:	466a      	mov	r2, sp
900260b0:	a901      	add	r1, sp, #4
900260b2:	4620      	mov	r0, r4
900260b4:	f7ff ffe4 	bl	90026080 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900260b8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900260ba:	9901      	ldr	r1, [sp, #4]
900260bc:	9a00      	ldr	r2, [sp, #0]
900260be:	1ac9      	subs	r1, r1, r3
900260c0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900260c2:	1ad2      	subs	r2, r2, r3
900260c4:	9101      	str	r1, [sp, #4]
900260c6:	2a00      	cmp	r2, #0
900260c8:	9200      	str	r2, [sp, #0]
900260ca:	da0b      	bge.n	900260e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
900260cc:	2301      	movs	r3, #1
900260ce:	2900      	cmp	r1, #0
900260d0:	da0e      	bge.n	900260f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
900260d2:	f043 0304 	orr.w	r3, r3, #4
900260d6:	e013      	b.n	90026100 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
900260d8:	f7ff ff08 	bl	90025eec <_ZN8touchgfx6Canvas5closeEv>
900260dc:	2800      	cmp	r0, #0
900260de:	d1e6      	bne.n	900260ae <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
900260e0:	b002      	add	sp, #8
900260e2:	bd10      	pop	{r4, pc}
900260e4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
900260e6:	429a      	cmp	r2, r3
900260e8:	bfac      	ite	ge
900260ea:	2302      	movge	r3, #2
900260ec:	2300      	movlt	r3, #0
900260ee:	e7ee      	b.n	900260ce <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
900260f0:	6d60      	ldr	r0, [r4, #84]	@ 0x54
900260f2:	4281      	cmp	r1, r0
900260f4:	bfac      	ite	ge
900260f6:	2008      	movge	r0, #8
900260f8:	2000      	movlt	r0, #0
900260fa:	4318      	orrs	r0, r3
900260fc:	b2c3      	uxtb	r3, r0
900260fe:	b158      	cbz	r0, 90026118 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90026100:	2200      	movs	r2, #0
90026102:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
90026106:	9901      	ldr	r1, [sp, #4]
90026108:	9a00      	ldr	r2, [sp, #0]
9002610a:	66e1      	str	r1, [r4, #108]	@ 0x6c
9002610c:	6722      	str	r2, [r4, #112]	@ 0x70
9002610e:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90026112:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
90026116:	e7e3      	b.n	900260e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90026118:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002611c:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90026120:	4298      	cmp	r0, r3
90026122:	d803      	bhi.n	9002612c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90026124:	f104 0014 	add.w	r0, r4, #20
90026128:	f7ed fb00 	bl	9001372c <_ZN8touchgfx7Outline6moveToEii>
9002612c:	2301      	movs	r3, #1
9002612e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90026132:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
90026136:	2300      	movs	r3, #0
90026138:	e7e5      	b.n	90026106 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002613a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002613a:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002613c:	ab02      	add	r3, sp, #8
9002613e:	4604      	mov	r4, r0
90026140:	9101      	str	r1, [sp, #4]
90026142:	a901      	add	r1, sp, #4
90026144:	f843 2d08 	str.w	r2, [r3, #-8]!
90026148:	461a      	mov	r2, r3
9002614a:	f7ff ff99 	bl	90026080 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002614e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90026150:	9901      	ldr	r1, [sp, #4]
90026152:	9a00      	ldr	r2, [sp, #0]
90026154:	1ac9      	subs	r1, r1, r3
90026156:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90026158:	1ad2      	subs	r2, r2, r3
9002615a:	9101      	str	r1, [sp, #4]
9002615c:	2a00      	cmp	r2, #0
9002615e:	9200      	str	r2, [sp, #0]
90026160:	db1c      	blt.n	9002619c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90026162:	6da3      	ldr	r3, [r4, #88]	@ 0x58
90026164:	429a      	cmp	r2, r3
90026166:	bfac      	ite	ge
90026168:	2002      	movge	r0, #2
9002616a:	2000      	movlt	r0, #0
9002616c:	2900      	cmp	r1, #0
9002616e:	db17      	blt.n	900261a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90026170:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90026172:	4299      	cmp	r1, r3
90026174:	bfac      	ite	ge
90026176:	2308      	movge	r3, #8
90026178:	2300      	movlt	r3, #0
9002617a:	4303      	orrs	r3, r0
9002617c:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
90026180:	b2dd      	uxtb	r5, r3
90026182:	b978      	cbnz	r0, 900261a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90026184:	f104 0014 	add.w	r0, r4, #20
90026188:	f7ff fd66 	bl	90025c58 <_ZN8touchgfx10Rasterizer6lineToEii>
9002618c:	9b01      	ldr	r3, [sp, #4]
9002618e:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90026192:	6623      	str	r3, [r4, #96]	@ 0x60
90026194:	9b00      	ldr	r3, [sp, #0]
90026196:	6663      	str	r3, [r4, #100]	@ 0x64
90026198:	b002      	add	sp, #8
9002619a:	bd70      	pop	{r4, r5, r6, pc}
9002619c:	2001      	movs	r0, #1
9002619e:	e7e5      	b.n	9002616c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
900261a0:	2304      	movs	r3, #4
900261a2:	e7ea      	b.n	9002617a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
900261a4:	b113      	cbz	r3, 900261ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
900261a6:	ea10 0305 	ands.w	r3, r0, r5
900261aa:	d11c      	bne.n	900261e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
900261ac:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
900261b0:	f104 0614 	add.w	r6, r4, #20
900261b4:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
900261b8:	b98b      	cbnz	r3, 900261de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
900261ba:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
900261be:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
900261c2:	4298      	cmp	r0, r3
900261c4:	d802      	bhi.n	900261cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
900261c6:	4630      	mov	r0, r6
900261c8:	f7ed fab0 	bl	9001372c <_ZN8touchgfx7Outline6moveToEii>
900261cc:	2301      	movs	r3, #1
900261ce:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
900261d2:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
900261d6:	4630      	mov	r0, r6
900261d8:	e9dd 2100 	ldrd	r2, r1, [sp]
900261dc:	e7d4      	b.n	90026188 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
900261de:	4630      	mov	r0, r6
900261e0:	f7ff fd3a 	bl	90025c58 <_ZN8touchgfx10Rasterizer6lineToEii>
900261e4:	e7f7      	b.n	900261d6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
900261e6:	461d      	mov	r5, r3
900261e8:	e7d0      	b.n	9002618c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

900261ec <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
900261ec:	b538      	push	{r3, r4, r5, lr}
900261ee:	ed2d 8b10 	vpush	{d8-d15}
900261f2:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
900261f6:	4605      	mov	r5, r0
900261f8:	eeb0 ca40 	vmov.f32	s24, s0
900261fc:	460c      	mov	r4, r1
900261fe:	eef0 ca60 	vmov.f32	s25, s1
90026202:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90026360 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
90026206:	eeb0 da41 	vmov.f32	s26, s2
9002620a:	eef0 da61 	vmov.f32	s27, s3
9002620e:	eeb0 ea42 	vmov.f32	s28, s4
90026212:	eef0 ea62 	vmov.f32	s29, s5
90026216:	eef0 aa6b 	vmov.f32	s21, s23
9002621a:	2c08      	cmp	r4, #8
9002621c:	d86e      	bhi.n	900262fc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
9002621e:	ee7e 6a4c 	vsub.f32	s13, s28, s24
90026222:	ee7d 7aee 	vsub.f32	s15, s27, s29
90026226:	ee3d 6a4e 	vsub.f32	s12, s26, s28
9002622a:	ee3e 7aec 	vsub.f32	s14, s29, s25
9002622e:	ee66 7ae7 	vnmul.f32	s15, s13, s15
90026232:	ee3c fa0d 	vadd.f32	s30, s24, s26
90026236:	ee7c faad 	vadd.f32	s31, s25, s27
9002623a:	eee6 7a07 	vfma.f32	s15, s12, s14
9002623e:	ee7d 9a0e 	vadd.f32	s19, s26, s28
90026242:	ee3d aaae 	vadd.f32	s20, s27, s29
90026246:	ee2f fa2b 	vmul.f32	s30, s30, s23
9002624a:	ee6f faab 	vmul.f32	s31, s31, s23
9002624e:	ee69 9aab 	vmul.f32	s19, s19, s23
90026252:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90026256:	ee2a aa2b 	vmul.f32	s20, s20, s23
9002625a:	ee7f 8a29 	vadd.f32	s17, s30, s19
9002625e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026262:	ee3f 9a8a 	vadd.f32	s18, s31, s20
90026266:	ee68 8aab 	vmul.f32	s17, s17, s23
9002626a:	bf48      	it	mi
9002626c:	eef1 7a67 	vnegmi.f32	s15, s15
90026270:	ee29 9a2b 	vmul.f32	s18, s18, s23
90026274:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
90026278:	eef4 7acb 	vcmpe.f32	s15, s22
9002627c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026280:	dd3f      	ble.n	90026302 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
90026282:	ee27 7a07 	vmul.f32	s14, s14, s14
90026286:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002628a:	eea6 7aa6 	vfma.f32	s14, s13, s13
9002628e:	ee27 7a06 	vmul.f32	s14, s14, s12
90026292:	eef4 7ac7 	vcmpe.f32	s15, s14
90026296:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002629a:	d847      	bhi.n	9002632c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002629c:	ee7e 0a4d 	vsub.f32	s1, s28, s26
900262a0:	ee3e 0aed 	vsub.f32	s0, s29, s27
900262a4:	f000 fa57 	bl	90026756 <atan2f>
900262a8:	eeb0 8a40 	vmov.f32	s16, s0
900262ac:	ee7d 0a4c 	vsub.f32	s1, s26, s24
900262b0:	ee3d 0aec 	vsub.f32	s0, s27, s25
900262b4:	f000 fa4f 	bl	90026756 <atan2f>
900262b8:	ee38 0a40 	vsub.f32	s0, s16, s0
900262bc:	eddf 7a29 	vldr	s15, [pc, #164]	@ 90026364 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
900262c0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
900262c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900262c8:	bf48      	it	mi
900262ca:	eeb1 0a40 	vnegmi.f32	s0, s0
900262ce:	eeb4 0ae7 	vcmpe.f32	s0, s15
900262d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900262d6:	bfa4      	itt	ge
900262d8:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 90026368 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
900262dc:	ee37 0ac0 	vsubge.f32	s0, s15, s0
900262e0:	eddf 7a22 	vldr	s15, [pc, #136]	@ 9002636c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
900262e4:	eeb4 0ae7 	vcmpe.f32	s0, s15
900262e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900262ec:	d51e      	bpl.n	9002632c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
900262ee:	eef0 0a49 	vmov.f32	s1, s18
900262f2:	4628      	mov	r0, r5
900262f4:	eeb0 0a68 	vmov.f32	s0, s17
900262f8:	f7eb fe70 	bl	90011fdc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900262fc:	ecbd 8b10 	vpop	{d8-d15}
90026300:	bd38      	pop	{r3, r4, r5, pc}
90026302:	ee7c 7a0e 	vadd.f32	s15, s24, s28
90026306:	eeb0 7a68 	vmov.f32	s14, s17
9002630a:	eef0 6a49 	vmov.f32	s13, s18
9002630e:	eea7 7aea 	vfms.f32	s14, s15, s21
90026312:	ee7c 7aae 	vadd.f32	s15, s25, s29
90026316:	eee7 6aea 	vfms.f32	s13, s15, s21
9002631a:	ee66 7aa6 	vmul.f32	s15, s13, s13
9002631e:	eee7 7a07 	vfma.f32	s15, s14, s14
90026322:	eef4 7ac6 	vcmpe.f32	s15, s12
90026326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002632a:	d9e0      	bls.n	900262ee <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
9002632c:	3401      	adds	r4, #1
9002632e:	eef0 0a6c 	vmov.f32	s1, s25
90026332:	eeb0 0a4c 	vmov.f32	s0, s24
90026336:	4628      	mov	r0, r5
90026338:	4621      	mov	r1, r4
9002633a:	eef0 2a49 	vmov.f32	s5, s18
9002633e:	eeb0 2a68 	vmov.f32	s4, s17
90026342:	eef0 1a6f 	vmov.f32	s3, s31
90026346:	eeb0 1a4f 	vmov.f32	s2, s30
9002634a:	f7ff ff4f 	bl	900261ec <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
9002634e:	eef0 da4a 	vmov.f32	s27, s20
90026352:	eeb0 da69 	vmov.f32	s26, s19
90026356:	eef0 ca49 	vmov.f32	s25, s18
9002635a:	eeb0 ca68 	vmov.f32	s24, s17
9002635e:	e75c      	b.n	9002621a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90026360:	2edbe6ff 	.word	0x2edbe6ff
90026364:	40490fdb 	.word	0x40490fdb
90026368:	40c90fdb 	.word	0x40c90fdb
9002636c:	3dcccccd 	.word	0x3dcccccd

90026370 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90026370:	b530      	push	{r4, r5, lr}
90026372:	ed2d 8b10 	vpush	{d8-d15}
90026376:	eef0 8a40 	vmov.f32	s17, s0
9002637a:	b085      	sub	sp, #20
9002637c:	eef0 9a60 	vmov.f32	s19, s1
90026380:	4604      	mov	r4, r0
90026382:	eef0 fa41 	vmov.f32	s31, s2
90026386:	460d      	mov	r5, r1
90026388:	eeb0 fa61 	vmov.f32	s30, s3
9002638c:	eef0 ba42 	vmov.f32	s23, s4
90026390:	eeb0 ca62 	vmov.f32	s24, s5
90026394:	eef0 aa43 	vmov.f32	s21, s6
90026398:	eeb0 ba63 	vmov.f32	s22, s7
9002639c:	2d08      	cmp	r5, #8
9002639e:	f200 8113 	bhi.w	900265c8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
900263a2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900263a6:	ee3b 6aaa 	vadd.f32	s12, s23, s21
900263aa:	ee7f 6aab 	vadd.f32	s13, s31, s23
900263ae:	ee38 daaf 	vadd.f32	s26, s17, s31
900263b2:	ee26 6a27 	vmul.f32	s12, s12, s15
900263b6:	ee7c ca0b 	vadd.f32	s25, s24, s22
900263ba:	ee2d da27 	vmul.f32	s26, s26, s15
900263be:	ed8d 6a01 	vstr	s12, [sp, #4]
900263c2:	eea6 6aa7 	vfma.f32	s12, s13, s15
900263c6:	ee6c caa7 	vmul.f32	s25, s25, s15
900263ca:	eeb0 ea4d 	vmov.f32	s28, s26
900263ce:	ee79 da8f 	vadd.f32	s27, s19, s30
900263d2:	ee3f 7a0c 	vadd.f32	s14, s30, s24
900263d6:	eea6 eaa7 	vfma.f32	s28, s13, s15
900263da:	ee66 6a27 	vmul.f32	s13, s12, s15
900263de:	ee6d daa7 	vmul.f32	s27, s27, s15
900263e2:	edcd 6a03 	vstr	s13, [sp, #12]
900263e6:	eef0 6a6c 	vmov.f32	s13, s25
900263ea:	eef0 ea6d 	vmov.f32	s29, s27
900263ee:	ee2e ea27 	vmul.f32	s28, s28, s15
900263f2:	eee7 6a27 	vfma.f32	s13, s14, s15
900263f6:	eee7 ea27 	vfma.f32	s29, s14, s15
900263fa:	ee26 7aa7 	vmul.f32	s14, s13, s15
900263fe:	ee6e eaa7 	vmul.f32	s29, s29, s15
90026402:	eef0 6a67 	vmov.f32	s13, s15
90026406:	ed8d 7a02 	vstr	s14, [sp, #8]
9002640a:	ed9d 7a03 	vldr	s14, [sp, #12]
9002640e:	ee3e 9a07 	vadd.f32	s18, s28, s14
90026412:	ed9d 7a02 	vldr	s14, [sp, #8]
90026416:	ee3e aa87 	vadd.f32	s20, s29, s14
9002641a:	ee29 9a27 	vmul.f32	s18, s18, s15
9002641e:	ee2a aa27 	vmul.f32	s20, s20, s15
90026422:	2d00      	cmp	r5, #0
90026424:	f000 810b 	beq.w	9002663e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90026428:	ee7a 5ae8 	vsub.f32	s11, s21, s17
9002642c:	eddf 4a95 	vldr	s9, [pc, #596]	@ 90026684 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90026430:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90026434:	ee7b 7a69 	vsub.f32	s15, s22, s19
90026438:	ee3f 6aea 	vsub.f32	s12, s31, s21
9002643c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90026440:	ee3b 5aea 	vsub.f32	s10, s23, s21
90026444:	eea6 7a27 	vfma.f32	s14, s12, s15
90026448:	ee3c 6a4b 	vsub.f32	s12, s24, s22
9002644c:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90026450:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90026454:	eea5 6a27 	vfma.f32	s12, s10, s15
90026458:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
9002645c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026460:	bf48      	it	mi
90026462:	eeb1 7a47 	vnegmi.f32	s14, s14
90026466:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
9002646a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002646e:	eeb4 7ae4 	vcmpe.f32	s14, s9
90026472:	bf48      	it	mi
90026474:	eeb1 6a46 	vnegmi.f32	s12, s12
90026478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002647c:	f340 80a8 	ble.w	900265d0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90026480:	eeb4 6ae4 	vcmpe.f32	s12, s9
90026484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026488:	dd5a      	ble.n	90026540 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
9002648a:	ee65 5aa5 	vmul.f32	s11, s11, s11
9002648e:	ee37 7a06 	vadd.f32	s14, s14, s12
90026492:	eee7 5aa7 	vfma.f32	s11, s15, s15
90026496:	ee27 7a07 	vmul.f32	s14, s14, s14
9002649a:	ee65 7a85 	vmul.f32	s15, s11, s10
9002649e:	eeb4 7ae7 	vcmpe.f32	s14, s15
900264a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900264a6:	f200 80ca 	bhi.w	9002663e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900264aa:	ee7b 0aef 	vsub.f32	s1, s23, s31
900264ae:	ee3c 0a4f 	vsub.f32	s0, s24, s30
900264b2:	f000 f950 	bl	90026756 <atan2f>
900264b6:	eeb0 8a40 	vmov.f32	s16, s0
900264ba:	ee7f 0ae8 	vsub.f32	s1, s31, s17
900264be:	ee3f 0a69 	vsub.f32	s0, s30, s19
900264c2:	f000 f948 	bl	90026756 <atan2f>
900264c6:	ee38 fa40 	vsub.f32	s30, s16, s0
900264ca:	ee7a 0aeb 	vsub.f32	s1, s21, s23
900264ce:	ee3b 0a4c 	vsub.f32	s0, s22, s24
900264d2:	eeb5 fac0 	vcmpe.f32	s30, #0.0
900264d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900264da:	bf48      	it	mi
900264dc:	eeb1 fa4f 	vnegmi.f32	s30, s30
900264e0:	f000 f939 	bl	90026756 <atan2f>
900264e4:	ee30 0a48 	vsub.f32	s0, s0, s16
900264e8:	eddf 7a67 	vldr	s15, [pc, #412]	@ 90026688 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
900264ec:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
900264f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900264f4:	eeb4 fae7 	vcmpe.f32	s30, s15
900264f8:	eddf 7a63 	vldr	s15, [pc, #396]	@ 90026688 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
900264fc:	bf48      	it	mi
900264fe:	eeb1 0a40 	vnegmi.f32	s0, s0
90026502:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026506:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002650a:	eddf 7a60 	vldr	s15, [pc, #384]	@ 9002668c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002650e:	bfa4      	itt	ge
90026510:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 90026690 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90026514:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90026518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002651c:	bfa4      	itt	ge
9002651e:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 90026690 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90026522:	ee37 0a40 	vsubge.f32	s0, s14, s0
90026526:	ee3f 0a00 	vadd.f32	s0, s30, s0
9002652a:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002652e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026532:	f140 8084 	bpl.w	9002663e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90026536:	eef0 0a4a 	vmov.f32	s1, s20
9002653a:	eeb0 0a49 	vmov.f32	s0, s18
9002653e:	e040      	b.n	900265c2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90026540:	ee67 7aa7 	vmul.f32	s15, s15, s15
90026544:	ee27 7a07 	vmul.f32	s14, s14, s14
90026548:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002654c:	ee67 7a85 	vmul.f32	s15, s15, s10
90026550:	eeb4 7ae7 	vcmpe.f32	s14, s15
90026554:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026558:	d871      	bhi.n	9002663e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002655a:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002655e:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90026562:	f000 f8f8 	bl	90026756 <atan2f>
90026566:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002656a:	eeb0 8a40 	vmov.f32	s16, s0
9002656e:	ee3f 0a69 	vsub.f32	s0, s30, s19
90026572:	f000 f8f0 	bl	90026756 <atan2f>
90026576:	ee38 0a40 	vsub.f32	s0, s16, s0
9002657a:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90026688 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002657e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90026582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026586:	bf48      	it	mi
90026588:	eeb1 0a40 	vnegmi.f32	s0, s0
9002658c:	eeb4 0ae7 	vcmpe.f32	s0, s15
90026590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026594:	bfa4      	itt	ge
90026596:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 90026690 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002659a:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002659e:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9002668c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
900265a2:	eeb4 0ae7 	vcmpe.f32	s0, s15
900265a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900265aa:	d548      	bpl.n	9002663e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900265ac:	eef0 0a4f 	vmov.f32	s1, s30
900265b0:	4620      	mov	r0, r4
900265b2:	eeb0 0a6f 	vmov.f32	s0, s31
900265b6:	f7eb fd11 	bl	90011fdc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900265ba:	eef0 0a4c 	vmov.f32	s1, s24
900265be:	eeb0 0a6b 	vmov.f32	s0, s23
900265c2:	4620      	mov	r0, r4
900265c4:	f7eb fd0a 	bl	90011fdc <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
900265c8:	b005      	add	sp, #20
900265ca:	ecbd 8b10 	vpop	{d8-d15}
900265ce:	bd30      	pop	{r4, r5, pc}
900265d0:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 90026684 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
900265d4:	eeb4 6ac7 	vcmpe.f32	s12, s14
900265d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900265dc:	dd19      	ble.n	90026612 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
900265de:	ee67 7aa7 	vmul.f32	s15, s15, s15
900265e2:	ee26 7a06 	vmul.f32	s14, s12, s12
900265e6:	eee5 7aa5 	vfma.f32	s15, s11, s11
900265ea:	ee67 7a85 	vmul.f32	s15, s15, s10
900265ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
900265f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900265f6:	d822      	bhi.n	9002663e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
900265f8:	ee7a 0aeb 	vsub.f32	s1, s21, s23
900265fc:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90026600:	f000 f8a9 	bl	90026756 <atan2f>
90026604:	ee7b 0aef 	vsub.f32	s1, s23, s31
90026608:	eeb0 8a40 	vmov.f32	s16, s0
9002660c:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90026610:	e7af      	b.n	90026572 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90026612:	ee78 7aaa 	vadd.f32	s15, s17, s21
90026616:	eeb0 7a49 	vmov.f32	s14, s18
9002661a:	eeb0 6a4a 	vmov.f32	s12, s20
9002661e:	eea7 7ae6 	vfms.f32	s14, s15, s13
90026622:	ee79 7a8b 	vadd.f32	s15, s19, s22
90026626:	eea7 6ae6 	vfms.f32	s12, s15, s13
9002662a:	ee66 7a06 	vmul.f32	s15, s12, s12
9002662e:	eee7 7a07 	vfma.f32	s15, s14, s14
90026632:	eef4 7ac5 	vcmpe.f32	s15, s10
90026636:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002663a:	f67f af7c 	bls.w	90026536 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
9002663e:	3501      	adds	r5, #1
90026640:	eef0 0a69 	vmov.f32	s1, s19
90026644:	eeb0 0a68 	vmov.f32	s0, s17
90026648:	4620      	mov	r0, r4
9002664a:	4629      	mov	r1, r5
9002664c:	eef0 3a4a 	vmov.f32	s7, s20
90026650:	eeb0 3a49 	vmov.f32	s6, s18
90026654:	eef0 2a6e 	vmov.f32	s5, s29
90026658:	eeb0 2a4e 	vmov.f32	s4, s28
9002665c:	eef0 1a6d 	vmov.f32	s3, s27
90026660:	eeb0 1a4d 	vmov.f32	s2, s26
90026664:	f7ff fe84 	bl	90026370 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90026668:	eeb0 ca6c 	vmov.f32	s24, s25
9002666c:	eddd ba01 	vldr	s23, [sp, #4]
90026670:	eef0 9a4a 	vmov.f32	s19, s20
90026674:	ed9d fa02 	vldr	s30, [sp, #8]
90026678:	eef0 8a49 	vmov.f32	s17, s18
9002667c:	eddd fa03 	vldr	s31, [sp, #12]
90026680:	e68c      	b.n	9002639c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
90026682:	bf00      	nop
90026684:	2edbe6ff 	.word	0x2edbe6ff
90026688:	40490fdb 	.word	0x40490fdb
9002668c:	3dcccccd 	.word	0x3dcccccd
90026690:	40c90fdb 	.word	0x40c90fdb

90026694 <_ZN8touchgfx6CanvasD1Ev>:
90026694:	4b04      	ldr	r3, [pc, #16]	@ (900266a8 <_ZN8touchgfx6CanvasD1Ev+0x14>)
90026696:	b510      	push	{r4, lr}
90026698:	4604      	mov	r4, r0
9002669a:	f840 3b14 	str.w	r3, [r0], #20
9002669e:	f7ec fb4d 	bl	90012d3c <_ZN8touchgfx7OutlineD1Ev>
900266a2:	4620      	mov	r0, r4
900266a4:	bd10      	pop	{r4, pc}
900266a6:	bf00      	nop
900266a8:	9002ac30 	.word	0x9002ac30

900266ac <_ZN8touchgfx6CanvasD0Ev>:
900266ac:	b510      	push	{r4, lr}
900266ae:	4604      	mov	r4, r0
900266b0:	f7ff fff0 	bl	90026694 <_ZN8touchgfx6CanvasD1Ev>
900266b4:	2174      	movs	r1, #116	@ 0x74
900266b6:	4620      	mov	r0, r4
900266b8:	f000 f826 	bl	90026708 <_ZdlPvj>
900266bc:	4620      	mov	r0, r4
900266be:	bd10      	pop	{r4, pc}

900266c0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
900266c0:	790b      	ldrb	r3, [r1, #4]
900266c2:	2b00      	cmp	r3, #0
900266c4:	bf0c      	ite	eq
900266c6:	2301      	moveq	r3, #1
900266c8:	2300      	movne	r3, #0
900266ca:	b570      	push	{r4, r5, r6, lr}
900266cc:	4604      	mov	r4, r0
900266ce:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
900266d2:	460e      	mov	r6, r1
900266d4:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
900266d8:	d109      	bne.n	900266ee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
900266da:	b14d      	cbz	r5, 900266f0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
900266dc:	7933      	ldrb	r3, [r6, #4]
900266de:	2b01      	cmp	r3, #1
900266e0:	d10c      	bne.n	900266fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
900266e2:	6823      	ldr	r3, [r4, #0]
900266e4:	4620      	mov	r0, r4
900266e6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
900266e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900266ec:	4718      	bx	r3
900266ee:	b12d      	cbz	r5, 900266fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
900266f0:	6823      	ldr	r3, [r4, #0]
900266f2:	4620      	mov	r0, r4
900266f4:	695b      	ldr	r3, [r3, #20]
900266f6:	4798      	blx	r3
900266f8:	2d00      	cmp	r5, #0
900266fa:	d1ef      	bne.n	900266dc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
900266fc:	bd70      	pop	{r4, r5, r6, pc}

900266fe <__aeabi_atexit>:
900266fe:	460b      	mov	r3, r1
90026700:	4601      	mov	r1, r0
90026702:	4618      	mov	r0, r3
90026704:	f000 bc5a 	b.w	90026fbc <__cxa_atexit>

90026708 <_ZdlPvj>:
90026708:	f000 b812 	b.w	90026730 <_ZdlPv>

9002670c <__cxa_guard_acquire>:
9002670c:	6802      	ldr	r2, [r0, #0]
9002670e:	07d2      	lsls	r2, r2, #31
90026710:	4603      	mov	r3, r0
90026712:	d405      	bmi.n	90026720 <__cxa_guard_acquire+0x14>
90026714:	7842      	ldrb	r2, [r0, #1]
90026716:	b102      	cbz	r2, 9002671a <__cxa_guard_acquire+0xe>
90026718:	deff      	udf	#255	@ 0xff
9002671a:	2001      	movs	r0, #1
9002671c:	7058      	strb	r0, [r3, #1]
9002671e:	4770      	bx	lr
90026720:	2000      	movs	r0, #0
90026722:	4770      	bx	lr

90026724 <__cxa_guard_release>:
90026724:	2301      	movs	r3, #1
90026726:	6003      	str	r3, [r0, #0]
90026728:	4770      	bx	lr

9002672a <__cxa_pure_virtual>:
9002672a:	b508      	push	{r3, lr}
9002672c:	f000 f80e 	bl	9002674c <_ZSt9terminatev>

90026730 <_ZdlPv>:
90026730:	f000 bb8e 	b.w	90026e50 <free>

90026734 <_ZN10__cxxabiv111__terminateEPFvvE>:
90026734:	b508      	push	{r3, lr}
90026736:	4780      	blx	r0
90026738:	f000 fb57 	bl	90026dea <abort>

9002673c <_ZSt13get_terminatev>:
9002673c:	4b02      	ldr	r3, [pc, #8]	@ (90026748 <_ZSt13get_terminatev+0xc>)
9002673e:	6818      	ldr	r0, [r3, #0]
90026740:	f3bf 8f5b 	dmb	ish
90026744:	4770      	bx	lr
90026746:	bf00      	nop
90026748:	24000104 	.word	0x24000104

9002674c <_ZSt9terminatev>:
9002674c:	b508      	push	{r3, lr}
9002674e:	f7ff fff5 	bl	9002673c <_ZSt13get_terminatev>
90026752:	f7ff ffef 	bl	90026734 <_ZN10__cxxabiv111__terminateEPFvvE>

90026756 <atan2f>:
90026756:	f000 b9cf 	b.w	90026af8 <__ieee754_atan2f>
	...

9002675c <sqrtf>:
9002675c:	b508      	push	{r3, lr}
9002675e:	ed2d 8b02 	vpush	{d8}
90026762:	eeb0 8a40 	vmov.f32	s16, s0
90026766:	f000 f9c4 	bl	90026af2 <__ieee754_sqrtf>
9002676a:	eeb4 8a48 	vcmp.f32	s16, s16
9002676e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026772:	d60c      	bvs.n	9002678e <sqrtf+0x32>
90026774:	eddf 8a07 	vldr	s17, [pc, #28]	@ 90026794 <sqrtf+0x38>
90026778:	eeb4 8ae8 	vcmpe.f32	s16, s17
9002677c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026780:	d505      	bpl.n	9002678e <sqrtf+0x32>
90026782:	f000 fe89 	bl	90027498 <__errno>
90026786:	ee88 0aa8 	vdiv.f32	s0, s17, s17
9002678a:	2321      	movs	r3, #33	@ 0x21
9002678c:	6003      	str	r3, [r0, #0]
9002678e:	ecbd 8b02 	vpop	{d8}
90026792:	bd08      	pop	{r3, pc}
90026794:	00000000 	.word	0x00000000

90026798 <sinf_poly>:
90026798:	07cb      	lsls	r3, r1, #31
9002679a:	d412      	bmi.n	900267c2 <sinf_poly+0x2a>
9002679c:	ee21 5b00 	vmul.f64	d5, d1, d0
900267a0:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
900267a4:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
900267a8:	eea6 7b01 	vfma.f64	d7, d6, d1
900267ac:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
900267b0:	ee21 1b05 	vmul.f64	d1, d1, d5
900267b4:	eea6 0b05 	vfma.f64	d0, d6, d5
900267b8:	eea7 0b01 	vfma.f64	d0, d7, d1
900267bc:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
900267c0:	4770      	bx	lr
900267c2:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
900267c6:	ee21 5b01 	vmul.f64	d5, d1, d1
900267ca:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
900267ce:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
900267d2:	eea1 7b06 	vfma.f64	d7, d1, d6
900267d6:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
900267da:	eea1 0b06 	vfma.f64	d0, d1, d6
900267de:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
900267e2:	ee21 1b05 	vmul.f64	d1, d1, d5
900267e6:	eea5 0b06 	vfma.f64	d0, d5, d6
900267ea:	e7e5      	b.n	900267b8 <sinf_poly+0x20>
900267ec:	0000      	movs	r0, r0
	...

900267f0 <sinf>:
900267f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900267f2:	ee10 4a10 	vmov	r4, s0
900267f6:	f3c4 530a 	ubfx	r3, r4, #20, #11
900267fa:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
900267fe:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
90026802:	eef0 7a40 	vmov.f32	s15, s0
90026806:	ea4f 5214 	mov.w	r2, r4, lsr #20
9002680a:	d218      	bcs.n	9002683e <sinf+0x4e>
9002680c:	ee26 1b06 	vmul.f64	d1, d6, d6
90026810:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90026814:	d20a      	bcs.n	9002682c <sinf+0x3c>
90026816:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
9002681a:	d103      	bne.n	90026824 <sinf+0x34>
9002681c:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
90026820:	ed8d 1a01 	vstr	s2, [sp, #4]
90026824:	eeb0 0a67 	vmov.f32	s0, s15
90026828:	b003      	add	sp, #12
9002682a:	bd30      	pop	{r4, r5, pc}
9002682c:	483a      	ldr	r0, [pc, #232]	@ (90026918 <sinf+0x128>)
9002682e:	eeb0 0b46 	vmov.f64	d0, d6
90026832:	2100      	movs	r1, #0
90026834:	b003      	add	sp, #12
90026836:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002683a:	f7ff bfad 	b.w	90026798 <sinf_poly>
9002683e:	f240 422e 	movw	r2, #1070	@ 0x42e
90026842:	4293      	cmp	r3, r2
90026844:	d824      	bhi.n	90026890 <sinf+0xa0>
90026846:	4b34      	ldr	r3, [pc, #208]	@ (90026918 <sinf+0x128>)
90026848:	ed93 7b08 	vldr	d7, [r3, #32]
9002684c:	ee26 7b07 	vmul.f64	d7, d6, d7
90026850:	eefd 7bc7 	vcvt.s32.f64	s15, d7
90026854:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90026858:	ee17 1a90 	vmov	r1, s15
9002685c:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90026860:	1609      	asrs	r1, r1, #24
90026862:	ee07 1a90 	vmov	s15, r1
90026866:	f001 0203 	and.w	r2, r1, #3
9002686a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002686e:	eeb8 5be7 	vcvt.f64.s32	d5, s15
90026872:	ed92 0b00 	vldr	d0, [r2]
90026876:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002687a:	f011 0f02 	tst.w	r1, #2
9002687e:	eea5 6b47 	vfms.f64	d6, d5, d7
90026882:	bf08      	it	eq
90026884:	4618      	moveq	r0, r3
90026886:	ee26 1b06 	vmul.f64	d1, d6, d6
9002688a:	ee20 0b06 	vmul.f64	d0, d0, d6
9002688e:	e7d1      	b.n	90026834 <sinf+0x44>
90026890:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90026894:	d237      	bcs.n	90026906 <sinf+0x116>
90026896:	4921      	ldr	r1, [pc, #132]	@ (9002691c <sinf+0x12c>)
90026898:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002689c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
900268a0:	f3c4 0316 	ubfx	r3, r4, #0, #23
900268a4:	f3c4 55c2 	ubfx	r5, r4, #23, #3
900268a8:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
900268ac:	6a10      	ldr	r0, [r2, #32]
900268ae:	6912      	ldr	r2, [r2, #16]
900268b0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
900268b4:	40ab      	lsls	r3, r5
900268b6:	fba0 5003 	umull	r5, r0, r0, r3
900268ba:	4359      	muls	r1, r3
900268bc:	fbe3 0102 	umlal	r0, r1, r3, r2
900268c0:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
900268c4:	0f9d      	lsrs	r5, r3, #30
900268c6:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
900268ca:	1ac9      	subs	r1, r1, r3
900268cc:	f7d9 fee6 	bl	9000069c <__aeabi_l2d>
900268d0:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
900268d4:	4b10      	ldr	r3, [pc, #64]	@ (90026918 <sinf+0x128>)
900268d6:	f004 0203 	and.w	r2, r4, #3
900268da:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
900268de:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 90026910 <sinf+0x120>
900268e2:	ed92 0b00 	vldr	d0, [r2]
900268e6:	ec41 0b17 	vmov	d7, r0, r1
900268ea:	f014 0f02 	tst.w	r4, #2
900268ee:	ee27 7b06 	vmul.f64	d7, d7, d6
900268f2:	f103 0070 	add.w	r0, r3, #112	@ 0x70
900268f6:	4629      	mov	r1, r5
900268f8:	bf08      	it	eq
900268fa:	4618      	moveq	r0, r3
900268fc:	ee27 1b07 	vmul.f64	d1, d7, d7
90026900:	ee20 0b07 	vmul.f64	d0, d0, d7
90026904:	e796      	b.n	90026834 <sinf+0x44>
90026906:	b003      	add	sp, #12
90026908:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002690c:	f000 b8e2 	b.w	90026ad4 <__math_invalidf>
90026910:	54442d18 	.word	0x54442d18
90026914:	3c1921fb 	.word	0x3c1921fb
90026918:	9002aca0 	.word	0x9002aca0
9002691c:	9002ac3c 	.word	0x9002ac3c

90026920 <sinf_poly>:
90026920:	07cb      	lsls	r3, r1, #31
90026922:	d412      	bmi.n	9002694a <sinf_poly+0x2a>
90026924:	ee21 5b00 	vmul.f64	d5, d1, d0
90026928:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002692c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90026930:	eea6 7b01 	vfma.f64	d7, d6, d1
90026934:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90026938:	ee21 1b05 	vmul.f64	d1, d1, d5
9002693c:	eea6 0b05 	vfma.f64	d0, d6, d5
90026940:	eea7 0b01 	vfma.f64	d0, d7, d1
90026944:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90026948:	4770      	bx	lr
9002694a:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002694e:	ee21 5b01 	vmul.f64	d5, d1, d1
90026952:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90026956:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002695a:	eea1 7b06 	vfma.f64	d7, d1, d6
9002695e:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90026962:	eea1 0b06 	vfma.f64	d0, d1, d6
90026966:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002696a:	ee21 1b05 	vmul.f64	d1, d1, d5
9002696e:	eea5 0b06 	vfma.f64	d0, d5, d6
90026972:	e7e5      	b.n	90026940 <sinf_poly+0x20>
90026974:	0000      	movs	r0, r0
	...

90026978 <cosf>:
90026978:	b538      	push	{r3, r4, r5, lr}
9002697a:	ee10 4a10 	vmov	r4, s0
9002697e:	f3c4 530a 	ubfx	r3, r4, #20, #11
90026982:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90026986:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002698a:	d21f      	bcs.n	900269cc <cosf+0x54>
9002698c:	ee27 7b07 	vmul.f64	d7, d7, d7
90026990:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90026994:	f0c0 8082 	bcc.w	90026a9c <cosf+0x124>
90026998:	ee27 4b07 	vmul.f64	d4, d7, d7
9002699c:	4b44      	ldr	r3, [pc, #272]	@ (90026ab0 <cosf+0x138>)
9002699e:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
900269a2:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
900269a6:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
900269aa:	eea7 6b05 	vfma.f64	d6, d7, d5
900269ae:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
900269b2:	eea7 0b05 	vfma.f64	d0, d7, d5
900269b6:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
900269ba:	ee27 7b04 	vmul.f64	d7, d7, d4
900269be:	eea4 0b05 	vfma.f64	d0, d4, d5
900269c2:	eea6 0b07 	vfma.f64	d0, d6, d7
900269c6:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
900269ca:	bd38      	pop	{r3, r4, r5, pc}
900269cc:	f240 422e 	movw	r2, #1070	@ 0x42e
900269d0:	4293      	cmp	r3, r2
900269d2:	d829      	bhi.n	90026a28 <cosf+0xb0>
900269d4:	4b36      	ldr	r3, [pc, #216]	@ (90026ab0 <cosf+0x138>)
900269d6:	ed93 6b08 	vldr	d6, [r3, #32]
900269da:	ee27 6b06 	vmul.f64	d6, d7, d6
900269de:	eefd 6bc6 	vcvt.s32.f64	s13, d6
900269e2:	f103 0070 	add.w	r0, r3, #112	@ 0x70
900269e6:	ee16 1a90 	vmov	r1, s13
900269ea:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
900269ee:	1609      	asrs	r1, r1, #24
900269f0:	ee06 1a90 	vmov	s13, r1
900269f4:	f001 0203 	and.w	r2, r1, #3
900269f8:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
900269fc:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90026a00:	ed92 0b00 	vldr	d0, [r2]
90026a04:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90026a08:	f011 0f02 	tst.w	r1, #2
90026a0c:	f081 0101 	eor.w	r1, r1, #1
90026a10:	eea5 7b46 	vfms.f64	d7, d5, d6
90026a14:	bf08      	it	eq
90026a16:	4618      	moveq	r0, r3
90026a18:	ee27 1b07 	vmul.f64	d1, d7, d7
90026a1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90026a20:	ee20 0b07 	vmul.f64	d0, d0, d7
90026a24:	f7ff bf7c 	b.w	90026920 <sinf_poly>
90026a28:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90026a2c:	d232      	bcs.n	90026a94 <cosf+0x11c>
90026a2e:	4921      	ldr	r1, [pc, #132]	@ (90026ab4 <cosf+0x13c>)
90026a30:	f3c4 6083 	ubfx	r0, r4, #26, #4
90026a34:	eb01 0280 	add.w	r2, r1, r0, lsl #2
90026a38:	f3c4 0316 	ubfx	r3, r4, #0, #23
90026a3c:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90026a40:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90026a44:	6a10      	ldr	r0, [r2, #32]
90026a46:	6912      	ldr	r2, [r2, #16]
90026a48:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90026a4c:	40ab      	lsls	r3, r5
90026a4e:	fba0 5003 	umull	r5, r0, r0, r3
90026a52:	4359      	muls	r1, r3
90026a54:	fbe3 0102 	umlal	r0, r1, r3, r2
90026a58:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90026a5c:	0f9d      	lsrs	r5, r3, #30
90026a5e:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90026a62:	1ac9      	subs	r1, r1, r3
90026a64:	f7d9 fe1a 	bl	9000069c <__aeabi_l2d>
90026a68:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90026a6c:	4b10      	ldr	r3, [pc, #64]	@ (90026ab0 <cosf+0x138>)
90026a6e:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 90026aa8 <cosf+0x130>
90026a72:	ec41 0b17 	vmov	d7, r0, r1
90026a76:	f004 0203 	and.w	r2, r4, #3
90026a7a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90026a7e:	ed92 0b00 	vldr	d0, [r2]
90026a82:	ee27 7b06 	vmul.f64	d7, d7, d6
90026a86:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90026a8a:	f014 0f02 	tst.w	r4, #2
90026a8e:	f085 0101 	eor.w	r1, r5, #1
90026a92:	e7bf      	b.n	90026a14 <cosf+0x9c>
90026a94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90026a98:	f000 b81c 	b.w	90026ad4 <__math_invalidf>
90026a9c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
90026aa0:	e793      	b.n	900269ca <cosf+0x52>
90026aa2:	bf00      	nop
90026aa4:	f3af 8000 	nop.w
90026aa8:	54442d18 	.word	0x54442d18
90026aac:	3c1921fb 	.word	0x3c1921fb
90026ab0:	9002aca0 	.word	0x9002aca0
90026ab4:	9002ac3c 	.word	0x9002ac3c

90026ab8 <with_errnof>:
90026ab8:	b510      	push	{r4, lr}
90026aba:	ed2d 8b02 	vpush	{d8}
90026abe:	eeb0 8a40 	vmov.f32	s16, s0
90026ac2:	4604      	mov	r4, r0
90026ac4:	f000 fce8 	bl	90027498 <__errno>
90026ac8:	eeb0 0a48 	vmov.f32	s0, s16
90026acc:	ecbd 8b02 	vpop	{d8}
90026ad0:	6004      	str	r4, [r0, #0]
90026ad2:	bd10      	pop	{r4, pc}

90026ad4 <__math_invalidf>:
90026ad4:	eef0 7a40 	vmov.f32	s15, s0
90026ad8:	ee30 7a40 	vsub.f32	s14, s0, s0
90026adc:	eef4 7a67 	vcmp.f32	s15, s15
90026ae0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026ae4:	ee87 0a07 	vdiv.f32	s0, s14, s14
90026ae8:	d602      	bvs.n	90026af0 <__math_invalidf+0x1c>
90026aea:	2021      	movs	r0, #33	@ 0x21
90026aec:	f7ff bfe4 	b.w	90026ab8 <with_errnof>
90026af0:	4770      	bx	lr

90026af2 <__ieee754_sqrtf>:
90026af2:	eeb1 0ac0 	vsqrt.f32	s0, s0
90026af6:	4770      	bx	lr

90026af8 <__ieee754_atan2f>:
90026af8:	ee10 2a90 	vmov	r2, s1
90026afc:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90026b00:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90026b04:	b510      	push	{r4, lr}
90026b06:	eef0 7a40 	vmov.f32	s15, s0
90026b0a:	d806      	bhi.n	90026b1a <__ieee754_atan2f+0x22>
90026b0c:	ee10 0a10 	vmov	r0, s0
90026b10:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
90026b14:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90026b18:	d904      	bls.n	90026b24 <__ieee754_atan2f+0x2c>
90026b1a:	ee77 7aa0 	vadd.f32	s15, s15, s1
90026b1e:	eeb0 0a67 	vmov.f32	s0, s15
90026b22:	bd10      	pop	{r4, pc}
90026b24:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
90026b28:	d103      	bne.n	90026b32 <__ieee754_atan2f+0x3a>
90026b2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026b2e:	f000 b881 	b.w	90026c34 <atanf>
90026b32:	1794      	asrs	r4, r2, #30
90026b34:	f004 0402 	and.w	r4, r4, #2
90026b38:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
90026b3c:	b93b      	cbnz	r3, 90026b4e <__ieee754_atan2f+0x56>
90026b3e:	2c02      	cmp	r4, #2
90026b40:	d05c      	beq.n	90026bfc <__ieee754_atan2f+0x104>
90026b42:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90026c10 <__ieee754_atan2f+0x118>
90026b46:	2c03      	cmp	r4, #3
90026b48:	fe47 7a00 	vseleq.f32	s15, s14, s0
90026b4c:	e7e7      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026b4e:	b939      	cbnz	r1, 90026b60 <__ieee754_atan2f+0x68>
90026b50:	eddf 7a30 	vldr	s15, [pc, #192]	@ 90026c14 <__ieee754_atan2f+0x11c>
90026b54:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90026c18 <__ieee754_atan2f+0x120>
90026b58:	2800      	cmp	r0, #0
90026b5a:	fe67 7a87 	vselge.f32	s15, s15, s14
90026b5e:	e7de      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026b60:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90026b64:	d110      	bne.n	90026b88 <__ieee754_atan2f+0x90>
90026b66:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90026b6a:	f104 34ff 	add.w	r4, r4, #4294967295
90026b6e:	d107      	bne.n	90026b80 <__ieee754_atan2f+0x88>
90026b70:	2c02      	cmp	r4, #2
90026b72:	d846      	bhi.n	90026c02 <__ieee754_atan2f+0x10a>
90026b74:	4b29      	ldr	r3, [pc, #164]	@ (90026c1c <__ieee754_atan2f+0x124>)
90026b76:	eb03 0384 	add.w	r3, r3, r4, lsl #2
90026b7a:	edd3 7a00 	vldr	s15, [r3]
90026b7e:	e7ce      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026b80:	2c02      	cmp	r4, #2
90026b82:	d841      	bhi.n	90026c08 <__ieee754_atan2f+0x110>
90026b84:	4b26      	ldr	r3, [pc, #152]	@ (90026c20 <__ieee754_atan2f+0x128>)
90026b86:	e7f6      	b.n	90026b76 <__ieee754_atan2f+0x7e>
90026b88:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90026b8c:	d0e0      	beq.n	90026b50 <__ieee754_atan2f+0x58>
90026b8e:	1a5b      	subs	r3, r3, r1
90026b90:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
90026b94:	ea4f 51e3 	mov.w	r1, r3, asr #23
90026b98:	da1a      	bge.n	90026bd0 <__ieee754_atan2f+0xd8>
90026b9a:	2a00      	cmp	r2, #0
90026b9c:	da01      	bge.n	90026ba2 <__ieee754_atan2f+0xaa>
90026b9e:	313c      	adds	r1, #60	@ 0x3c
90026ba0:	db19      	blt.n	90026bd6 <__ieee754_atan2f+0xde>
90026ba2:	ee87 0aa0 	vdiv.f32	s0, s15, s1
90026ba6:	f000 f919 	bl	90026ddc <fabsf>
90026baa:	f000 f843 	bl	90026c34 <atanf>
90026bae:	eef0 7a40 	vmov.f32	s15, s0
90026bb2:	2c01      	cmp	r4, #1
90026bb4:	d012      	beq.n	90026bdc <__ieee754_atan2f+0xe4>
90026bb6:	2c02      	cmp	r4, #2
90026bb8:	d017      	beq.n	90026bea <__ieee754_atan2f+0xf2>
90026bba:	2c00      	cmp	r4, #0
90026bbc:	d0af      	beq.n	90026b1e <__ieee754_atan2f+0x26>
90026bbe:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 90026c24 <__ieee754_atan2f+0x12c>
90026bc2:	ee77 7a87 	vadd.f32	s15, s15, s14
90026bc6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 90026c28 <__ieee754_atan2f+0x130>
90026bca:	ee77 7ac7 	vsub.f32	s15, s15, s14
90026bce:	e7a6      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026bd0:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90026c14 <__ieee754_atan2f+0x11c>
90026bd4:	e7ed      	b.n	90026bb2 <__ieee754_atan2f+0xba>
90026bd6:	eddf 7a15 	vldr	s15, [pc, #84]	@ 90026c2c <__ieee754_atan2f+0x134>
90026bda:	e7ea      	b.n	90026bb2 <__ieee754_atan2f+0xba>
90026bdc:	ee17 3a90 	vmov	r3, s15
90026be0:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90026be4:	ee07 3a90 	vmov	s15, r3
90026be8:	e799      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026bea:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 90026c24 <__ieee754_atan2f+0x12c>
90026bee:	ee77 7a87 	vadd.f32	s15, s15, s14
90026bf2:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 90026c28 <__ieee754_atan2f+0x130>
90026bf6:	ee77 7a67 	vsub.f32	s15, s14, s15
90026bfa:	e790      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026bfc:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 90026c28 <__ieee754_atan2f+0x130>
90026c00:	e78d      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026c02:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 90026c30 <__ieee754_atan2f+0x138>
90026c06:	e78a      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026c08:	eddf 7a08 	vldr	s15, [pc, #32]	@ 90026c2c <__ieee754_atan2f+0x134>
90026c0c:	e787      	b.n	90026b1e <__ieee754_atan2f+0x26>
90026c0e:	bf00      	nop
90026c10:	c0490fdb 	.word	0xc0490fdb
90026c14:	3fc90fdb 	.word	0x3fc90fdb
90026c18:	bfc90fdb 	.word	0xbfc90fdb
90026c1c:	9002ad8c 	.word	0x9002ad8c
90026c20:	9002ad80 	.word	0x9002ad80
90026c24:	33bbbd2e 	.word	0x33bbbd2e
90026c28:	40490fdb 	.word	0x40490fdb
90026c2c:	00000000 	.word	0x00000000
90026c30:	3f490fdb 	.word	0x3f490fdb

90026c34 <atanf>:
90026c34:	b538      	push	{r3, r4, r5, lr}
90026c36:	ee10 5a10 	vmov	r5, s0
90026c3a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
90026c3e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
90026c42:	eef0 7a40 	vmov.f32	s15, s0
90026c46:	d30f      	bcc.n	90026c68 <atanf+0x34>
90026c48:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
90026c4c:	d904      	bls.n	90026c58 <atanf+0x24>
90026c4e:	ee70 7a00 	vadd.f32	s15, s0, s0
90026c52:	eeb0 0a67 	vmov.f32	s0, s15
90026c56:	bd38      	pop	{r3, r4, r5, pc}
90026c58:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 90026d90 <atanf+0x15c>
90026c5c:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 90026d94 <atanf+0x160>
90026c60:	2d00      	cmp	r5, #0
90026c62:	fe77 7a27 	vselgt.f32	s15, s14, s15
90026c66:	e7f4      	b.n	90026c52 <atanf+0x1e>
90026c68:	4b4b      	ldr	r3, [pc, #300]	@ (90026d98 <atanf+0x164>)
90026c6a:	429c      	cmp	r4, r3
90026c6c:	d810      	bhi.n	90026c90 <atanf+0x5c>
90026c6e:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
90026c72:	d20a      	bcs.n	90026c8a <atanf+0x56>
90026c74:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90026d9c <atanf+0x168>
90026c78:	ee30 7a07 	vadd.f32	s14, s0, s14
90026c7c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90026c80:	eeb4 7ae6 	vcmpe.f32	s14, s13
90026c84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026c88:	dce3      	bgt.n	90026c52 <atanf+0x1e>
90026c8a:	f04f 33ff 	mov.w	r3, #4294967295
90026c8e:	e013      	b.n	90026cb8 <atanf+0x84>
90026c90:	f000 f8a4 	bl	90026ddc <fabsf>
90026c94:	4b42      	ldr	r3, [pc, #264]	@ (90026da0 <atanf+0x16c>)
90026c96:	429c      	cmp	r4, r3
90026c98:	d84f      	bhi.n	90026d3a <atanf+0x106>
90026c9a:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
90026c9e:	429c      	cmp	r4, r3
90026ca0:	d841      	bhi.n	90026d26 <atanf+0xf2>
90026ca2:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
90026ca6:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90026caa:	eea0 7a27 	vfma.f32	s14, s0, s15
90026cae:	2300      	movs	r3, #0
90026cb0:	ee30 0a27 	vadd.f32	s0, s0, s15
90026cb4:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026cb8:	1c5a      	adds	r2, r3, #1
90026cba:	ee27 6aa7 	vmul.f32	s12, s15, s15
90026cbe:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 90026da4 <atanf+0x170>
90026cc2:	eddf 5a39 	vldr	s11, [pc, #228]	@ 90026da8 <atanf+0x174>
90026cc6:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 90026dac <atanf+0x178>
90026cca:	ee66 6a06 	vmul.f32	s13, s12, s12
90026cce:	eee6 5a87 	vfma.f32	s11, s13, s14
90026cd2:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 90026db0 <atanf+0x17c>
90026cd6:	eea5 7aa6 	vfma.f32	s14, s11, s13
90026cda:	eddf 5a36 	vldr	s11, [pc, #216]	@ 90026db4 <atanf+0x180>
90026cde:	eee7 5a26 	vfma.f32	s11, s14, s13
90026ce2:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 90026db8 <atanf+0x184>
90026ce6:	eea5 7aa6 	vfma.f32	s14, s11, s13
90026cea:	eddf 5a34 	vldr	s11, [pc, #208]	@ 90026dbc <atanf+0x188>
90026cee:	eee7 5a26 	vfma.f32	s11, s14, s13
90026cf2:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90026dc0 <atanf+0x18c>
90026cf6:	eea6 5a87 	vfma.f32	s10, s13, s14
90026cfa:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 90026dc4 <atanf+0x190>
90026cfe:	eea5 7a26 	vfma.f32	s14, s10, s13
90026d02:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 90026dc8 <atanf+0x194>
90026d06:	eea7 5a26 	vfma.f32	s10, s14, s13
90026d0a:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90026dcc <atanf+0x198>
90026d0e:	eea5 7a26 	vfma.f32	s14, s10, s13
90026d12:	ee27 7a26 	vmul.f32	s14, s14, s13
90026d16:	eea5 7a86 	vfma.f32	s14, s11, s12
90026d1a:	ee27 7a87 	vmul.f32	s14, s15, s14
90026d1e:	d121      	bne.n	90026d64 <atanf+0x130>
90026d20:	ee77 7ac7 	vsub.f32	s15, s15, s14
90026d24:	e795      	b.n	90026c52 <atanf+0x1e>
90026d26:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90026d2a:	ee30 7a67 	vsub.f32	s14, s0, s15
90026d2e:	ee30 0a27 	vadd.f32	s0, s0, s15
90026d32:	2301      	movs	r3, #1
90026d34:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026d38:	e7be      	b.n	90026cb8 <atanf+0x84>
90026d3a:	4b25      	ldr	r3, [pc, #148]	@ (90026dd0 <atanf+0x19c>)
90026d3c:	429c      	cmp	r4, r3
90026d3e:	d80b      	bhi.n	90026d58 <atanf+0x124>
90026d40:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
90026d44:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026d48:	eea0 7a27 	vfma.f32	s14, s0, s15
90026d4c:	2302      	movs	r3, #2
90026d4e:	ee70 6a67 	vsub.f32	s13, s0, s15
90026d52:	eec6 7a87 	vdiv.f32	s15, s13, s14
90026d56:	e7af      	b.n	90026cb8 <atanf+0x84>
90026d58:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
90026d5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026d60:	2303      	movs	r3, #3
90026d62:	e7a9      	b.n	90026cb8 <atanf+0x84>
90026d64:	4a1b      	ldr	r2, [pc, #108]	@ (90026dd4 <atanf+0x1a0>)
90026d66:	491c      	ldr	r1, [pc, #112]	@ (90026dd8 <atanf+0x1a4>)
90026d68:	eb02 0283 	add.w	r2, r2, r3, lsl #2
90026d6c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90026d70:	edd3 6a00 	vldr	s13, [r3]
90026d74:	ee37 7a66 	vsub.f32	s14, s14, s13
90026d78:	2d00      	cmp	r5, #0
90026d7a:	ee37 7a67 	vsub.f32	s14, s14, s15
90026d7e:	edd2 7a00 	vldr	s15, [r2]
90026d82:	ee77 7ac7 	vsub.f32	s15, s15, s14
90026d86:	bfb8      	it	lt
90026d88:	eef1 7a67 	vneglt.f32	s15, s15
90026d8c:	e761      	b.n	90026c52 <atanf+0x1e>
90026d8e:	bf00      	nop
90026d90:	bfc90fdb 	.word	0xbfc90fdb
90026d94:	3fc90fdb 	.word	0x3fc90fdb
90026d98:	3edfffff 	.word	0x3edfffff
90026d9c:	7149f2ca 	.word	0x7149f2ca
90026da0:	3f97ffff 	.word	0x3f97ffff
90026da4:	3c8569d7 	.word	0x3c8569d7
90026da8:	3d4bda59 	.word	0x3d4bda59
90026dac:	bd6ef16b 	.word	0xbd6ef16b
90026db0:	3d886b35 	.word	0x3d886b35
90026db4:	3dba2e6e 	.word	0x3dba2e6e
90026db8:	3e124925 	.word	0x3e124925
90026dbc:	3eaaaaab 	.word	0x3eaaaaab
90026dc0:	bd15a221 	.word	0xbd15a221
90026dc4:	bd9d8795 	.word	0xbd9d8795
90026dc8:	bde38e38 	.word	0xbde38e38
90026dcc:	be4ccccd 	.word	0xbe4ccccd
90026dd0:	401bffff 	.word	0x401bffff
90026dd4:	9002ada8 	.word	0x9002ada8
90026dd8:	9002ad98 	.word	0x9002ad98

90026ddc <fabsf>:
90026ddc:	ee10 3a10 	vmov	r3, s0
90026de0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90026de4:	ee00 3a10 	vmov	s0, r3
90026de8:	4770      	bx	lr

90026dea <abort>:
90026dea:	b508      	push	{r3, lr}
90026dec:	2006      	movs	r0, #6
90026dee:	f000 fae1 	bl	900273b4 <raise>
90026df2:	2001      	movs	r0, #1
90026df4:	f7dd f9b4 	bl	90004160 <_exit>

90026df8 <__assert_func>:
90026df8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90026dfa:	4614      	mov	r4, r2
90026dfc:	461a      	mov	r2, r3
90026dfe:	4b09      	ldr	r3, [pc, #36]	@ (90026e24 <__assert_func+0x2c>)
90026e00:	681b      	ldr	r3, [r3, #0]
90026e02:	4605      	mov	r5, r0
90026e04:	68d8      	ldr	r0, [r3, #12]
90026e06:	b954      	cbnz	r4, 90026e1e <__assert_func+0x26>
90026e08:	4b07      	ldr	r3, [pc, #28]	@ (90026e28 <__assert_func+0x30>)
90026e0a:	461c      	mov	r4, r3
90026e0c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90026e10:	9100      	str	r1, [sp, #0]
90026e12:	462b      	mov	r3, r5
90026e14:	4905      	ldr	r1, [pc, #20]	@ (90026e2c <__assert_func+0x34>)
90026e16:	f000 f983 	bl	90027120 <fiprintf>
90026e1a:	f7ff ffe6 	bl	90026dea <abort>
90026e1e:	4b04      	ldr	r3, [pc, #16]	@ (90026e30 <__assert_func+0x38>)
90026e20:	e7f4      	b.n	90026e0c <__assert_func+0x14>
90026e22:	bf00      	nop
90026e24:	24000114 	.word	0x24000114
90026e28:	9002adf3 	.word	0x9002adf3
90026e2c:	9002adc5 	.word	0x9002adc5
90026e30:	9002adb8 	.word	0x9002adb8

90026e34 <atexit>:
90026e34:	2300      	movs	r3, #0
90026e36:	4601      	mov	r1, r0
90026e38:	461a      	mov	r2, r3
90026e3a:	4618      	mov	r0, r3
90026e3c:	f000 bb68 	b.w	90027510 <__register_exitproc>

90026e40 <malloc>:
90026e40:	4b02      	ldr	r3, [pc, #8]	@ (90026e4c <malloc+0xc>)
90026e42:	4601      	mov	r1, r0
90026e44:	6818      	ldr	r0, [r3, #0]
90026e46:	f000 b82d 	b.w	90026ea4 <_malloc_r>
90026e4a:	bf00      	nop
90026e4c:	24000114 	.word	0x24000114

90026e50 <free>:
90026e50:	4b02      	ldr	r3, [pc, #8]	@ (90026e5c <free+0xc>)
90026e52:	4601      	mov	r1, r0
90026e54:	6818      	ldr	r0, [r3, #0]
90026e56:	f000 bbb7 	b.w	900275c8 <_free_r>
90026e5a:	bf00      	nop
90026e5c:	24000114 	.word	0x24000114

90026e60 <sbrk_aligned>:
90026e60:	b570      	push	{r4, r5, r6, lr}
90026e62:	4e0f      	ldr	r6, [pc, #60]	@ (90026ea0 <sbrk_aligned+0x40>)
90026e64:	460c      	mov	r4, r1
90026e66:	6831      	ldr	r1, [r6, #0]
90026e68:	4605      	mov	r5, r0
90026e6a:	b911      	cbnz	r1, 90026e72 <sbrk_aligned+0x12>
90026e6c:	f000 faf2 	bl	90027454 <_sbrk_r>
90026e70:	6030      	str	r0, [r6, #0]
90026e72:	4621      	mov	r1, r4
90026e74:	4628      	mov	r0, r5
90026e76:	f000 faed 	bl	90027454 <_sbrk_r>
90026e7a:	1c43      	adds	r3, r0, #1
90026e7c:	d103      	bne.n	90026e86 <sbrk_aligned+0x26>
90026e7e:	f04f 34ff 	mov.w	r4, #4294967295
90026e82:	4620      	mov	r0, r4
90026e84:	bd70      	pop	{r4, r5, r6, pc}
90026e86:	1cc4      	adds	r4, r0, #3
90026e88:	f024 0403 	bic.w	r4, r4, #3
90026e8c:	42a0      	cmp	r0, r4
90026e8e:	d0f8      	beq.n	90026e82 <sbrk_aligned+0x22>
90026e90:	1a21      	subs	r1, r4, r0
90026e92:	4628      	mov	r0, r5
90026e94:	f000 fade 	bl	90027454 <_sbrk_r>
90026e98:	3001      	adds	r0, #1
90026e9a:	d1f2      	bne.n	90026e82 <sbrk_aligned+0x22>
90026e9c:	e7ef      	b.n	90026e7e <sbrk_aligned+0x1e>
90026e9e:	bf00      	nop
90026ea0:	240225b0 	.word	0x240225b0

90026ea4 <_malloc_r>:
90026ea4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90026ea8:	1ccd      	adds	r5, r1, #3
90026eaa:	f025 0503 	bic.w	r5, r5, #3
90026eae:	3508      	adds	r5, #8
90026eb0:	2d0c      	cmp	r5, #12
90026eb2:	bf38      	it	cc
90026eb4:	250c      	movcc	r5, #12
90026eb6:	2d00      	cmp	r5, #0
90026eb8:	4606      	mov	r6, r0
90026eba:	db01      	blt.n	90026ec0 <_malloc_r+0x1c>
90026ebc:	42a9      	cmp	r1, r5
90026ebe:	d904      	bls.n	90026eca <_malloc_r+0x26>
90026ec0:	230c      	movs	r3, #12
90026ec2:	6033      	str	r3, [r6, #0]
90026ec4:	2000      	movs	r0, #0
90026ec6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026eca:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 90026fa0 <_malloc_r+0xfc>
90026ece:	f000 f869 	bl	90026fa4 <__malloc_lock>
90026ed2:	f8d8 3000 	ldr.w	r3, [r8]
90026ed6:	461c      	mov	r4, r3
90026ed8:	bb44      	cbnz	r4, 90026f2c <_malloc_r+0x88>
90026eda:	4629      	mov	r1, r5
90026edc:	4630      	mov	r0, r6
90026ede:	f7ff ffbf 	bl	90026e60 <sbrk_aligned>
90026ee2:	1c43      	adds	r3, r0, #1
90026ee4:	4604      	mov	r4, r0
90026ee6:	d158      	bne.n	90026f9a <_malloc_r+0xf6>
90026ee8:	f8d8 4000 	ldr.w	r4, [r8]
90026eec:	4627      	mov	r7, r4
90026eee:	2f00      	cmp	r7, #0
90026ef0:	d143      	bne.n	90026f7a <_malloc_r+0xd6>
90026ef2:	2c00      	cmp	r4, #0
90026ef4:	d04b      	beq.n	90026f8e <_malloc_r+0xea>
90026ef6:	6823      	ldr	r3, [r4, #0]
90026ef8:	4639      	mov	r1, r7
90026efa:	4630      	mov	r0, r6
90026efc:	eb04 0903 	add.w	r9, r4, r3
90026f00:	f000 faa8 	bl	90027454 <_sbrk_r>
90026f04:	4581      	cmp	r9, r0
90026f06:	d142      	bne.n	90026f8e <_malloc_r+0xea>
90026f08:	6821      	ldr	r1, [r4, #0]
90026f0a:	1a6d      	subs	r5, r5, r1
90026f0c:	4629      	mov	r1, r5
90026f0e:	4630      	mov	r0, r6
90026f10:	f7ff ffa6 	bl	90026e60 <sbrk_aligned>
90026f14:	3001      	adds	r0, #1
90026f16:	d03a      	beq.n	90026f8e <_malloc_r+0xea>
90026f18:	6823      	ldr	r3, [r4, #0]
90026f1a:	442b      	add	r3, r5
90026f1c:	6023      	str	r3, [r4, #0]
90026f1e:	f8d8 3000 	ldr.w	r3, [r8]
90026f22:	685a      	ldr	r2, [r3, #4]
90026f24:	bb62      	cbnz	r2, 90026f80 <_malloc_r+0xdc>
90026f26:	f8c8 7000 	str.w	r7, [r8]
90026f2a:	e00f      	b.n	90026f4c <_malloc_r+0xa8>
90026f2c:	6822      	ldr	r2, [r4, #0]
90026f2e:	1b52      	subs	r2, r2, r5
90026f30:	d420      	bmi.n	90026f74 <_malloc_r+0xd0>
90026f32:	2a0b      	cmp	r2, #11
90026f34:	d917      	bls.n	90026f66 <_malloc_r+0xc2>
90026f36:	1961      	adds	r1, r4, r5
90026f38:	42a3      	cmp	r3, r4
90026f3a:	6025      	str	r5, [r4, #0]
90026f3c:	bf18      	it	ne
90026f3e:	6059      	strne	r1, [r3, #4]
90026f40:	6863      	ldr	r3, [r4, #4]
90026f42:	bf08      	it	eq
90026f44:	f8c8 1000 	streq.w	r1, [r8]
90026f48:	5162      	str	r2, [r4, r5]
90026f4a:	604b      	str	r3, [r1, #4]
90026f4c:	4630      	mov	r0, r6
90026f4e:	f000 f82f 	bl	90026fb0 <__malloc_unlock>
90026f52:	f104 000b 	add.w	r0, r4, #11
90026f56:	1d23      	adds	r3, r4, #4
90026f58:	f020 0007 	bic.w	r0, r0, #7
90026f5c:	1ac2      	subs	r2, r0, r3
90026f5e:	bf1c      	itt	ne
90026f60:	1a1b      	subne	r3, r3, r0
90026f62:	50a3      	strne	r3, [r4, r2]
90026f64:	e7af      	b.n	90026ec6 <_malloc_r+0x22>
90026f66:	6862      	ldr	r2, [r4, #4]
90026f68:	42a3      	cmp	r3, r4
90026f6a:	bf0c      	ite	eq
90026f6c:	f8c8 2000 	streq.w	r2, [r8]
90026f70:	605a      	strne	r2, [r3, #4]
90026f72:	e7eb      	b.n	90026f4c <_malloc_r+0xa8>
90026f74:	4623      	mov	r3, r4
90026f76:	6864      	ldr	r4, [r4, #4]
90026f78:	e7ae      	b.n	90026ed8 <_malloc_r+0x34>
90026f7a:	463c      	mov	r4, r7
90026f7c:	687f      	ldr	r7, [r7, #4]
90026f7e:	e7b6      	b.n	90026eee <_malloc_r+0x4a>
90026f80:	461a      	mov	r2, r3
90026f82:	685b      	ldr	r3, [r3, #4]
90026f84:	42a3      	cmp	r3, r4
90026f86:	d1fb      	bne.n	90026f80 <_malloc_r+0xdc>
90026f88:	2300      	movs	r3, #0
90026f8a:	6053      	str	r3, [r2, #4]
90026f8c:	e7de      	b.n	90026f4c <_malloc_r+0xa8>
90026f8e:	230c      	movs	r3, #12
90026f90:	6033      	str	r3, [r6, #0]
90026f92:	4630      	mov	r0, r6
90026f94:	f000 f80c 	bl	90026fb0 <__malloc_unlock>
90026f98:	e794      	b.n	90026ec4 <_malloc_r+0x20>
90026f9a:	6005      	str	r5, [r0, #0]
90026f9c:	e7d6      	b.n	90026f4c <_malloc_r+0xa8>
90026f9e:	bf00      	nop
90026fa0:	240225b4 	.word	0x240225b4

90026fa4 <__malloc_lock>:
90026fa4:	4801      	ldr	r0, [pc, #4]	@ (90026fac <__malloc_lock+0x8>)
90026fa6:	f000 baa2 	b.w	900274ee <__retarget_lock_acquire_recursive>
90026faa:	bf00      	nop
90026fac:	240226f8 	.word	0x240226f8

90026fb0 <__malloc_unlock>:
90026fb0:	4801      	ldr	r0, [pc, #4]	@ (90026fb8 <__malloc_unlock+0x8>)
90026fb2:	f000 ba9d 	b.w	900274f0 <__retarget_lock_release_recursive>
90026fb6:	bf00      	nop
90026fb8:	240226f8 	.word	0x240226f8

90026fbc <__cxa_atexit>:
90026fbc:	b510      	push	{r4, lr}
90026fbe:	4604      	mov	r4, r0
90026fc0:	4804      	ldr	r0, [pc, #16]	@ (90026fd4 <__cxa_atexit+0x18>)
90026fc2:	4613      	mov	r3, r2
90026fc4:	b120      	cbz	r0, 90026fd0 <__cxa_atexit+0x14>
90026fc6:	460a      	mov	r2, r1
90026fc8:	2002      	movs	r0, #2
90026fca:	4621      	mov	r1, r4
90026fcc:	f000 faa0 	bl	90027510 <__register_exitproc>
90026fd0:	bd10      	pop	{r4, pc}
90026fd2:	bf00      	nop
90026fd4:	90027511 	.word	0x90027511

90026fd8 <std>:
90026fd8:	2300      	movs	r3, #0
90026fda:	b510      	push	{r4, lr}
90026fdc:	4604      	mov	r4, r0
90026fde:	e9c0 3300 	strd	r3, r3, [r0]
90026fe2:	e9c0 3304 	strd	r3, r3, [r0, #16]
90026fe6:	6083      	str	r3, [r0, #8]
90026fe8:	8181      	strh	r1, [r0, #12]
90026fea:	6643      	str	r3, [r0, #100]	@ 0x64
90026fec:	81c2      	strh	r2, [r0, #14]
90026fee:	6183      	str	r3, [r0, #24]
90026ff0:	4619      	mov	r1, r3
90026ff2:	2208      	movs	r2, #8
90026ff4:	305c      	adds	r0, #92	@ 0x5c
90026ff6:	f000 f99b 	bl	90027330 <memset>
90026ffa:	4b0d      	ldr	r3, [pc, #52]	@ (90027030 <std+0x58>)
90026ffc:	6263      	str	r3, [r4, #36]	@ 0x24
90026ffe:	4b0d      	ldr	r3, [pc, #52]	@ (90027034 <std+0x5c>)
90027000:	62a3      	str	r3, [r4, #40]	@ 0x28
90027002:	4b0d      	ldr	r3, [pc, #52]	@ (90027038 <std+0x60>)
90027004:	62e3      	str	r3, [r4, #44]	@ 0x2c
90027006:	4b0d      	ldr	r3, [pc, #52]	@ (9002703c <std+0x64>)
90027008:	6323      	str	r3, [r4, #48]	@ 0x30
9002700a:	4b0d      	ldr	r3, [pc, #52]	@ (90027040 <std+0x68>)
9002700c:	6224      	str	r4, [r4, #32]
9002700e:	429c      	cmp	r4, r3
90027010:	d006      	beq.n	90027020 <std+0x48>
90027012:	f103 0268 	add.w	r2, r3, #104	@ 0x68
90027016:	4294      	cmp	r4, r2
90027018:	d002      	beq.n	90027020 <std+0x48>
9002701a:	33d0      	adds	r3, #208	@ 0xd0
9002701c:	429c      	cmp	r4, r3
9002701e:	d105      	bne.n	9002702c <std+0x54>
90027020:	f104 0058 	add.w	r0, r4, #88	@ 0x58
90027024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027028:	f000 ba60 	b.w	900274ec <__retarget_lock_init_recursive>
9002702c:	bd10      	pop	{r4, pc}
9002702e:	bf00      	nop
90027030:	90027181 	.word	0x90027181
90027034:	900271a3 	.word	0x900271a3
90027038:	900271db 	.word	0x900271db
9002703c:	900271ff 	.word	0x900271ff
90027040:	240225b8 	.word	0x240225b8

90027044 <stdio_exit_handler>:
90027044:	4a02      	ldr	r2, [pc, #8]	@ (90027050 <stdio_exit_handler+0xc>)
90027046:	4903      	ldr	r1, [pc, #12]	@ (90027054 <stdio_exit_handler+0x10>)
90027048:	4803      	ldr	r0, [pc, #12]	@ (90027058 <stdio_exit_handler+0x14>)
9002704a:	f000 b87b 	b.w	90027144 <_fwalk_sglue>
9002704e:	bf00      	nop
90027050:	24000108 	.word	0x24000108
90027054:	90027d05 	.word	0x90027d05
90027058:	24000118 	.word	0x24000118

9002705c <cleanup_stdio>:
9002705c:	6841      	ldr	r1, [r0, #4]
9002705e:	4b0c      	ldr	r3, [pc, #48]	@ (90027090 <cleanup_stdio+0x34>)
90027060:	4299      	cmp	r1, r3
90027062:	b510      	push	{r4, lr}
90027064:	4604      	mov	r4, r0
90027066:	d001      	beq.n	9002706c <cleanup_stdio+0x10>
90027068:	f000 fe4c 	bl	90027d04 <_fflush_r>
9002706c:	68a1      	ldr	r1, [r4, #8]
9002706e:	4b09      	ldr	r3, [pc, #36]	@ (90027094 <cleanup_stdio+0x38>)
90027070:	4299      	cmp	r1, r3
90027072:	d002      	beq.n	9002707a <cleanup_stdio+0x1e>
90027074:	4620      	mov	r0, r4
90027076:	f000 fe45 	bl	90027d04 <_fflush_r>
9002707a:	68e1      	ldr	r1, [r4, #12]
9002707c:	4b06      	ldr	r3, [pc, #24]	@ (90027098 <cleanup_stdio+0x3c>)
9002707e:	4299      	cmp	r1, r3
90027080:	d004      	beq.n	9002708c <cleanup_stdio+0x30>
90027082:	4620      	mov	r0, r4
90027084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027088:	f000 be3c 	b.w	90027d04 <_fflush_r>
9002708c:	bd10      	pop	{r4, pc}
9002708e:	bf00      	nop
90027090:	240225b8 	.word	0x240225b8
90027094:	24022620 	.word	0x24022620
90027098:	24022688 	.word	0x24022688

9002709c <global_stdio_init.part.0>:
9002709c:	b510      	push	{r4, lr}
9002709e:	4b0b      	ldr	r3, [pc, #44]	@ (900270cc <global_stdio_init.part.0+0x30>)
900270a0:	4c0b      	ldr	r4, [pc, #44]	@ (900270d0 <global_stdio_init.part.0+0x34>)
900270a2:	4a0c      	ldr	r2, [pc, #48]	@ (900270d4 <global_stdio_init.part.0+0x38>)
900270a4:	601a      	str	r2, [r3, #0]
900270a6:	4620      	mov	r0, r4
900270a8:	2200      	movs	r2, #0
900270aa:	2104      	movs	r1, #4
900270ac:	f7ff ff94 	bl	90026fd8 <std>
900270b0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
900270b4:	2201      	movs	r2, #1
900270b6:	2109      	movs	r1, #9
900270b8:	f7ff ff8e 	bl	90026fd8 <std>
900270bc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
900270c0:	2202      	movs	r2, #2
900270c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900270c6:	2112      	movs	r1, #18
900270c8:	f7ff bf86 	b.w	90026fd8 <std>
900270cc:	240226f0 	.word	0x240226f0
900270d0:	240225b8 	.word	0x240225b8
900270d4:	90027045 	.word	0x90027045

900270d8 <__sfp_lock_acquire>:
900270d8:	4801      	ldr	r0, [pc, #4]	@ (900270e0 <__sfp_lock_acquire+0x8>)
900270da:	f000 ba08 	b.w	900274ee <__retarget_lock_acquire_recursive>
900270de:	bf00      	nop
900270e0:	240226fa 	.word	0x240226fa

900270e4 <__sfp_lock_release>:
900270e4:	4801      	ldr	r0, [pc, #4]	@ (900270ec <__sfp_lock_release+0x8>)
900270e6:	f000 ba03 	b.w	900274f0 <__retarget_lock_release_recursive>
900270ea:	bf00      	nop
900270ec:	240226fa 	.word	0x240226fa

900270f0 <__sinit>:
900270f0:	b510      	push	{r4, lr}
900270f2:	4604      	mov	r4, r0
900270f4:	f7ff fff0 	bl	900270d8 <__sfp_lock_acquire>
900270f8:	6a23      	ldr	r3, [r4, #32]
900270fa:	b11b      	cbz	r3, 90027104 <__sinit+0x14>
900270fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027100:	f7ff bff0 	b.w	900270e4 <__sfp_lock_release>
90027104:	4b04      	ldr	r3, [pc, #16]	@ (90027118 <__sinit+0x28>)
90027106:	6223      	str	r3, [r4, #32]
90027108:	4b04      	ldr	r3, [pc, #16]	@ (9002711c <__sinit+0x2c>)
9002710a:	681b      	ldr	r3, [r3, #0]
9002710c:	2b00      	cmp	r3, #0
9002710e:	d1f5      	bne.n	900270fc <__sinit+0xc>
90027110:	f7ff ffc4 	bl	9002709c <global_stdio_init.part.0>
90027114:	e7f2      	b.n	900270fc <__sinit+0xc>
90027116:	bf00      	nop
90027118:	9002705d 	.word	0x9002705d
9002711c:	240226f0 	.word	0x240226f0

90027120 <fiprintf>:
90027120:	b40e      	push	{r1, r2, r3}
90027122:	b503      	push	{r0, r1, lr}
90027124:	4601      	mov	r1, r0
90027126:	ab03      	add	r3, sp, #12
90027128:	4805      	ldr	r0, [pc, #20]	@ (90027140 <fiprintf+0x20>)
9002712a:	f853 2b04 	ldr.w	r2, [r3], #4
9002712e:	6800      	ldr	r0, [r0, #0]
90027130:	9301      	str	r3, [sp, #4]
90027132:	f000 fabd 	bl	900276b0 <_vfiprintf_r>
90027136:	b002      	add	sp, #8
90027138:	f85d eb04 	ldr.w	lr, [sp], #4
9002713c:	b003      	add	sp, #12
9002713e:	4770      	bx	lr
90027140:	24000114 	.word	0x24000114

90027144 <_fwalk_sglue>:
90027144:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90027148:	4607      	mov	r7, r0
9002714a:	4688      	mov	r8, r1
9002714c:	4614      	mov	r4, r2
9002714e:	2600      	movs	r6, #0
90027150:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90027154:	f1b9 0901 	subs.w	r9, r9, #1
90027158:	d505      	bpl.n	90027166 <_fwalk_sglue+0x22>
9002715a:	6824      	ldr	r4, [r4, #0]
9002715c:	2c00      	cmp	r4, #0
9002715e:	d1f7      	bne.n	90027150 <_fwalk_sglue+0xc>
90027160:	4630      	mov	r0, r6
90027162:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90027166:	89ab      	ldrh	r3, [r5, #12]
90027168:	2b01      	cmp	r3, #1
9002716a:	d907      	bls.n	9002717c <_fwalk_sglue+0x38>
9002716c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90027170:	3301      	adds	r3, #1
90027172:	d003      	beq.n	9002717c <_fwalk_sglue+0x38>
90027174:	4629      	mov	r1, r5
90027176:	4638      	mov	r0, r7
90027178:	47c0      	blx	r8
9002717a:	4306      	orrs	r6, r0
9002717c:	3568      	adds	r5, #104	@ 0x68
9002717e:	e7e9      	b.n	90027154 <_fwalk_sglue+0x10>

90027180 <__sread>:
90027180:	b510      	push	{r4, lr}
90027182:	460c      	mov	r4, r1
90027184:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027188:	f000 f93e 	bl	90027408 <_read_r>
9002718c:	2800      	cmp	r0, #0
9002718e:	bfab      	itete	ge
90027190:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
90027192:	89a3      	ldrhlt	r3, [r4, #12]
90027194:	181b      	addge	r3, r3, r0
90027196:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002719a:	bfac      	ite	ge
9002719c:	6563      	strge	r3, [r4, #84]	@ 0x54
9002719e:	81a3      	strhlt	r3, [r4, #12]
900271a0:	bd10      	pop	{r4, pc}

900271a2 <__swrite>:
900271a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900271a6:	461f      	mov	r7, r3
900271a8:	898b      	ldrh	r3, [r1, #12]
900271aa:	05db      	lsls	r3, r3, #23
900271ac:	4605      	mov	r5, r0
900271ae:	460c      	mov	r4, r1
900271b0:	4616      	mov	r6, r2
900271b2:	d505      	bpl.n	900271c0 <__swrite+0x1e>
900271b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900271b8:	2302      	movs	r3, #2
900271ba:	2200      	movs	r2, #0
900271bc:	f000 f912 	bl	900273e4 <_lseek_r>
900271c0:	89a3      	ldrh	r3, [r4, #12]
900271c2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
900271c6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900271ca:	81a3      	strh	r3, [r4, #12]
900271cc:	4632      	mov	r2, r6
900271ce:	463b      	mov	r3, r7
900271d0:	4628      	mov	r0, r5
900271d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900271d6:	f000 b94d 	b.w	90027474 <_write_r>

900271da <__sseek>:
900271da:	b510      	push	{r4, lr}
900271dc:	460c      	mov	r4, r1
900271de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900271e2:	f000 f8ff 	bl	900273e4 <_lseek_r>
900271e6:	1c43      	adds	r3, r0, #1
900271e8:	89a3      	ldrh	r3, [r4, #12]
900271ea:	bf15      	itete	ne
900271ec:	6560      	strne	r0, [r4, #84]	@ 0x54
900271ee:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
900271f2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
900271f6:	81a3      	strheq	r3, [r4, #12]
900271f8:	bf18      	it	ne
900271fa:	81a3      	strhne	r3, [r4, #12]
900271fc:	bd10      	pop	{r4, pc}

900271fe <__sclose>:
900271fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027202:	f000 b8df 	b.w	900273c4 <_close_r>

90027206 <__swbuf_r>:
90027206:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90027208:	460e      	mov	r6, r1
9002720a:	4614      	mov	r4, r2
9002720c:	4605      	mov	r5, r0
9002720e:	b118      	cbz	r0, 90027218 <__swbuf_r+0x12>
90027210:	6a03      	ldr	r3, [r0, #32]
90027212:	b90b      	cbnz	r3, 90027218 <__swbuf_r+0x12>
90027214:	f7ff ff6c 	bl	900270f0 <__sinit>
90027218:	69a3      	ldr	r3, [r4, #24]
9002721a:	60a3      	str	r3, [r4, #8]
9002721c:	89a3      	ldrh	r3, [r4, #12]
9002721e:	071a      	lsls	r2, r3, #28
90027220:	d501      	bpl.n	90027226 <__swbuf_r+0x20>
90027222:	6923      	ldr	r3, [r4, #16]
90027224:	b943      	cbnz	r3, 90027238 <__swbuf_r+0x32>
90027226:	4621      	mov	r1, r4
90027228:	4628      	mov	r0, r5
9002722a:	f000 f82b 	bl	90027284 <__swsetup_r>
9002722e:	b118      	cbz	r0, 90027238 <__swbuf_r+0x32>
90027230:	f04f 37ff 	mov.w	r7, #4294967295
90027234:	4638      	mov	r0, r7
90027236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90027238:	6823      	ldr	r3, [r4, #0]
9002723a:	6922      	ldr	r2, [r4, #16]
9002723c:	1a98      	subs	r0, r3, r2
9002723e:	6963      	ldr	r3, [r4, #20]
90027240:	b2f6      	uxtb	r6, r6
90027242:	4283      	cmp	r3, r0
90027244:	4637      	mov	r7, r6
90027246:	dc05      	bgt.n	90027254 <__swbuf_r+0x4e>
90027248:	4621      	mov	r1, r4
9002724a:	4628      	mov	r0, r5
9002724c:	f000 fd5a 	bl	90027d04 <_fflush_r>
90027250:	2800      	cmp	r0, #0
90027252:	d1ed      	bne.n	90027230 <__swbuf_r+0x2a>
90027254:	68a3      	ldr	r3, [r4, #8]
90027256:	3b01      	subs	r3, #1
90027258:	60a3      	str	r3, [r4, #8]
9002725a:	6823      	ldr	r3, [r4, #0]
9002725c:	1c5a      	adds	r2, r3, #1
9002725e:	6022      	str	r2, [r4, #0]
90027260:	701e      	strb	r6, [r3, #0]
90027262:	6962      	ldr	r2, [r4, #20]
90027264:	1c43      	adds	r3, r0, #1
90027266:	429a      	cmp	r2, r3
90027268:	d004      	beq.n	90027274 <__swbuf_r+0x6e>
9002726a:	89a3      	ldrh	r3, [r4, #12]
9002726c:	07db      	lsls	r3, r3, #31
9002726e:	d5e1      	bpl.n	90027234 <__swbuf_r+0x2e>
90027270:	2e0a      	cmp	r6, #10
90027272:	d1df      	bne.n	90027234 <__swbuf_r+0x2e>
90027274:	4621      	mov	r1, r4
90027276:	4628      	mov	r0, r5
90027278:	f000 fd44 	bl	90027d04 <_fflush_r>
9002727c:	2800      	cmp	r0, #0
9002727e:	d0d9      	beq.n	90027234 <__swbuf_r+0x2e>
90027280:	e7d6      	b.n	90027230 <__swbuf_r+0x2a>
	...

90027284 <__swsetup_r>:
90027284:	b538      	push	{r3, r4, r5, lr}
90027286:	4b29      	ldr	r3, [pc, #164]	@ (9002732c <__swsetup_r+0xa8>)
90027288:	4605      	mov	r5, r0
9002728a:	6818      	ldr	r0, [r3, #0]
9002728c:	460c      	mov	r4, r1
9002728e:	b118      	cbz	r0, 90027298 <__swsetup_r+0x14>
90027290:	6a03      	ldr	r3, [r0, #32]
90027292:	b90b      	cbnz	r3, 90027298 <__swsetup_r+0x14>
90027294:	f7ff ff2c 	bl	900270f0 <__sinit>
90027298:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002729c:	0719      	lsls	r1, r3, #28
9002729e:	d422      	bmi.n	900272e6 <__swsetup_r+0x62>
900272a0:	06da      	lsls	r2, r3, #27
900272a2:	d407      	bmi.n	900272b4 <__swsetup_r+0x30>
900272a4:	2209      	movs	r2, #9
900272a6:	602a      	str	r2, [r5, #0]
900272a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
900272ac:	81a3      	strh	r3, [r4, #12]
900272ae:	f04f 30ff 	mov.w	r0, #4294967295
900272b2:	e033      	b.n	9002731c <__swsetup_r+0x98>
900272b4:	0758      	lsls	r0, r3, #29
900272b6:	d512      	bpl.n	900272de <__swsetup_r+0x5a>
900272b8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900272ba:	b141      	cbz	r1, 900272ce <__swsetup_r+0x4a>
900272bc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
900272c0:	4299      	cmp	r1, r3
900272c2:	d002      	beq.n	900272ca <__swsetup_r+0x46>
900272c4:	4628      	mov	r0, r5
900272c6:	f000 f97f 	bl	900275c8 <_free_r>
900272ca:	2300      	movs	r3, #0
900272cc:	6363      	str	r3, [r4, #52]	@ 0x34
900272ce:	89a3      	ldrh	r3, [r4, #12]
900272d0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
900272d4:	81a3      	strh	r3, [r4, #12]
900272d6:	2300      	movs	r3, #0
900272d8:	6063      	str	r3, [r4, #4]
900272da:	6923      	ldr	r3, [r4, #16]
900272dc:	6023      	str	r3, [r4, #0]
900272de:	89a3      	ldrh	r3, [r4, #12]
900272e0:	f043 0308 	orr.w	r3, r3, #8
900272e4:	81a3      	strh	r3, [r4, #12]
900272e6:	6923      	ldr	r3, [r4, #16]
900272e8:	b94b      	cbnz	r3, 900272fe <__swsetup_r+0x7a>
900272ea:	89a3      	ldrh	r3, [r4, #12]
900272ec:	f403 7320 	and.w	r3, r3, #640	@ 0x280
900272f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900272f4:	d003      	beq.n	900272fe <__swsetup_r+0x7a>
900272f6:	4621      	mov	r1, r4
900272f8:	4628      	mov	r0, r5
900272fa:	f000 fd51 	bl	90027da0 <__smakebuf_r>
900272fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027302:	f013 0201 	ands.w	r2, r3, #1
90027306:	d00a      	beq.n	9002731e <__swsetup_r+0x9a>
90027308:	2200      	movs	r2, #0
9002730a:	60a2      	str	r2, [r4, #8]
9002730c:	6962      	ldr	r2, [r4, #20]
9002730e:	4252      	negs	r2, r2
90027310:	61a2      	str	r2, [r4, #24]
90027312:	6922      	ldr	r2, [r4, #16]
90027314:	b942      	cbnz	r2, 90027328 <__swsetup_r+0xa4>
90027316:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002731a:	d1c5      	bne.n	900272a8 <__swsetup_r+0x24>
9002731c:	bd38      	pop	{r3, r4, r5, pc}
9002731e:	0799      	lsls	r1, r3, #30
90027320:	bf58      	it	pl
90027322:	6962      	ldrpl	r2, [r4, #20]
90027324:	60a2      	str	r2, [r4, #8]
90027326:	e7f4      	b.n	90027312 <__swsetup_r+0x8e>
90027328:	2000      	movs	r0, #0
9002732a:	e7f7      	b.n	9002731c <__swsetup_r+0x98>
9002732c:	24000114 	.word	0x24000114

90027330 <memset>:
90027330:	4402      	add	r2, r0
90027332:	4603      	mov	r3, r0
90027334:	4293      	cmp	r3, r2
90027336:	d100      	bne.n	9002733a <memset+0xa>
90027338:	4770      	bx	lr
9002733a:	f803 1b01 	strb.w	r1, [r3], #1
9002733e:	e7f9      	b.n	90027334 <memset+0x4>

90027340 <strncmp>:
90027340:	b510      	push	{r4, lr}
90027342:	b16a      	cbz	r2, 90027360 <strncmp+0x20>
90027344:	3901      	subs	r1, #1
90027346:	1884      	adds	r4, r0, r2
90027348:	f810 2b01 	ldrb.w	r2, [r0], #1
9002734c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90027350:	429a      	cmp	r2, r3
90027352:	d103      	bne.n	9002735c <strncmp+0x1c>
90027354:	42a0      	cmp	r0, r4
90027356:	d001      	beq.n	9002735c <strncmp+0x1c>
90027358:	2a00      	cmp	r2, #0
9002735a:	d1f5      	bne.n	90027348 <strncmp+0x8>
9002735c:	1ad0      	subs	r0, r2, r3
9002735e:	bd10      	pop	{r4, pc}
90027360:	4610      	mov	r0, r2
90027362:	e7fc      	b.n	9002735e <strncmp+0x1e>

90027364 <_raise_r>:
90027364:	291f      	cmp	r1, #31
90027366:	b538      	push	{r3, r4, r5, lr}
90027368:	4605      	mov	r5, r0
9002736a:	460c      	mov	r4, r1
9002736c:	d904      	bls.n	90027378 <_raise_r+0x14>
9002736e:	2316      	movs	r3, #22
90027370:	6003      	str	r3, [r0, #0]
90027372:	f04f 30ff 	mov.w	r0, #4294967295
90027376:	bd38      	pop	{r3, r4, r5, pc}
90027378:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002737a:	b112      	cbz	r2, 90027382 <_raise_r+0x1e>
9002737c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90027380:	b94b      	cbnz	r3, 90027396 <_raise_r+0x32>
90027382:	4628      	mov	r0, r5
90027384:	f000 f864 	bl	90027450 <_getpid_r>
90027388:	4622      	mov	r2, r4
9002738a:	4601      	mov	r1, r0
9002738c:	4628      	mov	r0, r5
9002738e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90027392:	f000 b84b 	b.w	9002742c <_kill_r>
90027396:	2b01      	cmp	r3, #1
90027398:	d00a      	beq.n	900273b0 <_raise_r+0x4c>
9002739a:	1c59      	adds	r1, r3, #1
9002739c:	d103      	bne.n	900273a6 <_raise_r+0x42>
9002739e:	2316      	movs	r3, #22
900273a0:	6003      	str	r3, [r0, #0]
900273a2:	2001      	movs	r0, #1
900273a4:	e7e7      	b.n	90027376 <_raise_r+0x12>
900273a6:	2100      	movs	r1, #0
900273a8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
900273ac:	4620      	mov	r0, r4
900273ae:	4798      	blx	r3
900273b0:	2000      	movs	r0, #0
900273b2:	e7e0      	b.n	90027376 <_raise_r+0x12>

900273b4 <raise>:
900273b4:	4b02      	ldr	r3, [pc, #8]	@ (900273c0 <raise+0xc>)
900273b6:	4601      	mov	r1, r0
900273b8:	6818      	ldr	r0, [r3, #0]
900273ba:	f7ff bfd3 	b.w	90027364 <_raise_r>
900273be:	bf00      	nop
900273c0:	24000114 	.word	0x24000114

900273c4 <_close_r>:
900273c4:	b538      	push	{r3, r4, r5, lr}
900273c6:	4d06      	ldr	r5, [pc, #24]	@ (900273e0 <_close_r+0x1c>)
900273c8:	2300      	movs	r3, #0
900273ca:	4604      	mov	r4, r0
900273cc:	4608      	mov	r0, r1
900273ce:	602b      	str	r3, [r5, #0]
900273d0:	f7dc fee8 	bl	900041a4 <_close>
900273d4:	1c43      	adds	r3, r0, #1
900273d6:	d102      	bne.n	900273de <_close_r+0x1a>
900273d8:	682b      	ldr	r3, [r5, #0]
900273da:	b103      	cbz	r3, 900273de <_close_r+0x1a>
900273dc:	6023      	str	r3, [r4, #0]
900273de:	bd38      	pop	{r3, r4, r5, pc}
900273e0:	240226f4 	.word	0x240226f4

900273e4 <_lseek_r>:
900273e4:	b538      	push	{r3, r4, r5, lr}
900273e6:	4d07      	ldr	r5, [pc, #28]	@ (90027404 <_lseek_r+0x20>)
900273e8:	4604      	mov	r4, r0
900273ea:	4608      	mov	r0, r1
900273ec:	4611      	mov	r1, r2
900273ee:	2200      	movs	r2, #0
900273f0:	602a      	str	r2, [r5, #0]
900273f2:	461a      	mov	r2, r3
900273f4:	f7dc fee2 	bl	900041bc <_lseek>
900273f8:	1c43      	adds	r3, r0, #1
900273fa:	d102      	bne.n	90027402 <_lseek_r+0x1e>
900273fc:	682b      	ldr	r3, [r5, #0]
900273fe:	b103      	cbz	r3, 90027402 <_lseek_r+0x1e>
90027400:	6023      	str	r3, [r4, #0]
90027402:	bd38      	pop	{r3, r4, r5, pc}
90027404:	240226f4 	.word	0x240226f4

90027408 <_read_r>:
90027408:	b538      	push	{r3, r4, r5, lr}
9002740a:	4d07      	ldr	r5, [pc, #28]	@ (90027428 <_read_r+0x20>)
9002740c:	4604      	mov	r4, r0
9002740e:	4608      	mov	r0, r1
90027410:	4611      	mov	r1, r2
90027412:	2200      	movs	r2, #0
90027414:	602a      	str	r2, [r5, #0]
90027416:	461a      	mov	r2, r3
90027418:	f7dc fea8 	bl	9000416c <_read>
9002741c:	1c43      	adds	r3, r0, #1
9002741e:	d102      	bne.n	90027426 <_read_r+0x1e>
90027420:	682b      	ldr	r3, [r5, #0]
90027422:	b103      	cbz	r3, 90027426 <_read_r+0x1e>
90027424:	6023      	str	r3, [r4, #0]
90027426:	bd38      	pop	{r3, r4, r5, pc}
90027428:	240226f4 	.word	0x240226f4

9002742c <_kill_r>:
9002742c:	b538      	push	{r3, r4, r5, lr}
9002742e:	4d07      	ldr	r5, [pc, #28]	@ (9002744c <_kill_r+0x20>)
90027430:	2300      	movs	r3, #0
90027432:	4604      	mov	r4, r0
90027434:	4608      	mov	r0, r1
90027436:	4611      	mov	r1, r2
90027438:	602b      	str	r3, [r5, #0]
9002743a:	f7dc fe87 	bl	9000414c <_kill>
9002743e:	1c43      	adds	r3, r0, #1
90027440:	d102      	bne.n	90027448 <_kill_r+0x1c>
90027442:	682b      	ldr	r3, [r5, #0]
90027444:	b103      	cbz	r3, 90027448 <_kill_r+0x1c>
90027446:	6023      	str	r3, [r4, #0]
90027448:	bd38      	pop	{r3, r4, r5, pc}
9002744a:	bf00      	nop
9002744c:	240226f4 	.word	0x240226f4

90027450 <_getpid_r>:
90027450:	f7dc be7a 	b.w	90004148 <_getpid>

90027454 <_sbrk_r>:
90027454:	b538      	push	{r3, r4, r5, lr}
90027456:	4d06      	ldr	r5, [pc, #24]	@ (90027470 <_sbrk_r+0x1c>)
90027458:	2300      	movs	r3, #0
9002745a:	4604      	mov	r4, r0
9002745c:	4608      	mov	r0, r1
9002745e:	602b      	str	r3, [r5, #0]
90027460:	f7dc feae 	bl	900041c0 <_sbrk>
90027464:	1c43      	adds	r3, r0, #1
90027466:	d102      	bne.n	9002746e <_sbrk_r+0x1a>
90027468:	682b      	ldr	r3, [r5, #0]
9002746a:	b103      	cbz	r3, 9002746e <_sbrk_r+0x1a>
9002746c:	6023      	str	r3, [r4, #0]
9002746e:	bd38      	pop	{r3, r4, r5, pc}
90027470:	240226f4 	.word	0x240226f4

90027474 <_write_r>:
90027474:	b538      	push	{r3, r4, r5, lr}
90027476:	4d07      	ldr	r5, [pc, #28]	@ (90027494 <_write_r+0x20>)
90027478:	4604      	mov	r4, r0
9002747a:	4608      	mov	r0, r1
9002747c:	4611      	mov	r1, r2
9002747e:	2200      	movs	r2, #0
90027480:	602a      	str	r2, [r5, #0]
90027482:	461a      	mov	r2, r3
90027484:	f7dc fe80 	bl	90004188 <_write>
90027488:	1c43      	adds	r3, r0, #1
9002748a:	d102      	bne.n	90027492 <_write_r+0x1e>
9002748c:	682b      	ldr	r3, [r5, #0]
9002748e:	b103      	cbz	r3, 90027492 <_write_r+0x1e>
90027490:	6023      	str	r3, [r4, #0]
90027492:	bd38      	pop	{r3, r4, r5, pc}
90027494:	240226f4 	.word	0x240226f4

90027498 <__errno>:
90027498:	4b01      	ldr	r3, [pc, #4]	@ (900274a0 <__errno+0x8>)
9002749a:	6818      	ldr	r0, [r3, #0]
9002749c:	4770      	bx	lr
9002749e:	bf00      	nop
900274a0:	24000114 	.word	0x24000114

900274a4 <__libc_init_array>:
900274a4:	b570      	push	{r4, r5, r6, lr}
900274a6:	4d0d      	ldr	r5, [pc, #52]	@ (900274dc <__libc_init_array+0x38>)
900274a8:	4c0d      	ldr	r4, [pc, #52]	@ (900274e0 <__libc_init_array+0x3c>)
900274aa:	1b64      	subs	r4, r4, r5
900274ac:	10a4      	asrs	r4, r4, #2
900274ae:	2600      	movs	r6, #0
900274b0:	42a6      	cmp	r6, r4
900274b2:	d109      	bne.n	900274c8 <__libc_init_array+0x24>
900274b4:	4d0b      	ldr	r5, [pc, #44]	@ (900274e4 <__libc_init_array+0x40>)
900274b6:	4c0c      	ldr	r4, [pc, #48]	@ (900274e8 <__libc_init_array+0x44>)
900274b8:	f000 fcd0 	bl	90027e5c <_init>
900274bc:	1b64      	subs	r4, r4, r5
900274be:	10a4      	asrs	r4, r4, #2
900274c0:	2600      	movs	r6, #0
900274c2:	42a6      	cmp	r6, r4
900274c4:	d105      	bne.n	900274d2 <__libc_init_array+0x2e>
900274c6:	bd70      	pop	{r4, r5, r6, pc}
900274c8:	f855 3b04 	ldr.w	r3, [r5], #4
900274cc:	4798      	blx	r3
900274ce:	3601      	adds	r6, #1
900274d0:	e7ee      	b.n	900274b0 <__libc_init_array+0xc>
900274d2:	f855 3b04 	ldr.w	r3, [r5], #4
900274d6:	4798      	blx	r3
900274d8:	3601      	adds	r6, #1
900274da:	e7f2      	b.n	900274c2 <__libc_init_array+0x1e>
900274dc:	9002ae54 	.word	0x9002ae54
900274e0:	9002ae54 	.word	0x9002ae54
900274e4:	9002ae54 	.word	0x9002ae54
900274e8:	9002ae6c 	.word	0x9002ae6c

900274ec <__retarget_lock_init_recursive>:
900274ec:	4770      	bx	lr

900274ee <__retarget_lock_acquire_recursive>:
900274ee:	4770      	bx	lr

900274f0 <__retarget_lock_release_recursive>:
900274f0:	4770      	bx	lr

900274f2 <memcpy>:
900274f2:	440a      	add	r2, r1
900274f4:	4291      	cmp	r1, r2
900274f6:	f100 33ff 	add.w	r3, r0, #4294967295
900274fa:	d100      	bne.n	900274fe <memcpy+0xc>
900274fc:	4770      	bx	lr
900274fe:	b510      	push	{r4, lr}
90027500:	f811 4b01 	ldrb.w	r4, [r1], #1
90027504:	f803 4f01 	strb.w	r4, [r3, #1]!
90027508:	4291      	cmp	r1, r2
9002750a:	d1f9      	bne.n	90027500 <memcpy+0xe>
9002750c:	bd10      	pop	{r4, pc}
	...

90027510 <__register_exitproc>:
90027510:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90027514:	4d27      	ldr	r5, [pc, #156]	@ (900275b4 <__register_exitproc+0xa4>)
90027516:	4607      	mov	r7, r0
90027518:	6828      	ldr	r0, [r5, #0]
9002751a:	4691      	mov	r9, r2
9002751c:	460e      	mov	r6, r1
9002751e:	4698      	mov	r8, r3
90027520:	f7ff ffe5 	bl	900274ee <__retarget_lock_acquire_recursive>
90027524:	4a24      	ldr	r2, [pc, #144]	@ (900275b8 <__register_exitproc+0xa8>)
90027526:	6814      	ldr	r4, [r2, #0]
90027528:	b93c      	cbnz	r4, 9002753a <__register_exitproc+0x2a>
9002752a:	4b24      	ldr	r3, [pc, #144]	@ (900275bc <__register_exitproc+0xac>)
9002752c:	6013      	str	r3, [r2, #0]
9002752e:	4a24      	ldr	r2, [pc, #144]	@ (900275c0 <__register_exitproc+0xb0>)
90027530:	b112      	cbz	r2, 90027538 <__register_exitproc+0x28>
90027532:	6812      	ldr	r2, [r2, #0]
90027534:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
90027538:	4c20      	ldr	r4, [pc, #128]	@ (900275bc <__register_exitproc+0xac>)
9002753a:	6863      	ldr	r3, [r4, #4]
9002753c:	2b1f      	cmp	r3, #31
9002753e:	dd06      	ble.n	9002754e <__register_exitproc+0x3e>
90027540:	6828      	ldr	r0, [r5, #0]
90027542:	f7ff ffd5 	bl	900274f0 <__retarget_lock_release_recursive>
90027546:	f04f 30ff 	mov.w	r0, #4294967295
9002754a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002754e:	b32f      	cbz	r7, 9002759c <__register_exitproc+0x8c>
90027550:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
90027554:	b968      	cbnz	r0, 90027572 <__register_exitproc+0x62>
90027556:	4b1b      	ldr	r3, [pc, #108]	@ (900275c4 <__register_exitproc+0xb4>)
90027558:	2b00      	cmp	r3, #0
9002755a:	d0f1      	beq.n	90027540 <__register_exitproc+0x30>
9002755c:	f44f 7084 	mov.w	r0, #264	@ 0x108
90027560:	f7ff fc6e 	bl	90026e40 <malloc>
90027564:	2800      	cmp	r0, #0
90027566:	d0eb      	beq.n	90027540 <__register_exitproc+0x30>
90027568:	2300      	movs	r3, #0
9002756a:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002756e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
90027572:	6863      	ldr	r3, [r4, #4]
90027574:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90027578:	2201      	movs	r2, #1
9002757a:	409a      	lsls	r2, r3
9002757c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90027580:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
90027584:	4313      	orrs	r3, r2
90027586:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002758a:	2f02      	cmp	r7, #2
9002758c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
90027590:	bf02      	ittt	eq
90027592:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
90027596:	4313      	orreq	r3, r2
90027598:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002759c:	6863      	ldr	r3, [r4, #4]
9002759e:	6828      	ldr	r0, [r5, #0]
900275a0:	1c5a      	adds	r2, r3, #1
900275a2:	3302      	adds	r3, #2
900275a4:	6062      	str	r2, [r4, #4]
900275a6:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
900275aa:	f7ff ffa1 	bl	900274f0 <__retarget_lock_release_recursive>
900275ae:	2000      	movs	r0, #0
900275b0:	e7cb      	b.n	9002754a <__register_exitproc+0x3a>
900275b2:	bf00      	nop
900275b4:	24000164 	.word	0x24000164
900275b8:	24022788 	.word	0x24022788
900275bc:	240226fc 	.word	0x240226fc
900275c0:	9002adf4 	.word	0x9002adf4
900275c4:	90026e41 	.word	0x90026e41

900275c8 <_free_r>:
900275c8:	b538      	push	{r3, r4, r5, lr}
900275ca:	4605      	mov	r5, r0
900275cc:	2900      	cmp	r1, #0
900275ce:	d041      	beq.n	90027654 <_free_r+0x8c>
900275d0:	f851 3c04 	ldr.w	r3, [r1, #-4]
900275d4:	1f0c      	subs	r4, r1, #4
900275d6:	2b00      	cmp	r3, #0
900275d8:	bfb8      	it	lt
900275da:	18e4      	addlt	r4, r4, r3
900275dc:	f7ff fce2 	bl	90026fa4 <__malloc_lock>
900275e0:	4a1d      	ldr	r2, [pc, #116]	@ (90027658 <_free_r+0x90>)
900275e2:	6813      	ldr	r3, [r2, #0]
900275e4:	b933      	cbnz	r3, 900275f4 <_free_r+0x2c>
900275e6:	6063      	str	r3, [r4, #4]
900275e8:	6014      	str	r4, [r2, #0]
900275ea:	4628      	mov	r0, r5
900275ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900275f0:	f7ff bcde 	b.w	90026fb0 <__malloc_unlock>
900275f4:	42a3      	cmp	r3, r4
900275f6:	d908      	bls.n	9002760a <_free_r+0x42>
900275f8:	6820      	ldr	r0, [r4, #0]
900275fa:	1821      	adds	r1, r4, r0
900275fc:	428b      	cmp	r3, r1
900275fe:	bf01      	itttt	eq
90027600:	6819      	ldreq	r1, [r3, #0]
90027602:	685b      	ldreq	r3, [r3, #4]
90027604:	1809      	addeq	r1, r1, r0
90027606:	6021      	streq	r1, [r4, #0]
90027608:	e7ed      	b.n	900275e6 <_free_r+0x1e>
9002760a:	461a      	mov	r2, r3
9002760c:	685b      	ldr	r3, [r3, #4]
9002760e:	b10b      	cbz	r3, 90027614 <_free_r+0x4c>
90027610:	42a3      	cmp	r3, r4
90027612:	d9fa      	bls.n	9002760a <_free_r+0x42>
90027614:	6811      	ldr	r1, [r2, #0]
90027616:	1850      	adds	r0, r2, r1
90027618:	42a0      	cmp	r0, r4
9002761a:	d10b      	bne.n	90027634 <_free_r+0x6c>
9002761c:	6820      	ldr	r0, [r4, #0]
9002761e:	4401      	add	r1, r0
90027620:	1850      	adds	r0, r2, r1
90027622:	4283      	cmp	r3, r0
90027624:	6011      	str	r1, [r2, #0]
90027626:	d1e0      	bne.n	900275ea <_free_r+0x22>
90027628:	6818      	ldr	r0, [r3, #0]
9002762a:	685b      	ldr	r3, [r3, #4]
9002762c:	6053      	str	r3, [r2, #4]
9002762e:	4408      	add	r0, r1
90027630:	6010      	str	r0, [r2, #0]
90027632:	e7da      	b.n	900275ea <_free_r+0x22>
90027634:	d902      	bls.n	9002763c <_free_r+0x74>
90027636:	230c      	movs	r3, #12
90027638:	602b      	str	r3, [r5, #0]
9002763a:	e7d6      	b.n	900275ea <_free_r+0x22>
9002763c:	6820      	ldr	r0, [r4, #0]
9002763e:	1821      	adds	r1, r4, r0
90027640:	428b      	cmp	r3, r1
90027642:	bf04      	itt	eq
90027644:	6819      	ldreq	r1, [r3, #0]
90027646:	685b      	ldreq	r3, [r3, #4]
90027648:	6063      	str	r3, [r4, #4]
9002764a:	bf04      	itt	eq
9002764c:	1809      	addeq	r1, r1, r0
9002764e:	6021      	streq	r1, [r4, #0]
90027650:	6054      	str	r4, [r2, #4]
90027652:	e7ca      	b.n	900275ea <_free_r+0x22>
90027654:	bd38      	pop	{r3, r4, r5, pc}
90027656:	bf00      	nop
90027658:	240225b4 	.word	0x240225b4

9002765c <__sfputc_r>:
9002765c:	6893      	ldr	r3, [r2, #8]
9002765e:	3b01      	subs	r3, #1
90027660:	2b00      	cmp	r3, #0
90027662:	b410      	push	{r4}
90027664:	6093      	str	r3, [r2, #8]
90027666:	da08      	bge.n	9002767a <__sfputc_r+0x1e>
90027668:	6994      	ldr	r4, [r2, #24]
9002766a:	42a3      	cmp	r3, r4
9002766c:	db01      	blt.n	90027672 <__sfputc_r+0x16>
9002766e:	290a      	cmp	r1, #10
90027670:	d103      	bne.n	9002767a <__sfputc_r+0x1e>
90027672:	f85d 4b04 	ldr.w	r4, [sp], #4
90027676:	f7ff bdc6 	b.w	90027206 <__swbuf_r>
9002767a:	6813      	ldr	r3, [r2, #0]
9002767c:	1c58      	adds	r0, r3, #1
9002767e:	6010      	str	r0, [r2, #0]
90027680:	7019      	strb	r1, [r3, #0]
90027682:	4608      	mov	r0, r1
90027684:	f85d 4b04 	ldr.w	r4, [sp], #4
90027688:	4770      	bx	lr

9002768a <__sfputs_r>:
9002768a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002768c:	4606      	mov	r6, r0
9002768e:	460f      	mov	r7, r1
90027690:	4614      	mov	r4, r2
90027692:	18d5      	adds	r5, r2, r3
90027694:	42ac      	cmp	r4, r5
90027696:	d101      	bne.n	9002769c <__sfputs_r+0x12>
90027698:	2000      	movs	r0, #0
9002769a:	e007      	b.n	900276ac <__sfputs_r+0x22>
9002769c:	f814 1b01 	ldrb.w	r1, [r4], #1
900276a0:	463a      	mov	r2, r7
900276a2:	4630      	mov	r0, r6
900276a4:	f7ff ffda 	bl	9002765c <__sfputc_r>
900276a8:	1c43      	adds	r3, r0, #1
900276aa:	d1f3      	bne.n	90027694 <__sfputs_r+0xa>
900276ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

900276b0 <_vfiprintf_r>:
900276b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900276b4:	460d      	mov	r5, r1
900276b6:	b09d      	sub	sp, #116	@ 0x74
900276b8:	4614      	mov	r4, r2
900276ba:	4698      	mov	r8, r3
900276bc:	4606      	mov	r6, r0
900276be:	b118      	cbz	r0, 900276c8 <_vfiprintf_r+0x18>
900276c0:	6a03      	ldr	r3, [r0, #32]
900276c2:	b90b      	cbnz	r3, 900276c8 <_vfiprintf_r+0x18>
900276c4:	f7ff fd14 	bl	900270f0 <__sinit>
900276c8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
900276ca:	07d9      	lsls	r1, r3, #31
900276cc:	d405      	bmi.n	900276da <_vfiprintf_r+0x2a>
900276ce:	89ab      	ldrh	r3, [r5, #12]
900276d0:	059a      	lsls	r2, r3, #22
900276d2:	d402      	bmi.n	900276da <_vfiprintf_r+0x2a>
900276d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
900276d6:	f7ff ff0a 	bl	900274ee <__retarget_lock_acquire_recursive>
900276da:	89ab      	ldrh	r3, [r5, #12]
900276dc:	071b      	lsls	r3, r3, #28
900276de:	d501      	bpl.n	900276e4 <_vfiprintf_r+0x34>
900276e0:	692b      	ldr	r3, [r5, #16]
900276e2:	b99b      	cbnz	r3, 9002770c <_vfiprintf_r+0x5c>
900276e4:	4629      	mov	r1, r5
900276e6:	4630      	mov	r0, r6
900276e8:	f7ff fdcc 	bl	90027284 <__swsetup_r>
900276ec:	b170      	cbz	r0, 9002770c <_vfiprintf_r+0x5c>
900276ee:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
900276f0:	07dc      	lsls	r4, r3, #31
900276f2:	d504      	bpl.n	900276fe <_vfiprintf_r+0x4e>
900276f4:	f04f 30ff 	mov.w	r0, #4294967295
900276f8:	b01d      	add	sp, #116	@ 0x74
900276fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900276fe:	89ab      	ldrh	r3, [r5, #12]
90027700:	0598      	lsls	r0, r3, #22
90027702:	d4f7      	bmi.n	900276f4 <_vfiprintf_r+0x44>
90027704:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90027706:	f7ff fef3 	bl	900274f0 <__retarget_lock_release_recursive>
9002770a:	e7f3      	b.n	900276f4 <_vfiprintf_r+0x44>
9002770c:	2300      	movs	r3, #0
9002770e:	9309      	str	r3, [sp, #36]	@ 0x24
90027710:	2320      	movs	r3, #32
90027712:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90027716:	f8cd 800c 	str.w	r8, [sp, #12]
9002771a:	2330      	movs	r3, #48	@ 0x30
9002771c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 900278cc <_vfiprintf_r+0x21c>
90027720:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
90027724:	f04f 0901 	mov.w	r9, #1
90027728:	4623      	mov	r3, r4
9002772a:	469a      	mov	sl, r3
9002772c:	f813 2b01 	ldrb.w	r2, [r3], #1
90027730:	b10a      	cbz	r2, 90027736 <_vfiprintf_r+0x86>
90027732:	2a25      	cmp	r2, #37	@ 0x25
90027734:	d1f9      	bne.n	9002772a <_vfiprintf_r+0x7a>
90027736:	ebba 0b04 	subs.w	fp, sl, r4
9002773a:	d00b      	beq.n	90027754 <_vfiprintf_r+0xa4>
9002773c:	465b      	mov	r3, fp
9002773e:	4622      	mov	r2, r4
90027740:	4629      	mov	r1, r5
90027742:	4630      	mov	r0, r6
90027744:	f7ff ffa1 	bl	9002768a <__sfputs_r>
90027748:	3001      	adds	r0, #1
9002774a:	f000 80a7 	beq.w	9002789c <_vfiprintf_r+0x1ec>
9002774e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90027750:	445a      	add	r2, fp
90027752:	9209      	str	r2, [sp, #36]	@ 0x24
90027754:	f89a 3000 	ldrb.w	r3, [sl]
90027758:	2b00      	cmp	r3, #0
9002775a:	f000 809f 	beq.w	9002789c <_vfiprintf_r+0x1ec>
9002775e:	2300      	movs	r3, #0
90027760:	f04f 32ff 	mov.w	r2, #4294967295
90027764:	e9cd 2305 	strd	r2, r3, [sp, #20]
90027768:	f10a 0a01 	add.w	sl, sl, #1
9002776c:	9304      	str	r3, [sp, #16]
9002776e:	9307      	str	r3, [sp, #28]
90027770:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
90027774:	931a      	str	r3, [sp, #104]	@ 0x68
90027776:	4654      	mov	r4, sl
90027778:	2205      	movs	r2, #5
9002777a:	f814 1b01 	ldrb.w	r1, [r4], #1
9002777e:	4853      	ldr	r0, [pc, #332]	@ (900278cc <_vfiprintf_r+0x21c>)
90027780:	f7d8 fdae 	bl	900002e0 <memchr>
90027784:	9a04      	ldr	r2, [sp, #16]
90027786:	b9d8      	cbnz	r0, 900277c0 <_vfiprintf_r+0x110>
90027788:	06d1      	lsls	r1, r2, #27
9002778a:	bf44      	itt	mi
9002778c:	2320      	movmi	r3, #32
9002778e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90027792:	0713      	lsls	r3, r2, #28
90027794:	bf44      	itt	mi
90027796:	232b      	movmi	r3, #43	@ 0x2b
90027798:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002779c:	f89a 3000 	ldrb.w	r3, [sl]
900277a0:	2b2a      	cmp	r3, #42	@ 0x2a
900277a2:	d015      	beq.n	900277d0 <_vfiprintf_r+0x120>
900277a4:	9a07      	ldr	r2, [sp, #28]
900277a6:	4654      	mov	r4, sl
900277a8:	2000      	movs	r0, #0
900277aa:	f04f 0c0a 	mov.w	ip, #10
900277ae:	4621      	mov	r1, r4
900277b0:	f811 3b01 	ldrb.w	r3, [r1], #1
900277b4:	3b30      	subs	r3, #48	@ 0x30
900277b6:	2b09      	cmp	r3, #9
900277b8:	d94b      	bls.n	90027852 <_vfiprintf_r+0x1a2>
900277ba:	b1b0      	cbz	r0, 900277ea <_vfiprintf_r+0x13a>
900277bc:	9207      	str	r2, [sp, #28]
900277be:	e014      	b.n	900277ea <_vfiprintf_r+0x13a>
900277c0:	eba0 0308 	sub.w	r3, r0, r8
900277c4:	fa09 f303 	lsl.w	r3, r9, r3
900277c8:	4313      	orrs	r3, r2
900277ca:	9304      	str	r3, [sp, #16]
900277cc:	46a2      	mov	sl, r4
900277ce:	e7d2      	b.n	90027776 <_vfiprintf_r+0xc6>
900277d0:	9b03      	ldr	r3, [sp, #12]
900277d2:	1d19      	adds	r1, r3, #4
900277d4:	681b      	ldr	r3, [r3, #0]
900277d6:	9103      	str	r1, [sp, #12]
900277d8:	2b00      	cmp	r3, #0
900277da:	bfbb      	ittet	lt
900277dc:	425b      	neglt	r3, r3
900277de:	f042 0202 	orrlt.w	r2, r2, #2
900277e2:	9307      	strge	r3, [sp, #28]
900277e4:	9307      	strlt	r3, [sp, #28]
900277e6:	bfb8      	it	lt
900277e8:	9204      	strlt	r2, [sp, #16]
900277ea:	7823      	ldrb	r3, [r4, #0]
900277ec:	2b2e      	cmp	r3, #46	@ 0x2e
900277ee:	d10a      	bne.n	90027806 <_vfiprintf_r+0x156>
900277f0:	7863      	ldrb	r3, [r4, #1]
900277f2:	2b2a      	cmp	r3, #42	@ 0x2a
900277f4:	d132      	bne.n	9002785c <_vfiprintf_r+0x1ac>
900277f6:	9b03      	ldr	r3, [sp, #12]
900277f8:	1d1a      	adds	r2, r3, #4
900277fa:	681b      	ldr	r3, [r3, #0]
900277fc:	9203      	str	r2, [sp, #12]
900277fe:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
90027802:	3402      	adds	r4, #2
90027804:	9305      	str	r3, [sp, #20]
90027806:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 900278dc <_vfiprintf_r+0x22c>
9002780a:	7821      	ldrb	r1, [r4, #0]
9002780c:	2203      	movs	r2, #3
9002780e:	4650      	mov	r0, sl
90027810:	f7d8 fd66 	bl	900002e0 <memchr>
90027814:	b138      	cbz	r0, 90027826 <_vfiprintf_r+0x176>
90027816:	9b04      	ldr	r3, [sp, #16]
90027818:	eba0 000a 	sub.w	r0, r0, sl
9002781c:	2240      	movs	r2, #64	@ 0x40
9002781e:	4082      	lsls	r2, r0
90027820:	4313      	orrs	r3, r2
90027822:	3401      	adds	r4, #1
90027824:	9304      	str	r3, [sp, #16]
90027826:	f814 1b01 	ldrb.w	r1, [r4], #1
9002782a:	4829      	ldr	r0, [pc, #164]	@ (900278d0 <_vfiprintf_r+0x220>)
9002782c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
90027830:	2206      	movs	r2, #6
90027832:	f7d8 fd55 	bl	900002e0 <memchr>
90027836:	2800      	cmp	r0, #0
90027838:	d03f      	beq.n	900278ba <_vfiprintf_r+0x20a>
9002783a:	4b26      	ldr	r3, [pc, #152]	@ (900278d4 <_vfiprintf_r+0x224>)
9002783c:	bb1b      	cbnz	r3, 90027886 <_vfiprintf_r+0x1d6>
9002783e:	9b03      	ldr	r3, [sp, #12]
90027840:	3307      	adds	r3, #7
90027842:	f023 0307 	bic.w	r3, r3, #7
90027846:	3308      	adds	r3, #8
90027848:	9303      	str	r3, [sp, #12]
9002784a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002784c:	443b      	add	r3, r7
9002784e:	9309      	str	r3, [sp, #36]	@ 0x24
90027850:	e76a      	b.n	90027728 <_vfiprintf_r+0x78>
90027852:	fb0c 3202 	mla	r2, ip, r2, r3
90027856:	460c      	mov	r4, r1
90027858:	2001      	movs	r0, #1
9002785a:	e7a8      	b.n	900277ae <_vfiprintf_r+0xfe>
9002785c:	2300      	movs	r3, #0
9002785e:	3401      	adds	r4, #1
90027860:	9305      	str	r3, [sp, #20]
90027862:	4619      	mov	r1, r3
90027864:	f04f 0c0a 	mov.w	ip, #10
90027868:	4620      	mov	r0, r4
9002786a:	f810 2b01 	ldrb.w	r2, [r0], #1
9002786e:	3a30      	subs	r2, #48	@ 0x30
90027870:	2a09      	cmp	r2, #9
90027872:	d903      	bls.n	9002787c <_vfiprintf_r+0x1cc>
90027874:	2b00      	cmp	r3, #0
90027876:	d0c6      	beq.n	90027806 <_vfiprintf_r+0x156>
90027878:	9105      	str	r1, [sp, #20]
9002787a:	e7c4      	b.n	90027806 <_vfiprintf_r+0x156>
9002787c:	fb0c 2101 	mla	r1, ip, r1, r2
90027880:	4604      	mov	r4, r0
90027882:	2301      	movs	r3, #1
90027884:	e7f0      	b.n	90027868 <_vfiprintf_r+0x1b8>
90027886:	ab03      	add	r3, sp, #12
90027888:	9300      	str	r3, [sp, #0]
9002788a:	462a      	mov	r2, r5
9002788c:	4b12      	ldr	r3, [pc, #72]	@ (900278d8 <_vfiprintf_r+0x228>)
9002788e:	a904      	add	r1, sp, #16
90027890:	4630      	mov	r0, r6
90027892:	f3af 8000 	nop.w
90027896:	4607      	mov	r7, r0
90027898:	1c78      	adds	r0, r7, #1
9002789a:	d1d6      	bne.n	9002784a <_vfiprintf_r+0x19a>
9002789c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002789e:	07d9      	lsls	r1, r3, #31
900278a0:	d405      	bmi.n	900278ae <_vfiprintf_r+0x1fe>
900278a2:	89ab      	ldrh	r3, [r5, #12]
900278a4:	059a      	lsls	r2, r3, #22
900278a6:	d402      	bmi.n	900278ae <_vfiprintf_r+0x1fe>
900278a8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
900278aa:	f7ff fe21 	bl	900274f0 <__retarget_lock_release_recursive>
900278ae:	89ab      	ldrh	r3, [r5, #12]
900278b0:	065b      	lsls	r3, r3, #25
900278b2:	f53f af1f 	bmi.w	900276f4 <_vfiprintf_r+0x44>
900278b6:	9809      	ldr	r0, [sp, #36]	@ 0x24
900278b8:	e71e      	b.n	900276f8 <_vfiprintf_r+0x48>
900278ba:	ab03      	add	r3, sp, #12
900278bc:	9300      	str	r3, [sp, #0]
900278be:	462a      	mov	r2, r5
900278c0:	4b05      	ldr	r3, [pc, #20]	@ (900278d8 <_vfiprintf_r+0x228>)
900278c2:	a904      	add	r1, sp, #16
900278c4:	4630      	mov	r0, r6
900278c6:	f000 f879 	bl	900279bc <_printf_i>
900278ca:	e7e4      	b.n	90027896 <_vfiprintf_r+0x1e6>
900278cc:	9002adf8 	.word	0x9002adf8
900278d0:	9002ae02 	.word	0x9002ae02
900278d4:	00000000 	.word	0x00000000
900278d8:	9002768b 	.word	0x9002768b
900278dc:	9002adfe 	.word	0x9002adfe

900278e0 <_printf_common>:
900278e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900278e4:	4616      	mov	r6, r2
900278e6:	4698      	mov	r8, r3
900278e8:	688a      	ldr	r2, [r1, #8]
900278ea:	690b      	ldr	r3, [r1, #16]
900278ec:	f8dd 9020 	ldr.w	r9, [sp, #32]
900278f0:	4293      	cmp	r3, r2
900278f2:	bfb8      	it	lt
900278f4:	4613      	movlt	r3, r2
900278f6:	6033      	str	r3, [r6, #0]
900278f8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
900278fc:	4607      	mov	r7, r0
900278fe:	460c      	mov	r4, r1
90027900:	b10a      	cbz	r2, 90027906 <_printf_common+0x26>
90027902:	3301      	adds	r3, #1
90027904:	6033      	str	r3, [r6, #0]
90027906:	6823      	ldr	r3, [r4, #0]
90027908:	0699      	lsls	r1, r3, #26
9002790a:	bf42      	ittt	mi
9002790c:	6833      	ldrmi	r3, [r6, #0]
9002790e:	3302      	addmi	r3, #2
90027910:	6033      	strmi	r3, [r6, #0]
90027912:	6825      	ldr	r5, [r4, #0]
90027914:	f015 0506 	ands.w	r5, r5, #6
90027918:	d106      	bne.n	90027928 <_printf_common+0x48>
9002791a:	f104 0a19 	add.w	sl, r4, #25
9002791e:	68e3      	ldr	r3, [r4, #12]
90027920:	6832      	ldr	r2, [r6, #0]
90027922:	1a9b      	subs	r3, r3, r2
90027924:	42ab      	cmp	r3, r5
90027926:	dc26      	bgt.n	90027976 <_printf_common+0x96>
90027928:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002792c:	6822      	ldr	r2, [r4, #0]
9002792e:	3b00      	subs	r3, #0
90027930:	bf18      	it	ne
90027932:	2301      	movne	r3, #1
90027934:	0692      	lsls	r2, r2, #26
90027936:	d42b      	bmi.n	90027990 <_printf_common+0xb0>
90027938:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002793c:	4641      	mov	r1, r8
9002793e:	4638      	mov	r0, r7
90027940:	47c8      	blx	r9
90027942:	3001      	adds	r0, #1
90027944:	d01e      	beq.n	90027984 <_printf_common+0xa4>
90027946:	6823      	ldr	r3, [r4, #0]
90027948:	6922      	ldr	r2, [r4, #16]
9002794a:	f003 0306 	and.w	r3, r3, #6
9002794e:	2b04      	cmp	r3, #4
90027950:	bf02      	ittt	eq
90027952:	68e5      	ldreq	r5, [r4, #12]
90027954:	6833      	ldreq	r3, [r6, #0]
90027956:	1aed      	subeq	r5, r5, r3
90027958:	68a3      	ldr	r3, [r4, #8]
9002795a:	bf0c      	ite	eq
9002795c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90027960:	2500      	movne	r5, #0
90027962:	4293      	cmp	r3, r2
90027964:	bfc4      	itt	gt
90027966:	1a9b      	subgt	r3, r3, r2
90027968:	18ed      	addgt	r5, r5, r3
9002796a:	2600      	movs	r6, #0
9002796c:	341a      	adds	r4, #26
9002796e:	42b5      	cmp	r5, r6
90027970:	d11a      	bne.n	900279a8 <_printf_common+0xc8>
90027972:	2000      	movs	r0, #0
90027974:	e008      	b.n	90027988 <_printf_common+0xa8>
90027976:	2301      	movs	r3, #1
90027978:	4652      	mov	r2, sl
9002797a:	4641      	mov	r1, r8
9002797c:	4638      	mov	r0, r7
9002797e:	47c8      	blx	r9
90027980:	3001      	adds	r0, #1
90027982:	d103      	bne.n	9002798c <_printf_common+0xac>
90027984:	f04f 30ff 	mov.w	r0, #4294967295
90027988:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002798c:	3501      	adds	r5, #1
9002798e:	e7c6      	b.n	9002791e <_printf_common+0x3e>
90027990:	18e1      	adds	r1, r4, r3
90027992:	1c5a      	adds	r2, r3, #1
90027994:	2030      	movs	r0, #48	@ 0x30
90027996:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002799a:	4422      	add	r2, r4
9002799c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
900279a0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
900279a4:	3302      	adds	r3, #2
900279a6:	e7c7      	b.n	90027938 <_printf_common+0x58>
900279a8:	2301      	movs	r3, #1
900279aa:	4622      	mov	r2, r4
900279ac:	4641      	mov	r1, r8
900279ae:	4638      	mov	r0, r7
900279b0:	47c8      	blx	r9
900279b2:	3001      	adds	r0, #1
900279b4:	d0e6      	beq.n	90027984 <_printf_common+0xa4>
900279b6:	3601      	adds	r6, #1
900279b8:	e7d9      	b.n	9002796e <_printf_common+0x8e>
	...

900279bc <_printf_i>:
900279bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
900279c0:	7e0f      	ldrb	r7, [r1, #24]
900279c2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
900279c4:	2f78      	cmp	r7, #120	@ 0x78
900279c6:	4691      	mov	r9, r2
900279c8:	4680      	mov	r8, r0
900279ca:	460c      	mov	r4, r1
900279cc:	469a      	mov	sl, r3
900279ce:	f101 0243 	add.w	r2, r1, #67	@ 0x43
900279d2:	d807      	bhi.n	900279e4 <_printf_i+0x28>
900279d4:	2f62      	cmp	r7, #98	@ 0x62
900279d6:	d80a      	bhi.n	900279ee <_printf_i+0x32>
900279d8:	2f00      	cmp	r7, #0
900279da:	f000 80d2 	beq.w	90027b82 <_printf_i+0x1c6>
900279de:	2f58      	cmp	r7, #88	@ 0x58
900279e0:	f000 80b9 	beq.w	90027b56 <_printf_i+0x19a>
900279e4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
900279e8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
900279ec:	e03a      	b.n	90027a64 <_printf_i+0xa8>
900279ee:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
900279f2:	2b15      	cmp	r3, #21
900279f4:	d8f6      	bhi.n	900279e4 <_printf_i+0x28>
900279f6:	a101      	add	r1, pc, #4	@ (adr r1, 900279fc <_printf_i+0x40>)
900279f8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
900279fc:	90027a55 	.word	0x90027a55
90027a00:	90027a69 	.word	0x90027a69
90027a04:	900279e5 	.word	0x900279e5
90027a08:	900279e5 	.word	0x900279e5
90027a0c:	900279e5 	.word	0x900279e5
90027a10:	900279e5 	.word	0x900279e5
90027a14:	90027a69 	.word	0x90027a69
90027a18:	900279e5 	.word	0x900279e5
90027a1c:	900279e5 	.word	0x900279e5
90027a20:	900279e5 	.word	0x900279e5
90027a24:	900279e5 	.word	0x900279e5
90027a28:	90027b69 	.word	0x90027b69
90027a2c:	90027a93 	.word	0x90027a93
90027a30:	90027b23 	.word	0x90027b23
90027a34:	900279e5 	.word	0x900279e5
90027a38:	900279e5 	.word	0x900279e5
90027a3c:	90027b8b 	.word	0x90027b8b
90027a40:	900279e5 	.word	0x900279e5
90027a44:	90027a93 	.word	0x90027a93
90027a48:	900279e5 	.word	0x900279e5
90027a4c:	900279e5 	.word	0x900279e5
90027a50:	90027b2b 	.word	0x90027b2b
90027a54:	6833      	ldr	r3, [r6, #0]
90027a56:	1d1a      	adds	r2, r3, #4
90027a58:	681b      	ldr	r3, [r3, #0]
90027a5a:	6032      	str	r2, [r6, #0]
90027a5c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
90027a60:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
90027a64:	2301      	movs	r3, #1
90027a66:	e09d      	b.n	90027ba4 <_printf_i+0x1e8>
90027a68:	6833      	ldr	r3, [r6, #0]
90027a6a:	6820      	ldr	r0, [r4, #0]
90027a6c:	1d19      	adds	r1, r3, #4
90027a6e:	6031      	str	r1, [r6, #0]
90027a70:	0606      	lsls	r6, r0, #24
90027a72:	d501      	bpl.n	90027a78 <_printf_i+0xbc>
90027a74:	681d      	ldr	r5, [r3, #0]
90027a76:	e003      	b.n	90027a80 <_printf_i+0xc4>
90027a78:	0645      	lsls	r5, r0, #25
90027a7a:	d5fb      	bpl.n	90027a74 <_printf_i+0xb8>
90027a7c:	f9b3 5000 	ldrsh.w	r5, [r3]
90027a80:	2d00      	cmp	r5, #0
90027a82:	da03      	bge.n	90027a8c <_printf_i+0xd0>
90027a84:	232d      	movs	r3, #45	@ 0x2d
90027a86:	426d      	negs	r5, r5
90027a88:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
90027a8c:	4859      	ldr	r0, [pc, #356]	@ (90027bf4 <_printf_i+0x238>)
90027a8e:	230a      	movs	r3, #10
90027a90:	e011      	b.n	90027ab6 <_printf_i+0xfa>
90027a92:	6821      	ldr	r1, [r4, #0]
90027a94:	6833      	ldr	r3, [r6, #0]
90027a96:	0608      	lsls	r0, r1, #24
90027a98:	f853 5b04 	ldr.w	r5, [r3], #4
90027a9c:	d402      	bmi.n	90027aa4 <_printf_i+0xe8>
90027a9e:	0649      	lsls	r1, r1, #25
90027aa0:	bf48      	it	mi
90027aa2:	b2ad      	uxthmi	r5, r5
90027aa4:	2f6f      	cmp	r7, #111	@ 0x6f
90027aa6:	4853      	ldr	r0, [pc, #332]	@ (90027bf4 <_printf_i+0x238>)
90027aa8:	6033      	str	r3, [r6, #0]
90027aaa:	bf14      	ite	ne
90027aac:	230a      	movne	r3, #10
90027aae:	2308      	moveq	r3, #8
90027ab0:	2100      	movs	r1, #0
90027ab2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
90027ab6:	6866      	ldr	r6, [r4, #4]
90027ab8:	60a6      	str	r6, [r4, #8]
90027aba:	2e00      	cmp	r6, #0
90027abc:	bfa2      	ittt	ge
90027abe:	6821      	ldrge	r1, [r4, #0]
90027ac0:	f021 0104 	bicge.w	r1, r1, #4
90027ac4:	6021      	strge	r1, [r4, #0]
90027ac6:	b90d      	cbnz	r5, 90027acc <_printf_i+0x110>
90027ac8:	2e00      	cmp	r6, #0
90027aca:	d04b      	beq.n	90027b64 <_printf_i+0x1a8>
90027acc:	4616      	mov	r6, r2
90027ace:	fbb5 f1f3 	udiv	r1, r5, r3
90027ad2:	fb03 5711 	mls	r7, r3, r1, r5
90027ad6:	5dc7      	ldrb	r7, [r0, r7]
90027ad8:	f806 7d01 	strb.w	r7, [r6, #-1]!
90027adc:	462f      	mov	r7, r5
90027ade:	42bb      	cmp	r3, r7
90027ae0:	460d      	mov	r5, r1
90027ae2:	d9f4      	bls.n	90027ace <_printf_i+0x112>
90027ae4:	2b08      	cmp	r3, #8
90027ae6:	d10b      	bne.n	90027b00 <_printf_i+0x144>
90027ae8:	6823      	ldr	r3, [r4, #0]
90027aea:	07df      	lsls	r7, r3, #31
90027aec:	d508      	bpl.n	90027b00 <_printf_i+0x144>
90027aee:	6923      	ldr	r3, [r4, #16]
90027af0:	6861      	ldr	r1, [r4, #4]
90027af2:	4299      	cmp	r1, r3
90027af4:	bfde      	ittt	le
90027af6:	2330      	movle	r3, #48	@ 0x30
90027af8:	f806 3c01 	strble.w	r3, [r6, #-1]
90027afc:	f106 36ff 	addle.w	r6, r6, #4294967295
90027b00:	1b92      	subs	r2, r2, r6
90027b02:	6122      	str	r2, [r4, #16]
90027b04:	f8cd a000 	str.w	sl, [sp]
90027b08:	464b      	mov	r3, r9
90027b0a:	aa03      	add	r2, sp, #12
90027b0c:	4621      	mov	r1, r4
90027b0e:	4640      	mov	r0, r8
90027b10:	f7ff fee6 	bl	900278e0 <_printf_common>
90027b14:	3001      	adds	r0, #1
90027b16:	d14a      	bne.n	90027bae <_printf_i+0x1f2>
90027b18:	f04f 30ff 	mov.w	r0, #4294967295
90027b1c:	b004      	add	sp, #16
90027b1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027b22:	6823      	ldr	r3, [r4, #0]
90027b24:	f043 0320 	orr.w	r3, r3, #32
90027b28:	6023      	str	r3, [r4, #0]
90027b2a:	4833      	ldr	r0, [pc, #204]	@ (90027bf8 <_printf_i+0x23c>)
90027b2c:	2778      	movs	r7, #120	@ 0x78
90027b2e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
90027b32:	6823      	ldr	r3, [r4, #0]
90027b34:	6831      	ldr	r1, [r6, #0]
90027b36:	061f      	lsls	r7, r3, #24
90027b38:	f851 5b04 	ldr.w	r5, [r1], #4
90027b3c:	d402      	bmi.n	90027b44 <_printf_i+0x188>
90027b3e:	065f      	lsls	r7, r3, #25
90027b40:	bf48      	it	mi
90027b42:	b2ad      	uxthmi	r5, r5
90027b44:	6031      	str	r1, [r6, #0]
90027b46:	07d9      	lsls	r1, r3, #31
90027b48:	bf44      	itt	mi
90027b4a:	f043 0320 	orrmi.w	r3, r3, #32
90027b4e:	6023      	strmi	r3, [r4, #0]
90027b50:	b11d      	cbz	r5, 90027b5a <_printf_i+0x19e>
90027b52:	2310      	movs	r3, #16
90027b54:	e7ac      	b.n	90027ab0 <_printf_i+0xf4>
90027b56:	4827      	ldr	r0, [pc, #156]	@ (90027bf4 <_printf_i+0x238>)
90027b58:	e7e9      	b.n	90027b2e <_printf_i+0x172>
90027b5a:	6823      	ldr	r3, [r4, #0]
90027b5c:	f023 0320 	bic.w	r3, r3, #32
90027b60:	6023      	str	r3, [r4, #0]
90027b62:	e7f6      	b.n	90027b52 <_printf_i+0x196>
90027b64:	4616      	mov	r6, r2
90027b66:	e7bd      	b.n	90027ae4 <_printf_i+0x128>
90027b68:	6833      	ldr	r3, [r6, #0]
90027b6a:	6825      	ldr	r5, [r4, #0]
90027b6c:	6961      	ldr	r1, [r4, #20]
90027b6e:	1d18      	adds	r0, r3, #4
90027b70:	6030      	str	r0, [r6, #0]
90027b72:	062e      	lsls	r6, r5, #24
90027b74:	681b      	ldr	r3, [r3, #0]
90027b76:	d501      	bpl.n	90027b7c <_printf_i+0x1c0>
90027b78:	6019      	str	r1, [r3, #0]
90027b7a:	e002      	b.n	90027b82 <_printf_i+0x1c6>
90027b7c:	0668      	lsls	r0, r5, #25
90027b7e:	d5fb      	bpl.n	90027b78 <_printf_i+0x1bc>
90027b80:	8019      	strh	r1, [r3, #0]
90027b82:	2300      	movs	r3, #0
90027b84:	6123      	str	r3, [r4, #16]
90027b86:	4616      	mov	r6, r2
90027b88:	e7bc      	b.n	90027b04 <_printf_i+0x148>
90027b8a:	6833      	ldr	r3, [r6, #0]
90027b8c:	1d1a      	adds	r2, r3, #4
90027b8e:	6032      	str	r2, [r6, #0]
90027b90:	681e      	ldr	r6, [r3, #0]
90027b92:	6862      	ldr	r2, [r4, #4]
90027b94:	2100      	movs	r1, #0
90027b96:	4630      	mov	r0, r6
90027b98:	f7d8 fba2 	bl	900002e0 <memchr>
90027b9c:	b108      	cbz	r0, 90027ba2 <_printf_i+0x1e6>
90027b9e:	1b80      	subs	r0, r0, r6
90027ba0:	6060      	str	r0, [r4, #4]
90027ba2:	6863      	ldr	r3, [r4, #4]
90027ba4:	6123      	str	r3, [r4, #16]
90027ba6:	2300      	movs	r3, #0
90027ba8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
90027bac:	e7aa      	b.n	90027b04 <_printf_i+0x148>
90027bae:	6923      	ldr	r3, [r4, #16]
90027bb0:	4632      	mov	r2, r6
90027bb2:	4649      	mov	r1, r9
90027bb4:	4640      	mov	r0, r8
90027bb6:	47d0      	blx	sl
90027bb8:	3001      	adds	r0, #1
90027bba:	d0ad      	beq.n	90027b18 <_printf_i+0x15c>
90027bbc:	6823      	ldr	r3, [r4, #0]
90027bbe:	079b      	lsls	r3, r3, #30
90027bc0:	d413      	bmi.n	90027bea <_printf_i+0x22e>
90027bc2:	68e0      	ldr	r0, [r4, #12]
90027bc4:	9b03      	ldr	r3, [sp, #12]
90027bc6:	4298      	cmp	r0, r3
90027bc8:	bfb8      	it	lt
90027bca:	4618      	movlt	r0, r3
90027bcc:	e7a6      	b.n	90027b1c <_printf_i+0x160>
90027bce:	2301      	movs	r3, #1
90027bd0:	4632      	mov	r2, r6
90027bd2:	4649      	mov	r1, r9
90027bd4:	4640      	mov	r0, r8
90027bd6:	47d0      	blx	sl
90027bd8:	3001      	adds	r0, #1
90027bda:	d09d      	beq.n	90027b18 <_printf_i+0x15c>
90027bdc:	3501      	adds	r5, #1
90027bde:	68e3      	ldr	r3, [r4, #12]
90027be0:	9903      	ldr	r1, [sp, #12]
90027be2:	1a5b      	subs	r3, r3, r1
90027be4:	42ab      	cmp	r3, r5
90027be6:	dcf2      	bgt.n	90027bce <_printf_i+0x212>
90027be8:	e7eb      	b.n	90027bc2 <_printf_i+0x206>
90027bea:	2500      	movs	r5, #0
90027bec:	f104 0619 	add.w	r6, r4, #25
90027bf0:	e7f5      	b.n	90027bde <_printf_i+0x222>
90027bf2:	bf00      	nop
90027bf4:	9002ae09 	.word	0x9002ae09
90027bf8:	9002ae1a 	.word	0x9002ae1a

90027bfc <__sflush_r>:
90027bfc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
90027c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90027c04:	0716      	lsls	r6, r2, #28
90027c06:	4605      	mov	r5, r0
90027c08:	460c      	mov	r4, r1
90027c0a:	d454      	bmi.n	90027cb6 <__sflush_r+0xba>
90027c0c:	684b      	ldr	r3, [r1, #4]
90027c0e:	2b00      	cmp	r3, #0
90027c10:	dc02      	bgt.n	90027c18 <__sflush_r+0x1c>
90027c12:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
90027c14:	2b00      	cmp	r3, #0
90027c16:	dd48      	ble.n	90027caa <__sflush_r+0xae>
90027c18:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90027c1a:	2e00      	cmp	r6, #0
90027c1c:	d045      	beq.n	90027caa <__sflush_r+0xae>
90027c1e:	2300      	movs	r3, #0
90027c20:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
90027c24:	682f      	ldr	r7, [r5, #0]
90027c26:	6a21      	ldr	r1, [r4, #32]
90027c28:	602b      	str	r3, [r5, #0]
90027c2a:	d030      	beq.n	90027c8e <__sflush_r+0x92>
90027c2c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90027c2e:	89a3      	ldrh	r3, [r4, #12]
90027c30:	0759      	lsls	r1, r3, #29
90027c32:	d505      	bpl.n	90027c40 <__sflush_r+0x44>
90027c34:	6863      	ldr	r3, [r4, #4]
90027c36:	1ad2      	subs	r2, r2, r3
90027c38:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90027c3a:	b10b      	cbz	r3, 90027c40 <__sflush_r+0x44>
90027c3c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90027c3e:	1ad2      	subs	r2, r2, r3
90027c40:	2300      	movs	r3, #0
90027c42:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90027c44:	6a21      	ldr	r1, [r4, #32]
90027c46:	4628      	mov	r0, r5
90027c48:	47b0      	blx	r6
90027c4a:	1c43      	adds	r3, r0, #1
90027c4c:	89a3      	ldrh	r3, [r4, #12]
90027c4e:	d106      	bne.n	90027c5e <__sflush_r+0x62>
90027c50:	6829      	ldr	r1, [r5, #0]
90027c52:	291d      	cmp	r1, #29
90027c54:	d82b      	bhi.n	90027cae <__sflush_r+0xb2>
90027c56:	4a2a      	ldr	r2, [pc, #168]	@ (90027d00 <__sflush_r+0x104>)
90027c58:	410a      	asrs	r2, r1
90027c5a:	07d6      	lsls	r6, r2, #31
90027c5c:	d427      	bmi.n	90027cae <__sflush_r+0xb2>
90027c5e:	2200      	movs	r2, #0
90027c60:	6062      	str	r2, [r4, #4]
90027c62:	04d9      	lsls	r1, r3, #19
90027c64:	6922      	ldr	r2, [r4, #16]
90027c66:	6022      	str	r2, [r4, #0]
90027c68:	d504      	bpl.n	90027c74 <__sflush_r+0x78>
90027c6a:	1c42      	adds	r2, r0, #1
90027c6c:	d101      	bne.n	90027c72 <__sflush_r+0x76>
90027c6e:	682b      	ldr	r3, [r5, #0]
90027c70:	b903      	cbnz	r3, 90027c74 <__sflush_r+0x78>
90027c72:	6560      	str	r0, [r4, #84]	@ 0x54
90027c74:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90027c76:	602f      	str	r7, [r5, #0]
90027c78:	b1b9      	cbz	r1, 90027caa <__sflush_r+0xae>
90027c7a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
90027c7e:	4299      	cmp	r1, r3
90027c80:	d002      	beq.n	90027c88 <__sflush_r+0x8c>
90027c82:	4628      	mov	r0, r5
90027c84:	f7ff fca0 	bl	900275c8 <_free_r>
90027c88:	2300      	movs	r3, #0
90027c8a:	6363      	str	r3, [r4, #52]	@ 0x34
90027c8c:	e00d      	b.n	90027caa <__sflush_r+0xae>
90027c8e:	2301      	movs	r3, #1
90027c90:	4628      	mov	r0, r5
90027c92:	47b0      	blx	r6
90027c94:	4602      	mov	r2, r0
90027c96:	1c50      	adds	r0, r2, #1
90027c98:	d1c9      	bne.n	90027c2e <__sflush_r+0x32>
90027c9a:	682b      	ldr	r3, [r5, #0]
90027c9c:	2b00      	cmp	r3, #0
90027c9e:	d0c6      	beq.n	90027c2e <__sflush_r+0x32>
90027ca0:	2b1d      	cmp	r3, #29
90027ca2:	d001      	beq.n	90027ca8 <__sflush_r+0xac>
90027ca4:	2b16      	cmp	r3, #22
90027ca6:	d11e      	bne.n	90027ce6 <__sflush_r+0xea>
90027ca8:	602f      	str	r7, [r5, #0]
90027caa:	2000      	movs	r0, #0
90027cac:	e022      	b.n	90027cf4 <__sflush_r+0xf8>
90027cae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90027cb2:	b21b      	sxth	r3, r3
90027cb4:	e01b      	b.n	90027cee <__sflush_r+0xf2>
90027cb6:	690f      	ldr	r7, [r1, #16]
90027cb8:	2f00      	cmp	r7, #0
90027cba:	d0f6      	beq.n	90027caa <__sflush_r+0xae>
90027cbc:	0793      	lsls	r3, r2, #30
90027cbe:	680e      	ldr	r6, [r1, #0]
90027cc0:	bf08      	it	eq
90027cc2:	694b      	ldreq	r3, [r1, #20]
90027cc4:	600f      	str	r7, [r1, #0]
90027cc6:	bf18      	it	ne
90027cc8:	2300      	movne	r3, #0
90027cca:	eba6 0807 	sub.w	r8, r6, r7
90027cce:	608b      	str	r3, [r1, #8]
90027cd0:	f1b8 0f00 	cmp.w	r8, #0
90027cd4:	dde9      	ble.n	90027caa <__sflush_r+0xae>
90027cd6:	6a21      	ldr	r1, [r4, #32]
90027cd8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
90027cda:	4643      	mov	r3, r8
90027cdc:	463a      	mov	r2, r7
90027cde:	4628      	mov	r0, r5
90027ce0:	47b0      	blx	r6
90027ce2:	2800      	cmp	r0, #0
90027ce4:	dc08      	bgt.n	90027cf8 <__sflush_r+0xfc>
90027ce6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027cea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90027cee:	81a3      	strh	r3, [r4, #12]
90027cf0:	f04f 30ff 	mov.w	r0, #4294967295
90027cf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90027cf8:	4407      	add	r7, r0
90027cfa:	eba8 0800 	sub.w	r8, r8, r0
90027cfe:	e7e7      	b.n	90027cd0 <__sflush_r+0xd4>
90027d00:	dfbffffe 	.word	0xdfbffffe

90027d04 <_fflush_r>:
90027d04:	b538      	push	{r3, r4, r5, lr}
90027d06:	690b      	ldr	r3, [r1, #16]
90027d08:	4605      	mov	r5, r0
90027d0a:	460c      	mov	r4, r1
90027d0c:	b913      	cbnz	r3, 90027d14 <_fflush_r+0x10>
90027d0e:	2500      	movs	r5, #0
90027d10:	4628      	mov	r0, r5
90027d12:	bd38      	pop	{r3, r4, r5, pc}
90027d14:	b118      	cbz	r0, 90027d1e <_fflush_r+0x1a>
90027d16:	6a03      	ldr	r3, [r0, #32]
90027d18:	b90b      	cbnz	r3, 90027d1e <_fflush_r+0x1a>
90027d1a:	f7ff f9e9 	bl	900270f0 <__sinit>
90027d1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027d22:	2b00      	cmp	r3, #0
90027d24:	d0f3      	beq.n	90027d0e <_fflush_r+0xa>
90027d26:	6e62      	ldr	r2, [r4, #100]	@ 0x64
90027d28:	07d0      	lsls	r0, r2, #31
90027d2a:	d404      	bmi.n	90027d36 <_fflush_r+0x32>
90027d2c:	0599      	lsls	r1, r3, #22
90027d2e:	d402      	bmi.n	90027d36 <_fflush_r+0x32>
90027d30:	6da0      	ldr	r0, [r4, #88]	@ 0x58
90027d32:	f7ff fbdc 	bl	900274ee <__retarget_lock_acquire_recursive>
90027d36:	4628      	mov	r0, r5
90027d38:	4621      	mov	r1, r4
90027d3a:	f7ff ff5f 	bl	90027bfc <__sflush_r>
90027d3e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90027d40:	07da      	lsls	r2, r3, #31
90027d42:	4605      	mov	r5, r0
90027d44:	d4e4      	bmi.n	90027d10 <_fflush_r+0xc>
90027d46:	89a3      	ldrh	r3, [r4, #12]
90027d48:	059b      	lsls	r3, r3, #22
90027d4a:	d4e1      	bmi.n	90027d10 <_fflush_r+0xc>
90027d4c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
90027d4e:	f7ff fbcf 	bl	900274f0 <__retarget_lock_release_recursive>
90027d52:	e7dd      	b.n	90027d10 <_fflush_r+0xc>

90027d54 <__swhatbuf_r>:
90027d54:	b570      	push	{r4, r5, r6, lr}
90027d56:	460c      	mov	r4, r1
90027d58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027d5c:	2900      	cmp	r1, #0
90027d5e:	b096      	sub	sp, #88	@ 0x58
90027d60:	4615      	mov	r5, r2
90027d62:	461e      	mov	r6, r3
90027d64:	da0d      	bge.n	90027d82 <__swhatbuf_r+0x2e>
90027d66:	89a3      	ldrh	r3, [r4, #12]
90027d68:	f013 0f80 	tst.w	r3, #128	@ 0x80
90027d6c:	f04f 0100 	mov.w	r1, #0
90027d70:	bf14      	ite	ne
90027d72:	2340      	movne	r3, #64	@ 0x40
90027d74:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
90027d78:	2000      	movs	r0, #0
90027d7a:	6031      	str	r1, [r6, #0]
90027d7c:	602b      	str	r3, [r5, #0]
90027d7e:	b016      	add	sp, #88	@ 0x58
90027d80:	bd70      	pop	{r4, r5, r6, pc}
90027d82:	466a      	mov	r2, sp
90027d84:	f000 f848 	bl	90027e18 <_fstat_r>
90027d88:	2800      	cmp	r0, #0
90027d8a:	dbec      	blt.n	90027d66 <__swhatbuf_r+0x12>
90027d8c:	9901      	ldr	r1, [sp, #4]
90027d8e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
90027d92:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
90027d96:	4259      	negs	r1, r3
90027d98:	4159      	adcs	r1, r3
90027d9a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90027d9e:	e7eb      	b.n	90027d78 <__swhatbuf_r+0x24>

90027da0 <__smakebuf_r>:
90027da0:	898b      	ldrh	r3, [r1, #12]
90027da2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90027da4:	079d      	lsls	r5, r3, #30
90027da6:	4606      	mov	r6, r0
90027da8:	460c      	mov	r4, r1
90027daa:	d507      	bpl.n	90027dbc <__smakebuf_r+0x1c>
90027dac:	f104 0347 	add.w	r3, r4, #71	@ 0x47
90027db0:	6023      	str	r3, [r4, #0]
90027db2:	6123      	str	r3, [r4, #16]
90027db4:	2301      	movs	r3, #1
90027db6:	6163      	str	r3, [r4, #20]
90027db8:	b003      	add	sp, #12
90027dba:	bdf0      	pop	{r4, r5, r6, r7, pc}
90027dbc:	ab01      	add	r3, sp, #4
90027dbe:	466a      	mov	r2, sp
90027dc0:	f7ff ffc8 	bl	90027d54 <__swhatbuf_r>
90027dc4:	9f00      	ldr	r7, [sp, #0]
90027dc6:	4605      	mov	r5, r0
90027dc8:	4639      	mov	r1, r7
90027dca:	4630      	mov	r0, r6
90027dcc:	f7ff f86a 	bl	90026ea4 <_malloc_r>
90027dd0:	b948      	cbnz	r0, 90027de6 <__smakebuf_r+0x46>
90027dd2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027dd6:	059a      	lsls	r2, r3, #22
90027dd8:	d4ee      	bmi.n	90027db8 <__smakebuf_r+0x18>
90027dda:	f023 0303 	bic.w	r3, r3, #3
90027dde:	f043 0302 	orr.w	r3, r3, #2
90027de2:	81a3      	strh	r3, [r4, #12]
90027de4:	e7e2      	b.n	90027dac <__smakebuf_r+0xc>
90027de6:	89a3      	ldrh	r3, [r4, #12]
90027de8:	6020      	str	r0, [r4, #0]
90027dea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90027dee:	81a3      	strh	r3, [r4, #12]
90027df0:	9b01      	ldr	r3, [sp, #4]
90027df2:	e9c4 0704 	strd	r0, r7, [r4, #16]
90027df6:	b15b      	cbz	r3, 90027e10 <__smakebuf_r+0x70>
90027df8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90027dfc:	4630      	mov	r0, r6
90027dfe:	f000 f81d 	bl	90027e3c <_isatty_r>
90027e02:	b128      	cbz	r0, 90027e10 <__smakebuf_r+0x70>
90027e04:	89a3      	ldrh	r3, [r4, #12]
90027e06:	f023 0303 	bic.w	r3, r3, #3
90027e0a:	f043 0301 	orr.w	r3, r3, #1
90027e0e:	81a3      	strh	r3, [r4, #12]
90027e10:	89a3      	ldrh	r3, [r4, #12]
90027e12:	431d      	orrs	r5, r3
90027e14:	81a5      	strh	r5, [r4, #12]
90027e16:	e7cf      	b.n	90027db8 <__smakebuf_r+0x18>

90027e18 <_fstat_r>:
90027e18:	b538      	push	{r3, r4, r5, lr}
90027e1a:	4d07      	ldr	r5, [pc, #28]	@ (90027e38 <_fstat_r+0x20>)
90027e1c:	2300      	movs	r3, #0
90027e1e:	4604      	mov	r4, r0
90027e20:	4608      	mov	r0, r1
90027e22:	4611      	mov	r1, r2
90027e24:	602b      	str	r3, [r5, #0]
90027e26:	f7dc f9c1 	bl	900041ac <_fstat>
90027e2a:	1c43      	adds	r3, r0, #1
90027e2c:	d102      	bne.n	90027e34 <_fstat_r+0x1c>
90027e2e:	682b      	ldr	r3, [r5, #0]
90027e30:	b103      	cbz	r3, 90027e34 <_fstat_r+0x1c>
90027e32:	6023      	str	r3, [r4, #0]
90027e34:	bd38      	pop	{r3, r4, r5, pc}
90027e36:	bf00      	nop
90027e38:	240226f4 	.word	0x240226f4

90027e3c <_isatty_r>:
90027e3c:	b538      	push	{r3, r4, r5, lr}
90027e3e:	4d06      	ldr	r5, [pc, #24]	@ (90027e58 <_isatty_r+0x1c>)
90027e40:	2300      	movs	r3, #0
90027e42:	4604      	mov	r4, r0
90027e44:	4608      	mov	r0, r1
90027e46:	602b      	str	r3, [r5, #0]
90027e48:	f7dc f9b6 	bl	900041b8 <_isatty>
90027e4c:	1c43      	adds	r3, r0, #1
90027e4e:	d102      	bne.n	90027e56 <_isatty_r+0x1a>
90027e50:	682b      	ldr	r3, [r5, #0]
90027e52:	b103      	cbz	r3, 90027e56 <_isatty_r+0x1a>
90027e54:	6023      	str	r3, [r4, #0]
90027e56:	bd38      	pop	{r3, r4, r5, pc}
90027e58:	240226f4 	.word	0x240226f4

90027e5c <_init>:
90027e5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90027e5e:	bf00      	nop
90027e60:	bcf8      	pop	{r3, r4, r5, r6, r7}
90027e62:	bc08      	pop	{r3}
90027e64:	469e      	mov	lr, r3
90027e66:	4770      	bx	lr

90027e68 <_fini>:
90027e68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90027e6a:	bf00      	nop
90027e6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
90027e6e:	bc08      	pop	{r3}
90027e70:	469e      	mov	lr, r3
90027e72:	4770      	bx	lr
